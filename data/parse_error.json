[
  {
    "name": "A lot of date parsing errors come up",
    "url": "https://github.com/gentlecat/OpenNMS-Android-Client/issues/46",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/gentlecat/OpenNMS-Android-Client/commit/2905d03c62938f8ad1a2746303cb494767184c44",
      "files": [
        {
          "file_name": "src/main/java/org/opennms/android/Utils.java",
          "patch": "@@ -13,16 +13,14 @@\n \n     private static final String TAG \u003d \"Utils\";\n \n-    public static Date parseDate(String input) {\n-        // Example: \"2013-07-22T04:03:04-04:00\"\n-        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\");\n-        Date date \u003d new Date();\n+    public static String parseDate(String input, String pattern) {\n         try {\n-            date \u003d format.parse(input);\n+            SimpleDateFormat format \u003d new SimpleDateFormat(pattern);\n+            return format.parse(input).toString();\n         } catch (ParseException e) {\n             Log.e(TAG, \"Date parsing error\", e);\n+            return input;\n         }\n-        return date;\n     }\n \n     public static boolean isOnline(Context context) {"
        },
        {
          "file_name": "src/main/java/org/opennms/android/ui/alarms/AlarmDetailsFragment.java",
          "patch": "@@ -147,8 +147,9 @@ public void updateContent() {\n             if (ackTime !\u003d null) {\n                 ackStatus.setText(getString(R.string.alarm_details_acked));\n                 TextView ackMessage \u003d (TextView) getActivity().findViewById(R.id.alarm_ack_message);\n-                ackMessage.setText(Utils.parseDate(ackTime).toString() + \" \"\n-                                   + getString(R.string.alarm_details_acked_by) + \" \" + ackUser);\n+                ackMessage.setText(Utils.parseDate(ackTime, \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027.\u0027SSSZ\")\n+                                   + \" \" + getString(R.string.alarm_details_acked_by) + \" \"\n+                                   + ackUser);\n             } else {\n                 ackStatus.setText(getString(R.string.alarm_details_not_acked));\n             }\n@@ -195,8 +196,8 @@ public void updateContent() {\n             String lastEventSeverity \u003d cursor.getString(\n                     cursor.getColumnIndexOrThrow(Contract.Alarms.LAST_EVENT_SEVERITY));\n             TextView lastEvent \u003d (TextView) getActivity().findViewById(R.id.alarm_last_event);\n-            lastEvent.setText(\"#\" + lastEventId + \" \" + lastEventSeverity + \"\\n\" + Utils\n-                    .parseDate(lastEventTimeString).toString());\n+            lastEvent.setText(\"#\" + lastEventId + \" \" + lastEventSeverity + \"\\n\"\n+                              + Utils.parseDate(lastEventTimeString, \"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\"));\n         }\n     }\n "
        },
        {
          "file_name": "src/main/java/org/opennms/android/ui/events/EventDetailsFragment.java",
          "patch": "@@ -80,7 +80,7 @@ public void updateContent(long eventId) {\n             String createTimeString \u003d cursor.getString(\n                     cursor.getColumnIndexOrThrow(Contract.Events.CREATE_TIME));\n             TextView timeTextView \u003d (TextView) getActivity().findViewById(R.id.event_create_time);\n-            timeTextView.setText(Utils.parseDate(createTimeString).toString());\n+            timeTextView.setText(Utils.parseDate(createTimeString, \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027.\u0027SSSZ\"));\n \n             // Log message\n             String logMessage \u003d cursor.getString("
        },
        {
          "file_name": "src/main/java/org/opennms/android/ui/nodes/NodeDetailsFragment.java",
          "patch": "@@ -69,7 +69,7 @@ public void updateContent(long nodeId) {\n             String createdTime \u003d cursor.getString(\n                     cursor.getColumnIndexOrThrow(Contract.Nodes.CREATED_TIME));\n             TextView timeView \u003d (TextView) getActivity().findViewById(R.id.node_creation_time);\n-            timeView.setText(Utils.parseDate(createdTime).toString());\n+            timeView.setText(Utils.parseDate(createdTime, \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027.\u0027SSSZ\"));\n \n             String labelSource \u003d cursor.getString(\n                     cursor.getColumnIndexOrThrow(Contract.Nodes.LABEL_SOURCE));"
        },
        {
          "file_name": "src/main/java/org/opennms/android/ui/outages/OutageDetailsFragment.java",
          "patch": "@@ -67,7 +67,7 @@ public void updateContent(long outageId) {\n                     cursor.getColumnIndexOrThrow(Contract.Outages.SERVICE_LOST_EVENT_ID));\n             TextView lostServiceEvent \u003d\n                     (TextView) getActivity().findViewById(R.id.outage_lost_service_event);\n-            lostServiceEvent.setText(Utils.parseDate(serviceLostTime).toString()\n+            lostServiceEvent.setText(Utils.parseDate(serviceLostTime, \"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\")\n                                      + \"\\n#\" + serviceLostEventId);\n \n             String serviceRegainedTime \u003d cursor.getString(\n@@ -77,8 +77,9 @@ public void updateContent(long outageId) {\n             TextView regainedServiceEvent \u003d\n                     (TextView) getActivity().findViewById(R.id.outage_regained_service_event);\n             if (serviceRegainedTime !\u003d null) {\n-                regainedServiceEvent.setText(Utils.parseDate(serviceRegainedTime).toString()\n-                                             + \"\\n#\" + serviceRegainedEventId);\n+                regainedServiceEvent.setText(Utils.parseDate(serviceRegainedTime,\n+                                                             \"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\") + \"\\n#\"\n+                                             + serviceRegainedEventId);\n             } else {\n                 detailsLayout.removeView(regainedServiceEvent);\n                 TextView title \u003d (TextView) getActivity()"
        }
      ]
    }
  },
  {
    "name": "xdoclet throws parse errors on annotations and generics",
    "url": "https://github.com/DaveParillo/webtest/issues/7",
    "description": "The version of xdoclet used is pretty old and any webtest java  code containing generics or annotations does not appear in the manual.  The entire class is omitted from the manual. ",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/DaveParillo/webtest/commit/8d26292d2b7d6172b8011e4c1f15d92b151ff983",
      "files": [
        {
          "file_name": "lib/build/xjavadoc-1.5.jar"
        }
      ]
    }
  },
  {
    "name": "Error while parsing type of extended type",
    "url": "https://github.com/ceylon/ceylon-compiler/issues/1755",
    "description": "See mailing list: https://groups.google.com/d/msgid/ceylon-dev/1407151713.2321.3.camel%40gmail.com\n\nTom Kaitchuck says:\n\n```\nI am trying to compile the ceylon-sdk. When I check it out and run `ant clean test` I get:\ncompile-test-jvm:\n[ceylon-compile] /home/tom/workspace/ceylon-sdk/test-source/test/ceylon/io/module.ceylon:4: error: Error while loading the ceylon.io/1.1.0 module:\n[ceylon-compile]     import ceylon.io \"1.1.0\";\n[ceylon-compile]    ^\n[ceylon-compile]    Error while parsing type of extended type for ceylon.io.charset::ascii.Encoder:\n[ceylon-compile]    Expecting word but got LT\n[ceylon-compile] /home/tom/workspace/ceylon-sdk/test-source/test/ceylon/io/module.ceylon:4: error: Error while loading the ceylon.io/1.1.0 module:\n[ceylon-compile]     import ceylon.io \"1.1.0\";\n[ceylon-compile]    ^\n[ceylon-compile]    Error while parsing type of extended type for ceylon.io.charset::utf8.Decoder:\n[ceylon-compile]    Expecting word but got LT\n[ceylon-compile] /home/tom/workspace/ceylon-sdk/test-source/test/ceylon/net/module.ceylon:6: error: Error while loading the ceylon.io/1.1.0 module:\n[ceylon-compile]     import ceylon.io \"1.1.0\";\n[ceylon-compile]    ^\n[ceylon-compile]    Error while parsing type of extended type for ceylon.io.charset::ascii.Encoder:\n[ceylon-compile]    Expecting word but got LT\n[ceylon-compile] /home/tom/workspace/ceylon-sdk/test-source/test/ceylon/net/module.ceylon:6: error: Error while loading the ceylon.io/1.1.0 module:\n[ceylon-compile]     import ceylon.io \"1.1.0\";\n[ceylon-compile]    ^\n[ceylon-compile]    Error while parsing type of extended type for ceylon.io.charset::utf8.Decoder:\n[ceylon-compile]    Expecting word but got LT\n[ceylon-compile] 4 errors\n```\n\nI\u0027m guessing this has something to do with the model loader\u0027s `TypeParser` being unable to read what we wrote in the class\u0027 meta model.\n",
    "keywords": [
      "1 0",
      "import",
      "io 1",
      "lt",
      "got lt",
      "module: [ceylon-compile]",
      "ceylon io",
      "error",
      "type",
      "parsing",
      "got",
      "extended",
      "^ [ceylon-compile]",
      "^",
      "; [ceylon-compile]",
      "expecting",
      "ceylon",
      "io",
      "import ceylon",
      "module",
      "ceylon io/1",
      "loading",
      "0",
      "1",
      "[ceylon-compile] expecting",
      "io/1",
      ";",
      "parsing type",
      "word",
      "[ceylon-compile]"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/ceylon/ceylon-compiler/commit/1d31ba06039da854329d5046cf11e79ae8ac7f6f",
      "files": [
        {
          "file_name": "src/com/redhat/ceylon/compiler/loader/TypeParser.java",
          "patch": "@@ -141,9 +141,46 @@ private ProducedType parseIntersectionType() {\n     }\n \n     /*\n-     * qualifiedType: [packageName (. packageName)* ::] typeNameWithArguments (. typeNameWithArguments)*\n+     * qualifiedType: compoundQualifiedType | simpleQualifiedType\n      */\n     private ProducedType parseQualifiedType() {\n+        if (lexer.lookingAt(TypeLexer.LT)) {\n+            return parseCompoundQualifiedType();\n+        } else {\n+            return parseSimpleQualifiedType();\n+        }\n+    }\n+\n+    /*\n+     * qualifiedType: \u003c unionType \u003e . typeNameWithArguments (. typeNameWithArguments)*\n+     */\n+    private ProducedType parseCompoundQualifiedType() {\n+        lexer.eat(TypeLexer.LT);\n+        ProducedType unionType \u003d parseUnionType();\n+        lexer.eat(TypeLexer.GT);\n+        lexer.eat(TypeLexer.DOT);\n+        Part part \u003d parseTypeNameWithArguments();\n+        String fullName \u003d part.name;\n+        ProducedType qualifyingType \u003d loadType(\"\", fullName, part, unionType);\n+        while(lexer.lookingAt(TypeLexer.DOT)){\n+            lexer.eat();\n+            part \u003d parseTypeNameWithArguments();\n+            fullName \u003d fullName + \u0027.\u0027 + part.name;\n+            qualifyingType \u003d loadType(\"\", fullName, part, qualifyingType);\n+        }\n+        if(qualifyingType \u003d\u003d null){\n+            throw new ModelResolutionException(\"Could not find type \u0027\"+fullName+\"\u0027\");\n+        }\n+        if(qualifyingType instanceof ProducedType \u003d\u003d false){\n+            throw new ModelResolutionException(\"Type is a declaration (should be a ProducedType): \u0027\"+fullName+\"\u0027\");\n+        }\n+        return (ProducedType) qualifyingType;\n+    }\n+\n+    /*\n+     * qualifiedType: [packageName (. packageName)* ::] typeNameWithArguments (. typeNameWithArguments)*\n+     */\n+    private ProducedType parseSimpleQualifiedType() {\n         String pkg;\n         \n         if (hasPackage()) {\n@@ -208,9 +245,13 @@ else if(scope !\u003d null){\n             }else{\n                 // look it up via its qualifying type or decl\n                 Declaration qualifyingDeclaration \u003d qualifyingType.getDeclaration();\n-                if(qualifyingDeclaration instanceof FunctionOrValueInterface)\n-                    qualifyingDeclaration \u003d ((FunctionOrValueInterface)qualifyingDeclaration).getUnderlyingDeclaration();\n-                newDeclaration \u003d AbstractModelLoader.getDirectMember((Scope) qualifyingDeclaration, part.name);\n+                if (qualifyingDeclaration instanceof UnionType || qualifyingDeclaration instanceof IntersectionType) {\n+                    newDeclaration \u003d qualifyingDeclaration.getMember(part.name, null, false);\n+                } else {\n+                    if(qualifyingDeclaration instanceof FunctionOrValueInterface)\n+                        qualifyingDeclaration \u003d ((FunctionOrValueInterface)qualifyingDeclaration).getUnderlyingDeclaration();\n+                    newDeclaration \u003d AbstractModelLoader.getDirectMember((Scope) qualifyingDeclaration, part.name);\n+                }\n                 if(newDeclaration \u003d\u003d null)\n                     throw new ModelResolutionException(\"Failed to resolve inner type or declaration \"+part.name+\" in \"+qualifyingDeclaration.getQualifiedNameString());\n             }"
        }
      ]
    }
  },
  {
    "name": "!playlist remove \u003cnumber\u003e always fails. (Number parsing error...?)",
    "url": "https://github.com/ajpappas/Discord.java/issues/17",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ajpappas/Discord.java/commit/798de520ebe5b659eb1e7e11720a8915d0fd6a8a",
      "files": [
        {
          "file_name": "src/main/java/Techtony96/Discord/modules/audiostreamer/commands/PlaylistCommand.java",
          "patch": "@@ -4,6 +4,7 @@\n import Techtony96.Discord.api.commands.CommandContext;\n import Techtony96.Discord.api.commands.exceptions.CommandArgumentException;\n import Techtony96.Discord.api.commands.exceptions.CommandException;\n+import Techtony96.Discord.api.commands.exceptions.CommandPermissionException;\n import Techtony96.Discord.api.commands.exceptions.CommandStateException;\n import Techtony96.Discord.modules.audiostreamer.AudioStreamer;\n import Techtony96.Discord.modules.audiostreamer.playlists.Playlist;\n@@ -220,8 +221,17 @@ public static void PlaylistCommand(CommandContext cc) {\n                 return;\n             }\n \n+            String song \u003d cc.getArgument(2);\n             try {\n-                current.removeSong(cc.getUser(), cc.getArgument(2));\n+                int index \u003d Integer.valueOf(song);\n+                current.removeSong(cc.getUser(), index);\n+            } catch (NumberFormatException e){\n+                try {\n+                    current.removeSong(cc.getUser(), song);\n+                } catch (CommandException ex) {\n+                    cc.replyWith(ex.getMessage());\n+                    return;\n+                }\n             } catch (CommandException e) {\n                 cc.replyWith(e.getMessage());\n                 return;"
        },
        {
          "file_name": "src/main/java/Techtony96/Discord/modules/audiostreamer/playlists/Playlist.java",
          "patch": "@@ -90,15 +90,24 @@ public void addSong(IUser requestor, String songID) throws CommandStateException\n         PlaylistManager.writePlaylistFile(this);\n     }\n \n-    public void removeSong(IUser requestor, String songID) throws CommandStateException, CommandPermissionException {\n-        if (!(ownerID.equals(requestor.getStringID()) || contributors.contains(requestor.getStringID())))\n+    public void removeSong(IUser requester, String songID) throws CommandStateException, CommandPermissionException {\n+        if (!(ownerID.equals(requester.getStringID()) || contributors.contains(requester.getStringID())))\n             throw new CommandPermissionException(\"You are not allowed to remove songs from \" + this.getTitle() + \".\");\n         if (!songs.containsKey(songID))\n             throw new CommandStateException(\"That song is not in this playlist!\");\n         songs.remove(songID);\n         PlaylistManager.writePlaylistFile(this);\n     }\n \n+    public void removeSong(IUser requester, int index) throws CommandPermissionException, CommandStateException {\n+        if (!(ownerID.equals(requester.getStringID()) || contributors.contains(requester.getStringID())))\n+            throw new CommandPermissionException(\"You are not allowed to remove songs from \" + this.getTitle() + \".\");\n+        if (index \u003c 0 || index \u003e\u003d songs.size())\n+            throw new CommandStateException(index + \" is not a valid index!\");\n+        songs.remove(index);\n+        PlaylistManager.writePlaylistFile(this);\n+    }\n+\n     public void forceRemoveSong(String songID){\n         songs.remove(songID);\n         PlaylistManager.writePlaylistFile(this);"
        }
      ]
    }
  },
  {
    "name": "Typo in error message for taxonid input parsing",
    "url": "https://github.com/cerebis/neotax/issues/2",
    "description": "Message to user as has two \"per\" by accident.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/cerebis/neotax/commit/c8a3ddb4885893f934d1c3883cfcdfcdc26d9f7b",
      "files": [
        {
          "file_name": "src/mzd/taxonomy/neo/NeoConsole.java",
          "patch": "@@ -66,7 +66,7 @@ public void validateTaxons(File inputTaxa) throws IOException {\n \t\t\t\t}\n \t\t\t\tString[] fields \u003d line.split(\" \");\n \t\t\t\tif (fields.length \u003e 1) {\n-\t\t\t\t\tthrow new RuntimeException(\"Only one per taxon id per line when validating individuals\");\n+\t\t\t\t\tthrow new RuntimeException(\"Only one taxon id per line when validating individuals\");\n \t\t\t\t}\n \t\t\t\tList\u003cInteger\u003e taxIds \u003d stringsToInt(fields);\n \t\t\t\tgetDao().taxonsExist(taxIds);"
        }
      ]
    }
  },
  {
    "name": "JSON parse error in monitor dashboard",
    "url": "https://github.com/wisdom-framework/wisdom/issues/185",
    "description": "Monitor Dashboard fails to parse data coming from websocket.\nUncaught SyntaxError: Unexpected token N jquery.js:7428\no.parseJSON jquery.js:7428\nonmessage\n\nCause : some values are NaN which is invalid in JSON syntax\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/wisdom-framework/wisdom/commit/f3be428a890a8387765eef973f70f8d5a857a34d",
      "files": [
        {
          "file_name": "extensions/wisdom-monitor/src/main/java/org/wisdom/monitor/extensions/dashboard/DashboardExtension.java",
          "patch": "@@ -105,7 +105,6 @@ public void start() {\n         metrics.register(\"jvm.memory\", new MemoryUsageGaugeSet());\n         metrics.register(\"jvm.garbage\", new GarbageCollectorMetricSet());\n         metrics.register(\"jvm.threads\", new ThreadStatesGaugeSet());\n-        metrics.register(\"jvm.files\", new FileDescriptorRatioGauge());\n         metrics.register(\"jvm.buffers\", new BufferPoolMetricSet(ManagementFactory.getPlatformMBeanServer()));\n         metrics.register(\"jvm.cpu\", new CpuGaugeSet());\n         metrics.register(\"jvm.runtime\", new RuntimeGaugeSet());"
        },
        {
          "file_name": "extensions/wisdom-monitor/src/main/resources/templates/monitor/dashboard.thl.html",
          "patch": "@@ -147,11 +147,11 @@ \u003ch1 class\u003d\"page-header\"\u003eDashboard\u003c/h1\u003e\n                 \u003cdiv class\u003d\"col-md-4\"\u003e\u003csmall\u003e\u003cspan id\u003d\"MarkSweepTime\"\u003e\u003c/span\u003e ms\u003c/small\u003e\u003c/div\u003e\n             \u003c/div\u003e\n             \u003cdiv class\u003d\"row\"\u003e\n-                \u003cdiv class\u003d\"col-md-6\"\u003e\u003csmall\u003eScavenge count\u003c/small\u003e\u003c/div\u003e\n+                \u003cdiv class\u003d\"col-md-6\"\u003e\u003csmall id\u003d\"scavengeCountTitle\"\u003eScavenge count\u003c/small\u003e\u003c/div\u003e\n                 \u003cdiv class\u003d\"col-md-4\"\u003e\u003csmall\u003e\u003cspan id\u003d\"Scavenge\"\u003e\u003c/span\u003e\u003c/small\u003e\u003c/div\u003e\n             \u003c/div\u003e\n             \u003cdiv class\u003d\"row\"\u003e\n-                \u003cdiv class\u003d\"col-md-6\"\u003e\u003csmall\u003eScavenge time\u003c/small\u003e\u003c/div\u003e\n+                \u003cdiv class\u003d\"col-md-6\"\u003e\u003csmall id\u003d\"scavengeTimeTitle\"\u003eScavenge time\u003c/small\u003e\u003c/div\u003e\n                 \u003cdiv class\u003d\"col-md-4\"\u003e\u003csmall\u003e\u003cspan id\u003d\"ScavengeTime\"\u003e\u003c/span\u003e ms\u003c/small\u003e\u003c/div\u003e\n             \u003c/div\u003e\n \n@@ -520,11 +520,28 @@ \u003ch4 class\u003d\"modal-title\"\u003eThreads dump\u003c/h4\u003e\n         drawProgressBar(\"#blockedRatio\", (blockedCount * 100 / count), true);\n     }\n \n-    function updateGC(data) {\n-        var marksweep \u003d data.gauges[\"jvm.garbage.PS-MarkSweep.count\"].value;\n-        var marksweepTime \u003d data.gauges[\"jvm.garbage.PS-MarkSweep.time\"].value;\n-        var scavenge \u003d data.gauges[\"jvm.garbage.PS-Scavenge.count\"].value;\n-        var scavengeTime \u003d data.gauges[\"jvm.garbage.PS-Scavenge.time\"].value;\n+   function updateGC(data) {\n+\t    var marksweep;\n+\t\tvar marksweepTime;\n+\t\tif (data.gauges[\"jvm.garbage.PS-MarkSweep.count\"] !\u003d undefined) {\n+\t\t    marksweep \u003d data.gauges[\"jvm.garbage.PS-MarkSweep.count\"].value;\n+\t\t\tmarksweepTime \u003d data.gauges[\"jvm.garbage.PS-MarkSweep.time\"].value;\n+\t\t} else {\n+\t\t\tmarksweep \u003d data.gauges[\"jvm.garbage.MarkSweepCompact.count\"].value;\n+\t\t\tmarksweepTime \u003d data.gauges[\"jvm.garbage.MarkSweepCompact.time\"].value;\n+\t\t}\n+\t\tvar scavenge;\n+\t\tvar scavengeTime;\n+\t\tif (data.gauges[\"jvm.garbage.PS-Scavenge.count\"] !\u003d undefined) {\n+\t\t\tscavenge \u003d data.gauges[\"jvm.garbage.PS-Scavenge.count\"].value;\n+\t\t\tscavengeTime \u003d data.gauges[\"jvm.garbage.PS-Scavenge.time\"].value;\n+\t\t} else {\n+\t\t    // We don\u0027t have scavenge, use count. But also update the text fields\n+\t\t\t$(\"#scavengeCountTitle\").html(\"Copy Count\");\n+\t\t\t$(\"#scavengeTimeTitle\").html(\"Copy Time\");\n+\t\t\tscavenge \u003d data.gauges[\"jvm.garbage.Copy.count\"].value;\n+\t\t\tscavengeTime \u003d data.gauges[\"jvm.garbage.Copy.time\"].value;\n+\t\t}\n \n         $(\"#MarkSweep\").html(marksweep);\n         $(\"#MarkSweepTime\").html(marksweepTime);"
        }
      ]
    }
  },
  {
    "name": "DSL: Fix bug in error reporting which generated code even if the parsed node was invalid.",
    "url": "https://github.com/graalvm/graal/pull/58",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/graalvm/graal/commit/0df57671a11bab09241c3f5a08f9826fd9c658f1",
      "files": [
        {
          "file_name": "truffle/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/model/MessageContainer.java",
          "patch": "@@ -221,7 +221,7 @@ private boolean hasErrorsImpl(Set\u003cMessageContainer\u003e visitedSinks) {\n         }\n         for (MessageContainer sink : findChildContainers()) {\n             if (visitedSinks.contains(sink)) {\n-                return false;\n+                continue;\n             }\n \n             visitedSinks.add(sink);"
        }
      ]
    }
  },
  {
    "name": "Less Parser error: mixin parameter does not accept expression",
    "url": "https://github.com/racodond/sonar-css-plugin/issues/31",
    "description": "Hello we encountered this failure in less parser however lessc compile this normally\r\n\r\n`.sprites(@sprites, @i: 1) when (@i \u003c\u003d length(@sprites)) {`\r\n`  @sprite: extract(@sprites, @i);`\r\n`  @sprite-name: e(extract(@sprite, 10));`\r\n`  .@{sprite-name} {`\r\n`    .sprite(@sprite);`\r\n`  }`\r\n`  .sprites(@sprites, @i + 1);`\r\n`}`\r\n\r\nParse error at line 569 column 25: \r\n567: .sprite(@sprite);\r\n568: }\r\n569: .sprites(@sprites, @i + 1); ^\r\n570: }\r\n\r\nWe don\u0027t see anything wrong with it. We are using version 4.5. Can you advice?",
    "keywords": [
      "@sprites",
      "`",
      "1",
      ";`",
      "@i",
      "sprites",
      "@sprite"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/racodond/sonar-css-plugin/commit/eb9a9e60d37b62fc713d0b62e9a7603e79c70720",
      "files": [
        {
          "file_name": "css-checks/src/main/java/org/sonar/css/checks/common/SemicolonDeclarationCheck.java",
          "patch": "@@ -20,18 +20,17 @@\n package org.sonar.css.checks.common;\n \n import com.google.common.collect.ImmutableList;\n-\n-import java.util.List;\n-\n import org.sonar.check.Priority;\n import org.sonar.check.Rule;\n import org.sonar.css.checks.Tags;\n-import org.sonar.plugins.css.api.tree.css.DeclarationTree;\n import org.sonar.plugins.css.api.tree.Tree;\n+import org.sonar.plugins.css.api.tree.css.DeclarationTree;\n import org.sonar.plugins.css.api.visitors.SubscriptionVisitorCheck;\n import org.sonar.squidbridge.annotations.ActivatedByDefault;\n import org.sonar.squidbridge.annotations.SqaleConstantRemediation;\n \n+import java.util.List;\n+\n @Rule(\n   key \u003d \"semicolon-declaration\",\n   name \u003d \"Each declaration should end with a semicolon\",\n@@ -51,7 +50,9 @@\n \n   @Override\n   public void visitNode(Tree tree) {\n-    if (((DeclarationTree) tree).semicolon() \u003d\u003d null) {\n+    DeclarationTree declarationTree \u003d (DeclarationTree) tree;\n+    if (declarationTree.semicolon() \u003d\u003d null\n+      \u0026\u0026 !declarationTree.parent().is(Tree.Kind.SCSS_PARAMETER, Tree.Kind.LESS_MIXIN_PARAMETER)) {\n       addPreciseIssue(tree, \"Add a semicolon at the end of this declaration.\");\n     }\n   }"
        },
        {
          "file_name": "css-checks/src/test/java/org/sonar/css/checks/common/SemicolonDeclarationCheckTest.java",
          "patch": "@@ -23,11 +23,24 @@\n import org.sonar.css.checks.CheckTestUtils;\n import org.sonar.css.checks.verifier.CssCheckVerifier;\n \n+import java.io.File;\n+\n public class SemicolonDeclarationCheckTest {\n \n+  private SemicolonDeclarationCheck check \u003d new SemicolonDeclarationCheck();\n+\n   @Test\n-  public void test() {\n-    CssCheckVerifier.verifyCssFile(new SemicolonDeclarationCheck(), CheckTestUtils.getCommonTestFile(\"semicolonDeclaration.css\"));\n+  public void test_css() {\n+    CssCheckVerifier.verifyCssFile(check, getTestFile(\"semicolonDeclaration.css\"));\n+  }\n+\n+  @Test\n+  public void test_less() {\n+    CssCheckVerifier.verifyLessFile(check, getTestFile(\"semicolonDeclaration.less\"));\n+  }\n+\n+  private File getTestFile(String fileName) {\n+    return CheckTestUtils.getCommonTestFile(\"semicolon-declaration/\" + fileName);\n   }\n \n }"
        },
        {
          "file_name": "css-checks/src/test/resources/checks/common/experimental-pseudo-usage/experimentalPseudoUsage.scss",
          "patch": "@@ -25,3 +25,5 @@ p:empty {\n p:not(.mybox) {\n   color: red;\n }\n+\n+@mixin hello ($abc, $def:abc) {}"
        },
        {
          "file_name": "css-checks/src/test/resources/checks/common/semicolon-declaration/semicolonDeclaration.css"
        },
        {
          "file_name": "css-checks/src/test/resources/checks/common/semicolon-declaration/semicolonDeclaration.less",
          "patch": "@@ -0,0 +1,57 @@\n+/* Compliant */\n+h1 {\n+}\n+\n+/* Compliant */\n+h1 {\n+  color: red;\n+}\n+\n+/* Compliant */\n+h1 {\n+  background-color: blue;\n+  color: red;\n+}\n+\n+h1 {\n+  background-color: blue  /* Noncompliant ![sc\u003d3;ec\u003d25]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+h1 {\n+  background-color: blue;\n+  *color: red  /* Noncompliant ![sc\u003d3;ec\u003d14]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+h1 {\n+  background-color: blue;\n+  _color: red;\n+  width: 10px /* Noncompliant ![sc\u003d3;ec\u003d14]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+/* Compliant */\n+@font-face {\n+  font-family: \u0027MyFontFamily\u0027;\n+  src: url(\u0027myfont-webfont.woff?#wohoo\u0027) format(\u0027woff\u0027),\n+       url(\u0027myfont-webfont.eot?#iefix\u0027) format(\u0027embedded-opentype\u0027),\n+       url(\u0027myfont-webfont.ttf\u0027)  format(\u0027truetype\u0027),\n+       url(\u0027myfont-webfont.svg#svgFontName\u0027) format(\u0027svg\u0027);\n+}\n+\n+@font-face {\n+  font-family: \u0027MyFontFamily\u0027;\n+  src: url(\u0027myfont-webfont.woff?#wohoo\u0027) format(\u0027woff\u0027),  /* Noncompliant ![sc\u003d3;ec\u003d59;el\u003d++3]! !{Add a semicolon at the end of this declaration.}! */\n+       url(\u0027myfont-webfont.eot?#iefix\u0027) format(\u0027embedded-opentype\u0027),\n+       url(\u0027myfont-webfont.ttf\u0027)  format(\u0027truetype\u0027),\n+       url(\u0027myfont-webfont.svg#svgFontName\u0027) format(\u0027svg\u0027)\n+}\n+\n+:root {\n+  --abc: red /* Noncompliant ![sc\u003d3;ec\u003d13]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+.animation (@animation-name, @animation-count: infinte, @timing-function:linear) {\n+  color: #000000;\n+}\n+\n+@mycolor1: green;\n+@mycolor2: red /* Noncompliant ![sc\u003d1;ec\u003d15]! !{Add a semicolon at the end of this declaration.}! */"
        },
        {
          "file_name": "css-checks/src/test/resources/checks/less/multipleVariableDeclarationsSameScope.less",
          "patch": "@@ -10,3 +10,21 @@\n }\n \n @myvar: 1px;\n+\n+.border-radius(@radius) {\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}\n+\n+.border-radius2(@radius, @radius) { /* Noncompliant ![sc\u003d18;ec\u003d24;secondary\u003d+0]! !{Merge those multiple variable declarations within the same scope.}! */\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}\n+\n+.border-radius3(@radius: 3px, @radius: 4px) { /* Noncompliant ![sc\u003d18;ec\u003d24;secondary\u003d+0]! !{Merge those multiple variable declarations within the same scope.}! */\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/LexicalGrammar.java",
          "patch": "@@ -301,8 +301,10 @@\n \n   /* Less */\n   LESS_VARIABLE_DECLARATION,\n+  LESS_VARIABLE_DECLARATION_AS_PARAMETER,\n   LESS_VARIABLE,\n   LESS_VARIABLE_PREFIX,\n+  LESS_EXPRESSION_WITHOUT_COMMA_SEPARATED_LIST,\n \n   LESS_INTERPOLATED_IDENTIFIER,\n   LESS_INTERPOLATED_IDENTIFIER_NO_WS,\n@@ -337,7 +339,6 @@\n   LESS_OPERATOR,\n   LESS_OPERATOR_LITERAL;\n \n-\n   private static final String CSS_COMMENT_REGEX \u003d \"(?:\" + \"(?:/\\\\*[\\\\s\\\\S]*?\\\\*/)\" + \"|\" + \"(?:\\\\\u003c\\\\!--[\\\\s\\\\S]*?--\\\\\u003e)\" + \")\";\n   private static final String LESS_COMMENT_REGEX \u003d \"(?:\" + \"(?:/\\\\*[\\\\s\\\\S]*?\\\\*/)\" + \"|\" + \"(?:\\\\\u003c\\\\!--[\\\\s\\\\S]*?--\\\\\u003e)\" + \"|\" + \"//[^\\\\n\\\\r]*+\" + \")\";\n   private static final String SCSS_COMMENT_REGEX \u003d \"(?:\" + \"(?:/\\\\*[\\\\s\\\\S]*?\\\\*/)\" + \"|\" + \"//[^\\\\n\\\\r]*+\" + \")\";"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/TreeFactory.java",
          "patch": "@@ -652,6 +652,10 @@ public LessVariableDeclarationTree lessVariableDeclaration(LessVariableTree vari\n     return new LessVariableDeclarationTreeImpl(variable, colon, value, semicolon.orNull());\n   }\n \n+  public LessVariableDeclarationTree lessVariableDeclarationAsParameter(LessVariableTree variable, SyntaxToken colon, ValueTree value) {\n+    return new LessVariableDeclarationTreeImpl(variable, colon, value, null);\n+  }\n+\n   public LessVariableTree lessVariable(SyntaxToken variablePrefix, IdentifierTree variable) {\n     return new LessVariableTreeImpl(variablePrefix, variable);\n   }\n@@ -733,16 +737,8 @@ public LessMixinParametersTree lessMixinParameters(SyntaxToken openParenthesis,\n     return new SeparatedList\u003c\u003e(parameters, separators);\n   }\n \n-  public LessMixinParameterTree lessMixinParameter(LessVariableTree variable, Optional\u003cLessMixinParameterDefaultValueTree\u003e defaultValue) {\n-    return new LessMixinParameterTreeImpl(variable, null, defaultValue.orNull());\n-  }\n-\n-  public LessMixinParameterTree lessMixinParameter(ValueTree value) {\n-    return new LessMixinParameterTreeImpl(null, value, null);\n-  }\n-\n-  public LessMixinParameterDefaultValueTree lessMixinParameterDefaultValue(SyntaxToken colon, ValueTree value) {\n-    return new LessMixinParameterDefaultValueTreeImpl(colon, value);\n+  public LessMixinParameterTree lessMixinParameter(Tree parameter) {\n+    return new LessMixinParameterTreeImpl(parameter);\n   }\n \n   public LessEscapingTree lessEscaping(SyntaxToken escapingSymbol, StringTree string) {\n@@ -753,6 +749,10 @@ public LessOperatorTree lessOperator(SyntaxToken operator) {\n     return new LessOperatorTreeImpl(operator);\n   }\n \n+  public ValueTree simpleValueLessExpressionWithoutCommaSeparatedList(List\u003cTree\u003e valueElements) {\n+    return new ValueTreeImpl(valueElements);\n+  }\n+\n   // ---------------------------------\n   // Tuple\n   // ---------------------------------"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/less/LessGrammar.java",
          "patch": "@@ -351,18 +351,24 @@ public LessMixinParametersTree LESS_MIXIN_PARAMETERS() {\n \n   public LessMixinParameterTree LESS_MIXIN_PARAMETER() {\n     return b.\u003cLessMixinParameterTree\u003enonterminal(LexicalGrammar.LESS_MIXIN_PARAMETER).is(\n-      b.firstOf(\n-        f.lessMixinParameter(\n-          LESS_VARIABLE(),\n-          b.optional(LESS_MIXIN_PARAMETER_DEFAULT_VALUE())),\n-        f.lessMixinParameter(DECLARATION_VALUE())));\n+      f.lessMixinParameter(\n+        b.firstOf(\n+          LESS_VARIABLE_DECLARATION_AS_PARAMETER(),\n+          LESS_EXPRESSION_WITHOUT_COMMA_SEPARATED_LIST())));\n   }\n \n-  public LessMixinParameterDefaultValueTree LESS_MIXIN_PARAMETER_DEFAULT_VALUE() {\n-    return b.\u003cLessMixinParameterDefaultValueTree\u003enonterminal(LexicalGrammar.LESS_MIXIN_PARAMETER_DEFAULT_VALUE).is(\n-      f.lessMixinParameterDefaultValue(\n+  public LessVariableDeclarationTree LESS_VARIABLE_DECLARATION_AS_PARAMETER() {\n+    return b.\u003cLessVariableDeclarationTree\u003enonterminal(LexicalGrammar.LESS_VARIABLE_DECLARATION_AS_PARAMETER).is(\n+      f.lessVariableDeclarationAsParameter(\n+        LESS_VARIABLE(),\n         b.token(LexicalGrammar.COLON),\n-        DECLARATION_VALUE()));\n+        LESS_EXPRESSION_WITHOUT_COMMA_SEPARATED_LIST()));\n+  }\n+\n+  public ValueTree LESS_EXPRESSION_WITHOUT_COMMA_SEPARATED_LIST() {\n+    return b.\u003cValueTree\u003enonterminal(LexicalGrammar.LESS_EXPRESSION_WITHOUT_COMMA_SEPARATED_LIST).is(\n+      f.simpleValueLessExpressionWithoutCommaSeparatedList(\n+        b.oneOrMore(ANY_WITHOUT_COMMA_SEPARATED_LIST())));\n   }\n \n   public IdentifierTree LESS_INTERPOLATED_IDENTIFIER() {"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/impl/less/LessMixinParameterDefaultValueTreeImpl.java",
          "patch": "@@ -1,67 +0,0 @@\n-/*\n- * SonarQube CSS / SCSS / Less Analyzer\n- * Copyright (C) 2013-2017 David RACODON\n- * mailto: david.racodon@gmail.com\n- *\n- * This program is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3 of the License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n- */\n-package org.sonar.css.tree.impl.less;\n-\n-import com.google.common.collect.Iterators;\n-import org.sonar.css.tree.impl.TreeImpl;\n-import org.sonar.plugins.css.api.tree.Tree;\n-import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n-import org.sonar.plugins.css.api.tree.css.ValueTree;\n-import org.sonar.plugins.css.api.tree.less.LessMixinParameterDefaultValueTree;\n-import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n-\n-import java.util.Iterator;\n-\n-public class LessMixinParameterDefaultValueTreeImpl extends TreeImpl implements LessMixinParameterDefaultValueTree {\n-\n-  private final SyntaxToken colon;\n-  private final ValueTree value;\n-\n-  public LessMixinParameterDefaultValueTreeImpl(SyntaxToken colon, ValueTree value) {\n-    this.colon \u003d colon;\n-    this.value \u003d value;\n-  }\n-\n-  @Override\n-  public Kind getKind() {\n-    return Kind.LESS_MIXIN_PARAMETER_DEFAULT_VALUE;\n-  }\n-\n-  @Override\n-  public Iterator\u003cTree\u003e childrenIterator() {\n-    return Iterators.forArray(colon, value);\n-  }\n-\n-  @Override\n-  public void accept(DoubleDispatchVisitor visitor) {\n-    visitor.visitLessMixinParameterDefaultValue(this);\n-  }\n-\n-  @Override\n-  public SyntaxToken colon() {\n-    return colon;\n-  }\n-\n-  @Override\n-  public ValueTree value() {\n-    return value;\n-  }\n-\n-}"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/impl/less/LessMixinParameterTreeImpl.java",
          "patch": "@@ -23,8 +23,8 @@\n import org.sonar.css.tree.impl.TreeImpl;\n import org.sonar.plugins.css.api.tree.Tree;\n import org.sonar.plugins.css.api.tree.css.ValueTree;\n-import org.sonar.plugins.css.api.tree.less.LessMixinParameterDefaultValueTree;\n import org.sonar.plugins.css.api.tree.less.LessMixinParameterTree;\n+import org.sonar.plugins.css.api.tree.less.LessVariableDeclarationTree;\n import org.sonar.plugins.css.api.tree.less.LessVariableTree;\n import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n \n@@ -33,14 +33,23 @@\n \n public class LessMixinParameterTreeImpl extends TreeImpl implements LessMixinParameterTree {\n \n-  private final LessVariableTree variable;\n-  private final ValueTree value;\n-  private final LessMixinParameterDefaultValueTree defaultValue;\n+  private ValueTree value \u003d null;\n+  private LessVariableTree variable \u003d null;\n+  private LessVariableDeclarationTree variableDeclaration \u003d null;\n \n-  public LessMixinParameterTreeImpl(@Nullable LessVariableTree variable, @Nullable ValueTree value, @Nullable LessMixinParameterDefaultValueTree defaultValue) {\n-    this.variable \u003d variable;\n-    this.value \u003d value;\n-    this.defaultValue \u003d defaultValue;\n+  public LessMixinParameterTreeImpl(Tree parameter) {\n+    if (parameter instanceof ValueTree) {\n+      if (((ValueTree) parameter).valueElements().size() \u003d\u003d 1\n+        \u0026\u0026 (((ValueTree) parameter).valueElements().get(0) instanceof LessVariableTree)) {\n+        variable \u003d (LessVariableTree) ((ValueTree) parameter).valueElements().get(0);\n+      } else {\n+        value \u003d (ValueTree) parameter;\n+      }\n+    } else if (parameter instanceof LessVariableDeclarationTree) {\n+      variableDeclaration \u003d (LessVariableDeclarationTree) parameter;\n+    } else {\n+      throw new IllegalStateException(\"Unknown Less parameter type: \" + parameter.getClass());\n+    }\n   }\n \n   @Override\n@@ -50,7 +59,7 @@ public Kind getKind() {\n \n   @Override\n   public Iterator\u003cTree\u003e childrenIterator() {\n-    return Iterators.forArray(variable, value, defaultValue);\n+    return Iterators.forArray(value, variable, variableDeclaration);\n   }\n \n   @Override\n@@ -60,20 +69,20 @@ public void accept(DoubleDispatchVisitor visitor) {\n \n   @Override\n   @Nullable\n-  public LessVariableTree variable() {\n-    return variable;\n+  public ValueTree value() {\n+    return value;\n   }\n \n   @Override\n   @Nullable\n-  public ValueTree value() {\n-    return value;\n+  public LessVariableTree variable() {\n+    return variable;\n   }\n \n   @Override\n   @Nullable\n-  public LessMixinParameterDefaultValueTree defaultValue() {\n-    return defaultValue;\n+  public LessVariableDeclarationTree variableDeclaration() {\n+    return variableDeclaration;\n   }\n \n }"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/symbol/ScopeVisitor.java",
          "patch": "@@ -23,6 +23,7 @@\n import org.sonar.plugins.css.api.tree.css.StatementBlockTree;\n import org.sonar.plugins.css.api.tree.css.StyleSheetTree;\n import org.sonar.plugins.css.api.tree.embedded.FileWithEmbeddedCssTree;\n+import org.sonar.plugins.css.api.tree.less.LessMixinParametersTree;\n import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n \n import java.util.HashMap;\n@@ -63,6 +64,13 @@ public void visitStatementBlock(StatementBlockTree tree) {\n     leaveScope();\n   }\n \n+  @Override\n+  public void visitLessMixinParameters(LessMixinParametersTree tree) {\n+    newScope(tree);\n+    super.visitLessMixinParameters(tree);\n+    leaveScope();\n+  }\n+\n   private void leaveScope() {\n     if (currentScope !\u003d null) {\n       currentScope \u003d currentScope.outer();"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/symbol/SymbolVisitor.java",
          "patch": "@@ -25,7 +25,9 @@\n import org.sonar.plugins.css.api.tree.css.StatementBlockTree;\n import org.sonar.plugins.css.api.tree.css.StyleSheetTree;\n import org.sonar.plugins.css.api.tree.embedded.FileWithEmbeddedCssTree;\n+import org.sonar.plugins.css.api.tree.less.LessMixinParametersTree;\n import org.sonar.plugins.css.api.tree.less.LessVariableTree;\n+import org.sonar.plugins.css.api.tree.scss.ScssParametersTree;\n import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n \n import java.util.Map;\n@@ -65,6 +67,13 @@ public void visitStatementBlock(StatementBlockTree tree) {\n     leaveScope();\n   }\n \n+  @Override\n+  public void visitLessMixinParameters(LessMixinParametersTree tree) {\n+    enterScope(tree);\n+    super.visitLessMixinParameters(tree);\n+    leaveScope();\n+  }\n+\n   private void leaveScope() {\n     if (currentScope !\u003d null) {\n       currentScope \u003d currentScope.outer();\n@@ -82,7 +91,7 @@ private void enterScope(Tree tree) {\n   public void visitLessVariable(LessVariableTree tree) {\n     Usage.Kind usage;\n \n-    if (tree.parent().is(Tree.Kind.LESS_VARIABLE_DECLARATION)) {\n+    if (tree.parent().is(Tree.Kind.LESS_VARIABLE_DECLARATION, Tree.Kind.LESS_MIXIN_PARAMETER)) {\n       usage \u003d Usage.Kind.DECLARATION;\n     } else {\n       usage \u003d Usage.Kind.READ;"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/Tree.java",
          "patch": "@@ -155,7 +155,6 @@\n     LESS_MIXIN_GUARD_CONDITION(LessMixinGuardConditionTree.class),\n     LESS_MIXIN_PARAMETERS(LessMixinParametersTree.class),\n     LESS_MIXIN_PARAMETER(LessMixinParameterTree.class),\n-    LESS_MIXIN_PARAMETER_DEFAULT_VALUE(LessMixinParameterDefaultValueTree.class),\n     LESS_ESCAPING(LessEscapingTree.class),\n     LESS_OPERATOR(LessOperatorTree.class);\n "
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/less/LessMixinParameterDefaultValueTree.java",
          "patch": "@@ -1,32 +0,0 @@\n-/*\n- * SonarQube CSS / SCSS / Less Analyzer\n- * Copyright (C) 2013-2017 David RACODON\n- * mailto: david.racodon@gmail.com\n- *\n- * This program is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3 of the License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n- */\n-package org.sonar.plugins.css.api.tree.less;\n-\n-import org.sonar.plugins.css.api.tree.Tree;\n-import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n-import org.sonar.plugins.css.api.tree.css.ValueTree;\n-\n-public interface LessMixinParameterDefaultValueTree extends Tree {\n-\n-  SyntaxToken colon();\n-\n-  ValueTree value();\n-\n-}"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/less/LessMixinParameterTree.java",
          "patch": "@@ -27,12 +27,12 @@\n public interface LessMixinParameterTree extends Tree {\n \n   @Nullable\n-  LessVariableTree variable();\n+  ValueTree value();\n \n   @Nullable\n-  ValueTree value();\n+  LessVariableTree variable();\n \n   @Nullable\n-  LessMixinParameterDefaultValueTree defaultValue();\n+  LessVariableDeclarationTree variableDeclaration();\n \n }"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/visitors/DoubleDispatchVisitor.java",
          "patch": "@@ -461,10 +461,6 @@ public void visitLessMixinParameter(LessMixinParameterTree tree) {\n     scanChildren(tree);\n   }\n \n-  public void visitLessMixinParameterDefaultValue(LessMixinParameterDefaultValueTree tree) {\n-    scanChildren(tree);\n-  }\n-\n   public void visitLessEscaping(LessEscapingTree tree) {\n     scanChildren(tree);\n   }"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinCallTreeTest.java",
          "patch": "@@ -92,6 +92,8 @@ public void lessMixinCall() {\n \n     tree \u003d checkParsed(\"\u003e #outer\u003e.inner() !important ;\");\n     assertThat(tree.parentCombinator()).isNotNull();\n+\n+    checkParsed(\".sprites(@sprites, @i + 1);\");\n   }\n \n   @Test"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinParameterDefaultValueTreeTest.java",
          "patch": "@@ -1,48 +0,0 @@\n-/*\n- * SonarQube CSS / SCSS / Less Analyzer\n- * Copyright (C) 2013-2017 David RACODON\n- * mailto: david.racodon@gmail.com\n- *\n- * This program is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3 of the License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n- */\n-package org.sonar.css.parser.less;\n-\n-import org.junit.Test;\n-import org.sonar.css.parser.LexicalGrammar;\n-import org.sonar.plugins.css.api.tree.less.LessMixinParameterDefaultValueTree;\n-\n-import static org.fest.assertions.Assertions.assertThat;\n-\n-public class LessMixinParameterDefaultValueTreeTest extends LessTreeTest {\n-\n-  public LessMixinParameterDefaultValueTreeTest() {\n-    super(LexicalGrammar.LESS_MIXIN_PARAMETER_DEFAULT_VALUE);\n-  }\n-\n-  @Test\n-  public void lessMixinParameterDefaultValue() {\n-    checkParsed(\":abc\");\n-    checkParsed(\": abc\");\n-    checkParsed(\" : abc\");\n-  }\n-\n-  private LessMixinParameterDefaultValueTree checkParsed(String toParse) {\n-    LessMixinParameterDefaultValueTree tree \u003d (LessMixinParameterDefaultValueTree) parser().parse(toParse);\n-    assertThat(tree.colon()).isNotNull();\n-    assertThat(tree.value()).isNotNull();\n-    return tree;\n-  }\n-\n-}"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinParameterTreeTest.java",
          "patch": "@@ -36,19 +36,29 @@ public void lessMixinParameter() {\n     LessMixinParameterTree tree;\n \n     tree \u003d checkParsed(\"@var\");\n-    assertThat(tree.defaultValue()).isNull();\n+    assertThat(tree.variableDeclaration()).isNull();\n     assertThat(tree.value()).isNull();\n     assertThat(tree.variable()).isNotNull();\n \n+    tree \u003d checkParsed(\"@var...\");\n+    assertThat(tree.variableDeclaration()).isNull();\n+    assertThat(tree.value()).isNotNull();\n+    assertThat(tree.variable()).isNull();\n+\n+    tree \u003d checkParsed(\"...\");\n+    assertThat(tree.variableDeclaration()).isNull();\n+    assertThat(tree.value()).isNotNull();\n+    assertThat(tree.variable()).isNull();\n+\n     tree \u003d checkParsed(\"@var: abc\");\n-    assertThat(tree.variable()).isNotNull();\n-    assertThat(tree.defaultValue()).isNotNull();\n+    assertThat(tree.variableDeclaration()).isNotNull();\n     assertThat(tree.value()).isNull();\n-\n-    tree \u003d checkParsed(\"abc\");\n     assertThat(tree.variable()).isNull();\n-    assertThat(tree.defaultValue()).isNull();\n+\n+    tree \u003d checkParsed(\"@i + 1\");\n+    assertThat(tree.variableDeclaration()).isNull();\n     assertThat(tree.value()).isNotNull();\n+    assertThat(tree.variable()).isNull();\n   }\n \n   private LessMixinParameterTree checkParsed(String toParse) {"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinParametersTreeTest.java",
          "patch": "@@ -49,7 +49,8 @@ public void lessMixinParameters() {\n \n     tree \u003d checkParsed(\"(@var: blue)\");\n     assertThat(tree.parameters()).hasSize(1);\n-      tree \u003d checkParsed(\"(@var: blue;)\");\n+\n+    tree \u003d checkParsed(\"(@var: blue;)\");\n     assertThat(tree.parameters()).hasSize(1);\n \n     tree \u003d checkParsed(\"(@var: blue,)\");\n@@ -67,9 +68,18 @@ public void lessMixinParameters() {\n     tree \u003d checkParsed(\"(@var: blue; ...)\");\n     assertThat(tree.parameters()).hasSize(2);\n \n-    //FIXME: remove \u0027;\u0027 from valuetree in this case?\n-    /*tree \u003d checkParsed(\"(@var: blue, @myvar: blue)\");\n-    assertThat(tree.parameters()).hasSize(2);*/\n+    tree \u003d checkParsed(\"(@var: blue; @myvar...)\");\n+    assertThat(tree.parameters()).hasSize(2);\n+\n+    tree \u003d checkParsed(\"(@var: blue, @myvar: blue)\");\n+    assertThat(tree.parameters()).hasSize(2);\n+\n+    tree \u003d checkParsed(\"(@var: blue, green, @myvar: blue)\");\n+    assertThat(tree.parameters()).hasSize(3);\n+\n+    // FIXME: Deal with semicolon-separated list of parameters\n+    // tree \u003d checkParsed(\"(@var: blue, green; @myvar: blue)\");\n+    // assertThat(tree.parameters()).hasSize(2);\n   }\n \n   @Test"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/StyleSheetTreeTest.java",
          "patch": "@@ -146,6 +146,15 @@ public void stylesheet() throws Exception {\n     checkParsed(\".background-opacity(@c, @alpha) when (iscolor(@c)) and not (@c\u003d~\\\"transparent\\\") {\\n\" +\n       \"background: hsla(hue(@c), saturation(@c), lightness(@c), @alpha);\\n\" +\n       \"}\");\n+\n+    checkParsed(\".sprites(@sprites, @i: 1) when (@i \u003c\u003d length(@sprites)) {\\n\" +\n+      \"@sprite: extract(@sprites, @i);\\n\" +\n+      \"@sprite-name: e(extract(@sprite, 10));\\n\" +\n+      \".@{sprite-name} {\\n\" +\n+      \".sprite(@sprite);\\n\" +\n+      \"}\\n\" +\n+      \".sprites(@sprites, @i + 1);\\n\" +\n+      \"}\");\n   }\n \n   private StyleSheetTree checkParsed(String toParse) {"
        },
        {
          "file_name": "its/ruling/projects/custom/common/experimental-pseudo-usage/experimentalPseudoUsage.scss",
          "patch": "@@ -25,3 +25,5 @@ p:empty {\n p:not(.mybox) {\n   color: red;\n }\n+\n+@mixin hello ($abc, $def:abc) {}"
        },
        {
          "file_name": "its/ruling/projects/custom/common/semicolon-declaration/semicolonDeclaration.css"
        },
        {
          "file_name": "its/ruling/projects/custom/common/semicolon-declaration/semicolonDeclaration.less",
          "patch": "@@ -0,0 +1,57 @@\n+/* Compliant */\n+h1 {\n+}\n+\n+/* Compliant */\n+h1 {\n+  color: red;\n+}\n+\n+/* Compliant */\n+h1 {\n+  background-color: blue;\n+  color: red;\n+}\n+\n+h1 {\n+  background-color: blue  /* Noncompliant ![sc\u003d3;ec\u003d25]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+h1 {\n+  background-color: blue;\n+  *color: red  /* Noncompliant ![sc\u003d3;ec\u003d14]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+h1 {\n+  background-color: blue;\n+  _color: red;\n+  width: 10px /* Noncompliant ![sc\u003d3;ec\u003d14]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+/* Compliant */\n+@font-face {\n+  font-family: \u0027MyFontFamily\u0027;\n+  src: url(\u0027myfont-webfont.woff?#wohoo\u0027) format(\u0027woff\u0027),\n+       url(\u0027myfont-webfont.eot?#iefix\u0027) format(\u0027embedded-opentype\u0027),\n+       url(\u0027myfont-webfont.ttf\u0027)  format(\u0027truetype\u0027),\n+       url(\u0027myfont-webfont.svg#svgFontName\u0027) format(\u0027svg\u0027);\n+}\n+\n+@font-face {\n+  font-family: \u0027MyFontFamily\u0027;\n+  src: url(\u0027myfont-webfont.woff?#wohoo\u0027) format(\u0027woff\u0027),  /* Noncompliant ![sc\u003d3;ec\u003d59;el\u003d++3]! !{Add a semicolon at the end of this declaration.}! */\n+       url(\u0027myfont-webfont.eot?#iefix\u0027) format(\u0027embedded-opentype\u0027),\n+       url(\u0027myfont-webfont.ttf\u0027)  format(\u0027truetype\u0027),\n+       url(\u0027myfont-webfont.svg#svgFontName\u0027) format(\u0027svg\u0027)\n+}\n+\n+:root {\n+  --abc: red /* Noncompliant ![sc\u003d3;ec\u003d13]! !{Add a semicolon at the end of this declaration.}! */\n+}\n+\n+.animation (@animation-name, @animation-count: infinte, @timing-function:linear) {\n+  color: #000000;\n+}\n+\n+@mycolor1: green;\n+@mycolor2: red /* Noncompliant ![sc\u003d1;ec\u003d15]! !{Add a semicolon at the end of this declaration.}! */"
        },
        {
          "file_name": "its/ruling/projects/custom/less/multipleVariableDeclarationsSameScope.less",
          "patch": "@@ -10,3 +10,21 @@\n }\n \n @myvar: 1px;\n+\n+.border-radius(@radius) {\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}\n+\n+.border-radius2(@radius, @radius) { /* Noncompliant ![sc\u003d18;ec\u003d24;secondary\u003d+0]! !{Merge those multiple variable declarations within the same scope.}! */\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}\n+\n+.border-radius3(@radius: 3px, @radius: 4px) { /* Noncompliant ![sc\u003d18;ec\u003d24;secondary\u003d+0]! !{Merge those multiple variable declarations within the same scope.}! */\n+  -webkit-border-radius: @radius;\n+  -moz-border-radius: @radius;\n+  border-radius: @radius;\n+}"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-empty-rules.json",
          "patch": "@@ -146,7 +146,7 @@\n 16,\n 19,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 2,\n ],\n \u0027project:custom/common/unknown-pseudo/unknownPseudo.css\u0027:["
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-font-face-browser-compatibility.json",
          "patch": "@@ -50,7 +50,7 @@\n \u0027project:custom/common/quotedUrl/quotedUrl.css\u0027:[\n 5,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 34,\n 42,\n ],"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-line-length.json",
          "patch": "@@ -1079,7 +1079,7 @@\n 13,\n 19,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 42,\n ],\n \u0027project:custom/common/single-quotes/singleQuotes.css\u0027:["
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-named-color.json",
          "patch": "@@ -4660,7 +4660,7 @@\n 26,\n 30,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 7,\n 12,\n 13,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-semicolon-declaration.json",
          "patch": "@@ -20,7 +20,7 @@\n \u0027project:custom/common/properties/css/background-origin.css\u0027:[\n 8,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 17,\n 22,\n 28,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-star-property-hack.json",
          "patch": "@@ -21,7 +21,7 @@\n \u0027project:custom/common/properties/css/all.css\u0027:[\n 7,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 22,\n ],\n \u0027project:custom/common/starhack.css\u0027:["
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/css-underscore-property-hack.json",
          "patch": "@@ -13,7 +13,7 @@\n \u0027project:custom/common/properties/css/all.css\u0027:[\n 8,\n ],\n-\u0027project:custom/common/semicolonDeclaration.css\u0027:[\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.css\u0027:[\n 27,\n ],\n \u0027project:custom/common/underscorehack.css\u0027:["
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-empty-rules.json",
          "patch": "@@ -70,6 +70,9 @@\n 22,\n 25,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+2,\n+],\n \u0027project:custom/common/unknown-pseudo/unknownPseudo.less\u0027:[\n 1,\n 4,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-experimental-property-usage.json",
          "patch": "@@ -2085,6 +2085,14 @@\n 389,\n 401,\n ],\n+\u0027project:custom/less/multipleVariableDeclarationsSameScope.less\u0027:[\n+15,\n+16,\n+21,\n+22,\n+27,\n+28,\n+],\n \u0027project:custom/less/obsoleteFunctions.less\u0027:[\n 6,\n ],"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-font-face-browser-compatibility.json",
          "patch": "@@ -12,4 +12,8 @@\n \u0027project:custom/common/quotedUrl/quotedUrl.less\u0027:[\n 5,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+34,\n+42,\n+],\n }"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-formatting.json",
          "patch": "@@ -19,6 +19,9 @@\n 7,\n 8,\n ],\n+\u0027project:custom/common/experimental-pseudo-usage/experimentalPseudoUsage.less\u0027:[\n+29,\n+],\n \u0027project:custom/common/formatting/declaration.less\u0027:[\n 6,\n 10,\n@@ -239,6 +242,9 @@\n 15,\n 15,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+52,\n+],\n \u0027project:custom/less/experimentalFunctionUsage.less\u0027:[\n 3,\n 3,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-line-length.json",
          "patch": "@@ -975,6 +975,9 @@\n 13,\n 19,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+42,\n+],\n \u0027project:custom/common/text-transform-uppercase/textTransformUppercase.less\u0027:[\n 4,\n 5,\n@@ -1030,6 +1033,8 @@\n \u0027project:custom/less/multipleVariableDeclarationsSameScope.less\u0027:[\n 1,\n 5,\n+20,\n+26,\n ],\n \u0027project:custom/less/nestedRulesets/nestedRulesets.less\u0027:[\n 18,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-multiple-variable-declarations-same-scope.json",
          "patch": "@@ -8,5 +8,7 @@\n \u0027project:custom/less/multipleVariableDeclarationsSameScope.less\u0027:[\n 1,\n 5,\n+20,\n+26,\n ],\n }"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-named-color.json",
          "patch": "@@ -338,6 +338,19 @@\n 9,\n 10,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+7,\n+12,\n+13,\n+17,\n+21,\n+22,\n+26,\n+27,\n+49,\n+56,\n+57,\n+],\n \u0027project:custom/common/stylelint-disable/stylelintDisable.less\u0027:[\n 3,\n 8,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-prefer-single-line-comments.json",
          "patch": "@@ -1898,6 +1898,18 @@\n 22,\n 25,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+1,\n+5,\n+10,\n+17,\n+22,\n+28,\n+31,\n+42,\n+49,\n+57,\n+],\n \u0027project:custom/common/single-quotes/singleQuotes.less\u0027:[\n 3,\n ],\n@@ -2066,6 +2078,8 @@\n \u0027project:custom/less/multipleVariableDeclarationsSameScope.less\u0027:[\n 1,\n 5,\n+20,\n+26,\n ],\n \u0027project:custom/less/nestedRulesets/nestedRulesets.less\u0027:[\n 1,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-semicolon-declaration.json",
          "patch": "@@ -5,6 +5,14 @@\n \u0027project:custom/common/properties/less/background-origin.less\u0027:[\n 8,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+17,\n+22,\n+28,\n+42,\n+49,\n+57,\n+],\n \u0027project:custom/common/single-quotes/singleQuotes.less\u0027:[\n 5,\n ],"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-star-property-hack.json",
          "patch": "@@ -21,4 +21,7 @@\n \u0027project:custom/common/properties/less/all.less\u0027:[\n 7,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+22,\n+],\n }"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-underscore-property-hack.json",
          "patch": "@@ -14,4 +14,7 @@\n \u0027project:custom/common/properties/less/all.less\u0027:[\n 8,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+27,\n+],\n }"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-unknown-pseudo.json",
          "patch": "@@ -1,7 +1,4 @@\n {\n-\u0027project:custom/common/experimental-pseudo-usage/experimentalPseudoUsage.less\u0027:[\n-29,\n-],\n \u0027project:custom/common/unknown-pseudo/unknownPseudo.less\u0027:[\n 7,\n 18,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/less-variable-declaration-first.json",
          "patch": "@@ -7,6 +7,10 @@\n \u0027project:custom/common/known-properties/knownProperties.less\u0027:[\n 37,\n ],\n+\u0027project:custom/common/semicolon-declaration/semicolonDeclaration.less\u0027:[\n+56,\n+57,\n+],\n \u0027project:custom/less/multipleVariableDeclarationsSameScope.less\u0027:[\n 8,\n 9,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/scss-empty-mixin.json",
          "patch": "@@ -1,4 +1,7 @@\n {\n+\u0027project:custom/common/experimental-pseudo-usage/experimentalPseudoUsage.scss\u0027:[\n+29,\n+],\n \u0027project:custom/common/formatting/delimiterSeparatedList.scss\u0027:[\n 73,\n 74,"
        },
        {
          "file_name": "its/ruling/tests/src/test/expected/scss-formatting.json",
          "patch": "@@ -19,6 +19,9 @@\n 7,\n 8,\n ],\n+\u0027project:custom/common/experimental-pseudo-usage/experimentalPseudoUsage.scss\u0027:[\n+29,\n+],\n \u0027project:custom/common/formatting/declaration.scss\u0027:[\n 6,\n 10,"
        }
      ]
    }
  },
  {
    "name": "Bad error display when there is a handlebars parse error",
    "url": "https://github.com/jvelo/mayocat-shop/issues/98",
    "description": "To reproduce :\n\n```\n{{#toto}}{{#toto}}\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/jvelo/mayocat-shop/commit/3d2313319b934ca7abc89b64b0a6dca99de37f6d",
      "files": [
        {
          "file_name": "platform/front/src/main/java/org/mayocat/shop/front/views/WebViewMessageBodyWriter.java",
          "patch": "@@ -199,8 +199,8 @@ private void writeDeveloperError(WebView webView, Exception e, OutputStream enti\n             Template error \u003d new Template(\"developerError\",\n                     Resources.toString(Resources.getResource(\"templates/developerError.html\"), Charsets.UTF_8));\n             Map\u003cString, Object\u003e errorContext \u003d Maps.newHashMap();\n-            errorContext.put(\"error\", cleanErrorMessageForDisplay(e.getMessage()));\n-            errorContext.put(\"stackTrace\", ExceptionUtils.getStackTrace(e));\n+            errorContext.put(\"error\", StringEscapeUtils.escapeXml(cleanErrorMessageForDisplay(e.getMessage())));\n+            errorContext.put(\"stackTrace\", StringEscapeUtils.escapeXml(ExceptionUtils.getStackTrace(e)));\n             errorContext.put(\"context\", StringEscapeUtils.escapeXml(jsonContext).trim());\n             errorContext.put(\"rawContext\", jsonContext);\n             errorContext.put(\"template\", webView.template().toString());"
        }
      ]
    }
  },
  {
    "name": "Error parsing on multiple filters for Conservation, ProteinSustitution and FunctionalScore",
    "url": "https://github.com/opencb/opencga/issues/497",
    "description": "Throwing VariantQueryException when combining multiple values (with AND or OR) at the filters conservation, protein substitution or functional score.\r\nFails for MongoDBVariantStorageEngine.\r\n\r\nExample:\r\n\r\n`conservation \u003d phastCons\u003e0.5,phylop\u003c0.1`\r\n\r\nRelated with [opencb/iva#38](https://github.com/opencb/iva/issues/38)\r\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/opencb/opencga/commit/1134d85855570270dbe8f2a45e8771a7a77e186a",
      "files": [
        {
          "file_name": "opencga-storage/opencga-storage-core/src/test/java/org/opencb/opencga/storage/core/variant/adaptors/VariantDBAdaptorTest.java",
          "patch": "@@ -844,13 +844,20 @@ public void testGetAllVariants_conservationScore() {\n \n         long phastCons \u003d countConservationScore(\"phastCons\", allVariants, s -\u003e s \u003e 0.5);\n         assertTrue(phastCons \u003e 0);\n-        System.out.println(\"countFunctionalScore(\\\"phastCons\\\", allVariants, s -\u003e s \u003e 0.5) \u003d \" + phastCons);\n \n         checkConservationScore(new Query(ANNOT_CONSERVATION.key(), \"phylop\u003e0.5\"), s -\u003e s \u003e 0.5, \"phylop\");\n \n         checkConservationScore(new Query(ANNOT_CONSERVATION.key(), \"phastCons\u003c0.5\"), s1 -\u003e s1 \u003c 0.5, \"phastCons\");\n \n         checkConservationScore(new Query(ANNOT_CONSERVATION.key(), \"gerp\u003c\u003d0.5\"), s -\u003e s \u003c\u003d 0.5, \"gerp\");\n+        checkScore(new Query(ANNOT_CONSERVATION.key(), \"gerp\u003c\u003d0.5,phastCons\u003c0.5\"),\n+                ((Predicate\u003cList\u003cScore\u003e\u003e) scores -\u003e scores.stream().anyMatch(s -\u003e s.getSource().equalsIgnoreCase(\"gerp\") \u0026\u0026 s.getScore() \u003c\u003d 0.5))\n+                        .or(scores -\u003e scores.stream().anyMatch(s -\u003e s.getSource().equalsIgnoreCase(\"phastCons\") \u0026\u0026 s.getScore() \u003c 0.5)), VariantAnnotation::getConservation);\n+\n+        checkScore(new Query(ANNOT_CONSERVATION.key(), \"gerp\u003c\u003d0.5;phastCons\u003c0.5\"),\n+                ((Predicate\u003cList\u003cScore\u003e\u003e) scores -\u003e scores.stream().anyMatch(s -\u003e s.getSource().equalsIgnoreCase(\"gerp\") \u0026\u0026 s.getScore() \u003c\u003d 0.5))\n+                        .and(scores -\u003e scores.stream().anyMatch(s -\u003e s.getSource().equalsIgnoreCase(\"phastCons\") \u0026\u0026 s.getScore() \u003c 0.5)),\n+                VariantAnnotation::getConservation);\n     }\n \n     public void checkConservationScore(Query query, Predicate\u003cDouble\u003e doublePredicate, String source) {\n@@ -862,10 +869,14 @@ public void checkFunctionalScore(Query query, Predicate\u003cDouble\u003e doublePredicate,\n     }\n \n     public void checkScore(Query query, Predicate\u003cDouble\u003e doublePredicate, String source, Function\u003cVariantAnnotation, List\u003cScore\u003e\u003e mapper) {\n+        checkScore(query, scores -\u003e scores.stream().anyMatch(score -\u003e score.getSource().equalsIgnoreCase(source) \u0026\u0026 doublePredicate.test(score.getScore())), mapper);\n+    }\n+\n+    public void checkScore(Query query, Predicate\u003cList\u003cScore\u003e\u003e scorePredicate, Function\u003cVariantAnnotation, List\u003cScore\u003e\u003e mapper) {\n         QueryResult\u003cVariant\u003e result \u003d dbAdaptor.get(query, null);\n-        long expected \u003d countScore(source, allVariants, doublePredicate, mapper);\n-        long actual \u003d countScore(source, result, doublePredicate, mapper);\n-        assertTrue(expected \u003e 0);\n+        long expected \u003d countScore(allVariants, scorePredicate, mapper);\n+        long actual \u003d countScore(result, scorePredicate, mapper);\n+        assertTrue(\"Expecting a query returning some value.\", expected \u003e 0);\n         assertEquals(expected, result.getNumResults());\n         assertEquals(expected, actual);\n     }\n@@ -879,16 +890,16 @@ private long countFunctionalScore(String source, QueryResult\u003cVariant\u003e variantQue\n     }\n \n     private long countScore(String source, QueryResult\u003cVariant\u003e variantQueryResult, Predicate\u003cDouble\u003e doublePredicate, Function\u003cVariantAnnotation, List\u003cScore\u003e\u003e mapper) {\n+        return countScore(variantQueryResult, scores -\u003e scores.stream().anyMatch(score -\u003e score.getSource().equalsIgnoreCase(source) \u0026\u0026 doublePredicate.test(score.getScore())), mapper);\n+    }\n+\n+    private long countScore(QueryResult\u003cVariant\u003e variantQueryResult, Predicate\u003cList\u003cScore\u003e\u003e predicate, Function\u003cVariantAnnotation, List\u003cScore\u003e\u003e mapper) {\n         long c \u003d 0;\n         for (Variant variant : variantQueryResult.getResult()) {\n             List\u003cScore\u003e list \u003d mapper.apply(variant.getAnnotation());\n             if (list !\u003d null) {\n-                for (Score score : list) {\n-                    if (score.getSource().equalsIgnoreCase(source)) {\n-                        if (doublePredicate.test(score.getScore())) {\n-                            c++;\n-                        }\n-                    }\n+                if (predicate.test(list)) {\n+                    c++;\n                 }\n             }\n         }"
        },
        {
          "file_name": "opencga-storage/opencga-storage-mongodb/src/main/java/org/opencb/opencga/storage/mongodb/variant/adaptors/VariantMongoDBAdaptor.java",
          "patch": "@@ -2061,36 +2061,38 @@ private QueryBuilder addScoreFilter(String value, QueryBuilder builder, VariantQ\n     }\n \n     /**\n-     * Accepts a list of filters separated with \",\" or \";\" with the expression: {SCORE}{OPERATION}{VALUE}.\n+     * Accepts a list of filters separated with \",\" or \";\" with the expression: {SOURCE}{OPERATION}{VALUE}.\n      *\n-     * @param value        Value to parse\n-     * @param builder      QueryBuilder\n-     * @param conservation\n-     * @param source\n+     * @param value         Value to parse\n+     * @param builder       QueryBuilder\n+     * @param scoreParam    Score VariantQueryParam\n+     * @param defaultSource Default source value. If null, must be present in the filter. If not, must not be present.\n      * @return QueryBuilder\n      */\n-    private QueryBuilder addScoreFilter(String value, QueryBuilder builder, VariantQueryParams conservation, String source) {\n+    private QueryBuilder addScoreFilter(String value, QueryBuilder builder, VariantQueryParams scoreParam, final String defaultSource) {\n         final List\u003cString\u003e list;\n         QueryOperation operation \u003d checkOperator(value);\n         list \u003d splitValue(value, operation);\n \n         List\u003cDBObject\u003e dbObjects \u003d new ArrayList\u003c\u003e();\n         for (String elem : list) {\n             String[] score \u003d VariantDBAdaptorUtils.splitOperator(elem);\n-            String scoreValue;\n+            String source;\n             String op;\n+            String scoreValue;\n             // No given score\n             if (StringUtils.isEmpty(score[0])) {\n-                if (source \u003d\u003d null) {\n+                if (defaultSource \u003d\u003d null) {\n                     logger.error(\"Bad score filter: \" + elem);\n-                    throw VariantQueryException.malformedParam(conservation, value);\n+                    throw VariantQueryException.malformedParam(scoreParam, value);\n                 }\n+                source \u003d defaultSource;\n                 op \u003d score[1];\n                 scoreValue \u003d score[2];\n             } else {\n-                if (source !\u003d null) {\n+                if (defaultSource !\u003d null) {\n                     logger.error(\"Bad score filter: \" + elem);\n-                    throw VariantQueryException.malformedParam(conservation, value);\n+                    throw VariantQueryException.malformedParam(scoreParam, value);\n                 }\n                 source \u003d score[0];\n                 op \u003d score[1];\n@@ -2100,7 +2102,7 @@ private QueryBuilder addScoreFilter(String value, QueryBuilder builder, VariantQ\n             String key \u003d DocumentToVariantAnnotationConverter.SCORE_FIELD_MAP.get(source);\n             if (key \u003d\u003d null) {\n                 // Unknown score\n-                throw VariantQueryException.malformedParam(conservation, value);\n+                throw VariantQueryException.malformedParam(scoreParam, value);\n             }\n \n             QueryBuilder scoreBuilder \u003d new QueryBuilder();"
        }
      ]
    }
  },
  {
    "name": "Parsing error messages can cause a NPE",
    "url": "https://github.com/elastic/elasticsearch-hadoop/issues/776",
    "description": "Parsing the error messages from ES makes some assumptions that can lead to NPE. \nFor example:\n`if (err \u003d\u003d null)  error \u003d m.get(\"reason\").toString();`\n",
    "keywords": [
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch-hadoop/commit/17c7ac847c9385fa6aeae417f796fcc92681d524",
      "files": [
        {
          "file_name": "mr/src/main/java/org/elasticsearch/hadoop/rest/RestClient.java",
          "patch": "@@ -21,7 +21,15 @@\n import java.io.Closeable;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.BitSet;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n import java.util.Map.Entry;\n \n import org.codehaus.jackson.JsonParser;\n@@ -219,17 +227,22 @@ boolean retryFailedEntries(Response response, TrackingBytesArray data) {\n \n     private String extractError(Map jsonMap) {\n         Object err \u003d jsonMap.get(\"error\");\n-        String error \u003d null;\n+        String error \u003d \"\";\n         if (err !\u003d null) {\n             // part of ES 2.0\n             if (err instanceof Map) {\n                 Map m \u003d ((Map) err);\n                 err \u003d m.get(\"root_cause\");\n                 if (err \u003d\u003d null) {\n-                    error \u003d m.get(\"reason\").toString();\n-                    if (m.containsKey(\"caused_by\")) {\n+                    if (m.containsKey(\"reason\")) {\n+                        error \u003d m.get(\"reason\").toString();\n+                    }\n+                    else if (m.containsKey(\"caused_by\")) {\n                         error +\u003d \";\" + ((Map) m.get(\"caused_by\")).get(\"reason\");\n                     }\n+                    else {\n+                        error \u003d m.toString();\n+                    }\n                 }\n                 else {\n                     if (err instanceof List) {\n@@ -532,7 +545,7 @@ public boolean touch(String indexOrType) {\n     public long count(String indexAndType, ByteSequence query) {\n         return isES50 ? countInES5X(indexAndType, query) : countBeforeES5X(indexAndType, query);\n     }\n-    \n+\n     private long countBeforeES5X(String indexAndType, ByteSequence query) {\n         Response response \u003d execute(GET, indexAndType + \"/_count\", query);\n         Number count \u003d (Number) parseContent(response.body(), \"count\");"
        }
      ]
    }
  },
  {
    "name": "Handle CPIM parse error as security fault",
    "url": "https://github.com/kontalk/androidclient/issues/295",
    "description": "For messages sent from Pidgin (happens once in a while).\n\n```\ndecryption failed\njava.lang.NullPointerException: Attempt to invoke virtual method \u0027int java.lang.String.length()\u0027 on a null object reference\n    at org.jxmpp.util.XmppDateTime.convertXep82TimezoneToRfc822(XmppDateTime.java:229)\n    at org.jxmpp.util.XmppDateTime$DateFormatType.parse(XmppDateTime.java:106)\n    at org.kontalk.util.CPIMMessage.parse(CPIMMessage.java:171)\n    at org.kontalk.crypto.PGPCoder.decryptText(PGPCoder.java:355)\n    at org.kontalk.util.MessageUtils.decryptMessage(MessageUtils.java:577)\n    at org.kontalk.util.MessageUtils.decryptMessage(MessageUtils.java:554)\n```\n",
    "keywords": [
      "kontalk util",
      "xmppdatetime",
      "util",
      "org",
      "messageutils",
      "parse",
      "kontalk"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/kontalk/androidclient/commit/81056c8ab852647a2b709c4622712692d275d170",
      "files": [
        {
          "file_name": "app/src/main/java/org/kontalk/crypto/DecryptException.java",
          "patch": "@@ -39,10 +39,12 @@\n     public static final int DECRYPT_EXCEPTION_INVALID_SENDER \u003d 4;\n     /** Message recipient doesn\u0027t match encryption key. */\n     public static final int DECRYPT_EXCEPTION_INVALID_RECIPIENT \u003d 5;\n+    /** Invalid or unparsable timestamp. */\n+    public static final int DECRYPT_EXCEPTION_INVALID_TIMESTAMP \u003d 6;\n     /** Invalid packet data. */\n-    public static final int DECRYPT_EXCEPTION_INVALID_DATA \u003d 6;\n+    public static final int DECRYPT_EXCEPTION_INVALID_DATA \u003d 7;\n     /** Message integrity check failed. */\n-    public static final int DECRYPT_EXCEPTION_INTEGRITY_CHECK \u003d 7;\n+    public static final int DECRYPT_EXCEPTION_INTEGRITY_CHECK \u003d 8;\n \n     private final int mCode;\n "
        },
        {
          "file_name": "app/src/main/java/org/kontalk/crypto/PGPCoder.java",
          "patch": "@@ -44,7 +44,6 @@\n import org.spongycastle.openpgp.PGPOnePassSignature;\n import org.spongycastle.openpgp.PGPOnePassSignatureList;\n import org.spongycastle.openpgp.PGPPrivateKey;\n-import org.spongycastle.openpgp.PGPPublicKey;\n import org.spongycastle.openpgp.PGPPublicKeyEncryptedData;\n import org.spongycastle.openpgp.PGPPublicKeyRing;\n import org.spongycastle.openpgp.PGPSignature;\n@@ -68,6 +67,7 @@\n import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_INVALID_DATA;\n import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_INVALID_RECIPIENT;\n import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_INVALID_SENDER;\n+import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_INVALID_TIMESTAMP;\n import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_PRIVATE_KEY_NOT_FOUND;\n import static org.kontalk.crypto.DecryptException.DECRYPT_EXCEPTION_VERIFICATION_FAILED;\n \n@@ -383,6 +383,11 @@ public void decryptText(byte[] encrypted, boolean verify,\n                                     DECRYPT_EXCEPTION_INVALID_SENDER,\n                                     \"Sender does not match sender\u0027s key\");\n \n+                            if (msg.getDate() \u003d\u003d null)\n+                                errors.add(new DecryptException(\n+                                    DECRYPT_EXCEPTION_INVALID_TIMESTAMP,\n+                                    \"Invalid timestamp\"));\n+\n                             // TODO check DateTime (possibly compare it with \u003cdelay/\u003e)\n                         }\n "
        },
        {
          "file_name": "app/src/main/java/org/kontalk/util/MessageUtils.java",
          "patch": "@@ -621,6 +621,10 @@ public static void decryptMessage(Context context, EndpointServer server, Compos\n                             securityFlags |\u003d Coder.SECURITY_ERROR_INVALID_RECIPIENT;\n                             break;\n \n+                        case DecryptException.DECRYPT_EXCEPTION_INVALID_TIMESTAMP:\n+                            securityFlags |\u003d Coder.SECURITY_ERROR_INVALID_TIMESTAMP;\n+                            break;\n+\n                     }\n \n                 }"
        },
        {
          "file_name": "client-common-java",
          "patch": "@@ -1 +1 @@\n-Subproject commit 3d714a2fad056be9e14ec8ba4baf0d4a207d2418\n+Subproject commit 2cd757067912f9efde4bdeabf07f94e0425b98d3"
        }
      ]
    }
  },
  {
    "name": "Lexer/Parser errors get filtered out",
    "url": "https://github.com/ceylon/ceylon-js/issues/49",
    "description": "The visitor used by the compiler to check for existing errors in nodes is filtering out the errors by class, this is why lexer/parser errors are never shown.\n",
    "keywords": [
      "errors"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/ceylon/ceylon-js/commit/c411cff50dcc1eb41b5752ac4b7304c71953d5fc",
      "files": [
        {
          "file_name": "src/main/java/com/redhat/ceylon/compiler/js/JsCompiler.java",
          "patch": "@@ -11,6 +11,9 @@\n import com.redhat.ceylon.compiler.typechecker.TypeChecker;\n import com.redhat.ceylon.compiler.typechecker.context.PhasedUnit;\n import com.redhat.ceylon.compiler.typechecker.tree.AnalysisMessage;\n+import com.redhat.ceylon.compiler.typechecker.analyzer.AnalysisWarning;\n+import com.redhat.ceylon.compiler.typechecker.analyzer.AnalysisError;\n+import com.redhat.ceylon.compiler.typechecker.parser.RecognitionError;\n import com.redhat.ceylon.compiler.typechecker.tree.Message;\n import com.redhat.ceylon.compiler.typechecker.tree.Node;\n import com.redhat.ceylon.compiler.typechecker.tree.Visitor;\n@@ -21,18 +24,19 @@\n     \n     private boolean optimize \u003d false;\n     private boolean stopOnErrors \u003d true;\n+    private boolean indent \u003d true;\n+    private boolean comment \u003d true;\n+    private boolean modulify \u003d false;\n     private Writer systemOut \u003d new OutputStreamWriter(System.out);\n \n-    protected List\u003cAnalysisMessage\u003e errors \u003d new ArrayList\u003cAnalysisMessage\u003e();\n-    protected List\u003cAnalysisMessage\u003e unitErrors \u003d new ArrayList\u003cAnalysisMessage\u003e();\n+    protected List\u003cMessage\u003e errors \u003d new ArrayList\u003cMessage\u003e();\n+    protected List\u003cMessage\u003e unitErrors \u003d new ArrayList\u003cMessage\u003e();\n     \n     private final Visitor unitVisitor \u003d new Visitor() {\n         @Override\n         public void visitAny(Node that) {\n             for (Message err: that.getErrors()) {\n-                if (err instanceof AnalysisMessage) {\n-                    unitErrors.add((AnalysisMessage)err);\n-                }\n+                unitErrors.add(err);\n             }\n             super.visitAny(that);\n         }\n@@ -52,18 +56,32 @@ public JsCompiler optimize(boolean optimize) {\n         this.optimize \u003d optimize;\n         return this;\n     }\n+    public JsCompiler indent(boolean flag) {\n+        indent\u003dflag;\n+        return this;\n+    }\n+    public JsCompiler comment(boolean flag) {\n+        comment\u003dflag;\n+        return this;\n+    }\n+    public JsCompiler modulify(boolean flag) {\n+        modulify\u003dflag;\n+        return this;\n+    }\n     \n-    public List\u003cAnalysisMessage\u003e listErrors() {\n+    public List\u003cMessage\u003e listErrors() {\n         return Collections.unmodifiableList(errors);\n     }\n \n     /** Compile one phased unit.\n      * @return The errors found for the unit. */\n-    public List\u003cAnalysisMessage\u003e compileUnit(PhasedUnit pu) throws IOException {\n+    public List\u003cMessage\u003e compileUnit(PhasedUnit pu) throws IOException {\n         unitErrors.clear();\n         pu.getCompilationUnit().visit(unitVisitor);\n         if (unitErrors.isEmpty() || !stopOnErrors) {\n             GenerateJsVisitor jsv \u003d new GenerateJsVisitor(getWriter(pu),optimize);\n+            jsv.setAddComments(comment);\n+            jsv.setIndent(indent);\n             pu.getCompilationUnit().visit(jsv);\n         }\n         return unitErrors;\n@@ -82,15 +100,23 @@ protected boolean stopOnError() {\n     /** Compile all the phased units in the typechecker.\n      * @return true is compilation was successful (0 errors/warnings), false otherwise. */\n     public boolean generate() throws IOException {\n+        boolean modDone \u003d false;\n         errors.clear();\n         try {\n             for (PhasedUnit pu: tc.getPhasedUnits().getPhasedUnits()) {\n+                if (modulify \u0026\u0026 !modDone) {\n+                    beginWrapper(getWriter(pu));\n+                    modDone \u003d true;\n+                }\n                 compileUnit(pu);\n                 if (stopOnError()) {\n                     System.err.println(\"Errors found. Compilation stopped.\");\n                     break;\n                 }\n             }\n+            if (modulify) {\n+                endWrapper(getWriter(tc.getPhasedUnits().getPhasedUnits().get(tc.getPhasedUnits().getPhasedUnits().size()-1)));\n+            }\n         } finally {\n             finish();\n         }\n@@ -108,10 +134,21 @@ protected void finish() throws IOException {\n     /** Print all the errors found during compilation to the specified stream. */\n     public void printErrors(PrintStream out) {\n         int count \u003d 0;\n-        for (AnalysisMessage err: errors) {\n-            Node n \u003d err.getTreeNode();\n-            out.printf(\"error encountered [%s] at %s of %s%n\",\n-                err.getMessage(), n.getLocation(), n.getUnit().getFilename());\n+        for (Message err: errors) {\n+            if (err instanceof AnalysisWarning \u0026\u0026 !(err instanceof AnalysisError)) {\n+                out.print(\"warning\");\n+            } else {\n+                out.print(\"error\");\n+            }\n+            out.printf(\" encountered [%s]\", err.getMessage());\n+            if (err instanceof AnalysisMessage) {\n+                Node n \u003d ((AnalysisMessage)err).getTreeNode();\n+                out.printf(\" at %s of %s\", n.getLocation(), n.getUnit().getFilename());\n+            } else if (err instanceof RecognitionError) {\n+                RecognitionError rer \u003d (RecognitionError)err;\n+                out.printf(\" at %d:%d\", rer.getLine(), rer.getCharacterInLine());\n+            }\n+            out.println();\n             count++;\n         }\n         out.printf(\"%d errors.%n\", count);"
        }
      ]
    }
  },
  {
    "name": "Opening downloaded APK from snackbar shows error: \"There was a problem parsing the package.\"",
    "url": "https://github.com/mozilla-mobile/focus-android/issues/1011",
    "description": "When downloading an APK (usually an update I get from buddybuild) and trying to install the APK from the Snackbar (\"open\" action) an error dialog pops up saying: \"There was a problem parsing the package.\". When opening the APK from the download manager notification everything is fine though.",
    "keywords": [
      "apk"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/mozilla-mobile/focus-android/commit/54c53be24934698217cff413a0d14725538d1991",
      "files": [
        {
          "file_name": "app/src/main/java/org/mozilla/focus/broadcastreceiver/DownloadBroadcastReceiver.java",
          "patch": "@@ -63,11 +63,10 @@ private void displaySnackbar(final Context context, long completedDownloadRefere\n                     final String localUri \u003d uriString.startsWith(FILE_SCHEME) ? uriString.substring(FILE_SCHEME.length()) : uriString;\n                     final String fileExtension \u003d MimeTypeMap.getFileExtensionFromUrl(localUri);\n                     final String mimeType \u003d MimeTypeMap.getSingleton().getMimeTypeFromExtension(fileExtension);\n-                    final String fileName \u003d URLUtil.guessFileName(localUri, null, mimeType);\n+                    final String fileName \u003d URLUtil.guessFileName(Uri.decode(localUri), null, mimeType);\n \n-                    final File file \u003d new File(localUri);\n+                    final File file \u003d new File(Uri.decode(localUri));\n                     final Uri uriForFile \u003d FileProvider.getUriForFile(context, BuildConfig.APPLICATION_ID + FILE_PROVIDER_EXTENSION, file);\n-\n                     final Intent openFileIntent \u003d IntentUtils.createOpenFileIntent(uriForFile, mimeType);\n                     showSnackbarForFilename(openFileIntent, context, fileName);\n                 }"
        }
      ]
    }
  },
  {
    "name": "Declaring  HASH, Parse Error in TT",
    "url": "https://github.com/Camelcade/Perl5-IDEA/issues/1267",
    "description": "[%\n   #Example declaring hash\n    hash \u003d {\n        \u0027A\u0027  \u003d\u003e 1,\n        \u0027B\u0027  \u003d\u003e 2,\n        \u0027C\u0027  \u003d\u003e 3\n    };\n%]\n\nThe TT documentation is not clear about this kind of declaration, but indeed this is working in my code.\n",
    "keywords": [
      "\u003d\u003e",
      "hash"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Camelcade/Perl5-IDEA/commit/e2e64031360b9c19df964a04a10c9fd54fe9aa14",
      "files": [
        {
          "file_name": "gradle.properties",
          "patch": "@@ -4,7 +4,7 @@\n \n name\u003d\"Perl5 Support (Camelcade)\"\n version\u003d2.1\n-buildNumber\u003d03\n+buildNumber\u003d05\n ideaVersion \u003d 141-EAP-SNAPSHOT\n #ideaVersion \u003d 142-EAP-SNAPSHOT\n #ideaVersion \u003d 143-EAP-SNAPSHOT"
        },
        {
          "file_name": "grammar/TemplateToolkit.bnf",
          "patch": "@@ -324,8 +324,8 @@ anon_block_directive ::\u003d identifier_expr TT2_ASSIGN !TT2_CLOSE_TAG TT2_BLOCK {pi\n hash_expr ::\u003d TT2_LEFT_BRACE hash_expr_content TT2_RIGHT_BRACE {pin\u003d1}\n private hash_expr_content ::\u003d {hash_expr_item [TT2_COMMA]} *\n private hash_expr_item ::\u003d pair_expr {pin\u003d2 recoverWhile\u003drecover_hash_expr_item}\n-pair_expr ::\u003d \u003c\u003cparseHashKey\u003e\u003e TT2_ASSIGN !TT2_CLOSE_TAG expr\n-private recover_hash_expr_item ::\u003d !(TT2_IDENTIFIER|TT2_FORMAT|TT2_ON|TT2|OFF|TT2_RIGHT_BRACE|TT2_COMMA|TT2_HARD_NEWLINE|[TT2_MINUS]TT2_CLOSE_TAG|TT2_SEMI)\n+pair_expr ::\u003d {string_argument | \u003c\u003cparseHashKey\u003e\u003e} TT2_ASSIGN !TT2_CLOSE_TAG expr\n+private recover_hash_expr_item ::\u003d !(TT2_DQ_OPEN|TT2_SQ_OPEN|TT2_IDENTIFIER|TT2_FORMAT|TT2_ON|TT2|OFF|TT2_RIGHT_BRACE|TT2_COMMA|TT2_HARD_NEWLINE|[TT2_MINUS]TT2_CLOSE_TAG|TT2_SEMI)\n \n array_expr ::\u003d TT2_LEFT_BRACKET array_expr_content TT2_RIGHT_BRACKET {pin\u003d1}\n private array_expr_content ::\u003d (expr [TT2_COMMA]) * {recoverWhile\u003drecover_array_content}"
        },
        {
          "file_name": "resources/META-INF/plugin.xml",
          "patch": "@@ -50,6 +50,7 @@\n       \u003cul\u003e\n       \u003cli\u003eJS line comment bug in Template Toolkit templates\u003c/li\u003e\n       \u003cli\u003eBug with PROCESS directive capturing parsing\u003c/li\u003e\n+      \u003cli\u003eBug with hash elements when keys are quoted\u003c/li\u003e\n       \u003c/ul\u003e\n      \u003c/p\u003e\n     ]]\u003e"
        },
        {
          "file_name": "testData/parser/tt2/hash.code",
          "patch": "@@ -3,17 +3,17 @@\n \u003cbody\u003e\n # minimal TT style\n [% product \u003d {\n-     id    \u003d \u0027XYZ-2000\u0027\n-     desc  \u003d \u0027Bogon Generator\u0027\n+     \u0027id\u0027    \u003d \u0027XYZ-2000\u0027\n+     \"desc\"  \u003d \u0027Bogon Generator\u0027\n      price \u003d 666\n    }\n %]\n \n # perl style\n [% product \u003d {\n      id    \u003d\u003e \u0027XYZ-2000\u0027,\n-     desc  \u003d\u003e \u0027Bogon Generator\u0027,\n-     price \u003d\u003e 666,\n+     \"desc\"  \u003d\u003e \u0027Bogon Generator\u0027,\n+     \u0027price\u0027 \u003d\u003e 666,\n    }\n %]\n "
        },
        {
          "file_name": "testData/parser/tt2/hash.txt",
          "patch": "@@ -10,7 +10,9 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.{)(\u0027{\u0027)\n         PsiPairExprImpl(TemplateToolkit2Element.PAIR_EXPR)\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+            PsiElement(TemplateToolkit2Token.SQ_OPEN)(\u0027\u0027\u0027)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027id\u0027)\n+            PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.SQ_OPEN)(\u0027\u0027\u0027)\n@@ -19,8 +21,10 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u00272000\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiPairExprImpl(TemplateToolkit2Element.PAIR_EXPR)\n-          PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+          PsiDqStringExprImpl(TemplateToolkit2Element.DQ_STRING_EXPR)\n+            PsiElement(TemplateToolkit2Token.DQ_OPEN)(\u0027\"\u0027)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027desc\u0027)\n+            PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n           PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.SQ_OPEN)(\u0027\u0027\u0027)\n@@ -57,8 +61,10 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiPairExprImpl(TemplateToolkit2Element.PAIR_EXPR)\n-          PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+          PsiDqStringExprImpl(TemplateToolkit2Element.DQ_STRING_EXPR)\n+            PsiElement(TemplateToolkit2Token.DQ_OPEN)(\u0027\"\u0027)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027desc\u0027)\n+            PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n           PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u003e\u0027)\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.SQ_OPEN)(\u0027\u0027\u0027)\n@@ -69,7 +75,9 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiPairExprImpl(TemplateToolkit2Element.PAIR_EXPR)\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+            PsiElement(TemplateToolkit2Token.SQ_OPEN)(\u0027\u0027\u0027)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027price\u0027)\n+            PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u003e\u0027)\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027666\u0027)"
        }
      ]
    }
  },
  {
    "name": "[E_PARSE] Syntax error, unexpected end of string",
    "url": "https://github.com/jphp-compiler/jphp/issues/152",
    "description": "Code:\n\n``` php\n\u003c?php\n\n$a \u003d [\"b\" \u003d\u003e \"c\"];\n$b \u003d \"b\";\necho \"$a[$b]\";\n```\n\nExpected output:\n\n```\nc\n```\n\nActual:\n\n```\n[E_PARSE] Syntax error, unexpected end of string\n    at line 5, position 9\n\n    in \u0027/var/www/jphp2.php\u0027\n    at org.develnext.jphp.core.tokenizer.Tokenizer.readString(Tokenizer.java:455)\n    at org.develnext.jphp.core.tokenizer.Tokenizer.nextToken(Tokenizer.java:677)\n    at org.develnext.jphp.core.syntax.SyntaxAnalyzer.process(SyntaxAnalyzer.java:176)\n    at org.develnext.jphp.core.syntax.SyntaxAnalyzer.\u003cinit\u003e(SyntaxAnalyzer.java:124)\n    at org.develnext.jphp.core.syntax.SyntaxAnalyzer.\u003cinit\u003e(SyntaxAnalyzer.java:51)\n    at org.develnext.jphp.cli.CLI.checkSyntax(CLI.java:55)\n    at org.develnext.jphp.cli.CLI.process(CLI.java:102)\n    at org.develnext.jphp.cli.CLI.main(CLI.java:114)\n```\n",
    "keywords": [
      "cli",
      "core",
      "develnext jphp",
      "syntaxanalyzer",
      "org",
      "syntax",
      "core syntax",
      "develnext",
      "jphp",
      "tokenizer"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/jphp-compiler/jphp/commit/0698d11de9189d9d6a36b3ffaaf117cdf8ad6574",
      "files": [
        {
          "file_name": "jphp-core/src/org/develnext/jphp/core/tokenizer/Tokenizer.java",
          "patch": "@@ -425,7 +425,9 @@ protected ValueExprToken readString(StringExprToken.Quote quote, int startPositi\n                                     for(; i \u003c codeLength; k++){\n                                         if (k \u003c codeLength){\n                                             first \u003d code.charAt(k);\n-                                            if (Character.isDigit(first) || GrammarUtils.isEngLetter(first) || first \u003d\u003d \u0027_\u0027){\n+                                            if (Character.isDigit(first) || GrammarUtils.isEngLetter(first) || first \u003d\u003d \u0027_\u0027) {\n+                                                // nop\n+                                            } else if (complex \u003d\u003d 1 \u0026\u0026 GrammarUtils.isVariableChar(first) \u0026\u0026 code.charAt(k - 1) \u003d\u003d \u0027[\u0027) {\n                                                 // nop\n                                             } else if (complex \u003d\u003d 0 \u0026\u0026 first \u003d\u003d \u0027[\u0027) {\n                                                 opened++;"
        },
        {
          "file_name": "jphp-core/tests/org/develnext/jphp/core/compiler/jvm/VariablesTest.java",
          "patch": "@@ -53,4 +53,9 @@ public void testList(){\n         Memory memory \u003d includeResource(\"variables/list.php\");\n         Assert.assertEquals(\"success\", memory.toString());\n     }\n+\n+    @Test\n+    public void testBug152(){\n+        check(\"variables/bug152.php\");\n+    }\n }"
        },
        {
          "file_name": "jphp-core/tests/resources/variables/bug152.php",
          "patch": "@@ -0,0 +1,10 @@\n+--TEST--\n+Bug #152: array[var] in magic string\n+--FILE--\n+\u003c?php\n+$a \u003d [\"b\" \u003d\u003e \"foobar\"];\n+$b \u003d \"b\";\n+echo \"$a[$b]\";\n+?\u003e\n+--EXPECT--\n+foobar\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "UpdatedAt date parsing error on the last item in Android",
    "url": "https://github.com/Azure/azure-mobile-apps-android-client/issues/54",
    "description": "Moved from Azure mobile services: [https://github.com/Azure/azure-mobile-services/issues/884](https://github.com/Azure/azure-mobile-services/issues/884)\n\nI encoutered a problem while syncing tables. When the updatedAt field in the last item in the json does not have milliseconds, it is not parse properly and the SDK keep asking the server for new items without the new DateTimeOffset.\n\nThere\u0027s the problem in IncrementalPullStrategy.java\n\n``` java\nSimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\u0027Z\u0027\");\nsdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\ntry {\n    return new DateTimeOffset(sdf.parse(stringValue));\n} catch (ParseException e) {\n    return null;\n}\n```\n\nThis code can\u0027t parse date formatted with `yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027` which is a valid ISO 8601 format.\n\nThis would be a good solution\n\n``` java\nSimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\u0027Z\u0027\");\nsdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\ntry {\n    return new DateTimeOffset(sdf.parse(stringValue));\n} catch (ParseException e) {\n    try {\n        // Didn\u0027t work, trying without ms\n        sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027\");\n        sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n        return new DateTimeOffset(sdf.parse(stringValue));\n    } catch (ParseException e) {\n        return null;\n    }\n}\n```\n",
    "keywords": [
      "new",
      "utc",
      "e",
      "timezone",
      "datetimeoffset",
      "parse",
      "settimezone",
      "gettimezone",
      "parseexception",
      "java",
      "sdf",
      "stringvalue",
      "new datetimeoffset",
      "simpledateformat",
      "try",
      ";",
      "catch",
      "return"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Azure/azure-mobile-apps-android-client/commit/e31f10891f919f93db7fd32f52d6081c8dfe48f0",
      "files": [
        {
          "file_name": "sdk/src/sdk/src/main/java/com/microsoft/windowsazure/mobileservices/table/sync/pull/IncrementalPullStrategy.java",
          "patch": "@@ -182,7 +182,15 @@ private DateTimeOffset getDateFromString(String stringValue) {\n         try {\n             return new DateTimeOffset(sdf.parse(stringValue));\n         } catch (ParseException e) {\n-            return null;\n+            try {\n+                // Didn\u0027t work, trying without ms\n+                sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027\");\n+                sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+\n+                return new DateTimeOffset(sdf.parse(stringValue));\n+            } catch (ParseException ex) {\n+                return null;\n+            }\n         }\n     }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "sdk/test/sdk.testapp/src/main/java/com/microsoft/windowsazure/mobileservices/sdk/testapp/test/MobileServiceSyncTableTests.java",
          "patch": "@@ -358,7 +358,7 @@ public void testPullTriggersPushWhenThereIsOperationInTable() throws Interrupted\n     // // Assert.AreEqual(hijack.Requests.Count, 1); // 1 for push\n     // }\n \n-    public void testPullSucceds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n+    public void testPullSucceeds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n \n         MobileServiceLocalStoreMock store \u003d new MobileServiceLocalStoreMock();\n         ServiceFilterContainer serviceFilterContainer \u003d new ServiceFilterContainer();\n@@ -391,7 +391,40 @@ public void testPullSucceds() throws MalformedURLException, InterruptedException\n                                 \"http://myapp.com/tables/stringidtype?$filter\u003dString%20eq%20(%27world%27)\u0026$top\u003d3\u0026$skip\u003d5\u0026$orderby\u003dId%20desc\u0026__includeDeleted\u003dtrue\"));\n     }\n \n-    public void testPullNoSkipSucceds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n+    public void testPullDateFormatWithoutMillisecondSucceeds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n+\n+        MobileServiceLocalStoreMock store \u003d new MobileServiceLocalStoreMock();\n+        ServiceFilterContainer serviceFilterContainer \u003d new ServiceFilterContainer();\n+\n+        MobileServiceClient client \u003d new MobileServiceClient(appUrl, getInstrumentation().getTargetContext());\n+\n+        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027\");\n+        sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+\n+        String updatedAt \u003d sdf.format(new Date());\n+\n+        client \u003d client.withFilter(getTestFilter(serviceFilterContainer, false,\n+                \"{\\\"count\\\":\\\"2\\\",\\\"results\\\":[{\\\"id\\\":\\\"abc\\\",\\\"String\\\":\\\"Hey\\\",\\\"updatedAt\\\":\\\"\" + updatedAt + \"\\\"},{\\\"id\\\":\\\"def\\\",\\\"String\\\":\\\"World\\\",\\\"updatedAt\\\":\\\"\" + updatedAt + \"\\\"}]}\"// remote\n+                // item\n+        ));\n+\n+        client.getSyncContext().initialize(store, new SimpleSyncHandler()).get();\n+\n+        MobileServiceSyncTable\u003cStringIdType\u003e table \u003d client.getSyncTable(StringIdType.class);\n+\n+        Query query \u003d QueryOperations.tableName(table.getName()).skip(5).top(3).field(\"String\").eq(\"world\").orderBy(\"Id\", QueryOrder.Descending)\n+                .includeInlineCount().select(\"String\");\n+\n+        table.pull(query).get();\n+\n+        assertEquals(\n+                serviceFilterContainer.Requests.get(0).Url,\n+                EncodingUtilities\n+                        .percentEncodeSpaces(\n+                                \"http://myapp.com/tables/stringidtype?$filter\u003dString%20eq%20(%27world%27)\u0026$top\u003d3\u0026$skip\u003d5\u0026$orderby\u003dId%20desc\u0026__includeDeleted\u003dtrue\"));\n+    }\n+\n+    public void testPullNoSkipSucceeds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n \n         MobileServiceLocalStoreMock store \u003d new MobileServiceLocalStoreMock();\n         ServiceFilterContainer serviceFilterContainer \u003d new ServiceFilterContainer();\n@@ -424,7 +457,7 @@ public void testPullNoSkipSucceds() throws MalformedURLException, InterruptedExc\n                                 \"http://myapp.com/tables/stringidtype?$filter\u003dString%20eq%20(%27world%27)\u0026$top\u003d3\u0026$skip\u003d0\u0026$orderby\u003dId%20desc\u0026__includeDeleted\u003dtrue\"));\n     }\n \n-    public void testPullSuccedsNoTopNoOrderBy() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n+    public void testPullSucceedsNoTopNoOrderBy() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n \n         MobileServiceLocalStoreMock store \u003d new MobileServiceLocalStoreMock();\n         ServiceFilterContainer serviceFilterContainer \u003d new ServiceFilterContainer();\n@@ -457,7 +490,7 @@ public void testPullSuccedsNoTopNoOrderBy() throws MalformedURLException, Interr\n                                 \"http://myapp.com/tables/stringidtype?$filter\u003dString%20eq%20(%27world%27)\u0026$top\u003d50\u0026$skip\u003d0\u0026$orderby\u003dId%20desc\u0026__includeDeleted\u003dtrue\"));\n     }\n \n-    public void testIncrementalPullSucceds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n+    public void testIncrementalPullSucceeds() throws MalformedURLException, InterruptedException, ExecutionException, MobileServiceException {\n \n         MobileServiceLocalStoreMock store \u003d new MobileServiceLocalStoreMock();\n         ServiceFilterContainer serviceFilterContainer \u003d new ServiceFilterContainer();"
        }
      ]
    }
  },
  {
    "name": "Handle regex parsing errors in Gsub and Grok Processors",
    "url": "https://github.com/elastic/elasticsearch/pull/17260",
    "description": "Currently, both Gsub and Grok parse regex strings during\nPipeline creation. Thrown parsing exceptions were leaking out, this\ncommit wraps those exceptions in ElasticsearchParseExceptions.\n## Gsub Example\n\n```\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"gsub\": {\n          \"tag\": \"processor_1\",\n          \"field\": \"message\",\n          \"pattern\": \"[\",\n          \"replacement\": \"\"\n        }\n      }\n    ]\n  }\n}\n```\n\nexpected error:\n\n```\n{\n   \"error\": {\n      \"root_cause\": [\n         {\n            \"type\": \"parse_exception\",\n            \"reason\": \"[pattern] Invalid regex pattern. Unclosed character class near index 0\\n[\\n^\",\n            \"header\": {\n               \"processor_type\": \"gsub\",\n               \"processor_tag\": \"processor_1\",\n               \"property_name\": \"pattern\"\n            }\n         }\n      ],\n      \"type\": \"parse_exception\",\n      \"reason\": \"[pattern] Invalid regex pattern. Unclosed character class near index 0\\n[\\n^\",\n      \"header\": {\n         \"processor_type\": \"gsub\",\n         \"processor_tag\": \"processor_1\",\n         \"property_name\": \"pattern\"\n      }\n   },\n   \"status\": 400\n}\n```\n## Grok Example\n\n```\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"tag\": \"processor_1\",\n          \"field\": \"message\",\n          \"pattern\": \"[\"\n        }\n      }\n    ]\n  }\n}\n```\n\nand expected error:\n\n```\n{\n   \"error\": {\n      \"root_cause\": [\n         {\n            \"type\": \"parse_exception\",\n            \"reason\": \"[pattern] Invalid regex pattern. premature end of char-class\",\n            \"header\": {\n               \"processor_type\": \"grok\",\n               \"processor_tag\": \"processor_1\",\n               \"property_name\": \"pattern\"\n            }\n         }\n      ],\n      \"type\": \"parse_exception\",\n      \"reason\": \"[pattern] Invalid regex pattern. premature end of char-class\",\n      \"header\": {\n         \"processor_type\": \"grok\",\n         \"processor_tag\": \"processor_1\",\n         \"property_name\": \"pattern\"\n      }\n   },\n   \"status\": 400\n}\n```\n",
    "keywords": [
      "reason",
      "processor_type",
      "processor_tag",
      "processor_1 property_name",
      "regex pattern",
      "pattern",
      "gsub",
      "processors",
      "error",
      "type",
      "property_name",
      "pipeline",
      "reason ",
      "regex",
      "header ",
      "processor_tag ",
      "grok",
      "invalid",
      "header",
      "processor_1",
      "parse_exception",
      "[",
      "]",
      "[pattern] invalid",
      "[pattern]"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/16e888fac36d41c1e0727cf3281c58c2d4365360",
      "files": [
        {
          "file_name": "core/src/main/java/org/elasticsearch/ingest/processor/GsubProcessor.java",
          "patch": "@@ -19,6 +19,7 @@\n \n package org.elasticsearch.ingest.processor;\n \n+import org.elasticsearch.ElasticsearchParseException;\n import org.elasticsearch.ingest.core.AbstractProcessor;\n import org.elasticsearch.ingest.core.AbstractProcessorFactory;\n import org.elasticsearch.ingest.core.IngestDocument;\n@@ -28,6 +29,9 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import static org.elasticsearch.ingest.core.ConfigurationUtils.newConfigurationException;\n+import static org.elasticsearch.ingest.core.ConfigurationUtils.readStringProperty;\n+\n /**\n  * Processor that allows to search for patterns in field content and replace them with corresponding string replacement.\n  * Support fields of string type only, throws exception if a field is of a different type.\n@@ -79,10 +83,15 @@ public String getType() {\n     public static final class Factory extends AbstractProcessorFactory\u003cGsubProcessor\u003e {\n         @Override\n         public GsubProcessor doCreate(String processorTag, Map\u003cString, Object\u003e config) throws Exception {\n-            String field \u003d ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"field\");\n-            String pattern \u003d ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"pattern\");\n-            String replacement \u003d ConfigurationUtils.readStringProperty(TYPE, processorTag, config, \"replacement\");\n-            Pattern searchPattern \u003d Pattern.compile(pattern);\n+            String field \u003d readStringProperty(TYPE, processorTag, config, \"field\");\n+            String pattern \u003d readStringProperty(TYPE, processorTag, config, \"pattern\");\n+            String replacement \u003d readStringProperty(TYPE, processorTag, config, \"replacement\");\n+            Pattern searchPattern;\n+            try {\n+                searchPattern \u003d Pattern.compile(pattern);\n+            } catch (Exception e) {\n+                throw newConfigurationException(TYPE, processorTag, \"pattern\", \"Invalid regex pattern. \" + e.getMessage());\n+            }\n             return new GsubProcessor(processorTag, field, searchPattern, replacement);\n         }\n     }"
        },
        {
          "file_name": "core/src/test/java/org/elasticsearch/ingest/processor/GsubProcessorFactoryTests.java",
          "patch": "@@ -84,4 +84,18 @@ public void testCreateNoReplacementPresent() throws Exception {\n             assertThat(e.getMessage(), equalTo(\"[replacement] required property is missing\"));\n         }\n     }\n+\n+    public void testCreateInvalidPattern() throws Exception {\n+        GsubProcessor.Factory factory \u003d new GsubProcessor.Factory();\n+        Map\u003cString, Object\u003e config \u003d new HashMap\u003c\u003e();\n+        config.put(\"field\", \"field1\");\n+        config.put(\"pattern\", \"[\");\n+        config.put(\"replacement\", \"-\");\n+        try {\n+            factory.create(config);\n+            fail(\"factory create should have failed\");\n+        } catch(ElasticsearchParseException e) {\n+            assertThat(e.getMessage(), equalTo(\"[pattern] Invalid regex pattern. Unclosed character class near index 0\\n[\\n^\"));\n+        }\n+    }\n }"
        },
        {
          "file_name": "modules/ingest-grok/src/main/java/org/elasticsearch/ingest/grok/GrokProcessor.java",
          "patch": "@@ -27,6 +27,8 @@\n import java.util.HashMap;\n import java.util.Map;\n \n+import static org.elasticsearch.ingest.core.ConfigurationUtils.newConfigurationException;\n+\n public final class GrokProcessor extends AbstractProcessor {\n \n     public static final String TYPE \u003d \"grok\";\n@@ -82,7 +84,12 @@ public GrokProcessor doCreate(String processorTag, Map\u003cString, Object\u003e config) t\n                 patternBank.putAll(customPatternBank);\n             }\n \n-            Grok grok \u003d new Grok(patternBank, matchPattern);\n+            Grok grok;\n+            try {\n+                grok \u003d new Grok(patternBank, matchPattern);\n+            } catch (Exception e) {\n+                throw newConfigurationException(TYPE, processorTag, \"pattern\", \"Invalid regex pattern. \" + e.getMessage());\n+            }\n             return new GrokProcessor(processorTag, grok, matchField);\n         }\n "
        },
        {
          "file_name": "modules/ingest-grok/src/test/java/org/elasticsearch/ingest/grok/GrokProcessorFactoryTests.java",
          "patch": "@@ -84,4 +84,33 @@ public void testCreateWithCustomPatterns() throws Exception {\n         assertThat(processor.getGrok(), notNullValue());\n         assertThat(processor.getGrok().match(\"foo!\"), equalTo(true));\n     }\n+\n+    public void testCreateWithInvalidPattern() throws Exception {\n+        GrokProcessor.Factory factory \u003d new GrokProcessor.Factory(Collections.emptyMap());\n+        Map\u003cString, Object\u003e config \u003d new HashMap\u003c\u003e();\n+        config.put(\"field\", \"_field\");\n+        config.put(\"pattern\", \"[\");\n+        try {\n+            factory.create(config);\n+            fail(\"should fail\");\n+        } catch (ElasticsearchParseException e) {\n+            assertThat(e.getMessage(), equalTo(\"[pattern] Invalid regex pattern. premature end of char-class\"));\n+        }\n+\n+    }\n+\n+    public void testCreateWithInvalidPatternDefinition() throws Exception {\n+        GrokProcessor.Factory factory \u003d new GrokProcessor.Factory(Collections.emptyMap());\n+        Map\u003cString, Object\u003e config \u003d new HashMap\u003c\u003e();\n+        config.put(\"field\", \"_field\");\n+        config.put(\"pattern\", \"%{MY_PATTERN:name}!\");\n+        config.put(\"pattern_definitions\", Collections.singletonMap(\"MY_PATTERN\", \"[\"));\n+        try {\n+            factory.create(config);\n+            fail(\"should fail\");\n+        } catch (ElasticsearchParseException e) {\n+            assertThat(e.getMessage(), equalTo(\"[pattern] Invalid regex pattern. premature end of char-class\"));\n+        }\n+\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "FuzzyQueryBuilder should error when parsing array of values",
    "url": "https://github.com/elastic/elasticsearch/pull/23762",
    "description": "An array of values is illegal in the `fuzzy` query and should result in a parsing error.\r\n\r\nCloses #23759\r\n\r\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/fc8cb417e7450ad122882afc5b3aafb24133f855",
      "files": [
        {
          "file_name": "core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java",
          "patch": "@@ -275,7 +275,7 @@ public static FuzzyQueryBuilder fromXContent(QueryParseContext parseContext) thr\n                 while ((token \u003d parser.nextToken()) !\u003d XContentParser.Token.END_OBJECT) {\n                     if (token \u003d\u003d XContentParser.Token.FIELD_NAME) {\n                         currentFieldName \u003d parser.currentName();\n-                    } else {\n+                    } else if (token.isValue()) {\n                         if (TERM_FIELD.match(currentFieldName)) {\n                             value \u003d parser.objectBytes();\n                         } else if (VALUE_FIELD.match(currentFieldName)) {\n@@ -298,6 +298,9 @@ public static FuzzyQueryBuilder fromXContent(QueryParseContext parseContext) thr\n                             throw new ParsingException(parser.getTokenLocation(),\n                                     \"[fuzzy] query does not support [\" + currentFieldName + \"]\");\n                         }\n+                    } else {\n+                        throw new ParsingException(parser.getTokenLocation(),\n+                                \"[\" + NAME + \"] unexpected token [\" + token + \"] after [\" + currentFieldName + \"]\");\n                     }\n                 }\n             } else {"
        },
        {
          "file_name": "core/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java",
          "patch": "@@ -190,4 +190,17 @@ public void testParseFailsWithMultipleFields() throws IOException {\n         e \u003d expectThrows(ParsingException.class, () -\u003e parseQuery(shortJson));\n         assertEquals(\"[fuzzy] query doesn\u0027t support multiple fields, found [message1] and [message2]\", e.getMessage());\n     }\n+\n+    public void testParseFailsWithValueArray() {\n+        String query \u003d \"{\\n\" +\n+                \"  \\\"fuzzy\\\" : {\\n\" +\n+                \"    \\\"message1\\\" : {\\n\" +\n+                \"      \\\"value\\\" : [ \\\"one\\\", \\\"two\\\", \\\"three\\\"]\\n\" +\n+                \"    }\\n\" +\n+                \"  }\\n\" +\n+                \"}\";\n+\n+        ParsingException e \u003d expectThrows(ParsingException.class, () -\u003e parseQuery(query));\n+        assertEquals(\"[fuzzy] unexpected token [START_ARRAY] after [value]\", e.getMessage());\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Error parsing query ?- !;true.",
    "url": "https://github.com/s-webber/projog/issues/83",
    "description": "An error occurs parsing `?- !;true.`.\n\nCurrent (incorrect) behaviour:\n\n```\n?- !;true.\n\nError parsing query:\nExpected . after: !; but got: true\n!;true.\n```\n\nExpected (correct) behaviour:\n\n```\n?- !;true.\n\nyes\n```\n",
    "keywords": [
      ";true",
      "parsing",
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/s-webber/projog/commit/9ef51cc32b291c6978a199be4be2b035419ebd70",
      "files": [
        {
          "file_name": "src/core/org/projog/core/parser/Delimiters.java",
          "patch": "@@ -1,5 +1,7 @@\n package org.projog.core.parser;\n \n+import static org.projog.core.parser.WordType.SYMBOL;\n+\n class Delimiters {\n    private static final char ARGUMENT_SEPARATOR \u003d \u0027,\u0027;\n    private static final char PREDICATE_OPENING_BRACKET \u003d \u0027(\u0027;\n@@ -28,39 +30,39 @@ static boolean isDelimiter(int c) {\n       }\n    }\n \n-   static boolean isPredicateOpenBracket(String value) {\n-      return isMatch(value, PREDICATE_OPENING_BRACKET);\n+   static boolean isListOpenBracket(int c) {\n+      return c \u003d\u003d LIST_OPENING_BRACKET;\n    }\n \n-   static boolean isPredicateCloseBracket(String value) {\n-      return isMatch(value, PREDICATE_CLOSING_BRACKET);\n+   static boolean isPredicateOpenBracket(Word word) {\n+      return isMatch(word, PREDICATE_OPENING_BRACKET);\n    }\n \n-   static boolean isListOpenBracket(String value) {\n-      return isMatch(value, LIST_OPENING_BRACKET);\n+   static boolean isPredicateCloseBracket(Word word) {\n+      return isMatch(word, PREDICATE_CLOSING_BRACKET);\n    }\n \n-   static boolean isListOpenBracket(int c) {\n-      return c \u003d\u003d LIST_OPENING_BRACKET;\n+   static boolean isListOpenBracket(Word word) {\n+      return isMatch(word, LIST_OPENING_BRACKET);\n    }\n \n-   static boolean isListCloseBracket(String value) {\n-      return isMatch(value, LIST_CLOSING_BRACKET);\n+   static boolean isListCloseBracket(Word word) {\n+      return isMatch(word, LIST_CLOSING_BRACKET);\n    }\n \n-   static boolean isListTail(String value) {\n-      return isMatch(value, LIST_TAIL);\n+   static boolean isListTail(Word word) {\n+      return isMatch(word, LIST_TAIL);\n    }\n \n-   static boolean isArgumentSeperator(String value) {\n-      return isMatch(value, ARGUMENT_SEPARATOR);\n+   static boolean isArgumentSeperator(Word word) {\n+      return isMatch(word, ARGUMENT_SEPARATOR);\n    }\n \n-   static boolean isSentenceTerminator(String value) {\n-      return isMatch(value, PERIOD);\n+   static boolean isSentenceTerminator(Word word) {\n+      return isMatch(word, PERIOD);\n    }\n \n-   private static boolean isMatch(String input, char expected) {\n-      return input !\u003d null \u0026\u0026 input.length() \u003d\u003d 1 \u0026\u0026 input.charAt(0) \u003d\u003d expected;\n+   private static boolean isMatch(Word word, char expected) {\n+      return word !\u003d null \u0026\u0026 word.type \u003d\u003d SYMBOL \u0026\u0026 word.value !\u003d null \u0026\u0026 word.value.length() \u003d\u003d 1 \u0026\u0026 word.value.charAt(0) \u003d\u003d expected;\n    }\n }"
        },
        {
          "file_name": "src/core/org/projog/core/parser/SentenceParser.java",
          "patch": "@@ -91,9 +91,9 @@ public Term parseSentence() {\n          return null;\n       }\n \n-      String trailingText \u003d popValue();\n-      if (!isSentenceTerminator(trailingText)) {\n-         throw newParserException(\"Expected . after: \" + t + \" but got: \" + trailingText);\n+      Word trailingWord \u003d popValue();\n+      if (!isSentenceTerminator(trailingWord)) {\n+         throw newParserException(\"Expected . after: \" + t + \" but got: \" + trailingWord);\n       }\n \n       return t;\n@@ -160,24 +160,26 @@ private Term getTerm(int maxLevel) {\n     * @param maxLevel the maximum priority/precedence/level of operands to parse - if an operand represented by the next\n     * term retrieved by this method has a higher priority then it is ignored for now ({@code currentTerm} is returned\n     * \"as-is\"}.\n-    * @param {@code true} if this method is being called by another method, {@code false} if it is being called recursively by itself.\n+    * @param {@code true} if this method is being called by another method, {@code false} if it is being called\n+    * recursively by itself.\n     */\n    private Term getTerm(final Term currentTerm, final int currentLevel, final int maxLevel, final boolean isFirst) {\n-      final String next \u003d popValue();\n+      final Word nextWord \u003d popValue();\n+      final String next \u003d nextWord.value;\n       if (operands.postfix(next) \u0026\u0026 operands.getPostfixPriority(next) \u003c\u003d currentLevel) {\n          Term postfixTerm \u003d addPostfixOperand(next, currentTerm);\n          return getTerm(postfixTerm, currentLevel, maxLevel, false);\n       } else if (!operands.infix(next)) {\n          // could be \u0027.\u0027 if end of sentence \n          // or \u0027,\u0027, \u0027|\u0027, \u0027]\u0027 or \u0027)\u0027 if parsing list or predicate\n          // or could be an error\n-         parser.rewind(next);\n+         parser.rewind(nextWord);\n          return currentTerm;\n       }\n \n       final int level \u003d operands.getInfixPriority(next);\n       if (level \u003e maxLevel) {\n-         parser.rewind(next);\n+         parser.rewind(nextWord);\n          return currentTerm;\n       }\n \n@@ -220,7 +222,8 @@ private Term getTerm(final Term currentTerm, final int currentLevel, final int m\n     * be thrown if does).\n     */\n    private Term getPossiblePrefixArgument(int currentLevel) {\n-      final String value \u003d popValue();\n+      final Word word \u003d popValue();\n+      final String value \u003d word.value;\n       if (operands.prefix(value) \u0026\u0026 parser.isFollowedByTerm()) {\n          if (value.equals(MINUS_SIGN) \u0026\u0026 isFollowedByNumber()) {\n             return getNegativeNumber();\n@@ -242,14 +245,15 @@ private Term getPossiblePrefixArgument(int currentLevel) {\n          Term argument \u003d getTerm(prefixLevel);\n          return createPrefixTerm(value, argument);\n       } else {\n-         parser.rewind(value);\n+         parser.rewind(word);\n          return getDiscreteTerm();\n       }\n    }\n \n    private Term getNegativeNumber() {\n-      final String value \u003d \"-\" + popValue();\n-      if (parser.getType() \u003d\u003d WordType.INTEGER) {\n+      final Word word \u003d popValue();\n+      final String value \u003d \"-\" + word.value;\n+      if (word.type \u003d\u003d WordType.INTEGER) {\n          return toIntegerNumber(value);\n       } else {\n          return toDecimalFraction(value);\n@@ -301,23 +305,23 @@ private Term addPostfixOperand(String postfixOperand, Term original) {\n    }\n \n    private Term getDiscreteTerm() {\n-      final String value \u003d popValue();\n-      if (isListOpenBracket(value)) {\n+      final Word word \u003d popValue();\n+      if (isListOpenBracket(word)) {\n          return parseList();\n-      } else if (isPredicateOpenBracket(value)) {\n+      } else if (isPredicateOpenBracket(word)) {\n          return getTermInBrackets();\n       } else {\n-         switch (parser.getType()) {\n+         switch (word.type) {\n             case ATOM:\n             case QUOTED_ATOM:\n             case SYMBOL:\n-               return getAtomOrStructure(value);\n+               return getAtomOrStructure(word.value);\n             case INTEGER:\n-               return toIntegerNumber(value);\n+               return toIntegerNumber(word.value);\n             case FLOAT:\n-               return toDecimalFraction(value);\n+               return toDecimalFraction(word.value);\n             case VARIABLE:\n-               return getVariable(value);\n+               return getVariable(word.value);\n             case ANONYMOUS_VARIABLE:\n                return AnonymousVariable.ANONYMOUS_VARIABLE;\n             default:\n@@ -341,8 +345,8 @@ private DecimalFraction toDecimalFraction(final String value) {\n     * a newly created {@code Atom} is returned.\n     */\n    private Term getAtomOrStructure(String name) {\n-      String value \u003d parser.isEndOfStream() ? null : peekValue();\n-      if (isPredicateOpenBracket(value)) {\n+      Word word \u003d parser.isEndOfStream() ? null : peekValue();\n+      if (isPredicateOpenBracket(word)) {\n          popValue(); //skip opening bracket\n          if (isPredicateCloseBracket(peekValue())) {\n             throw newParserException(\"No arguments specified for structure: \" + name);\n@@ -354,13 +358,13 @@ private Term getAtomOrStructure(String name) {\n          args.add(t);\n \n          do {\n-            value \u003d popValue();\n-            if (isPredicateCloseBracket(value)) {\n+            word \u003d popValue();\n+            if (isPredicateCloseBracket(word)) {\n                return Structure.createStructure(name, toArray(args));\n-            } else if (isArgumentSeperator(value)) {\n+            } else if (isArgumentSeperator(word)) {\n                args.add(getCommaSeparatedArgument());\n             } else {\n-               throw newParserException(\"While parsing arguments of \" + name + \" expected ) or , but got: \" + value);\n+               throw newParserException(\"While parsing arguments of \" + name + \" expected ) or , but got: \" + word);\n             }\n          } while (true);\n       } else {\n@@ -389,26 +393,26 @@ private Term parseList() {\n       Term tail \u003d EmptyList.EMPTY_LIST;\n \n       while (true) {\n-         String value \u003d popValue();\n-         if (isListCloseBracket(value)) {\n+         Word word \u003d popValue();\n+         if (isListCloseBracket(word)) {\n             break;\n          }\n-         parser.rewind(parser.getValue());\n+         parser.rewind(word);\n          Term arg \u003d getCommaSeparatedArgument();\n          args.add(arg);\n \n-         value \u003d popValue(); // | ] or ,\n-         if (isListCloseBracket(value)) {\n+         word \u003d popValue(); // | ] or ,\n+         if (isListCloseBracket(word)) {\n             break;\n-         } else if (isListTail(value)) {\n+         } else if (isListTail(word)) {\n             tail \u003d getCommaSeparatedArgument();\n-            value \u003d popValue();\n-            if (!isListCloseBracket(value)) {\n-               throw newParserException(\"Expected ] to mark end of list after tail but got: \" + value);\n+            word \u003d popValue();\n+            if (!isListCloseBracket(word)) {\n+               throw newParserException(\"Expected ] to mark end of list after tail but got: \" + word);\n             }\n             break;\n-         } else if (!isArgumentSeperator(value)) {\n-            throw newParserException(\"While parsing list expected ] | or , but got: \" + value);\n+         } else if (!isArgumentSeperator(word)) {\n+            throw newParserException(\"While parsing list expected ] | or , but got: \" + word);\n          }\n       }\n       return ListFactory.createList(toArray(args), tail);\n@@ -439,28 +443,28 @@ private Term getTermInBrackets() {\n       // considering the priority of any surrounding terms outside the brackets)\n       // we call getArgument with the highest possible priority.\n       Term t \u003d getTerm(Integer.MAX_VALUE);\n-      final String next \u003d popValue();\n-      if (!isPredicateCloseBracket(next)) {\n-         throw newParserException(\"Expected ) but got: \" + next);\n+      final Word word \u003d popValue();\n+      if (!isPredicateCloseBracket(word)) {\n+         throw newParserException(\"Expected ) but got: \" + word + \" after \" + t);\n       }\n       return t;\n    }\n \n-   private String popValue() {\n+   private Word popValue() {\n       parser.next();\n-      return parser.getValue();\n+      return parser.getWord();\n    }\n \n-   private String peekValue() {\n-      String value \u003d popValue();\n-      parser.rewind(value);\n-      return value;\n+   private Word peekValue() {\n+      Word word \u003d popValue();\n+      parser.rewind(word);\n+      return word;\n    }\n \n    private boolean isFollowedByNumber() {\n-      String value \u003d popValue();\n-      WordType et \u003d parser.getType();\n-      parser.rewind(value);\n+      Word word \u003d popValue();\n+      WordType et \u003d word.type;\n+      parser.rewind(word);\n       return et \u003d\u003d WordType.INTEGER || et \u003d\u003d WordType.FLOAT;\n    }\n "
        },
        {
          "file_name": "src/core/org/projog/core/parser/Word.java",
          "patch": "@@ -0,0 +1,17 @@\n+package org.projog.core.parser;\n+\n+/** @see WordParser#getWord() */\n+class Word {\n+   final String value;\n+   final WordType type;\n+\n+   Word(String value, WordType type) {\n+      this.value \u003d value;\n+      this.type \u003d type;\n+   }\n+\n+   @Override\n+   public String toString() {\n+      return value;\n+   }\n+}"
        },
        {
          "file_name": "src/core/org/projog/core/parser/WordParser.java",
          "patch": "@@ -20,16 +20,15 @@\n \n import org.projog.core.Operands;\n \n-/** \n+/**\n  * Parses an input stream into discrete \u0027words\u0027 that are used to represent Prolog queries and rules.\n  * \n  * @see SentenceParser\n  */\n class WordParser {\n    private final CharacterParser parser;\n    private final Operands operands;\n-   private String value;\n-   private WordType type;\n+   private Word word;\n    private boolean rewound;\n \n    WordParser(Reader reader, Operands operands) {\n@@ -41,7 +40,8 @@\n    /**\n     * Move the parser forward one word.\n     * \n-    * @throws ParserException if there are no more words to parse (i.e. parser has reached the end of the underlying input stream)\n+    * @throws ParserException if there are no more words to parse (i.e. parser has reached the end of the underlying\n+    * input stream)\n     */\n    void next() {\n       if (rewound) {\n@@ -70,14 +70,9 @@ void next() {\n       }\n    }\n \n-   /** The value that was parsed as a result of the last call to {@link #next()} */\n-   String getValue() {\n-      return value;\n-   }\n-\n-   /** The type of the value parsed as a result of the last call to {@link #next()} */\n-   WordType getType() {\n-      return type;\n+   /** The word that was parsed as a result of the last call to {@link #next()} */\n+   Word getWord() {\n+      return word;\n    }\n \n    /** Does the next value to be parsed represent a term (rather than a delimiter) */\n@@ -94,16 +89,18 @@ boolean isEndOfStream() {\n    }\n \n    /**\n-    * Rewinds the parser (i.e. \"pushes-back\" the last parsed word). \n+    * Rewinds the parser (i.e. \"pushes-back\" the last parsed word).\n     * \u003cp\u003e\n     * The last parsed value will remain after the next call to {@link #next()}\n     * \n     * @param value the value to rewind\n-    * @throws IllegalArgumentException if already in a rewound state (i.e. have already called {@link WordParser#rewind(String)} since the last call to {@link #next()}), or {@code value} is not equal to {@link #getValue()} \n+    * @throws IllegalArgumentException if already in a rewound state (i.e. have already called\n+    * {@link WordParser#rewind(String)} since the last call to {@link #next()}), or {@code value} is not equal to\n+    * {@link #getValue()}\n     */\n-   void rewind(String value) {\n-      if (rewound || value \u003d\u003d null || !value.equals(this.value)) {\n-         throw new IllegalArgumentException(\"Rewound \u003d \" + rewound + \" this.value \u003d \" + this.value + \" value \u003d \" + value);\n+   void rewind(Word value) {\n+      if (word !\u003d value) {\n+         throw new IllegalArgumentException();\n       }\n       rewound \u003d true;\n    }\n@@ -244,12 +241,16 @@ private void setSymbol(int c) {\n          }\n       }\n \n-      if (length \u003e 1 \u0026\u0026 isDelimiter(sb.charAt(length - 1))) {\n-         parser.rewind();\n-         setValue(sb.toString().substring(0, length - 1), SYMBOL);\n-      } else {\n-         setValue(sb, SYMBOL);\n+      for (int i \u003d 1; i \u003c length; i++) {\n+         final String substring \u003d sb.substring(i);\n+         if (isValidParseableElement(substring) || isDelimiter(sb.charAt(i))) {\n+            parser.rewind(length - i);\n+            setValue(sb.substring(0, i), SYMBOL);\n+            return;\n+         }\n       }\n+\n+      setValue(sb, SYMBOL);\n    }\n \n    private void skipWhitespace() {\n@@ -310,7 +311,6 @@ private void setValue(StringBuilder value, WordType type) {\n    }\n \n    private void setValue(String value, WordType type) {\n-      this.value \u003d value;\n-      this.type \u003d type;\n+      this.word \u003d new Word(value, type);\n    }\n }"
        },
        {
          "file_name": "src/core/org/projog/core/parser/WordType.java",
          "patch": "@@ -1,6 +1,12 @@\n package org.projog.core.parser;\n \n-/** @see WordParser#getType() */\n+/** @see WordParser */\n enum WordType {\n-   ATOM, QUOTED_ATOM, INTEGER, FLOAT, SYMBOL, VARIABLE, ANONYMOUS_VARIABLE\n+   ATOM,\n+   QUOTED_ATOM,\n+   INTEGER,\n+   FLOAT,\n+   SYMBOL,\n+   VARIABLE,\n+   ANONYMOUS_VARIABLE\n }"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/DelimitersTest.java",
          "patch": "@@ -9,58 +9,65 @@\n public class DelimitersTest {\n    @Test\n    public void testArgumentSeperator() {\n-      assertTrue(Delimiters.isArgumentSeperator(\",\"));\n-      assertFalse(Delimiters.isArgumentSeperator(\";\"));\n-      assertFalse(Delimiters.isArgumentSeperator(\" \"));\n+      assertTrue(Delimiters.isArgumentSeperator(symbol(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(atom(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(\";\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(\" \")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListOpenBracket() {\n-      assertTrue(Delimiters.isListOpenBracket(\"[\"));\n-      assertFalse(Delimiters.isListOpenBracket(\"]\"));\n-      assertFalse(Delimiters.isListOpenBracket(\"(\"));\n+      assertTrue(Delimiters.isListOpenBracket(symbol(\"[\")));\n+      assertFalse(Delimiters.isListOpenBracket(atom(\"[\")));\n+      assertFalse(Delimiters.isListOpenBracket(symbol(\"]\")));\n+      assertFalse(Delimiters.isListOpenBracket(symbol(\"(\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListCloseBracket() {\n-      assertTrue(Delimiters.isListCloseBracket(\"]\"));\n-      assertFalse(Delimiters.isListCloseBracket(\"[\"));\n-      assertFalse(Delimiters.isListCloseBracket(\")\"));\n+      assertTrue(Delimiters.isListCloseBracket(symbol(\"]\")));\n+      assertFalse(Delimiters.isListCloseBracket(atom(\"]\")));\n+      assertFalse(Delimiters.isListCloseBracket(symbol(\"[\")));\n+      assertFalse(Delimiters.isListCloseBracket(symbol(\")\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testPredicateOpenBracket() {\n-      assertTrue(Delimiters.isPredicateOpenBracket(\"(\"));\n-      assertFalse(Delimiters.isPredicateOpenBracket(\")\"));\n-      assertFalse(Delimiters.isPredicateOpenBracket(\"[\"));\n+      assertTrue(Delimiters.isPredicateOpenBracket(symbol(\"(\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(atom(\"(\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(symbol(\")\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(symbol(\"[\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testPredicateCloseBracket() {\n-      assertTrue(Delimiters.isPredicateCloseBracket(\")\"));\n-      assertFalse(Delimiters.isPredicateCloseBracket(\"(\"));\n-      assertFalse(Delimiters.isPredicateCloseBracket(\"]\"));\n+      assertTrue(Delimiters.isPredicateCloseBracket(symbol(\")\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(atom(\")\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(symbol(\"(\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(symbol(\"]\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListTail() {\n-      assertTrue(Delimiters.isListTail(\"|\"));\n-      assertFalse(Delimiters.isListTail(\"[\"));\n-      assertFalse(Delimiters.isListTail(\"]\"));\n+      assertTrue(Delimiters.isListTail(symbol(\"|\")));\n+      assertFalse(Delimiters.isListTail(atom(\"|\")));\n+      assertFalse(Delimiters.isListTail(symbol(\"[\")));\n+      assertFalse(Delimiters.isListTail(symbol(\"]\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testSentenceTerminator() {\n-      assertTrue(Delimiters.isSentenceTerminator(\".\"));\n-      assertFalse(Delimiters.isSentenceTerminator(\"..\u003d\"));\n-      assertFalse(Delimiters.isSentenceTerminator(\",\"));\n-      assertFalse(Delimiters.isArgumentSeperator(null));\n+      assertTrue(Delimiters.isSentenceTerminator(symbol(\".\")));\n+      assertFalse(Delimiters.isSentenceTerminator(atom(\".\")));\n+      assertFalse(Delimiters.isSentenceTerminator(symbol(\"..\u003d\")));\n+      assertFalse(Delimiters.isSentenceTerminator(symbol(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(null)));\n    }\n \n    @Test\n@@ -77,4 +84,12 @@ private void assertDelimiter(boolean expectedResult, char... chars) {\n          assertEquals(expectedResult, Delimiters.isDelimiter(Character.toString(c)));\n       }\n    }\n+\n+   private Word symbol(String value) {\n+      return new Word(value, WordType.SYMBOL);\n+   }\n+\n+   private Word atom(String value) {\n+      return new Word(value, WordType.ATOM);\n+   }\n }"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/SentenceParserTest.java",
          "patch": "@@ -139,6 +139,26 @@ public void testBrackets6() {\n    }\n \n    @Test\n+   public void testParsingBrackets7() {\n+      assertParse(\"X \u003d (!).\", \"X \u003d !\", \"\u003d(X, !)\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets8() {\n+      assertParse(\"X \u003d (a, !).\", \"X \u003d (a , !)\", \"\u003d(X, ,(a, !))\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets9() {\n+      assertParse(\"X \u003d (a, !; b).\", \"X \u003d (a , ! ; b)\", \"\u003d(X, ;(,(a, !), b))\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets10() {\n+      assertParse(\"X \u003d [a,\u0027(\u0027|Y].\", \"X \u003d [a,(|Y]\", \"\u003d(X, .(a, .((, Y)))\");\n+   }\n+\n+   @Test\n    public void testExtraTextAfterFullStop() {\n       SentenceParser sp \u003d getSentenceParser(\"?- consult(\\\u0027bench.pl\\\u0027). jkhkj\");\n       Term t \u003d sp.parseSentence();"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/WordParserTest.java",
          "patch": "@@ -100,6 +100,18 @@ public void testNonAlphanumericCharacterFollowedByPeriod() {\n       assertParse(\"!.\", \"!\", \".\");\n    }\n \n+   /** Test that \"!\" and \";\" get parsed separately, rather than as single combined \"!;\" element. */\n+   @Test\n+   public void testCutFollowedByDisjunction() {\n+      assertParse(\"!;true\", \"!\", \";\", \"true\");\n+   }\n+\n+   /** Test that \"(\", \"!\", \")\" and \".\" get parsed separately, rather than as single combined \"(!).\" element. */\n+   @Test\n+   public void testCutInBrackets() {\n+      assertParse(\"(!).\", \"(\", \"!\", \")\", \".\");\n+   }\n+\n    @Test\n    public void testWhitespaceAndComments() {\n       WordParser p \u003d create(\"/* comment */\\t % comment\\n % comment\\r\\n\\n\");\n@@ -130,42 +142,42 @@ public void testRewindException() {\n       WordParser wp \u003d create(\"a b c\");\n       wp.next();\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n-      wp.rewind(\"b\");\n+      assertEquals(\"b\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n-      wp.rewind(\"b\");\n+      assertEquals(\"b\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n \n       // check that can only rewind one word\n       assertRewindException(wp, \"b\");\n       assertRewindException(wp, \"a\");\n \n-      assertEquals(\"b\", wp.getValue());\n+      assertEquals(\"b\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n+      assertEquals(\"b\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"c\", wp.getValue());\n+      assertEquals(\"c\", wp.getWord().value);\n \n       // check that the value specified in call to rewind has to be the last value parsed\n       assertRewindException(wp, \"b\");\n       assertRewindException(wp, null);\n       assertRewindException(wp, \"z\");\n \n-      wp.rewind(\"c\");\n-      assertEquals(\"c\", wp.getValue());\n+      wp.rewind(wp.getWord());\n+      assertEquals(\"c\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"c\", wp.getValue());\n+      assertEquals(\"c\", wp.getWord().value);\n       assertTrue(wp.isEndOfStream());\n-      assertEquals(\"c\", wp.getValue());\n-      wp.rewind(\"c\");\n+      assertEquals(\"c\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n \n       // check that can only rewind one word\n       assertRewindException(wp, \"c\");\n    }\n \n    private void assertRewindException(WordParser wp, String value) {\n       try {\n-         wp.rewind(value);\n+         wp.rewind(new Word(value, WordType.ATOM));\n          fail();\n       } catch (IllegalArgumentException e) {\n          // expected\n@@ -180,19 +192,19 @@ private void assertWordType(String syntax, String value, WordType type) {\n       WordParser p \u003d create(syntax);\n       assertFalse(p.isEndOfStream());\n       p.next();\n-      assertEquals(value, p.getValue());\n-      assertSame(type, p.getType());\n+      assertEquals(value, p.getWord().value);\n+      assertSame(type, p.getWord().type);\n       assertTrue(p.isEndOfStream());\n    }\n \n    private void assertParse(String sentence, String... words) {\n       WordParser p \u003d create(sentence);\n       for (String w : words) {\n          p.next();\n-         assertEquals(w, p.getValue());\n-         p.rewind(w);\n+         assertEquals(w, p.getWord().value);\n+         p.rewind(p.getWord());\n          p.next();\n-         assertEquals(w, p.getValue());\n+         assertEquals(w, p.getWord().value);\n       }\n       assertTrue(p.isEndOfStream());\n       try {"
        }
      ]
    }
  },
  {
    "name": "Parser error for decimal numbers when using e.g. Danish locale 3.123 \u003d 31234",
    "url": "https://github.com/symphonytool/symphony/issues/199",
    "description": "The decimal parser used within the parser depends on the current locale to interpret decimal numbers. This makes it possible to change the meaning of the number 3.123 to 3123 when using a Danish number format where a comma \u0027,\u0027 is used for decimal numbers and not a \u0027.\u0027.\n",
    "keywords": [
      "parser",
      "numbers",
      "decimal"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/symphonytool/symphony/commit/565c40ef6bb469397f7d12f115c8da4bf37b042f",
      "files": [
        {
          "file_name": "core/parser/src/main/antlr3/eu/compassresearch/core/parser/Cml.g",
          "patch": "@@ -58,6 +58,7 @@ import java.lang.NumberFormatException;\n import java.lang.reflect.Method;\n import java.math.BigInteger;\n import java.text.DecimalFormat;\n+import java.text.NumberFormat;\n import java.text.ParseException;\n \n import java.util.Arrays;\n@@ -66,6 +67,7 @@ import java.util.ListIterator;\n import java.util.LinkedList;\n import java.util.Collection;\n import java.util.Vector;\n+import java.util.Locale;\n \n import static org.overture.ast.lex.Dialect.VDM_PP;\n import org.overture.ast.assistant.definition.PDefinitionAssistant;\n@@ -226,7 +228,7 @@ public String getTokenErrorDisplay(CommonToken t) {\n //    throw e;\n //}\n \n-private DecimalFormat decimalFormatParser \u003d new DecimalFormat();\n+private NumberFormat decimalFormatParser \u003dNumberFormat.getNumberInstance(Locale.ENGLISH);\n public static final String CML_LANG_VERSION \u003d \"CML M16\";\n \n public static char convertEscapeToChar(String escape) {"
        }
      ]
    }
  },
  {
    "name": "Number parser throws error (B.Dev # 6)",
    "url": "https://github.com/xiebozhi/Muni/issues/37",
    "description": "This may be fixed, so this is a reminder to test and close the ticket on bukkit dev. \n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/xiebozhi/Muni/commit/0aacad960aebe9411e669e987f60af9878fcacb2",
      "files": [
        {
          "file_name": "src/com/teamglokk/muni/commands/OfficerCommand.java",
          "patch": "@@ -207,7 +207,8 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n                     } else if (args[1].equalsIgnoreCase(\"check\") || args[1].equalsIgnoreCase(\"c\") ){\n                         temp.checkTownBank(officer);\n                     } else {\n-                        plugin.out(sender,\"/town bank - ERROR (subcommand not recognized)\");\n+                        plugin.out(sender,\"/deputy bank - ERROR (subcommand not recognized)\");\n+                        plugin.out(sender,\"/deputy bank (check|withdraw|deposit)\");\n                     }\n                     break;\n                 default:\n@@ -251,7 +252,8 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n                     } else if (args[1].equalsIgnoreCase(\"check\") || args[1].equalsIgnoreCase(\"c\") ){\n                         temp.checkTownBank(officer);\n                     } else {\n-                        plugin.out(sender,\"/town bank - ERROR (subcommand not recognized)\");\n+                        plugin.out(sender,\"/deputy itemBank - ERROR (subcommand not recognized)\");\n+                        plugin.out(sender,\"/deputy itemBank (check|withdraw|deposit)\");\n                     }\n                     break;\n                 default:"
        }
      ]
    }
  },
  {
    "name": "Parser error for Div(a:int)",
    "url": "https://github.com/symphonytool/symphony/issues/191",
    "description": "The parser issues a strange error when the following function is entered:\n\n```\nfunctions\n\nDiv(d:int)\npre true\npost true\n```\n\nThe error is the same as if \u0027div\u0027 the reserved keyword was used. But in this case the parser should parse it as any other function\n",
    "keywords": [
      "parser",
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/symphonytool/symphony/commit/b879a2db6e9fe509fd907b3c0a77d33f40112579",
      "files": [
        {
          "file_name": "core/parser/src/main/antlr3/eu/compassresearch/core/parser/Cml.g",
          "patch": "@@ -1490,7 +1490,7 @@ actionbase returns[PAction action]\n     : \u0027Skip\u0027            { $action \u003d new ASkipAction(); }\n     | \u0027Stop\u0027            { $action \u003d new AStopAction(); }\n     | \u0027Chaos\u0027           { $action \u003d new AChaosAction(); }\n-    | \u0027Div\u0027             { $action \u003d new ADivAction(); }\n+    | \u0027Diverge\u0027             { $action \u003d new ADivAction(); }\n     | \u0027Wait\u0027 expression { $action \u003d new AWaitAction(null, $expression.exp); }\n     | (\u0027return\u0027 expression)\u003d\u003e\u0027return\u0027 expression\n         {"
        },
        {
          "file_name": "core/typechecker/src/test/resources/actions/actions-0013-pos.cml",
          "patch": "@@ -3,6 +3,6 @@\n process A \u003d\n begin\n \n-@ Div\n+@ Diverge\n \n end"
        },
        {
          "file_name": "ide/ui/src/main/java/eu/compassresearch/ide/ui/editor/syntax/CmlKeywords.java",
          "patch": "@@ -27,7 +27,7 @@\n \t\t\t\"#req\", \"#waiting\", \"abs\", \"all\", \"always\", \"and\", \"async\",\n \t\t\t\"atomic\",\n \t\t\t/* \"be\", */\"bool\", \"by\", \"card\", \"cases\", \"char\", \"class\", \"comp\",\n-\t\t\t\"compose\", \"conc\", \"dcl\", \"def\", \"dinter\", \"div\", \"do\", \"dom\",\n+\t\t\t\"compose\", \"conc\", \"dcl\", \"def\", \"dinter\", \"Diverge\",\"div\", \"do\", \"dom\",\n \t\t\t\"dunion\", \"elems\", \"else\", \"elseif\", /* \"error\", */\"errs\", \"exists\",\n \t\t\t\"exists1\",\"extends\", \"exit\", /* \"ext\", */\"false\", \"floor\", \"for\", \"forall\",\n \t\t\t\"from\", \"functions\", \"hd\", \"if\", \"in\", \"inds\", \"inmap\", \"instance\","
        }
      ]
    }
  },
  {
    "name": "add parse error handler for precompute args failures",
    "url": "https://github.com/Graylog2/graylog-plugin-pipeline-processor/pull/93",
    "description": "allow lowercase timezone ids\n\nfixes #84 \n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Graylog2/graylog-plugin-pipeline-processor/commit/5a9bfda0579d49f3a6567e6dd17e4577f59b1fed",
      "files": [
        {
          "file_name": "src/main/java/org/graylog/plugins/pipelineprocessor/ast/exceptions/PrecomputeFailure.java",
          "patch": "@@ -0,0 +1,35 @@\n+/**\n+ * This file is part of Graylog Pipeline Processor.\n+ *\n+ * Graylog Pipeline Processor is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog Pipeline Processor is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog Pipeline Processor.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n+ */\n+package org.graylog.plugins.pipelineprocessor.ast.exceptions;\n+\n+public class PrecomputeFailure extends RuntimeException {\n+    private final String argumentName;\n+\n+    public PrecomputeFailure(String argumentName, Exception cause) {\n+        super(cause);\n+        this.argumentName \u003d argumentName;\n+    }\n+\n+    public String getArgumentName() {\n+        return argumentName;\n+    }\n+\n+    @Override\n+    public String getMessage() {\n+        return \"Unable to pre-compute argument \" + getArgumentName() + \": \" + getCause().getMessage();\n+    }\n+}"
        },
        {
          "file_name": "src/main/java/org/graylog/plugins/pipelineprocessor/ast/functions/Function.java",
          "patch": "@@ -18,6 +18,7 @@\n \n import com.google.common.collect.ImmutableList;\n import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.exceptions.PrecomputeFailure;\n import org.graylog.plugins.pipelineprocessor.ast.expressions.Expression;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -63,8 +64,8 @@ default void preprocessArgs(FunctionArgs args) {\n                     args.setPreComputedValue(name, param.transform().apply(value));\n                 }\n             } catch (Exception exception) {\n-                log.warn(\"Unable to precompute argument value for \" + name, exception);\n-                throw exception;\n+                log.debug(\"Unable to precompute argument value for \" + name, exception);\n+                throw new PrecomputeFailure(name, exception);\n             }\n         }\n "
        },
        {
          "file_name": "src/main/java/org/graylog/plugins/pipelineprocessor/functions/dates/TimezoneAwareFunction.java",
          "patch": "@@ -33,7 +33,7 @@\n     public TimezoneAwareFunction() {\n         timeZoneParam \u003d ParameterDescriptor\n                 .string(TIMEZONE, DateTimeZone.class)\n-                .transform(DateTimeZone::forID)\n+                .transform(id -\u003e DateTimeZone.forID(id.toUpperCase()))\n                 .optional()\n                 .description(\"The timezone to apply to the date, defaults to UTC\")\n                 .build();"
        },
        {
          "file_name": "src/main/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParser.java",
          "patch": "@@ -36,6 +36,7 @@\n import org.graylog.plugins.pipelineprocessor.ast.Pipeline;\n import org.graylog.plugins.pipelineprocessor.ast.Rule;\n import org.graylog.plugins.pipelineprocessor.ast.Stage;\n+import org.graylog.plugins.pipelineprocessor.ast.exceptions.PrecomputeFailure;\n import org.graylog.plugins.pipelineprocessor.ast.expressions.AndExpression;\n import org.graylog.plugins.pipelineprocessor.ast.expressions.ArrayLiteralExpression;\n import org.graylog.plugins.pipelineprocessor.ast.expressions.BinaryExpression;\n@@ -68,6 +69,7 @@\n import org.graylog.plugins.pipelineprocessor.parser.errors.IncompatibleIndexType;\n import org.graylog.plugins.pipelineprocessor.parser.errors.IncompatibleType;\n import org.graylog.plugins.pipelineprocessor.parser.errors.IncompatibleTypes;\n+import org.graylog.plugins.pipelineprocessor.parser.errors.InvalidFunctionArgument;\n import org.graylog.plugins.pipelineprocessor.parser.errors.MissingRequiredParam;\n import org.graylog.plugins.pipelineprocessor.parser.errors.NonIndexableType;\n import org.graylog.plugins.pipelineprocessor.parser.errors.OptionalParametersMustBeNamed;\n@@ -357,9 +359,15 @@ public void exitFunctionCall(RuleLangParser.FunctionCallContext ctx) {\n                 }\n             }\n \n-            final FunctionExpression expr \u003d new FunctionExpression(\n-                    ctx.getStart(), new FunctionArgs(functionRegistry.resolveOrError(name), argsMap)\n-            );\n+            FunctionExpression expr;\n+            try {\n+                expr \u003d new FunctionExpression(\n+                        ctx.getStart(), new FunctionArgs(functionRegistry.resolveOrError(name), argsMap)\n+                );\n+            } catch (PrecomputeFailure precomputeFailure) {\n+                parseContext.addError(new InvalidFunctionArgument(ctx, function, precomputeFailure));\n+                expr \u003d new FunctionExpression(ctx.getStart(), new FunctionArgs(Function.ERROR_FUNCTION, argsMap));\n+            }\n \n             log.trace(\"FUNC: ctx {} \u003d\u003e {}\", ctx, expr);\n             exprs.put(ctx, expr);"
        },
        {
          "file_name": "src/main/java/org/graylog/plugins/pipelineprocessor/parser/errors/InvalidFunctionArgument.java",
          "patch": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Graylog Pipeline Processor.\n+ *\n+ * Graylog Pipeline Processor is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog Pipeline Processor is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog Pipeline Processor.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n+ */\n+package org.graylog.plugins.pipelineprocessor.parser.errors;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import org.graylog.plugins.pipelineprocessor.ast.exceptions.PrecomputeFailure;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.Function;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+import org.graylog.plugins.pipelineprocessor.parser.RuleLangParser;\n+\n+public class InvalidFunctionArgument extends ParseError {\n+    private final Function\u003c?\u003e function;\n+    private final PrecomputeFailure failure;\n+\n+    public InvalidFunctionArgument(RuleLangParser.FunctionCallContext ctx,\n+                                   Function\u003c?\u003e function,\n+                                   PrecomputeFailure failure) {\n+        super(\"invalid_function_argument\", ctx);\n+        this.function \u003d function;\n+        this.failure \u003d failure;\n+    }\n+\n+    @JsonProperty(\"reason\")\n+    @Override\n+    public String toString() {\n+        int paramPosition \u003d 1;\n+        for (ParameterDescriptor descriptor : function.descriptor().params()) {\n+            if (descriptor.name().equals(failure.getArgumentName())) {\n+                break;\n+            }\n+            paramPosition++;\n+        }\n+\n+        return \"Unable to pre-compute value for \" + ordinal(paramPosition) + \" argument \" + failure.getArgumentName() + \" in call to function \" + function.descriptor().name() + \": \" + failure.getCause().getMessage();\n+    }\n+\n+    private static String ordinal(int i) {\n+        String[] suffixes \u003d new String[]{\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"};\n+        switch (i % 100) {\n+            case 11:\n+            case 12:\n+            case 13:\n+                return i + \"th\";\n+            default:\n+                return i + suffixes[i % 10];\n+\n+        }\n+    }\n+}"
        },
        {
          "file_name": "src/test/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParserTest.java",
          "patch": "@@ -16,6 +16,7 @@\n  */\n package org.graylog.plugins.pipelineprocessor.parser;\n \n+import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Ordering;\n@@ -31,17 +32,21 @@\n import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n import org.graylog.plugins.pipelineprocessor.functions.conversion.LongConversion;\n import org.graylog.plugins.pipelineprocessor.functions.conversion.StringConversion;\n+import org.graylog.plugins.pipelineprocessor.functions.dates.TimezoneAwareFunction;\n import org.graylog.plugins.pipelineprocessor.functions.messages.HasField;\n import org.graylog.plugins.pipelineprocessor.functions.messages.SetField;\n import org.graylog.plugins.pipelineprocessor.functions.strings.RegexMatch;\n import org.graylog.plugins.pipelineprocessor.parser.errors.IncompatibleArgumentType;\n import org.graylog.plugins.pipelineprocessor.parser.errors.IncompatibleIndexType;\n+import org.graylog.plugins.pipelineprocessor.parser.errors.InvalidFunctionArgument;\n import org.graylog.plugins.pipelineprocessor.parser.errors.NonIndexableType;\n import org.graylog.plugins.pipelineprocessor.parser.errors.OptionalParametersMustBeNamed;\n+import org.graylog.plugins.pipelineprocessor.parser.errors.ParseError;\n import org.graylog.plugins.pipelineprocessor.parser.errors.UndeclaredFunction;\n import org.graylog.plugins.pipelineprocessor.parser.errors.UndeclaredVariable;\n import org.graylog2.plugin.Message;\n import org.joda.time.DateTime;\n+import org.joda.time.DateTimeZone;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.BeforeClass;\n@@ -253,6 +258,27 @@ public Collection evaluate(FunctionArgs args, EvaluationContext context) {\n         functions.put(SetField.NAME, new SetField());\n         functions.put(HasField.NAME, new HasField());\n         functions.put(RegexMatch.NAME, new RegexMatch());\n+        functions.put(\"now_in_tz\", new TimezoneAwareFunction() {\n+            @Override\n+            protected DateTime evaluate(FunctionArgs args, EvaluationContext context, DateTimeZone timezone) {\n+                return DateTime.now(timezone);\n+            }\n+\n+            @Override\n+            protected String description() {\n+                return \"Now in the given timezone\";\n+            }\n+\n+            @Override\n+            protected String getName() {\n+                return \"now_in_tz\";\n+            }\n+\n+            @Override\n+            protected ImmutableList\u003cParameterDescriptor\u003e params() {\n+                return ImmutableList.of();\n+            }\n+        });\n         functionRegistry \u003d new FunctionRegistry(functions);\n     }\n \n@@ -467,6 +493,18 @@ public void indexedAccessWrongIndexType() {\n         }\n     }\n \n+    @Test\n+    public void invalidArgumentValue() {\n+        try {\n+            parser.parseRule(ruleForTest(), false);\n+        } catch (ParseException e) {\n+            assertEquals(1, e.getErrors().size());\n+            final ParseError parseError \u003d Iterables.getOnlyElement(e.getErrors());\n+            assertEquals(\"Unable to pre-compute value for 1st argument timezone in call to function now_in_tz: The datetime zone id \u0027123\u0027 is not recognised\", parseError.toString());\n+            assertEquals(InvalidFunctionArgument.class, parseError.getClass());\n+        }\n+    }\n+\n     public static class CustomObject {\n         private final String id;\n "
        },
        {
          "file_name": "src/test/resources/org/graylog/plugins/pipelineprocessor/parser/invalidArgumentValue.txt",
          "patch": "@@ -0,0 +1,4 @@\n+rule \"invalid arg\"\n+when now_in_tz(\"123\")  // this isn\u0027t a valid tz\n+then\n+end\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Error parsing select from table (Keyword)",
    "url": "https://github.com/JSQLParser/JSqlParser/issues/261",
    "description": "in the following \"table\" is considered as KW\n\nselect column_value from table(VARCHAR_LIST_TYPE())\n\nCaused by: net.sf.jsqlparser.parser.ParseException: Encountered \" \"TABLE\" \"table \"\" at line 1, column 26.\nWas expecting one of:\n    \"DO\" ...\n\nchanging it from table to something else parses just fine...\n",
    "keywords": [
      "table"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/JSQLParser/JSqlParser/commit/10e68b5c3c582965a69d9bc52c1d3a0d9259871e",
      "files": [
        {
          "file_name": "src/main/jjtree/net/sf/jsqlparser/parser/JSqlParserCC.jjt",
          "patch": "@@ -677,6 +677,7 @@ String RelObjectName() :\n       | tk\u003d\u003cK_COLUMN\u003e | tk\u003d\u003cK_REPLACE\u003e | tk\u003d\u003cK_TRUNCATE\u003e | tk\u003d\u003cK_KEY\u003e | tk\u003d\u003cK_ANY\u003e\n       | tk\u003d\u003cK_OPEN\u003e | tk\u003d\u003cK_OVER\u003e | tk\u003d\u003cK_VALUES\u003e | tk\u003d\u003cK_PERCENT\u003e | tk\u003d\u003cK_PRIOR\u003e\n \t  | tk\u003d\u003cK_SEPARATOR\u003e | tk\u003d\u003cK_NO\u003e | tk\u003d\u003cK_ACTION\u003e | tk\u003d\u003cK_CASCADE\u003e | tk\u003d\u003cK_END\u003e\n+      | tk\u003d\u003cK_TABLE\u003e\n       )\n \n     { return tk.image; }"
        },
        {
          "file_name": "src/test/java/net/sf/jsqlparser/test/select/SelectTest.java",
          "patch": "@@ -2184,4 +2184,8 @@ public void testNestedFunctionCallIssue253() throws JSQLParserException {\n     public void testEscapedBackslashIssue253() throws JSQLParserException {\n         assertSqlCanBeParsedAndDeparsed(\"SELECT replace_regex(\u0027test\u0027, \u0027\\\\\\\\\u0027, \u0027\\\\\\\\\\\\\\\\\u0027)\");\n     }\n+    \n+    public void testKeywordTableIssue261() throws JSQLParserException {\n+        assertSqlCanBeParsedAndDeparsed(\"SELECT column_value FROM table(VARCHAR_LIST_TYPE())\");\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Discussion, new message containing ?? causes parse error",
    "url": "https://github.com/otavanopisto/muikku/issues/945",
    "description": "https://muikku.staging.fi/discussion#thread/1/191\n\n![parse_error](https://cloud.githubusercontent.com/assets/3033999/11240715/8aa28ddc-8dfd-11e5-9a76-2b2bd4e758d8.gif)\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/otavanopisto/muikku/commit/c401e4e7cbc2478dadaa52d79729d14277e64ca7",
      "files": [
        {
          "file_name": "muikku/src/main/webapp/resources/scripts/api/api.js",
          "patch": "@@ -53,13 +53,14 @@\n     init: function (async, service) {\n       this._client \u003d new $.RestClient(CONTEXTPATH + \u0027/rest/\u0027 + service + \u0027/\u0027, {\n         cache: 30,\n-        cachableMethods: [\"GET\"],\n-        ajax: {\n-          async: false\n-        }\n+        cachableMethods: [\"GET\"]\n       });\n       // \"temporary workaround\": $.RestClient has a shared `async\u0027 object in options\n-      this._client.opts.ajax \u003d {dataType: \u0027json\u0027, async: async};\n+      this._client.opts.ajax \u003d {\n+        dataType: \u0027json\u0027, \n+        async: async,\n+        contentType: \u0027application/json\u0027 // http://stackoverflow.com/a/17660503\n+      };\n     },\n     add: function (resources) {\n       var current \u003d this;"
        }
      ]
    }
  },
  {
    "name": "Parser error - does not tokenize correctly.",
    "url": "https://github.com/gauravmm/PyretIDE/issues/2",
    "description": "Try \"fun is-odd(n):\"\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/gauravmm/PyretIDE/commit/d1fa688260e978c46b5af451b9ea451df82535d4",
      "files": [
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/TokenType.java",
          "patch": "@@ -17,20 +17,6 @@\n  */\n public abstract class TokenType {\n \n-    /*\n-     Whitespace (but not newlines) --\n-     Keywords, --\n-     Keywords with colons --\n-     colon : --\n-     open and close {}[]() --\n-     Punctuation --\n-     Initial Operators --\n-     Whitespace --\n-     Strings (with \u0027 and \" quotes) --\n-     Comments --\n-     Default -- check regex\n-     Null/Illegal token type\n-     */\n     public TokenType(Pattern pattern) {\n         if (!pattern.pattern().startsWith(\"^\")) {\n             throw new IllegalArgumentException(\"All patterns must be anchored to the start of string.\");\n@@ -58,11 +44,15 @@ protected Pattern getPattern() {\n             } else if (m.end() \u003d\u003d 0) {\n                 throw new IllegalStateException(\"The token parsed has length 0. \" + this.getClass().getName() + \" \\\"\" + inLine + \"\\\"\");\n             }\n-            int size \u003d m.end() - m.start();\n+            int size \u003d getMatchLength(m);\n             return new Option\u003c\u003e(inLine.substring(0, size));\n         }\n         return new Option\u003c\u003e();\n     }\n+    \n+    protected int getMatchLength(Matcher m) {\n+        return m.end();\n+    }\n \n     /**\n      * Construct a token from the given matching string."
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/TokenTypes.java",
          "patch": "@@ -28,6 +28,7 @@\n             TokenTypePairedOpenCloseColon.getInstance(),\n             TokenTypePairedOpenColon.getInstance(), \n             TokenTypePairedCloseColon.getInstance(), \n+            TokenTypePairedCloseColonWords.getInstance(), \n             TokenTypeKeywordAggregate.getInstance(),\n             TokenTypeKeyword.getInstance(),\n             TokenTypeKeywordColon.getInstance(),"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeComment.java",
          "patch": "@@ -5,7 +5,6 @@\n \n package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n \n-import edu.brown.cs.cutlass.parser.tokenizer.Token;\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyleComment;"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeDefault.java",
          "patch": "@@ -2,7 +2,6 @@\n  * Cutlass - Pyret IDE\n  * For CSCI 0320 Spring 2014, Term Project\n  */\n-\n package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n \n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n@@ -16,24 +15,27 @@\n  */\n public class TokenTypeDefault extends TokenType {\n \n-    public static TokenTypeDefault getInstance(){\n+    public static final String wordCharRegex \u003d \"[a-zA-Z0-9\\\\-_]\";\n+    public static final String nonWordCharRegex \u003d \"([^a-zA-Z0-9\\\\-_]|$)\";\n+    \n+    public static TokenTypeDefault getInstance() {\n         return instance;\n     }\n-    \n+\n     private static final TokenTypeDefault instance \u003d new TokenTypeDefault();\n     \n-    private TokenTypeDefault(){\n-        super(Pattern.compile(\"^([a-zA-Z][a-zA-Z0-9\\\\-]*)\"));\n+    private TokenTypeDefault() {\n+        super(Pattern.compile(\"^([a-zA-Z]\" + wordCharRegex + \"*)\"));\n     }\n \n     @Override\n     public boolean toAggregate() {\n         return true;\n     }\n-    \n+\n     @Override\n     public TokenStyle getStyle() {\n         return TokenStyleDefault.getInstance();\n     }\n-    \n+\n }"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeKeyword.java",
          "patch": "@@ -7,6 +7,7 @@\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyleKeyword;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n@@ -22,12 +23,17 @@ public static TokenTypeKeyword getInstance() {\n     private static final TokenTypeKeyword instance \u003d new TokenTypeKeyword();\n \n     private TokenTypeKeyword() {\n-        super(Pattern.compile(\"^((method)|(var)|(when)|(import)|(provide)|(except)|(for)|(from)|(and)|(or)|(not)|(as)|(if)|(cases)|(is))\"));\n+        super(Pattern.compile(\"^((method)|(var)|(when)|(import)|(provide)|(except)|(for)|(from)|(and)|(or)|(not)|(as)|(if)|(cases)|(is))\" + TokenTypeDefault.nonWordCharRegex));\n     }\n \n     @Override\n     public TokenStyle getStyle() {\n         return TokenStyleKeyword.getInstance();\n     }\n \n+    @Override\n+    protected int getMatchLength(Matcher m) {\n+        return m.end(1);\n+    }\n+\n }"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeKeywordAggregate.java",
          "patch": "@@ -7,6 +7,7 @@\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyleKeyword;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n@@ -22,7 +23,7 @@ public static TokenTypeKeywordAggregate getInstance() {\n     private static final TokenTypeKeywordAggregate instance \u003d new TokenTypeKeywordAggregate();\n \n     private TokenTypeKeywordAggregate() {\n-        super(Pattern.compile(\"^((fun)|(data))\"));\n+        super(Pattern.compile(\"^((fun)|(data))\" + TokenTypeDefault.nonWordCharRegex));\n     }\n \n     @Override\n@@ -34,5 +35,10 @@ public boolean toAggregate() {\n     public TokenStyle getStyle() {\n         return TokenStyleKeyword.getInstance();\n     }\n+    \n+    @Override\n+    protected int getMatchLength(Matcher m) {\n+        return m.end(1);\n+    }\n \n }"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeKeywordColon.java",
          "patch": "@@ -9,6 +9,7 @@\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyleKeyword;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n@@ -24,7 +25,7 @@ public static TokenTypeKeywordColon getInstance() {\n     private static final TokenTypeKeywordColon instance \u003d new TokenTypeKeywordColon();\n \n     private TokenTypeKeywordColon() {\n-        super(Pattern.compile(\"^((try)|(ask)|(otherwise)|(then)|(with)|(sharing)|(where)|(check)|(graph)|(block))\"));\n+        super(Pattern.compile(\"^((try)|(ask)|(otherwise)|(then)|(with)|(sharing)|(where)|(check)|(graph)|(block))\" + TokenTypeDefault.nonWordCharRegex));\n     }\n \n     @Override\n@@ -38,5 +39,10 @@ private TokenTypeKeywordColon() {\n     public TokenStyle getStyle() {\n         return TokenStyleKeyword.getInstance();\n     }\n+    \n+    @Override\n+    protected int getMatchLength(Matcher m) {\n+        return m.end(1);\n+    }\n \n }"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypePairedCloseColon.java",
          "patch": "@@ -26,7 +26,7 @@ public static TokenTypePairedCloseColon getInstance() {\n     private static final TokenTypePairedCloseColon instance \u003d new TokenTypePairedCloseColon();\n \n     private TokenTypePairedCloseColon() {\n-        super(Pattern.compile(\"^((;)|(end)|(else))\"));\n+        super(Pattern.compile(\"^(;)\"));\n     }\n \n     @Override"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypePairedCloseColonWords.java",
          "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Cutlass - Pyret IDE\n+ * For CSCI 0320 Spring 2014, Term Project\n+ */\n+package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n+\n+import edu.brown.cs.cutlass.parser.tokenizer.Token;\n+import edu.brown.cs.cutlass.parser.tokenizer.TokenPairedClosing;\n+import edu.brown.cs.cutlass.parser.tokenizer.TokenScope;\n+import edu.brown.cs.cutlass.parser.tokenizer.TokenTypePairedClose;\n+import edu.brown.cs.cutlass.parser.tokenizer.TokenTypePairedOpen;\n+import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n+import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStylePunct;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ *\n+ * @author dilip\n+ */\n+public class TokenTypePairedCloseColonWords extends TokenTypePairedClose {\n+\n+    public static TokenTypePairedCloseColonWords getInstance() {\n+        return instance;\n+    }\n+\n+    private static final TokenTypePairedCloseColonWords instance \u003d new TokenTypePairedCloseColonWords();\n+\n+    private TokenTypePairedCloseColonWords() {\n+        super(Pattern.compile(\"^((end)|(else))\" + TokenTypeDefault.nonWordCharRegex));\n+    }\n+    \n+    @Override\n+    protected int getMatchLength(Matcher m) {\n+        return m.end(1);\n+    }\n+\n+    @Override\n+    public Token constructToken(String value, int offset, int length, TokenScope scope) {\n+        return new TokenPairedClosing(value, offset, length, scope, TokenTypePairedCloseColonWords.getInstance());\n+    }\n+\n+    @Override\n+    public boolean isMatchingTokenType(TokenTypePairedOpen t) throws IllegalArgumentException {\n+        return t instanceof TokenTypePairedOpenColon;\n+    }\n+\n+    @Override\n+    public TokenStyle getStyle() {\n+        return TokenStylePunct.getInstance();\n+    }\n+\n+}"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypePairedOpenCloseColon.java",
          "patch": "@@ -14,6 +14,7 @@\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStylePunct;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n@@ -29,7 +30,12 @@ public static TokenTypePairedOpenCloseColon getInstance() {\n     private static final TokenTypePairedOpenCloseColon instance \u003d new TokenTypePairedOpenCloseColon();\n \n     private TokenTypePairedOpenCloseColon() {\n-        super(Pattern.compile(\"^((where)|(sharing)|(with))\"));\n+        super(Pattern.compile(\"^((where)|(sharing)|(with))\" + TokenTypeDefault.nonWordCharRegex));\n+    }\n+\n+    @Override\n+    protected int getMatchLength(Matcher m) {\n+        return m.end(1);\n     }\n \n     @Override"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeSinglePunct.java",
          "patch": "@@ -4,7 +4,6 @@\n  */\n package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n \n-import edu.brown.cs.cutlass.parser.tokenizer.Token;\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStylePunct;"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeString.java",
          "patch": "@@ -4,7 +4,6 @@\n  */\n package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n \n-import edu.brown.cs.cutlass.parser.tokenizer.Token;\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyleString;"
        },
        {
          "file_name": "production/Cutlass/src/edu/brown/cs/cutlass/parser/tokenizer/tokentypes/TokenTypeWhitespace.java",
          "patch": "@@ -4,9 +4,7 @@\n  */\n package edu.brown.cs.cutlass.parser.tokenizer.tokentypes;\n \n-import edu.brown.cs.cutlass.parser.tokenizer.Token;\n import edu.brown.cs.cutlass.parser.tokenizer.TokenType;\n-import edu.brown.cs.cutlass.parser.tokenizer.styles.TokenStyle;\n import java.util.regex.Pattern;\n \n /**"
        }
      ]
    }
  },
  {
    "name": "EGradle parse error: could not compile not recognized",
    "url": "https://github.com/de-jcup/egradle/issues/157",
    "description": "* What went wrong:\r\nCould not compile build file \u0027C:\\dev_custom\\projects\\JCUP\\egradle-testcase-projects\\singleproject-01-java-with-gradlewrapper\\build.gradle\u0027.\r\n\u003e startup failed:\r\n  build file \u0027C:\\dev_custom\\projects\\JCUP\\egradle-testcase-projects\\singleproject-01-java-with-gradlewrapper\\build.gradle\u0027: 26: Modifier \u0027protected\u0027 not allowed here.\r\n @ line 26, column 1.\r\n     def protected variable1\u003d\"hello world\"\r\n     ^\r\n  \r\n  1 error\r\n",
    "keywords": [
      "not"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/de-jcup/egradle/commit/ad28dc5c6808fa3aef5880bd9ed2eb541e1d6591",
      "files": [
        {
          "file_name": "egradle-plugin-main/src/main/java/de/jcup/egradle/core/validation/GradleOutputValidator.java",
          "patch": "@@ -13,7 +13,7 @@\n  * and limitations under the License.\n  *\n  */\n- package de.jcup.egradle.core.validation;\n+package de.jcup.egradle.core.validation;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -31,106 +31,66 @@\n \tprivate int maxPos;\n \tprivate List\u003cString\u003e data;\n \n-\tpublic ValidationResult validate(List\u003cString\u003e lines){\n+\tpublic ValidationResult validate(List\u003cString\u003e lines) {\n \t\tValidate.notNull(lines);\n-\t\tthis.data\u003dnew ArrayList\u003c\u003e(lines);\n+\t\tthis.data \u003d new ArrayList\u003c\u003e(lines);\n \t\tproblem \u003d new ValidationResult();\n-\t\t\n-\t\tmaxPos \u003d lines.size()-1;\n-\t\tfor (pos\u003d0;pos\u003c\u003dmaxPos;pos++){\n+\n+\t\tmaxPos \u003d lines.size() - 1;\n+\t\tfor (pos \u003d 0; pos \u003c\u003d maxPos; pos++) {\n \t\t\tString line \u003d data.get(pos);\n \t\t\tnextLine(line);\n \t\t}\n \t\treturn problem;\n \t}\n \n-\tprivate void nextLine(String line) {\n-\t\t/* when not where found - try if where in this line otherwise gurad close exit...*/\n+\tvoid nextLine(String line) {\n+\t\t/* do NOT reorder!*/\n+\t\tinspectLine_1_whereFound(line);\n+\t\tinspectLine_2_whatWentWrongFound(line);\n+\t\tinspectLine_3_scriptPathAndLineInformation(line);\n+\t\tinspectLine_4_problemType(line);\n+\t\tinspectLine_5_problemMessage(line);\n+\t}\n+\n+\tprivate void inspectLine_1_whereFound(String line) {\n+\t\t/*\n+\t\t * when not where found - try if where in this line otherwise guard\n+\t\t * close exit...\n+\t\t */\n \t\tif (!problem.whereFound) {\n \t\t\tif (line.indexOf(\"* Where:\") !\u003d -1) {\n \t\t\t\tproblem.whereFound \u003d true;\n \t\t\t\treturn;\n \t\t\t}\n \t\t\treturn;\n \t\t}\n-\t\t/* where was found */\n-\t\thandleScriptText(line);\n-\t\thandleProblemMessage(line);\n \t}\n \n-\tprivate void handleProblemMessage(String line) {\n-\t\tif (problem.problemType !\u003d null) {\n-\t\t\tif (problem.problemMessage\u003d\u003dnull){\n-\t\t\t\tif (line.startsWith(\"\u003e\")) {\n-\t\t\t\t\tStringBuilder sb \u003d new StringBuilder();\n-\t\t\t\t\tsb.append(\n-\t\t\t\t\t\t\tline.substring(1).trim());\n-\t\t\t\t\t\n-\t\t\t\t\tint mpos \u003d pos+1;\n-\t\t\t\t\t/* inspect next lines*/\n-\t\t\t\t\twhile (mpos\u003c\u003dmaxPos){\n-\t\t\t\t\t\tString nextLine \u003d data.get(mpos);\n-\t\t\t\t\t\tif (nextLine.length()\u003d\u003d0){\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tsb.append(\"\\n\");\n-\t\t\t\t\t\tsb.append(nextLine);\n-\t\t\t\t\t\t\n-\t\t\t\t\t\tint columnIdIndex \u003d nextLine.indexOf(COLUMN_IDENTIFIER);\n-\t\t\t\t\t\tif (columnIdIndex!\u003d-1){\n-\t\t\t\t\t\t\t/* parse column information*/\n-\t\t\t\t\t\t\tString columnString \u003d nextLine.substring(columnIdIndex+COLUMN_IDENTIFIER.length());\n-\t\t\t\t\t\t\tif (columnString.endsWith(\".\")){\n-\t\t\t\t\t\t\t\tcolumnString\u003dcolumnString.substring(0, columnString.length()-1);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tint column \u003d converter.convertToInt(columnString,-1);\n-\t\t\t\t\t\t\tproblem.column\u003d column;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tmpos++;\n-\t\t\t\t\t\t\n-\t\t\t\t\t}\n-\t\t\t\t\tpos\u003dmpos;// set pointer to end of former inspection\n-\t\t\t\t\tproblem.problemMessage \u003d sb.toString();\n-\t\t\t\t\t\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn;\n-\t\t}\n+\tprivate void inspectLine_2_whatWentWrongFound(String line) {\n \t\tif (!problem.whatWentWrongFound) {\n-\t\t\tproblem.whatWentWrongFound \u003d line.indexOf(\"* What went wrong\") !\u003d -1;\n-\t\t\treturn;\n-\t\t}\n-\t\tif (problem.problemType \u003d\u003d null) {\n-\t\t\tfor (ProblemType type: ProblemType.values()){\n-\t\t\t\tif (line.startsWith(type.text)) {\n-\t\t\t\t\tproblem.problemType \u003d type;\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\tproblem.whatWentWrongFound \u003d (line.indexOf(\"* What went wrong\") !\u003d -1);\n \t\t}\n-\n-\t\tif (problem.problemMessage !\u003d null) {\n-\t\t\treturn;\n-\t\t}\n-\t\t\n \t}\n \n-\tprivate void handleScriptText(String line) {\n-\t\tif (problem.line!\u003d-1){\n+\tprivate void inspectLine_3_scriptPathAndLineInformation(String line) {\n+\t\t/* when problem line already detected - guard close */\n+\t\tif (problem.line !\u003d -1) {\n \t\t\treturn;\n \t\t}\n+\t\t/* when problem message already fetched - guard close */\n \t\tif (problem.problemMessage !\u003d null) {\n \t\t\treturn;\n \t\t}\n-\t\t/* try to fetch line data*/\n-\t\tif (line.indexOf(\"line:\")\u003d\u003d-1){\n+\t\t/* try to fetch line data */\n+\t\tif (line.indexOf(\"line:\") \u003d\u003d -1) {\n \t\t\treturn;\n \t\t}\n \t\tint scriptTextStart \u003d line.indexOf(\u0027\\\u0027\u0027);\n \t\tif (scriptTextStart \u003d\u003d -1) {\n \t\t\treturn;\n \t\t}\n-\t\tString remaining \u003d line.substring(scriptTextStart+1);\n+\t\tString remaining \u003d line.substring(scriptTextStart + 1);\n \t\tint scriptTextEnd \u003d remaining.indexOf(\"\u0027\");\n \t\tif (scriptTextEnd \u003d\u003d -1) {\n \t\t\treturn;\n@@ -140,7 +100,70 @@ private void handleScriptText(String line) {\n \t\tif (lineIndex \u003d\u003d -1) {\n \t\t\treturn;\n \t\t}\n-\t\tString lineNr \u003d remaining.substring(lineIndex+LINE2.length());\n+\t\tString lineNr \u003d remaining.substring(lineIndex + LINE2.length());\n \t\tproblem.line \u003d converter.convertToInt(lineNr.trim());\n \t}\n+\n+\tprivate void inspectLine_4_problemType(String line) {\n+\t\t/* problem message already found - guard close */\n+\t\tif (problem.problemMessage !\u003d null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t/* detect problem type */\n+\t\tif (problem.problemType \u003d\u003d null) {\n+\t\t\tfor (ProblemType type : ProblemType.values()) {\n+\t\t\t\tif (line.startsWith(type.text)) {\n+\t\t\t\t\tproblem.problemType \u003d type;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void inspectLine_5_problemMessage(String line) {\n+\t\t/* problem message already found - guard close */\n+\t\tif (problem.problemMessage !\u003d null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t/* problem type detection must be done before */\n+\t\tif (problem.problemType !\u003d null) {\n+\t\t\tif (problem.problemMessage \u003d\u003d null) {\n+\t\t\t\tif (line.startsWith(\"\u003e\")) {\n+\t\t\t\t\tStringBuilder sb \u003d new StringBuilder();\n+\t\t\t\t\tsb.append(line.substring(1).trim());\n+\n+\t\t\t\t\tint mpos \u003d pos + 1;\n+\t\t\t\t\t/* inspect next lines */\n+\t\t\t\t\twhile (mpos \u003c\u003d maxPos) {\n+\t\t\t\t\t\tString nextLine \u003d data.get(mpos);\n+\t\t\t\t\t\tif (nextLine.length() \u003d\u003d 0) {\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tsb.append(\"\\n\");\n+\t\t\t\t\t\tsb.append(nextLine);\n+\n+\t\t\t\t\t\tint columnIdIndex \u003d nextLine.indexOf(COLUMN_IDENTIFIER);\n+\t\t\t\t\t\tif (columnIdIndex !\u003d -1) {\n+\t\t\t\t\t\t\t/* parse column information */\n+\t\t\t\t\t\t\tString columnString \u003d nextLine.substring(columnIdIndex + COLUMN_IDENTIFIER.length());\n+\t\t\t\t\t\t\tif (columnString.endsWith(\".\")) {\n+\t\t\t\t\t\t\t\tcolumnString \u003d columnString.substring(0, columnString.length() - 1);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tint column \u003d converter.convertToInt(columnString, -1);\n+\t\t\t\t\t\t\tproblem.column \u003d column;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tmpos++;\n+\n+\t\t\t\t\t}\n+\t\t\t\t\tpos \u003d mpos;// set pointer to end of former inspection\n+\t\t\t\t\tproblem.problemMessage \u003d sb.toString();\n+\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn;\n+\t\t}\n+\n+\t}\n }"
        },
        {
          "file_name": "egradle-plugin-main/src/main/java/de/jcup/egradle/core/validation/ProblemType.java",
          "patch": "@@ -20,6 +20,8 @@\n \t\n \tCOULD_NOT_COMPILE_SCRIPT(\"Could not compile script\"),\n \t\n+\tCOULD_NOT_COMPILE_BUILDFILE(\"Could not compile build file\"),\n+\t\n \tCOULD_NOT_COMPILE_SETTINGS(\"Could not compile settings file\");\n \n \tString text;"
        },
        {
          "file_name": "egradle-plugin-main/src/main/java/de/jcup/egradle/core/validation/ValidationResult.java",
          "patch": "@@ -25,17 +25,11 @@\n \tint column\u003d-1;\n \n \tpublic boolean hasProblem(){\n-\t\tboolean hasProblem \u003d false;\n-\t\thasProblem\u003dhasProblem || hasScriptEvaluationProblem();\n-\t\thasProblem\u003dhasProblem || hasCompileProblem();\n+\t\tboolean hasProblem \u003d problemType!\u003dnull;\n \t\treturn hasProblem;\n \t\t\n \t}\n \t\n-\tboolean hasScriptEvaluationProblem() {\n-\t\treturn problemType \u003d\u003d ProblemType.A_PROBLEM_OCCURRED_WHILE_EVALUATING;\n-\t}\n-\n \tpublic int getLine() {\n \t\treturn line;\n \t}\n@@ -48,11 +42,14 @@ public String getErrorMessage() {\n \t\treturn problemMessage;\n \t}\n \n-\tboolean hasCompileProblem() {\n-\t\treturn problemType \u003d\u003d ProblemType.COULD_NOT_COMPILE_SCRIPT || problemType\u003d\u003d ProblemType.COULD_NOT_COMPILE_SETTINGS;\n-\t}\n-\n \tpublic int getColumn() {\n \t\treturn column;\n \t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"ValidationResult [problemType\u003d\" + problemType + \", problemMessage\u003d\" + problemMessage\n+\t\t\t\t+ \", problemScriptPath\u003d\" + problemScriptPath + \", line\u003d\" + line + \", column\u003d\" + column + \"]\";\n+\t}\n+\t\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "egradle-plugin-main/src/test/java/de/jcup/egradle/core/validation/GradleOutputValidatorTest.java",
          "patch": "@@ -70,7 +70,7 @@ public void test_bugfix_157_works(){\n \t\tassertTrue(problem.hasProblem());\n \t\tassertEquals(28, problem.getLine());\n \t\tassertEquals(\n-\t\t\t\t\"/home/albert/dev/src/git/egradle-testcase-projects/singleproject-01-java-with-gradlewrapper/build.gradle\",\n+\t\t\t\t\"C:\\\\dev_custom\\\\projects\\\\JCUP\\\\egradle-testcase-projects\\\\singleproject-01-java-with-gradlewrapper\\\\build.gradle\",\n \t\t\t\tproblem.getScriptPath());\n \n \t}\n@@ -123,7 +123,7 @@ public void no_problem_on_evaluation_returns_in_validation_result_without_script\n \t\t/* test */\n \t\tValidationResult problem \u003d validatorToTest.validate(output);\n \t\tassertNotNull(problem);\n-\t\tassertFalse(problem.hasScriptEvaluationProblem());\n+\t\tassertFalse(problem.hasProblem());\n \t\tassertTestOutputDoesNotExceedLimits();\n \t}\n \n@@ -145,7 +145,8 @@ public void a_problem_on_evaluation_build__buildfile__line_1_is_is_inside_valida\n \t\t/* test */\n \t\tValidationResult problem \u003d validatorToTest.validate(output);\n \t\tassertNotNull(problem);\n-\t\tassertTrue(problem.hasScriptEvaluationProblem());\n+\t\tassertTrue(problem.hasProblem());\n+\t\tassertTrue(problem.hasProblem());\n \t\tassertEquals(1, problem.getLine());\n \t\tassertEquals(\"/home/albert/dev/src/git/gradle-project-template/build.gradle\", problem.getScriptPath());\n \t\tassertEquals(\"Cannot get property \u0027x\u0027 on null object\", problem.getErrorMessage());\n@@ -164,7 +165,7 @@ public void a_problem_on_evaluation_script__home_albert_build_gradle__line_612_i\n \t\t/* test */\n \t\tValidationResult problem \u003d validatorToTest.validate(output);\n \t\tassertNotNull(problem);\n-\t\tassertTrue(problem.hasScriptEvaluationProblem());\n+\t\tassertTrue(problem.hasProblem());\n \t\tassertEquals(612, problem.getLine());\n \t\tassertEquals(\"home/albert/build.gradle\", problem.getScriptPath());\n \t\tassertEquals(\"Could not get unknown property \u0027x\u0027 for root project \u0027xyz\u0027 of type org.gradle.api.Project\",\n@@ -205,7 +206,7 @@ public void settings_compile_error() {\n \t\t/* test */\n \t\tValidationResult problem \u003d validatorToTest.validate(output);\n \t\tassertNotNull(problem);\n-\t\tassertTrue(problem.hasCompileProblem());\n+\t\tassertTrue(problem.hasProblem());\n \t\tassertEquals(7, problem.getLine());\n \t\tassertEquals(\"/home/albert/dev/src/git/gradle-project-template/settings.gradle\", problem.getScriptPath());\n \t\tassertTrue(problem.getErrorMessage().indexOf(\"unexpected token: import \") !\u003d -1);\n@@ -247,7 +248,7 @@ public void compile_script_error() {\n \t\t/* test */\n \t\tValidationResult problem \u003d validatorToTest.validate(output);\n \t\tassertNotNull(problem);\n-\t\tassertTrue(problem.hasCompileProblem());\n+\t\tassertTrue(problem.hasProblem());\n \t\tassertEquals(7, problem.getLine());\n \t\tassertEquals(\"/home/albert/dev/src/git/code2doc/libraries.gradle\", problem.getScriptPath());\n \t\tassertTrue(problem.getErrorMessage().indexOf(\"expecting \u0027]\u0027, found \u0027mockito_all\u0027 \") !\u003d -1);"
        }
      ]
    }
  },
  {
    "name": "#78: Abort file analysis on lexer or parser error",
    "url": "https://github.com/sleekbyte/tailor/pull/155",
    "description": "Fixes #78. \n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/sleekbyte/tailor/commit/7932aead83640ff3edf786e09dea07aafc69a7ed",
      "files": [
        {
          "file_name": "src/main/java/com/sleekbyte/tailor/Tailor.java",
          "patch": "@@ -5,6 +5,7 @@\n import com.sleekbyte.tailor.common.MaxLengths;\n import com.sleekbyte.tailor.common.Severity;\n import com.sleekbyte.tailor.listeners.CommentAnalyzer;\n+import com.sleekbyte.tailor.listeners.ErrorListener;\n import com.sleekbyte.tailor.listeners.FileListener;\n import com.sleekbyte.tailor.listeners.MainListener;\n import com.sleekbyte.tailor.output.Printer;\n@@ -86,6 +87,86 @@ public static void checkSrcRoot() {\n     }\n \n     /**\n+     * Runs SwiftLexer on input file to generate token stream.\n+     *\n+     * @param inputFile Lexer input\n+     * @return Token stream\n+     * @throws IOException if file cannot be opened\n+     * @throws ArgumentParserException if cmd line arguments cannot be parsed\n+     */\n+    public static CommonTokenStream getTokenStream(File inputFile) throws IOException, ArgumentParserException {\n+        FileInputStream inputStream \u003d new FileInputStream(inputFile);\n+        SwiftLexer lexer \u003d new SwiftLexer(new ANTLRInputStream(inputStream));\n+        if (!argumentParser.debugFlagSet()) {\n+            lexer.removeErrorListeners();\n+            lexer.addErrorListener(new ErrorListener());\n+        }\n+        return new CommonTokenStream(lexer);\n+    }\n+\n+    /**\n+     * Parse token stream to generate a CST.\n+     *\n+     * @param tokenStream Token stream generated by lexer\n+     * @return Parse Tree or null if parsing error occurs (and debug flag is set)\n+     * @throws ArgumentParserException if an error occurs when parsing cmd line arguments\n+     */\n+    public static SwiftParser.TopLevelContext getParseTree(CommonTokenStream tokenStream)\n+        throws ArgumentParserException {\n+        SwiftParser swiftParser \u003d new SwiftParser(tokenStream);\n+        if (!argumentParser.debugFlagSet()) {\n+            swiftParser.removeErrorListeners();\n+            swiftParser.addErrorListener(new ErrorListener());\n+        }\n+        return swiftParser.topLevel();\n+    }\n+\n+    /**\n+     * Analyze files with SwiftLexer, SwiftParser and Listeners.\n+     *\n+     * @param filenames List of files to analyze\n+     * @throws ArgumentParserException if an error occurs when parsing cmd line arguments\n+     * @throws IOException if a file cannot be opened\n+     */\n+    public static void analyzeFiles(Set\u003cString\u003e filenames) throws ArgumentParserException, IOException {\n+        long numErrors \u003d 0;\n+        MaxLengths maxLengths \u003d argumentParser.parseMaxLengths();\n+        Severity maxSeverity \u003d argumentParser.getMaxSeverity();\n+\n+        for (String filename : filenames) {\n+            File inputFile \u003d new File(filename);\n+            CommonTokenStream tokenStream;\n+            SwiftParser.TopLevelContext tree;\n+\n+            try {\n+                tokenStream \u003d getTokenStream(inputFile);\n+                tree \u003d getParseTree(tokenStream);\n+            } catch (ErrorListener.ParseException e) {\n+                Printer printer \u003d new Printer(inputFile, maxSeverity);\n+                printer.printParseErrorMessage();\n+                continue;\n+            }\n+\n+            try (Printer printer \u003d new Printer(inputFile, maxSeverity)) {\n+                MainListener listener \u003d new MainListener(printer, maxLengths, tokenStream);\n+                ParseTreeWalker walker \u003d new ParseTreeWalker();\n+                walker.walk(listener, tree);\n+                try (FileListener fileListener \u003d new FileListener(printer, inputFile, maxLengths)) {\n+                    fileListener.verify();\n+                }\n+                CommentAnalyzer commentAnalyzer \u003d new CommentAnalyzer(tokenStream, printer);\n+                commentAnalyzer.analyze();\n+                numErrors +\u003d printer.getNumErrorMessages();\n+            }\n+        }\n+\n+        if (numErrors \u003e\u003d 1L) {\n+            // Non-zero exit status when any violation messages have Severity.ERROR, controlled by --max-severity\n+            System.exit(EXIT_FAILURE);\n+        }\n+    }\n+\n+    /**\n      * Main runner for Tailor.\n      *\n      * @param args command line arguments\n@@ -112,35 +193,7 @@ public static void main(String[] args) {\n                 exitWithMissingSourceFileError();\n             }\n \n-            long numErrors \u003d 0;\n-            MaxLengths maxLengths \u003d argumentParser.parseMaxLengths();\n-            Severity maxSeverity \u003d argumentParser.getMaxSeverity();\n-\n-            for (String filename : filenames) {\n-                File inputFile \u003d new File(filename);\n-                FileInputStream inputStream \u003d new FileInputStream(inputFile);\n-                SwiftLexer lexer \u003d new SwiftLexer(new ANTLRInputStream(inputStream));\n-                CommonTokenStream tokenStream \u003d new CommonTokenStream(lexer);\n-                SwiftParser swiftParser \u003d new SwiftParser(tokenStream);\n-                SwiftParser.TopLevelContext tree \u003d swiftParser.topLevel();\n-\n-                try (Printer printer \u003d new Printer(inputFile, maxSeverity)) {\n-                    MainListener listener \u003d new MainListener(printer, maxLengths, tokenStream);\n-                    ParseTreeWalker walker \u003d new ParseTreeWalker();\n-                    walker.walk(listener, tree);\n-                    try (FileListener fileListener \u003d new FileListener(printer, inputFile, maxLengths)) {\n-                        fileListener.verify();\n-                    }\n-                    CommentAnalyzer commentAnalyzer \u003d new CommentAnalyzer(tokenStream, printer);\n-                    commentAnalyzer.analyze();\n-                    numErrors +\u003d printer.getNumErrorMessages();\n-                }\n-            }\n-\n-            if (numErrors \u003e\u003d 1L) {\n-                // Non-zero exit status when any violation messages have Severity.ERROR, controlled by --max-severity\n-                System.exit(EXIT_FAILURE);\n-            }\n+            analyzeFiles(filenames);\n \n         } catch (IOException e) {\n             System.err.println(\"Source file analysis failed. Reason: \" + e.getMessage());"
        },
        {
          "file_name": "src/main/java/com/sleekbyte/tailor/common/Messages.java",
          "patch": "@@ -108,5 +108,5 @@\n     public static final String MAX_NAME_LENGTH_DESC \u003d MAXIMUM + IDENTIFIER_NAME + LENGTH + IN_CHARS_DESC;\n     public static final String MAX_STRUCT_LENGTH_DESC \u003d MAXIMUM + STRUCT + LENGTH + IN_CHARS_DESC;\n     public static final String MAX_SEVERITY_DESC \u003d MAXIMUM + SEVERITY + \"[\" + ERROR + \"|\" + WARNING + \"]\";\n-\n+    public static final String DEBUG_DESC \u003d \"print ANTLR error messages when parsing error occurs\";\n }"
        },
        {
          "file_name": "src/main/java/com/sleekbyte/tailor/listeners/ErrorListener.java",
          "patch": "@@ -0,0 +1,22 @@\n+package com.sleekbyte.tailor.listeners;\n+\n+import org.antlr.v4.runtime.BaseErrorListener;\n+import org.antlr.v4.runtime.RecognitionException;\n+import org.antlr.v4.runtime.Recognizer;\n+\n+/**\n+ * Listens for errors during parsing.\n+ */\n+public class ErrorListener extends BaseErrorListener {\n+\n+    /**\n+     * Exception thrown when a parse error occurs.\n+     */\n+    public static class ParseException extends RuntimeException {}\n+\n+    @Override\n+    public void syntaxError(Recognizer\u003c?, ?\u003e recognizer, Object offendingSymbol, int line, int charPositionInLine,\n+                            String msg, RecognitionException ex) {\n+        throw new ParseException();\n+    }\n+}"
        },
        {
          "file_name": "src/main/java/com/sleekbyte/tailor/output/Printer.java",
          "patch": "@@ -86,6 +86,11 @@ public void close() {\n         this.msgBuffer.clear();\n     }\n \n+    public void printParseErrorMessage() {\n+        System.out.println(getHeader(inputFile));\n+        System.out.println(inputFile + \" could not be parsed successfully, skipping...\");\n+    }\n+\n     public long getNumErrorMessages() {\n         return msgBuffer.values().stream().filter(msg -\u003e msg.getSeverity().equals(Severity.ERROR)).count();\n     }"
        },
        {
          "file_name": "src/main/java/com/sleekbyte/tailor/utils/ArgumentParser.java",
          "patch": "@@ -26,6 +26,7 @@\n     private static final String MAX_NAME_LENGTH_OPT \u003d \"max-name-length\";\n     private static final String MAX_STRUCT_LENGTH_OPT \u003d \"max-struct-length\";\n     private static final String MAX_SEVERITY_OPT \u003d \"max-severity\";\n+    private static final String DEBUG_OPT \u003d \"debug\";\n     private static final String DEFAULT_INT_ARG \u003d \"0\";\n \n     private Options options;\n@@ -85,6 +86,11 @@ private void addOptions() {\n         final Option maxStructLength \u003d addArgument(MAX_STRUCT_LENGTH_OPT, Messages.MAX_STRUCT_LENGTH_DESC);\n         final Option maxSeverity \u003d addArgument(MAX_SEVERITY_OPT, Messages.MAX_SEVERITY_DESC);\n \n+        final Option debug \u003d Option.builder()\n+            .longOpt(DEBUG_OPT)\n+            .desc(Messages.DEBUG_DESC)\n+            .build();\n+\n         options \u003d new Options();\n         options.addOption(help);\n         options.addOption(maxClassLength);\n@@ -95,6 +101,7 @@ private void addOptions() {\n         options.addOption(maxNameLength);\n         options.addOption(maxStructLength);\n         options.addOption(maxSeverity);\n+        options.addOption(debug);\n     }\n \n     /**\n@@ -140,4 +147,8 @@ public Severity getMaxSeverity() throws ArgumentParserException {\n         }\n     }\n \n+    public boolean debugFlagSet() throws ArgumentParserException {\n+        return cmd !\u003d null \u0026\u0026 cmd.hasOption(DEBUG_OPT);\n+    }\n+\n }"
        },
        {
          "file_name": "src/test/java/com/sleekbyte/tailor/grammar/GrammarTest.java",
          "patch": "@@ -43,7 +43,7 @@ public void testGrammar() throws UnsupportedEncodingException {\n         for (File swiftFile : swiftFiles) {\n             errContent \u003d new ByteArrayOutputStream();\n             System.setErr(new PrintStream(errContent, false, Charset.defaultCharset().name()));\n-            String[] command \u003d { (TEST_INPUT_DIR + swiftFile.getName()) };\n+            String[] command \u003d { \"--debug\", (TEST_INPUT_DIR + swiftFile.getName()) };\n             Tailor.main(command);\n             assertThat(errContent.toString(Charset.defaultCharset().name()), IsEmptyString.isEmptyString());\n             System.setErr(null);"
        }
      ]
    }
  },
  {
    "name": "PMD Java 8 Lambda parse error on direct field access",
    "url": "https://github.com/janScheible/knorxx/issues/21",
    "description": "The PMD Java 8 parse (which is used in the class `JavaSourceDependencyCollector`) fails on code like that:\n\n``` java\nobject.event \u003d () -\u003e {\n    Request request \u003d new Request();\n    request.id \u003d 42;\n};\n```\n\nThe bug is reported to the PMD guys as [#1258 Java 8 Lambda parse error on direct field access ](http://sourceforge.net/p/pmd/bugs/1258/).\n",
    "keywords": [
      "request",
      "java",
      "pmd",
      "8",
      "parse"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/janScheible/knorxx/commit/f993f44458c5ce19a231a6868b6ee203e57bd455",
      "files": [
        {
          "file_name": "generator/pom.xml",
          "patch": "@@ -188,8 +188,8 @@\n         \u003c/dependency\u003e\n         \u003cdependency\u003e\n             \u003cgroupId\u003enet.sourceforge.pmd\u003c/groupId\u003e\n-            \u003cartifactId\u003epmd\u003c/artifactId\u003e\n-            \u003cversion\u003e5.1.2\u003c/version\u003e\n+            \u003cartifactId\u003epmd-java\u003c/artifactId\u003e\n+            \u003cversion\u003e5.2.3\u003c/version\u003e\n             \u003cexclusions\u003e\n                 \u003cexclusion\u003e\n                     \u003cartifactId\u003easm\u003c/artifactId\u003e"
        }
      ]
    }
  },
  {
    "name": "Parse error if variable name contains \u0027or\u0027",
    "url": "https://github.com/PebbleTemplates/pebble/issues/14",
    "description": "When parsing the following string: `{% for item in foo.org %}`, the parser throws an error:\n\n```\ncom.mitchellbosecke.pebble.error.SyntaxException: Unexpected token of value [or] expected token of type NAME (index.twig.html:102)\n    at com.mitchellbosecke.pebble.lexer.TokenStream.expect(TokenStream.java:100)\n    at com.mitchellbosecke.pebble.lexer.TokenStream.expect(TokenStream.java:62)\n    at com.mitchellbosecke.pebble.parser.ExpressionParser.parseSubscriptExpression(ExpressionParser.java:402)\n    at com.mitchellbosecke.pebble.parser.ExpressionParser.parsePostfixExpression(ExpressionParser.java:312)\n    at com.mitchellbosecke.pebble.parser.ExpressionParser.subparseExpression(ExpressionParser.java:260)\n    at com.mitchellbosecke.pebble.parser.ExpressionParser.parseExpression(ExpressionParser.java:122)\n    at com.mitchellbosecke.pebble.parser.ExpressionParser.parseExpression(ExpressionParser.java:67)\n    at com.mitchellbosecke.pebble.tokenParser.ForTokenParser.parse(ForTokenParser.java:39)\n    at com.mitchellbosecke.pebble.parser.ParserImpl.subparse(ParserImpl.java:244)\n    at com.mitchellbosecke.pebble.parser.ParserImpl.subparse(ParserImpl.java:153)\n    at com.mitchellbosecke.pebble.parser.ParserImpl.parse(ParserImpl.java:135)\n    at com.mitchellbosecke.pebble.PebbleEngine$1.call(PebbleEngine.java:171)\n    at com.mitchellbosecke.pebble.PebbleEngine$1.call(PebbleEngine.java:147)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    atcom.mitchellbosecke.pebble.cache.DefaultTemplateLoadingCache.get(DefaultTemplateLoadingCache.java:28)\n    at com.mitchellbosecke.pebble.PebbleEngine.compile(PebbleEngine.java:147)\n```\n",
    "keywords": [
      "com",
      "parser expressionparser",
      "parse",
      "pebble parser",
      "error",
      "parserimpl",
      "com mitchellbosecke",
      "mitchellbosecke",
      "pebble",
      "expressionparser",
      "parser",
      "tokenstream",
      "mitchellbosecke pebble",
      "pebbleengine"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/PebbleTemplates/pebble/commit/4c76c173ba42d0505c64bd428e72d537362d3e34",
      "files": [
        {
          "file_name": "src/main/java/com/mitchellbosecke/pebble/lexer/LexerImpl.java",
          "patch": "@@ -88,6 +88,9 @@\n \t */\r\n \tprivate static final Pattern REGEX_NAME \u003d Pattern.compile(\"^[a-zA-Z_][a-zA-Z0-9_]*\");\r\n \tprivate static final Pattern REGEX_NUMBER \u003d Pattern.compile(\"^[0-9]+(\\\\.[0-9]+)?\");\r\n+\r\n+\t// the negative lookbehind assertion is used to ignore escaped quotation\r\n+\t// marks\r\n \tprivate static final Pattern REGEX_STRING \u003d Pattern.compile(\"((\\\").*?(?\u003c!\\\\\\\\)(\\\"))|((\u0027).*?(?\u003c!\\\\\\\\)(\u0027))\",\r\n \t\t\tPattern.DOTALL);\r\n \tprivate static final String PUNCTUATION \u003d \"()[]{}?:.,|\u003d\";\r\n@@ -588,6 +591,13 @@ private Pattern getOperatorRegex() {\n \t\t\t\tregex.append(\"|\");\r\n \t\t\t}\r\n \t\t\tregex.append(Pattern.quote(operator));\r\n+\r\n+\t\t\t/*\r\n+\t\t\t * negative lookahead assertion to make sure the next character is\r\n+\t\t\t * NOT an alpha character. This ensures user can type \"organization\"\r\n+\t\t\t * without the \"or\" being parsed as an operator.\r\n+\t\t\t */\r\n+\t\t\tregex.append(\"(?![a-zA-Z])\");\r\n \t\t}\r\n \r\n \t\treturn Pattern.compile(regex.toString());\r"
        },
        {
          "file_name": "src/test/java/com/mitchellbosecke/pebble/ParsingOdditiesTest.java",
          "patch": "@@ -77,6 +77,44 @@ public void testPositionalArgumentAfterNamedArguments() throws PebbleException,\n \t\tassertEquals(\"2012/July/1\", writer.toString());\n \t}\n \t\n+\t@Test\n+\tpublic void testVariableNamePrefixedWithOperatorName() throws PebbleException, IOException {\n+\t\tLoader loader \u003d new StringLoader();\n+\t\tPebbleEngine pebble \u003d new PebbleEngine(loader);\n+\n+\t\tPebbleTemplate template \u003d pebble.compile(\"{{ organization }} {{ nothing }} {{ andy }} {{ equalsy }} {{ istanbul }}\");\n+\t\tMap\u003cString, Object\u003e context \u003d new HashMap\u003c\u003e();\n+\t\tcontext.put(\"organization\", \"organization\");\n+\t\tcontext.put(\"nothing\", \"nothing\");\n+\t\tcontext.put(\"andy\", \"andy\");\n+\t\tcontext.put(\"equalsy\", \"equalsy\");\n+\t\tcontext.put(\"istanbul\", \"istanbul\");\n+\t\tWriter writer \u003d new StringWriter();\n+\t\ttemplate.evaluate(writer, context);\n+\t\tassertEquals(\"organization nothing andy equalsy istanbul\", writer.toString());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testAttributeNamePrefixedWithOperatorName() throws PebbleException, IOException {\n+\t\tLoader loader \u003d new StringLoader();\n+\t\tPebbleEngine pebble \u003d new PebbleEngine(loader);\n+\n+\t\tPebbleTemplate template \u003d pebble.compile(\"{{ foo.org }}\");\n+\t\tMap\u003cString, Object\u003e context \u003d new HashMap\u003c\u003e();\n+\t\tcontext.put(\"foo\", new Foo(\"success\"));\n+\t\tWriter writer \u003d new StringWriter();\n+\t\ttemplate.evaluate(writer, context);\n+\t\tassertEquals(\"success\", writer.toString());\n+\t}\n+\t\n+\tpublic static class Foo {\n+\t\tpublic String org;\n+\t\t\n+\t\tpublic Foo(String org){\n+\t\t\tthis.org \u003d org;\n+\t\t}\n+\t}\n+\t\n \t@Test(expected\u003dPebbleException.class)\n \tpublic void testIncorrectlyNamedArgument() throws PebbleException, IOException {\n \t\tLoader loader \u003d new StringLoader();"
        }
      ]
    }
  },
  {
    "name": "FormatException should not be used for validation errors and parser failures",
    "url": "https://github.com/culturegraph/metafacture-core/issues/6",
    "description": "FormatException is used as a base class for WellformednessException and ValidationException but it is also used for flagging errors while parsing Flux files and Formeta data. This makes it difficult to distinguish between parser errors and failed assertions during unit testing (see [FormetaDecoderTest.java](https://github.com/culturegraph/metafacture-core/src/test/java/org/culturegraph/mf/stream/converter/FormetaDecoderTest.java))\n",
    "keywords": [
      "used",
      "errors"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/culturegraph/metafacture-core/commit/e2b5054b8c727fa9ae4ac381627bc5053ab5a5da",
      "files": [
        {
          "file_name": "src/main/java/org/culturegraph/mf/exceptions/ValidationException.java",
          "patch": "@@ -1,47 +0,0 @@\n-/*\n- * Copyright 2013, 2014 Deutsche Nationalbibliothek\n- *\n- * Licensed under the Apache License, Version 2.0 the \"License\";\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.culturegraph.mf.exceptions;\n-\n-import org.culturegraph.mf.stream.sink.StreamValidator;\n-\n-/**\n- * Thrown if data processing fails do to format errors which are\n- * no structural errors but caused by invalid data. For instance,\n- * encountering missing fields or an invalid field order in a record\n- * can raise a validation error.\n- *\n- * @see StreamValidator\n- *\n- * @author Christoph Böhme\n- *\n- */\n-public final class ValidationException extends FormatException {\n-\n-\tprivate static final long serialVersionUID \u003d -4446333800830109742L;\n-\n-\tpublic ValidationException(final String message) {\n-\t\tsuper(message);\n-\t}\n-\n-\tpublic ValidationException(final Throwable cause) {\n-\t\tsuper(cause);\n-\t}\n-\n-\tpublic ValidationException(final String message, final Throwable cause) {\n-\t\tsuper(message, cause);\n-\t}\n-\n-}"
        },
        {
          "file_name": "src/main/java/org/culturegraph/mf/stream/sink/StreamValidator.java",
          "patch": "@@ -21,8 +21,8 @@\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.function.Consumer;\n \n-import org.culturegraph.mf.exceptions.ValidationException;\n import org.culturegraph.mf.framework.StreamReceiver;\n import org.culturegraph.mf.types.Event;\n import org.slf4j.Logger;\n@@ -31,17 +31,21 @@\n \n /**\n  * Validates a stream of events using a list of expected stream events.\n- * If the stream is invalid a {@link ValidationException} is thrown.\n+ * If the stream is invalid, the error handler set via\n+ * {@link #setErrorHandler(Consumer)} is called.\n+ * \u003cp\u003e\n+ * This module also ensures that the received event stream is well-formed.\n  *\n- * @see WellformednessChecker\n  * @see EventList\n- * @see ValidationException\n  *\n  * @author Christoph Böhme\n  *\n  */\n public final class StreamValidator implements StreamReceiver {\n \n+\tpublic static final Consumer\u003cString\u003e DEFAULT_ERROR_HANDLER \u003d\n+\t\t\tmsg -\u003e { /* do nothing */ };\n+\n \tprivate static final Logger LOG \u003d\n \t\t\tLoggerFactory.getLogger(StreamValidator.class);\n \n@@ -57,11 +61,13 @@\n \tprivate static final String UNCONSUMED_RECORDS_FOUND \u003d\n \t\t\t\"Unconsumed records found\";\n \n-\tprivate final EventNode eventStream;\n \tprivate final Deque\u003cList\u003cEventNode\u003e\u003e stack \u003d new ArrayDeque\u003c\u003e();\n+\tprivate final EventNode eventStream;\n \tprivate boolean validating;\n \tprivate boolean validationFailed;\n \n+\tprivate Consumer\u003cString\u003e errorHandler \u003d DEFAULT_ERROR_HANDLER;\n+\n \tprivate boolean strictRecordOrder;\n \tprivate boolean strictKeyOrder;\n \tprivate boolean strictValueOrder;\n@@ -73,12 +79,28 @@ public StreamValidator(final List\u003cEvent\u003e expectedStream) {\n \t\tthis.eventStream \u003d new EventNode(null, null);\n \t\tfoldEventStream(this.eventStream, expectedStream.iterator());\n \n-\t\twellformednessChecker.setErrorHandler(\n-\t\t\t\tmsg -\u003e { throw new ValidationException(msg); });\n+\t\twellformednessChecker.setErrorHandler(errorHandler);\n \n \t\tresetStream();\n \t}\n \n+\t/**\n+\t * Sets the error handler which is called when a invalid event stream is\n+\t * received.\n+\t * \u003cp\u003e\n+\t * The handler is called with a message describing the error.\n+\t *\n+\t * @param errorHandler a method which receives an error message\n+\t */\n+\tpublic void setErrorHandler(final Consumer\u003cString\u003e errorHandler) {\n+\t\tthis.errorHandler \u003d errorHandler;\n+\t\twellformednessChecker.setErrorHandler(errorHandler);\n+\t}\n+\n+\tpublic Consumer\u003cString\u003e getErrorHandler() {\n+\t\treturn errorHandler;\n+\t}\n+\n \tpublic boolean isStrictRecordOrder() {\n \t\treturn strictRecordOrder;\n \t}\n@@ -118,7 +140,8 @@ public void setStrictValueOrder(final boolean strictValueOrder) {\n \t@Override\n \tpublic void startRecord(final String identifier) {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n+\t\t\treturn;\n \t\t}\n \n \t\twellformednessChecker.startRecord(identifier);\n@@ -128,62 +151,64 @@ public void startRecord(final String identifier) {\n \t\tif (!openGroups(Event.Type.START_RECORD, identifier, strictRecordOrder, false)) {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(NO_RECORD_FOUND + identifier);\n+\t\t\terrorHandler.accept(NO_RECORD_FOUND + identifier);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void endRecord() {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n+\t\t\treturn;\n \t\t}\n \n \t\twellformednessChecker.endRecord();\n \n \t\tif (!closeGroups()) {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(\n-\t\t\t\t\tNO_RECORD_FOUND + \"No record matched the sequence of stream events\");\n+\t\t\terrorHandler.accept(NO_RECORD_FOUND +\n+\t\t\t\t\t\"No record matched the sequence of stream events\");\n \t\t}\n-\n \t}\n \n \t@Override\n \tpublic void startEntity(final String name) {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n+\t\t\treturn;\n \t\t}\n \n \t\twellformednessChecker.startEntity(name);\n \n \t\tif (!openGroups(Event.Type.START_ENTITY, name, strictKeyOrder, strictValueOrder)) {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(NO_ENTITY_FOUND + name);\n+\t\t\terrorHandler.accept(NO_ENTITY_FOUND + name);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void endEntity() {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n \t\t}\n \n \t\twellformednessChecker.endEntity();\n \n \t\tif (!closeGroups()) {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(\n-\t\t\t\t\tNO_ENTITY_FOUND + \"No entity matched the sequence of stream events\");\n+\t\t\terrorHandler.accept(NO_ENTITY_FOUND +\n+\t\t\t\t\t\"No entity matched the sequence of stream events\");\n \t\t}\n \t}\n \n \t@Override\n \tpublic void literal(final String name, final String value) {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n+\t\t\treturn;\n \t\t}\n \n \t\twellformednessChecker.literal(name, value);\n@@ -202,7 +227,7 @@ public void literal(final String name, final String value) {\n \t\tif (stackFrame.isEmpty()) {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(NO_LITERAL_FOUND + name + \"\u003d\" + value);\n+\t\t\terrorHandler.accept(NO_LITERAL_FOUND + name + \"\u003d\" + value);\n \t\t}\n \t}\n \n@@ -221,7 +246,8 @@ public void resetStream() {\n \t@Override\n \tpublic void closeStream() {\n \t\tif (validationFailed) {\n-\t\t\tthrow new ValidationException(VALIDATION_FAILED);\n+\t\t\terrorHandler.accept(VALIDATION_FAILED);\n+\t\t\treturn;\n \t\t}\n \n \t\twellformednessChecker.closeStream();\n@@ -235,7 +261,7 @@ public void closeStream() {\n \t\t} else {\n \t\t\tvalidationFailed \u003d true;\n \t\t\tlogEventStream();\n-\t\t\tthrow new ValidationException(UNCONSUMED_RECORDS_FOUND);\n+\t\t\terrorHandler.accept(UNCONSUMED_RECORDS_FOUND);\n \t\t}\n \t}\n "
        },
        {
          "file_name": "src/main/java/org/culturegraph/mf/test/TestCase.java",
          "patch": "@@ -85,6 +85,7 @@ public void run() {\n \t\tinputReader.closeStream();\n \n \t\tfinal StreamValidator validator \u003d new StreamValidator(resultStream.getEvents());\n+\t\tvalidator.setErrorHandler(msg -\u003e { throw new AssertionError(msg); });\n \n \t\tfinal Element result \u003d (Element) config.getElementsByTagName(RESULT_TAG).item(0);\n \t\tvalidator.setStrictRecordOrder(Boolean.parseBoolean(result.getAttribute(STRICT_RECORD_ORDER_ATTR)));"
        },
        {
          "file_name": "src/main/java/org/culturegraph/mf/test/TestCaseRunner.java",
          "patch": "@@ -73,9 +73,6 @@ protected void runChild(final TestCase child, final RunNotifier notifier) {\n \t\t\tnotifier.fireTestStarted(describeChild(child));\n \t\t\ttry {\n \t\t\t\tchild.run();\n-\t\t\t} catch (final FormatException e) {\n-\t\t\t\tnotifier.fireTestFailure(new Failure(describeChild(child),\n-\t\t\t\t\t\tnew AssertionError(e)));\n \t\t\t} catch (final Throwable e) {\n \t\t\t\tnotifier.fireTestFailure(new Failure(describeChild(child), e));\n \t\t\t} finally {"
        },
        {
          "file_name": "src/test/java/org/culturegraph/mf/stream/sink/StreamValidatorTest.java",
          "patch": "@@ -15,8 +15,16 @@\n  */\n package org.culturegraph.mf.stream.sink;\n \n-import org.culturegraph.mf.exceptions.ValidationException;\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Mockito.atLeastOnce;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.function.Consumer;\n+\n+import org.junit.Before;\n import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n \n /**\n  * Tests for class {@link StreamValidator}.\n@@ -26,18 +34,28 @@\n  */\n public final class StreamValidatorTest {\n \n-\t@Test(expected\u003d ValidationException.class)\n+\t@Mock\n+\tprivate Consumer\u003cString\u003e errorHandler;\n+\n+\t@Before\n+\tpublic void initMocks() {\n+\t\tMockitoAnnotations.initMocks(this);\n+\t}\n+\n+\t@Test\n \tpublic void shouldFailIfEndRecordEventIsMissing() {\n \t\tfinal EventList stream \u003d new EventList();\n-\n \t\tstream.startRecord(\"1\");\n \t\tstream.endRecord();\n \t\tstream.closeStream();\n \n \t\tfinal StreamValidator validator \u003d new StreamValidator(stream.getEvents());\n+\t\tvalidator.setErrorHandler(errorHandler);\n \n \t\tvalidator.startRecord(\"1\");\n \t\tvalidator.closeStream();\n+\n+\t\tverify(errorHandler, atLeastOnce()).accept(any());\n \t}\n \n }"
        }
      ]
    }
  },
  {
    "name": "Error parsing correct date with datetime format provided in rfc3339 compliance ",
    "url": "https://github.com/raml-org/raml-java-parser/issues/275",
    "description": "The following datetime format should be valid:\n\n```\n  updated:\n    type: datetime\n    examples:\n      good: 2016-02-28T16:41:41Z # secfrac is optional\n```\n",
    "keywords": [
      "datetime"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/raml-org/raml-java-parser/commit/f1a95a0625d649f22de3487305a4230230fe552f",
      "files": [
        {
          "file_name": "raml-parser-2/src/test/resources/org/raml/v2/parser/examples/builtin/date-validation/input.raml",
          "patch": "@@ -22,6 +22,13 @@ types:\n       good: 2016-02-28T16:41:41.090Z\n       bad: 2016-13-34T27:65:65.0901Z\n     format: rfc3339 # the default, so no need to specify\n+  updated:\n+    type: datetime\n+    examples:\n+      good: 2016-02-28T16:41:41Z # secfrac is optional\n+      good2: 2016-02-28T16:41:41-08:30 # valid offset\n+      bad: 2016-02-28T16:41:41+8:30 # invalid offset\n+    format: rfc3339 # the default, so no need to specify\n   If-Modified-Since:\n     type: datetime\n     examples:"
        },
        {
          "file_name": "raml-parser-2/src/test/resources/org/raml/v2/parser/examples/builtin/date-validation/output.txt",
          "patch": "@@ -1,13 +1,13 @@\n-RamlDocumentNode (Start: 11 , End: 838, On: input.raml, Source: SYObjectNode)\n+RamlDocumentNode (Start: 11 , End: 1101, On: input.raml, Source: SYObjectNode)\n     KeyValueNodeImpl (Start: 11 , End: 29, On: input.raml)\n         SYStringNode: \"title\" (Start: 11 , End: 16, On: input.raml)\n         OverlayableObjectNodeImpl (Start: 18 , End: 29, On: input.raml, Source: SYStringNode)\n             KeyValueNodeImpl (Start: 11 , End: 29, On: input.raml)\n                 StringNodeImpl: \"value\" (Start: -1 , End: -1)\n                 OverlayableStringNode: \"My Date API\" (Start: 18 , End: 29, On: input.raml)\n-    TypesNode (Start: 30 , End: 838, On: input.raml, Source: KeyValueNodeImpl)\n+    TypesNode (Start: 30 , End: 1101, On: input.raml, Source: KeyValueNodeImpl)\n         SYStringNode: \"types\" (Start: 30 , End: 35, On: input.raml)\n-        SYObjectNode (Start: 39 , End: 838, On: input.raml)\n+        SYObjectNode (Start: 39 , End: 1101, On: input.raml)\n             TypeDeclarationField (Start: 39 , End: 169, On: input.raml, Source: KeyValueNodeImpl)\n                 SYStringNode: \"birthday\" (Start: 39 , End: 47, On: input.raml)\n                 TypeDeclarationNode (Start: 53 , End: 169, On: input.raml, Source: SYObjectNode)\n@@ -95,24 +95,51 @@ RamlDocumentNode (Start: 11 , End: 838, On: input.raml, Source: SYObjectNode)\n                             KeyValueNodeImpl (Start: -1 , End: -1)\n                                 StringNodeImpl: \"value\" (Start: -1 , End: -1)\n                                 OverlayableStringNode: \"created\" (Start: -1 , End: -1, Source: SYStringNode)\n-            TypeDeclarationField (Start: 616 , End: 838, On: input.raml, Source: KeyValueNodeImpl)\n-                SYStringNode: \"If-Modified-Since\" (Start: 616 , End: 633, On: input.raml)\n-                TypeDeclarationNode (Start: 639 , End: 838, On: input.raml, Source: SYObjectNode)\n-                    KeyValueNodeImpl (Start: 639 , End: 653, On: input.raml)\n-                        SYStringNode: \"type\" (Start: 639 , End: 643, On: input.raml)\n-                        NativeTypeExpressionNode: \"datetime\" (Start: 645 , End: 653, On: input.raml, Source: SYStringNode)\n-                    ExamplesNode (Start: 658 , End: 755, On: input.raml, Source: KeyValueNodeImpl)\n-                        SYStringNode: \"examples\" (Start: 658 , End: 666, On: input.raml)\n-                        SYObjectNode (Start: 674 , End: 755, On: input.raml)\n-                            ExampleDeclarationNode (Start: 674 , End: 709, On: input.raml, Source: KeyValueNodeImpl)\n-                                SYStringNode: \"good\" (Start: 674 , End: 678, On: input.raml)\n-                                SYStringNode: \"Sun, 28 Feb 2016 16:41:41 GMT\" (Start: 680 , End: 709, On: input.raml)\n-                            ExampleDeclarationNode (Start: 716 , End: 750, On: input.raml, Source: KeyValueNodeImpl)\n-                                SYStringNode: \"bad\" (Start: 716 , End: 719, On: input.raml)\n-                                ErrorNode: \"Provided value San, 28 Feb 2016 16:41:41 GMT is not compliant with the format datetime provided in rfc2616\" (Start: 721 , End: 750, On: input.raml, Source: SYStringNode)\n-                    FacetNode (Start: 755 , End: 770, On: input.raml, Source: KeyValueNodeImpl)\n-                        SYStringNode: \"format\" (Start: 755 , End: 761, On: input.raml)\n-                        SYStringNode: \"rfc2616\" (Start: 763 , End: 770, On: input.raml)\n+            TypeDeclarationField (Start: 616 , End: 879, On: input.raml, Source: KeyValueNodeImpl)\n+                SYStringNode: \"updated\" (Start: 616 , End: 623, On: input.raml)\n+                TypeDeclarationNode (Start: 629 , End: 879, On: input.raml, Source: SYObjectNode)\n+                    KeyValueNodeImpl (Start: 629 , End: 643, On: input.raml)\n+                        SYStringNode: \"type\" (Start: 629 , End: 633, On: input.raml)\n+                        NativeTypeExpressionNode: \"datetime\" (Start: 635 , End: 643, On: input.raml, Source: SYStringNode)\n+                    ExamplesNode (Start: 648 , End: 824, On: input.raml, Source: KeyValueNodeImpl)\n+                        SYStringNode: \"examples\" (Start: 648 , End: 656, On: input.raml)\n+                        SYObjectNode (Start: 664 , End: 824, On: input.raml)\n+                            ExampleDeclarationNode (Start: 664 , End: 690, On: input.raml, Source: KeyValueNodeImpl)\n+                                SYStringNode: \"good\" (Start: 664 , End: 668, On: input.raml)\n+                                SYStringNode: \"2016-02-28T16:41:41Z\" (Start: 670 , End: 690, On: input.raml)\n+                            ExampleDeclarationNode (Start: 719 , End: 751, On: input.raml, Source: KeyValueNodeImpl)\n+                                SYStringNode: \"good2\" (Start: 719 , End: 724, On: input.raml)\n+                                SYStringNode: \"2016-02-28T16:41:41-08:30\" (Start: 726 , End: 751, On: input.raml)\n+                            ExampleDeclarationNode (Start: 773 , End: 802, On: input.raml, Source: KeyValueNodeImpl)\n+                                SYStringNode: \"bad\" (Start: 773 , End: 776, On: input.raml)\n+                                ErrorNode: \"Provided value 2016-02-28T16:41:41+8:30 is not compliant with the format datetime provided in rfc3339\" (Start: 778 , End: 802, On: input.raml, Source: SYStringNode)\n+                    FacetNode (Start: 824 , End: 839, On: input.raml, Source: KeyValueNodeImpl)\n+                        SYStringNode: \"format\" (Start: 824 , End: 830, On: input.raml)\n+                        SYStringNode: \"rfc3339\" (Start: 832 , End: 839, On: input.raml)\n+                    KeyValueNodeImpl (Start: -1 , End: -1)\n+                        StringNodeImpl: \"displayName\" (Start: -1 , End: -1)\n+                        ObjectNodeImpl (Start: -1 , End: -1)\n+                            KeyValueNodeImpl (Start: -1 , End: -1)\n+                                StringNodeImpl: \"value\" (Start: -1 , End: -1)\n+                                OverlayableStringNode: \"updated\" (Start: -1 , End: -1, Source: SYStringNode)\n+            TypeDeclarationField (Start: 879 , End: 1101, On: input.raml, Source: KeyValueNodeImpl)\n+                SYStringNode: \"If-Modified-Since\" (Start: 879 , End: 896, On: input.raml)\n+                TypeDeclarationNode (Start: 902 , End: 1101, On: input.raml, Source: SYObjectNode)\n+                    KeyValueNodeImpl (Start: 902 , End: 916, On: input.raml)\n+                        SYStringNode: \"type\" (Start: 902 , End: 906, On: input.raml)\n+                        NativeTypeExpressionNode: \"datetime\" (Start: 908 , End: 916, On: input.raml, Source: SYStringNode)\n+                    ExamplesNode (Start: 921 , End: 1018, On: input.raml, Source: KeyValueNodeImpl)\n+                        SYStringNode: \"examples\" (Start: 921 , End: 929, On: input.raml)\n+                        SYObjectNode (Start: 937 , End: 1018, On: input.raml)\n+                            ExampleDeclarationNode (Start: 937 , End: 972, On: input.raml, Source: KeyValueNodeImpl)\n+                                SYStringNode: \"good\" (Start: 937 , End: 941, On: input.raml)\n+                                SYStringNode: \"Sun, 28 Feb 2016 16:41:41 GMT\" (Start: 943 , End: 972, On: input.raml)\n+                            ExampleDeclarationNode (Start: 979 , End: 1013, On: input.raml, Source: KeyValueNodeImpl)\n+                                SYStringNode: \"bad\" (Start: 979 , End: 982, On: input.raml)\n+                                ErrorNode: \"Provided value San, 28 Feb 2016 16:41:41 GMT is not compliant with the format datetime provided in rfc2616\" (Start: 984 , End: 1013, On: input.raml, Source: SYStringNode)\n+                    FacetNode (Start: 1018 , End: 1033, On: input.raml, Source: KeyValueNodeImpl)\n+                        SYStringNode: \"format\" (Start: 1018 , End: 1024, On: input.raml)\n+                        SYStringNode: \"rfc2616\" (Start: 1026 , End: 1033, On: input.raml)\n                     KeyValueNodeImpl (Start: -1 , End: -1)\n                         StringNodeImpl: \"displayName\" (Start: -1 , End: -1)\n                         ObjectNodeImpl (Start: -1 , End: -1)"
        },
        {
          "file_name": "yagi/src/main/java/org/raml/yagi/framework/util/DateUtils.java",
          "patch": "@@ -17,14 +17,15 @@\n \n import org.joda.time.format.DateTimeFormat;\n import org.joda.time.format.DateTimeFormatter;\n+import org.joda.time.format.ISODateTimeFormat;\n \n public class DateUtils\n {\n-    private static DateTimeFormatter hourFormatter \u003d DateTimeFormat.forPattern(\"HH:mm:ss\");\n-    private static DateTimeFormatter dateFormatter \u003d DateTimeFormat.forPattern(\"YYYY-MM-DD\");\n-    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormat.forPattern(\"YYYY-MM-DD\u0027T\u0027HH:mm:ss\");\n-    private static DateTimeFormatter dateTimeSecondFormatter \u003d DateTimeFormat.forPattern(\"YYYY-MM-DD\u0027T\u0027HH:mm:ss.SSS\u0027Z\u0027\");\n+    private static DateTimeFormatter timeOnlyFormatter \u003d DateTimeFormat.forPattern(\"HH:mm:ss\");\n+    private static DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormat.forPattern(\"YYYY-MM-DD\");\n+    private static DateTimeFormatter dateTimeOnlyFormatter \u003d DateTimeFormat.forPattern(\"YYYY-MM-DD\u0027T\u0027HH:mm:ss\");\n     private static DateTimeFormatter rfc2616Formatter \u003d DateTimeFormat.forPattern(\"EEE, dd MMM yyyy HH:mm:ss zzz\");\n+    private static DateTimeFormatter rfc3339Formatter \u003d ISODateTimeFormat.dateTimeParser();\n \n     public static boolean isValidDate(String date, DateType format, String rfc)\n     {\n@@ -33,13 +34,13 @@ public static boolean isValidDate(String date, DateType format, String rfc)\n             switch (format)\n             {\n             case date_only:\n-                dateFormatter.parseLocalDate(date);\n+                dateOnlyFormatter.parseLocalDate(date);\n                 break;\n             case time_only:\n-                hourFormatter.parseLocalTime(date);\n+                timeOnlyFormatter.parseLocalTime(date);\n                 break;\n             case datetime_only:\n-                dateTimeFormatter.parseLocalDateTime(date);\n+                dateTimeOnlyFormatter.parseLocalDateTime(date);\n                 break;\n             case datetime:\n                 if (rfc !\u003d null \u0026\u0026 \"rfc2616\".equals(rfc))\n@@ -49,7 +50,7 @@ public static boolean isValidDate(String date, DateType format, String rfc)\n                 }\n                 else\n                 {\n-                    dateTimeSecondFormatter.parseLocalDateTime(date);\n+                    rfc3339Formatter.parseLocalDateTime(date);\n                     break;\n                 }\n             default:"
        }
      ]
    }
  },
  {
    "name": "Internal parse error with BigDecimal",
    "url": "https://github.com/cgeo/cgeo/issues/1722",
    "description": "Several reports indicate that there might be a problem with `BigDecimal` creation used in `DMM.java` and `DMS.java`. An intermediate string seems to be created then parsed, and this string might contain extra characters at the end such as \")\".\n\nWe could investigate this problem by looking into the various Android runtimes, or we could probably just use `double` for the computation, as it is likely that it is enough for what we want to compute, while not introducing rounding errors.\n\n``` java\njava.lang.NumberFormatException: -001544)\nat java.lang.Long.parse(Long.java:353)\nat java.lang.Long.parseLong(Long.java:344)\nat java.lang.Long.parseLong(Long.java:311)\nat java.math.BigDecimal.\u003cinit\u003e(BigDecimal.java:360)\nat java.math.BigDecimal.\u003cinit\u003e(BigDecimal.java:456)\nat java.math.BigDecimal.valueOf(BigDecimal.java:779)\nat cgeo.geocaching.geopoint.direction.DMM.\u003cinit\u003e(DMM.java:32)\nat cgeo.geocaching.geopoint.Geopoint.asDMM(Geopoint.java:293)\nat cgeo.geocaching.geopoint.Geopoint.format(Geopoint.java:247)\nat cgeo.geocaching.go4cache.Go4Cache.getGeocachersInViewport(Go4Cache.java:126)\nat cgeo.geocaching.maps.CGeoMap$Go4CacheRunnable.run(CGeoMap.java:1259)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\nat java.lang.Thread.run(Thread.java:1019)\n```\n",
    "keywords": [
      "threadpoolexecutor",
      "cgeo",
      "java",
      "bigdecimal",
      "geopoint",
      "run",
      "math",
      "lang",
      "\u003cinit\u003e",
      "long",
      "go4cache",
      "geocaching"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/cgeo/cgeo/commit/ed6478e3b56bb2d27c6274fba3bb84f8310f6440",
      "files": [
        {
          "file_name": "main/src/cgeo/geocaching/cgeocoords.java",
          "patch": "@@ -6,10 +6,6 @@\n import cgeo.geocaching.compatibility.Compatibility;\n import cgeo.geocaching.geopoint.Geopoint;\n import cgeo.geocaching.geopoint.GeopointFormatter;\n-import cgeo.geocaching.geopoint.direction.DDD;\n-import cgeo.geocaching.geopoint.direction.DMM;\n-import cgeo.geocaching.geopoint.direction.DMS;\n-import cgeo.geocaching.geopoint.direction.Direction;\n \n import org.apache.commons.lang3.StringUtils;\n \n@@ -150,9 +146,8 @@ private void updateGUI() {\n             return;\n         }\n \n-        Direction dir \u003d gp.asDirection();\n-        bLat.setText(String.valueOf(dir.latDir));\n-        bLon.setText(String.valueOf(dir.lonDir));\n+        bLat.setText(String.valueOf(gp.getLatDir()));\n+        bLon.setText(String.valueOf(gp.getLonDir()));\n \n         switch (currentFormat) {\n             case Plain:\n@@ -178,11 +173,10 @@ private void updateGUI() {\n                 tLatSep2.setText(\"°\");\n                 tLonSep2.setText(\"°\");\n \n-                DDD ddd \u003d gp.asDDD();\n-                eLatDeg.setText(addZeros(ddd.latDeg, 2));\n-                eLatMin.setText(addZeros(ddd.latDegFrac, 5));\n-                eLonDeg.setText(addZeros(ddd.lonDeg, 3));\n-                eLonMin.setText(addZeros(ddd.lonDegFrac, 5));\n+                eLatDeg.setText(addZeros(gp.getLatDeg(), 2));\n+                eLatMin.setText(addZeros(gp.getLatDegFrac(), 5));\n+                eLonDeg.setText(addZeros(gp.getLonDeg(), 3));\n+                eLonMin.setText(addZeros(gp.getLonDegFrac(), 5));\n                 break;\n             case Min: // DDD° MM.MMM\n                 findViewById(R.id.coordTable).setVisibility(View.VISIBLE);\n@@ -202,13 +196,12 @@ private void updateGUI() {\n                 tLatSep3.setText(\"\u0027\");\n                 tLonSep3.setText(\"\u0027\");\n \n-                DMM dmm \u003d gp.asDMM();\n-                eLatDeg.setText(addZeros(dmm.latDeg, 2));\n-                eLatMin.setText(addZeros(dmm.latMin, 2));\n-                eLatSec.setText(addZeros(dmm.latMinFrac, 3));\n-                eLonDeg.setText(addZeros(dmm.lonDeg, 3));\n-                eLonMin.setText(addZeros(dmm.lonMin, 2));\n-                eLonSec.setText(addZeros(dmm.lonMinFrac, 3));\n+                eLatDeg.setText(addZeros(gp.getLatDeg(), 2));\n+                eLatMin.setText(addZeros(gp.getLatMin(), 2));\n+                eLatSec.setText(addZeros(gp.getLatMinFrac(), 3));\n+                eLonDeg.setText(addZeros(gp.getLonDeg(), 3));\n+                eLonMin.setText(addZeros(gp.getLonMin(), 2));\n+                eLonSec.setText(addZeros(gp.getLonMinFrac(), 3));\n                 break;\n             case Sec: // DDD° MM SS.SSS\n                 findViewById(R.id.coordTable).setVisibility(View.VISIBLE);\n@@ -228,15 +221,14 @@ private void updateGUI() {\n                 tLatSep3.setText(\".\");\n                 tLonSep3.setText(\".\");\n \n-                DMS dms \u003d gp.asDMS();\n-                eLatDeg.setText(addZeros(dms.latDeg, 2));\n-                eLatMin.setText(addZeros(dms.latMin, 2));\n-                eLatSec.setText(addZeros(dms.latSec, 2));\n-                eLatSub.setText(addZeros(dms.latSecFrac, 3));\n-                eLonDeg.setText(addZeros(dms.lonDeg, 3));\n-                eLonMin.setText(addZeros(dms.lonMin, 2));\n-                eLonSec.setText(addZeros(dms.lonSec, 2));\n-                eLonSub.setText(addZeros(dms.lonSecFrac, 3));\n+                eLatDeg.setText(addZeros(gp.getLatDeg(), 2));\n+                eLatMin.setText(addZeros(gp.getLatMin(), 2));\n+                eLatSec.setText(addZeros(gp.getLatSec(), 2));\n+                eLatSub.setText(addZeros(gp.getLatSecFrac(), 3));\n+                eLonDeg.setText(addZeros(gp.getLonDeg(), 3));\n+                eLonMin.setText(addZeros(gp.getLonMin(), 2));\n+                eLonSec.setText(addZeros(gp.getLonSec(), 2));\n+                eLonSub.setText(addZeros(gp.getLonSecFrac(), 3));\n                 break;\n         }\n     }\n@@ -376,13 +368,13 @@ private boolean calc(final boolean signalError) {\n \n         switch (currentFormat) {\n             case Deg:\n-                gp \u003d DDD.createGeopoint(latDir, latDeg, latDegFrac, lonDir, lonDeg, lonDegFrac);\n+                gp \u003d new Geopoint(latDir, latDeg, latDegFrac, lonDir, lonDeg, lonDegFrac);\n                 break;\n             case Min:\n-                gp \u003d DMM.createGeopoint(latDir, latDeg, latMin, latMinFrac, lonDir, lonDeg, lonMin, lonMinFrac);\n+                gp \u003d new Geopoint(latDir, latDeg, latMin, latMinFrac, lonDir, lonDeg, lonMin, lonMinFrac);\n                 break;\n             case Sec:\n-                gp \u003d DMS.createGeopoint(latDir, latDeg, latMin, latSec, latSecFrac, lonDir, lonDeg, lonMin, lonSec, lonSecFrac);\n+                gp \u003d new Geopoint(latDir, latDeg, latMin, latSec, latSecFrac, lonDir, lonDeg, lonMin, lonSec, lonSecFrac);\n                 break;\n             case Plain:\n                 // This case has been handled above"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/Geopoint.java",
          "patch": "@@ -3,10 +3,6 @@\n import cgeo.geocaching.ICoordinates;\n import cgeo.geocaching.R;\n import cgeo.geocaching.geopoint.GeopointFormatter.Format;\n-import cgeo.geocaching.geopoint.direction.DDD;\n-import cgeo.geocaching.geopoint.direction.DMM;\n-import cgeo.geocaching.geopoint.direction.DMS;\n-import cgeo.geocaching.geopoint.direction.Direction;\n import cgeo.geocaching.network.Network;\n import cgeo.geocaching.network.Parameters;\n import cgeo.geocaching.utils.Log;\n@@ -30,11 +26,6 @@\n     private final double latitude;\n     private final double longitude;\n \n-    private Direction direction;\n-    private DDD ddd;\n-    private DMM dmm;\n-    private DMS dms;\n-\n     /**\n      * Creates new Geopoint with given latitude and longitude (both degree).\n      *\n@@ -101,6 +92,66 @@ public Geopoint(final Parcel in) {\n     }\n \n     /**\n+     * Create new Geopoint from individual textual components.\n+     *\n+     * @param latDir\n+     * @param latDeg\n+     * @param latDegFrac\n+     * @param lonDir\n+     * @param lonDeg\n+     * @param lonDegFrac\n+     */\n+    public Geopoint(final String latDir, final String latDeg, final String latDegFrac,\n+                    final String lonDir, final String lonDeg, final String lonDegFrac) {\n+        latitude \u003d Double.parseDouble(latDeg + \".\" + addZeros(Integer.parseInt(latDegFrac), 5)) *\n+                getLatSign(latDir);\n+        longitude \u003d Double.parseDouble(lonDeg + \".\" + addZeros(Integer.parseInt(lonDegFrac), 5)) *\n+                getLonSign(lonDir);\n+    }\n+\n+    /**\n+     * Create new Geopoint from individual textual components.\n+     *\n+     * @param latDir\n+     * @param latDeg\n+     * @param latMin\n+     * @param latMinFrac\n+     * @param lonDir\n+     * @param lonDeg\n+     * @param lonMin\n+     * @param lonMinFrac\n+     */\n+    public Geopoint(final String latDir, final String latDeg, final String latMin, final String latMinFrac,\n+                    final String lonDir, final String lonDeg, final String lonMin, final String lonMinFrac) {\n+        latitude \u003d (Double.parseDouble(latDeg) + Double.parseDouble(latMin + \".\" + addZeros(Integer.parseInt(latMinFrac), 3)) / 60) *\n+                (getLatSign(latDir));\n+        longitude \u003d (Double.parseDouble(lonDeg) + Double.parseDouble(lonMin + \".\" + addZeros(Integer.parseInt(lonMinFrac), 3)) / 60) *\n+                (getLonSign(lonDir));\n+    }\n+\n+    /**\n+     * Create new Geopoint from individual textual components.\n+     *\n+     * @param latDir\n+     * @param latDeg\n+     * @param latMin\n+     * @param latSec\n+     * @param latSecFrac\n+     * @param lonDir\n+     * @param lonDeg\n+     * @param lonMin\n+     * @param lonSec\n+     * @param lonSecFrac\n+     */\n+    public Geopoint(final String latDir, final String latDeg, final String latMin, final String latSec, final String latSecFrac,\n+                    final String lonDir, final String lonDeg, final String lonMin, final String lonSec, final String lonSecFrac) {\n+        latitude \u003d (Double.parseDouble(latDeg) + Double.parseDouble(latMin) / 60 + Double.parseDouble(latSec + \".\" + addZeros(Integer.parseInt(latSecFrac), 3)) / 3600) *\n+                (getLatSign(latDir));\n+        longitude \u003d (Double.parseDouble(lonDeg) + Double.parseDouble(lonMin) / 60 + Double.parseDouble(lonSec + \".\" + addZeros(Integer.parseInt(lonSecFrac), 3)) / 3600) *\n+                (getLonSign(lonDir));\n+    }\n+\n+    /**\n      * Get latitude in degree.\n      *\n      * @return latitude\n@@ -259,54 +310,6 @@ public String toString()\n         return format(GeopointFormatter.Format.LAT_LON_DECMINUTE);\n     }\n \n-    /**\n-     * Converts this geopoint to value type Direction.\n-     *\n-     * @return Direction\n-     */\n-    public Direction asDirection() {\n-        if (direction \u003d\u003d null) { // because geopoint is immutable we can \"cache\" the result\n-            direction \u003d new Direction(latitude, longitude);\n-        }\n-        return direction;\n-    }\n-\n-    /**\n-     * Converts this geopoint to value type DDD.\n-     *\n-     * @return\n-     */\n-    public DDD asDDD() {\n-        if (ddd \u003d\u003d null) {\n-            ddd \u003d new DDD(latitude, longitude);\n-        }\n-        return ddd;\n-    }\n-\n-    /**\n-     * Converts this geopoint to value type DMM.\n-     *\n-     * @return\n-     */\n-    public DMM asDMM() {\n-        if (dmm \u003d\u003d null) {\n-            dmm \u003d new DMM(latitude, longitude);\n-        }\n-        return dmm;\n-    }\n-\n-    /**\n-     * Converts this geopoint to value type DMS.\n-     *\n-     * @return\n-     */\n-    public DMS asDMS() {\n-        if (dms \u003d\u003d null) {\n-            dms \u003d new DMS(latitude, longitude);\n-        }\n-        return dms;\n-    }\n-\n     abstract public static class GeopointException\n             extends RuntimeException\n     {\n@@ -387,4 +390,212 @@ public Geopoint createFromParcel(final Parcel in) {\n         }\n     };\n \n+    /**\n+     * Get latitude character (N or S).\n+     *\n+     * @return\n+     */\n+    public char getLatDir() {\n+        return latitude \u003e\u003d 0 ? \u0027N\u0027 : \u0027S\u0027;\n+    }\n+\n+    /**\n+     * Get longitude chararcter (E or W).\n+     *\n+     * @return\n+     */\n+    public char getLonDir() {\n+        return longitude \u003e\u003d 0 ? \u0027E\u0027 : \u0027W\u0027;\n+    }\n+\n+    /**\n+     * Get the integral non-negative latitude degrees.\n+     *\n+     * @return\n+     */\n+    public int getLatDeg() {\n+        return getDeg(latitude);\n+    }\n+\n+    /**\n+     * Get the integral non-negative longitude degrees.\n+     *\n+     * @return\n+     */\n+    public int getLonDeg() {\n+        return getDeg(longitude);\n+    }\n+\n+    private static int getDeg(final double deg) {\n+        return (int) Math.abs(deg);\n+    }\n+\n+    /**\n+     * Get the fractional part of the latitude degrees scaled up by 10^5.\n+     *\n+     * @return\n+     */\n+    public int getLatDegFrac() {\n+        return getDegFrac(latitude);\n+    }\n+\n+    /**\n+     * Get the fractional part of the longitude degrees scaled up by 10^5.\n+     *\n+     * @return\n+     */\n+    public int getLonDegFrac() {\n+        return getDegFrac(longitude);\n+    }\n+\n+    private static int getDegFrac(final double deg) {\n+        return (int) (Math.round(Math.abs(deg) * 100000) % 100000);\n+    }\n+\n+    /**\n+     * Get the integral latitude minutes.\n+     *\n+     * @return\n+     */\n+    public int getLatMin() {\n+        return getMin(latitude);\n+    }\n+\n+    /**\n+     * Get the integral longitude minutes.\n+     *\n+     * @return\n+     */\n+    public int getLonMin() {\n+        return getMin(longitude);\n+    }\n+\n+    private static int getMin(final double deg) {\n+        return ((int) Math.abs(deg * 60)) % 60;\n+    }\n+\n+    /**\n+     * Get the fractional part of the latitude minutes scaled up by 1000.\n+     *\n+     * @return\n+     */\n+    public int getLatMinFrac() {\n+        return getMinFrac(latitude);\n+    }\n+\n+    /**\n+     * Get the fractional part of the longitude minutes scaled up by 1000.\n+     *\n+     * @return\n+     */\n+    public int getLonMinFrac() {\n+        return getMinFrac(longitude);\n+    }\n+\n+    private static int getMinFrac(final double deg) {\n+        return (int) (Math.round(Math.abs(deg) * 60000) % 1000);\n+    }\n+\n+    /**\n+     * Get the latitude minutes.\n+     *\n+     * @return\n+     */\n+    public double getLatMinRaw() {\n+        return getMinRaw(latitude);\n+    }\n+\n+    /**\n+     * Get the longitude minutes.\n+     *\n+     * @return\n+     */\n+    public double getLonMinRaw() {\n+        return getMinRaw(longitude);\n+    }\n+\n+    private static double getMinRaw(final double deg) {\n+        return (Math.abs(deg) * 60) % 60;\n+    }\n+\n+    /**\n+     * Get the integral part of the latitude seconds.\n+     *\n+     * @return\n+     */\n+    public int getLatSec() {\n+        return getSec(latitude);\n+    }\n+\n+    /**\n+     * Get the integral part of the longitude seconds.\n+     *\n+     * @return\n+     */\n+    public int getLonSec() {\n+        return getSec(longitude);\n+    }\n+\n+    private static int getSec(final double deg) {\n+        return ((int) Math.abs(deg * 3600)) % 60;\n+    }\n+\n+    /**\n+     * Get the fractional part of the latitude seconds scaled up by 1000.\n+     *\n+     * @return\n+     */\n+\n+    public int getLatSecFrac() {\n+        return getSecFrac(latitude);\n+    }\n+\n+    /**\n+     * Get the fractional part of the longitude seconds scaled up by 1000.\n+     *\n+     * @return\n+     */\n+\n+    public int getLonSecFrac() {\n+        return getSecFrac(longitude);\n+    }\n+\n+    private static int getSecFrac(final double deg) {\n+        return (int) (Math.round(Math.abs(deg) * 3600000) % 1000);\n+    }\n+\n+    /**\n+     * Get the latitude seconds.\n+     *\n+     * @return\n+     */\n+    public double getLatSecRaw() {\n+        return getSecRaw(latitude);\n+    }\n+\n+    /**\n+     * Get the longitude seconds.\n+     *\n+     * @return\n+     */\n+    public double getLonSecRaw() {\n+        return getSecRaw(longitude);\n+    }\n+\n+    private static double getSecRaw(final double deg) {\n+        return (Math.abs(deg) * 3600) % 3600;\n+    }\n+\n+    private static String addZeros(final int value, final int len) {\n+        return StringUtils.leftPad(Integer.toString(value), len, \u00270\u0027);\n+    }\n+\n+    private static int getLonSign(final String lonDir) {\n+        return \"W\".equalsIgnoreCase(lonDir) ? -1 : 1;\n+    }\n+\n+    private static int getLatSign(final String latDir) {\n+        return \"S\".equalsIgnoreCase(latDir) ? -1 : 1;\n+    }\n+\n }"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/GeopointFormatter.java",
          "patch": "@@ -1,8 +1,5 @@\n package cgeo.geocaching.geopoint;\n \n-import cgeo.geocaching.geopoint.direction.DMM;\n-import cgeo.geocaching.geopoint.direction.DMS;\n-\n import java.util.Locale;\n \n /**\n@@ -62,9 +59,6 @@ public static String format(final Format format, final Geopoint gp)\n         final double latSigned \u003d gp.getLatitude();\n         final double lonSigned \u003d gp.getLongitude();\n \n-        DMM dmm \u003d gp.asDMM();\n-        DMS dms \u003d gp.asDMS();\n-\n         switch (format) {\n             case LAT_LON_DECDEGREE:\n                 return String.format(\"%.6f %.6f\", latSigned, lonSigned);\n@@ -74,33 +68,34 @@ public static String format(final Format format, final Geopoint gp)\n \n             case LAT_LON_DECMINUTE:\n                 return String.format(\"%c %02d° %06.3f · %c %03d° %06.3f\",\n-                        dmm.latDir, dmm.latDeg, dmm.latMinRaw, dmm.lonDir, dmm.lonDeg, dmm.lonMinRaw);\n+                        gp.getLatDir(), gp.getLatDeg(), gp.getLatMinRaw(), gp.getLonDir(), gp.getLonDeg(), gp.getLonMinRaw());\n \n             case LAT_LON_DECMINUTE_RAW:\n                 return String.format((Locale) null, \"%c %02d° %06.3f %c %03d° %06.3f\",\n-                        dmm.latDir, dmm.latDeg, dmm.latMinRaw, dmm.lonDir, dmm.lonDeg, dmm.lonMinRaw);\n+                        gp.getLatDir(), gp.getLatDeg(), gp.getLatMinRaw(), gp.getLonDir(), gp.getLonDeg(), gp.getLonMinRaw());\n \n             case LAT_LON_DECSECOND:\n                 return String.format(\"%c %02d° %02d\u0027 %06.3f\\\" · %c %03d° %02d\u0027 %06.3f\\\"\",\n-                        dms.latDir, dms.latDeg, dms.latMin, dms.latSecRaw, dms.lonDir, dms.lonDeg, dms.lonMin, dms.lonSecRaw);\n+                        gp.getLatDir(), gp.getLatDeg(), gp.getLatMin(), gp.getLatSecRaw(),\n+                        gp.getLonDir(), gp.getLonDeg(), gp.getLonMin(), gp.getLonSecRaw());\n \n             case LAT_DECDEGREE_RAW:\n                 return String.format((Locale) null, \"%.6f\", latSigned);\n \n             case LAT_DECMINUTE:\n-                return String.format(\"%c %02d° %06.3f\", dmm.latDir, dmm.latDeg, dmm.latMinRaw);\n+                return String.format(\"%c %02d° %06.3f\", gp.getLatDir(), gp.getLatDeg(), gp.getLatMinRaw());\n \n             case LAT_DECMINUTE_RAW:\n-                return String.format(\"%c %02d %06.3f\", dmm.latDir, dmm.latDeg, dmm.latMinRaw);\n+                return String.format(\"%c %02d %06.3f\", gp.getLatDir(), gp.getLatDeg(), gp.getLatMinRaw());\n \n             case LON_DECDEGREE_RAW:\n                 return String.format((Locale) null, \"%.6f\", lonSigned);\n \n             case LON_DECMINUTE:\n-                return String.format(\"%c %03d° %06.3f\", dmm.lonDir, dmm.lonDeg, dmm.lonMinRaw);\n+                return String.format(\"%c %03d° %06.3f\", gp.getLonDir(), gp.getLonDeg(), gp.getLonMinRaw());\n \n             case LON_DECMINUTE_RAW:\n-                return String.format(\"%c %03d %06.3f\", dmm.lonDir, dmm.lonDeg, dmm.lonMinRaw);\n+                return String.format(\"%c %03d %06.3f\", gp.getLonDir(), gp.getLonDeg(), gp.getLonMinRaw());\n         }\n \n         // Keep the compiler happy even though it cannot happen"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/direction/DDD.java",
          "patch": "@@ -1,47 +0,0 @@\n-package cgeo.geocaching.geopoint.direction;\n-\n-import cgeo.geocaching.geopoint.Geopoint;\n-\n-import java.math.BigDecimal;\n-import java.math.RoundingMode;\n-\n-/**\n- * Value type for the DDD.DDDDD format.\n- */\n-public final class DDD extends Direction {\n-\n-    /** latitude degree value */\n-    public final int latDeg;\n-    /** fractional part of the latitude degree value */\n-    public final int latDegFrac;\n-\n-    public final int lonDeg;\n-    public final int lonDegFrac;\n-\n-    public DDD(final double latSigned, final double lonSigned) {\n-        super(latSigned, lonSigned);\n-        BigDecimal bdLat \u003d BigDecimal.valueOf(latSigned).abs();\n-        latDeg \u003d bdLat.intValue();\n-        BigDecimal bdLatFrac \u003d bdLat.subtract(BigDecimal.valueOf(latDeg)).multiply(BD_ONEHOUNDREDTHOUSAND);\n-        latDegFrac \u003d bdLatFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-\n-        BigDecimal bdlon \u003d BigDecimal.valueOf(lonSigned).abs();\n-        lonDeg \u003d bdlon.intValue();\n-        BigDecimal bdLonFrac \u003d bdlon.subtract(BigDecimal.valueOf(lonDeg)).multiply(BD_ONEHOUNDREDTHOUSAND);\n-        lonDegFrac \u003d bdLonFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-    }\n-\n-    public static Geopoint createGeopoint(final String latDir, final String latDeg, final String latDegFrac,\n-            final String lonDir, final String lonDeg, final String lonDegFrac) {\n-        double lat \u003d 0.0d;\n-        double lon \u003d 0.0d;\n-        try {\n-            lat \u003d Double.parseDouble(latDeg + \".\" + addZeros(Integer.parseInt(latDegFrac), 5));\n-            lon \u003d Double.parseDouble(lonDeg + \".\" + addZeros(Integer.parseInt(lonDegFrac), 5));\n-        } catch (NumberFormatException e) {\n-        }\n-        lat *\u003d \"S\".equalsIgnoreCase(latDir) ? -1 : 1;\n-        lon *\u003d \"W\".equalsIgnoreCase(lonDir) ? -1 : 1;\n-        return new Geopoint(lat, lon);\n-    }\n-}\n\\ No newline at end of file"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/direction/DMM.java",
          "patch": "@@ -1,56 +0,0 @@\n-package cgeo.geocaching.geopoint.direction;\n-\n-import cgeo.geocaching.geopoint.Geopoint;\n-\n-import java.math.BigDecimal;\n-import java.math.RoundingMode;\n-\n-public final class DMM extends Direction {\n-\n-    public final int latDeg;\n-    public final double latMinRaw;\n-    public final int latMin;\n-    public final int latMinFrac;\n-\n-    public final int lonDeg;\n-    public final double lonMinRaw;\n-    public final int lonMin;\n-    public final int lonMinFrac;\n-\n-    public DMM(final double latSigned, final double lonSigned) {\n-        super(latSigned, lonSigned);\n-        BigDecimal bdLat \u003d BigDecimal.valueOf(latSigned).abs();\n-        latDeg \u003d bdLat.intValue();\n-        BigDecimal bdLatMin \u003d bdLat.subtract(BigDecimal.valueOf(latDeg)).multiply(BD_SIXTY);\n-        // Rounding here ...\n-        bdLatMin \u003d bdLatMin.setScale(3, RoundingMode.HALF_UP);\n-        latMinRaw \u003d bdLatMin.doubleValue();\n-        latMin \u003d bdLatMin.intValue();\n-        BigDecimal bdLatMinFrac \u003d bdLatMin.subtract(BigDecimal.valueOf(latMin)).multiply(BD_THOUSAND);\n-        latMinFrac \u003d bdLatMinFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-\n-        BigDecimal bdlon \u003d BigDecimal.valueOf(lonSigned).abs();\n-        lonDeg \u003d bdlon.intValue();\n-        BigDecimal bdLonMin \u003d bdlon.subtract(BigDecimal.valueOf(lonDeg)).multiply(BD_SIXTY);\n-        // Rounding here ...\n-        bdLonMin \u003d bdLonMin.setScale(3, RoundingMode.HALF_UP);\n-        lonMinRaw \u003d bdLonMin.doubleValue();\n-        lonMin \u003d bdLonMin.intValue();\n-        BigDecimal bdLonMinFrac \u003d bdLonMin.subtract(BigDecimal.valueOf(lonMin)).multiply(BD_THOUSAND);\n-        lonMinFrac \u003d bdLonMinFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-    }\n-\n-    public static Geopoint createGeopoint(final String latDir, final String latDeg, final String latMin, final String latMinFrac,\n-            final String lonDir, final String lonDeg, final String lonMin, final String lonMinFrac) {\n-        double lat \u003d 0.0d;\n-        double lon \u003d 0.0d;\n-        try {\n-            lat \u003d Double.parseDouble(latDeg) + Double.parseDouble(latMin + \".\" + addZeros(Integer.parseInt(latMinFrac), 3)) / D60;\n-            lon \u003d Double.parseDouble(lonDeg) + Double.parseDouble(lonMin + \".\" + addZeros(Integer.parseInt(lonMinFrac), 3)) / D60;\n-        } catch (NumberFormatException e) {\n-        }\n-        lat *\u003d \"S\".equalsIgnoreCase(latDir) ? -1 : 1;\n-        lon *\u003d \"W\".equalsIgnoreCase(lonDir) ? -1 : 1;\n-        return new Geopoint(lat, lon);\n-    }\n-}\n\\ No newline at end of file"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/direction/DMS.java",
          "patch": "@@ -1,62 +0,0 @@\n-package cgeo.geocaching.geopoint.direction;\n-\n-import cgeo.geocaching.geopoint.Geopoint;\n-\n-import java.math.BigDecimal;\n-import java.math.RoundingMode;\n-\n-public final class DMS extends Direction {\n-\n-    public final int latDeg;\n-    public final int latMin;\n-    public final double latSecRaw;\n-    public final int latSec;\n-    public final int latSecFrac;\n-\n-    public final int lonDeg;\n-    public final int lonMin;\n-    public final double lonSecRaw;\n-    public final int lonSec;\n-    public final int lonSecFrac;\n-\n-    public DMS(final double latSigned, final double lonSigned) {\n-        super(latSigned, lonSigned);\n-        BigDecimal bdLat \u003d BigDecimal.valueOf(latSigned).abs();\n-        latDeg \u003d bdLat.intValue();\n-        BigDecimal bdLatMin \u003d bdLat.subtract(BigDecimal.valueOf(latDeg)).multiply(BD_SIXTY);\n-        latMin \u003d bdLatMin.intValue();\n-        BigDecimal bdLatSec \u003d bdLatMin.subtract(BigDecimal.valueOf(latMin)).multiply(BD_SIXTY);\n-        // Rounding here ...\n-        bdLatSec \u003d bdLatSec.setScale(3, RoundingMode.HALF_UP);\n-        latSecRaw \u003d bdLatSec.doubleValue();\n-        latSec \u003d bdLatSec.intValue();\n-        BigDecimal bdLatSecFrac \u003d bdLatSec.subtract(BigDecimal.valueOf(latSec)).multiply(BD_THOUSAND);\n-        latSecFrac \u003d bdLatSecFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-\n-        BigDecimal bdlon \u003d BigDecimal.valueOf(lonSigned).abs();\n-        lonDeg \u003d bdlon.intValue();\n-        BigDecimal bdLonMin \u003d bdlon.subtract(BigDecimal.valueOf(lonDeg)).multiply(BD_SIXTY);\n-        lonMin \u003d bdLonMin.intValue();\n-        BigDecimal bdLonSec \u003d bdLonMin.subtract(BigDecimal.valueOf(lonMin)).multiply(BD_SIXTY);\n-        // Rounding here ...\n-        bdLonSec \u003d bdLonSec.setScale(3, RoundingMode.HALF_UP);\n-        lonSecRaw \u003d bdLonSec.doubleValue();\n-        lonSec \u003d bdLonSec.intValue();\n-        BigDecimal bdLonSecFrac \u003d bdLonSec.subtract(BigDecimal.valueOf(lonSec)).multiply(BD_THOUSAND);\n-        lonSecFrac \u003d bdLonSecFrac.setScale(0, RoundingMode.HALF_UP).intValue();\n-    }\n-\n-    public static Geopoint createGeopoint(final String latDir, final String latDeg, final String latMin, final String latSec, final String latSecFrac,\n-            final String lonDir, final String lonDeg, final String lonMin, final String lonSec, final String lonSecFrac) {\n-        double lat \u003d 0.0d;\n-        double lon \u003d 0.0d;\n-        try {\n-            lat \u003d Double.parseDouble(latDeg) + Double.parseDouble(latMin) / D60 + Double.parseDouble(latSec + \".\" + addZeros(Integer.parseInt(latSecFrac), 3)) / D3600;\n-            lon \u003d Double.parseDouble(lonDeg) + Double.parseDouble(lonMin) / D60 + Double.parseDouble(lonSec + \".\" + addZeros(Integer.parseInt(lonSecFrac), 3)) / D3600;\n-        } catch (NumberFormatException e) {\n-        }\n-        lat *\u003d \"S\".equalsIgnoreCase(latDir) ? -1 : 1;\n-        lon *\u003d \"W\".equalsIgnoreCase(lonDir) ? -1 : 1;\n-        return new Geopoint(lat, lon);\n-    }\n-}\n\\ No newline at end of file"
        },
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/direction/Direction.java",
          "patch": "@@ -1,29 +0,0 @@\n-package cgeo.geocaching.geopoint.direction;\n-\n-import org.apache.commons.lang3.StringUtils;\n-\n-import java.math.BigDecimal;\n-\n-public class Direction {\n-    /* Constant values needed for calculation */\n-    static final double D60 \u003d 60.0d;\n-    private static final double D1000 \u003d 1000.0d;\n-    static final double D3600 \u003d 3600.0d;\n-    static final BigDecimal BD_SIXTY \u003d BigDecimal.valueOf(D60);\n-    static final BigDecimal BD_THOUSAND \u003d BigDecimal.valueOf(D1000);\n-    static final BigDecimal BD_ONEHOUNDREDTHOUSAND \u003d BigDecimal.valueOf(100000.0d);\n-\n-    /** latitude direction, \u0027N\u0027 or \u0027S\u0027 */\n-    public final char latDir;\n-    /** longitude direction, \u0027E\u0027 or \u0027W\u0027 */\n-    public final char lonDir;\n-\n-    public Direction(final double latSigned, final double lonSigned) {\n-        latDir \u003d latSigned \u003c 0 ? \u0027S\u0027 : \u0027N\u0027;\n-        lonDir \u003d lonSigned \u003c 0 ? \u0027W\u0027 : \u0027E\u0027;\n-    }\n-\n-    protected static String addZeros(final int value, final int len) {\n-        return StringUtils.leftPad(Integer.toString(value), len, \u00270\u0027);\n-    }\n-}\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/src/cgeo/geocaching/geopoint/GeopointTest.java",
          "patch": "@@ -1,14 +1,10 @@\n package cgeo.geocaching.geopoint;\n \n-import cgeo.geocaching.geopoint.direction.DDD;\n-import cgeo.geocaching.geopoint.direction.DMM;\n-import cgeo.geocaching.geopoint.direction.DMS;\n+import junit.framework.Assert;\n \n import android.os.Bundle;\n import android.test.AndroidTestCase;\n \n-import junit.framework.Assert;\n-\n public class GeopointTest extends AndroidTestCase {\n \n     public static void testCreation() {\n@@ -73,56 +69,52 @@ public static void testParcelable() {\n     public static void testDDD() {\n         // case 1\n         final Geopoint gp1 \u003d new Geopoint(51.3d, 13.8d);\n-        DDD ddd1 \u003d gp1.asDDD();\n \n-        checkDDD(ddd1, \u0027N\u0027, 51, 30000, \u0027E\u0027, 13, 80000);\n+        checkDDD(gp1, \u0027N\u0027, 51, 30000, \u0027E\u0027, 13, 80000);\n \n-        Geopoint gp1a \u003d DDD.createGeopoint(String.valueOf(ddd1.latDir), String.valueOf(ddd1.latDeg), String.valueOf(ddd1.latDegFrac),\n-                String.valueOf(ddd1.lonDir), String.valueOf(ddd1.lonDeg), String.valueOf(ddd1.lonDegFrac));\n+        Geopoint gp1a \u003d new Geopoint(String.valueOf(gp1.getLatDir()), String.valueOf(gp1.getLatDeg()), String.valueOf(gp1.getLatDegFrac()),\n+                String.valueOf(gp1.getLonDir()), String.valueOf(gp1.getLonDeg()), String.valueOf(gp1.getLonDegFrac()));\n \n         Assert.assertTrue(gp1a.equals(gp1));\n \n         // case 2\n         final Geopoint gp2 \u003d new Geopoint(51.34567d, 13.87654d);\n-        DDD ddd2 \u003d gp2.asDDD();\n \n-        checkDDD(ddd2, \u0027N\u0027, 51, 34567, \u0027E\u0027, 13, 87654);\n+        checkDDD(gp2, \u0027N\u0027, 51, 34567, \u0027E\u0027, 13, 87654);\n \n-        Geopoint gp2a \u003d DDD.createGeopoint(String.valueOf(ddd2.latDir), String.valueOf(ddd2.latDeg), String.valueOf(ddd2.latDegFrac),\n-                String.valueOf(ddd2.lonDir), String.valueOf(ddd2.lonDeg), String.valueOf(ddd2.lonDegFrac));\n+        Geopoint gp2a \u003d new Geopoint(String.valueOf(gp2.getLatDir()), String.valueOf(gp2.getLatDeg()), String.valueOf(gp2.getLatDegFrac()),\n+                String.valueOf(gp2.getLonDir()), String.valueOf(gp2.getLonDeg()), String.valueOf(gp2.getLonDegFrac()));\n \n         Assert.assertTrue(gp2a.equals(gp2));\n \n         // case 3\n         final Geopoint gp3 \u003d new Geopoint(51.29999833333333d, 13.8d);\n-        DDD ddd3 \u003d gp3.asDDD();\n \n-        checkDDD(ddd3, \u0027N\u0027, 51, 30000, \u0027E\u0027, 13, 80000);\n+        checkDDD(gp3, \u0027N\u0027, 51, 30000, \u0027E\u0027, 13, 80000);\n \n-        Geopoint gp3a \u003d DDD.createGeopoint(String.valueOf(ddd3.latDir), String.valueOf(ddd3.latDeg), String.valueOf(ddd3.latDegFrac),\n-                String.valueOf(ddd3.lonDir), String.valueOf(ddd3.lonDeg), String.valueOf(ddd3.lonDegFrac));\n+        Geopoint gp3a \u003d new Geopoint(String.valueOf(gp3.getLatDir()), String.valueOf(gp3.getLatDeg()), String.valueOf(gp3.getLatDegFrac()),\n+                String.valueOf(gp3.getLonDir()), String.valueOf(gp3.getLonDeg()), String.valueOf(gp3.getLonDegFrac()));\n \n         checkTolerance(gp3, gp3a, 5e-5);\n \n         // case 4\n         final Geopoint gp4 \u003d new Geopoint(51.00012d, 13.00089d);\n-        DDD ddd4 \u003d gp4.asDDD();\n \n-        checkDDD(ddd4, \u0027N\u0027, 51, 12, \u0027E\u0027, 13, 89);\n+        checkDDD(gp4, \u0027N\u0027, 51, 12, \u0027E\u0027, 13, 89);\n \n-        Geopoint gp4a \u003d DDD.createGeopoint(String.valueOf(ddd4.latDir), String.valueOf(ddd4.latDeg), String.valueOf(ddd4.latDegFrac),\n-                String.valueOf(ddd4.lonDir), String.valueOf(ddd4.lonDeg), String.valueOf(ddd4.lonDegFrac));\n+        Geopoint gp4a \u003d new Geopoint(String.valueOf(gp4.getLatDir()), String.valueOf(gp4.getLatDeg()), String.valueOf(gp4.getLatDegFrac()),\n+                String.valueOf(gp4.getLonDir()), String.valueOf(gp4.getLonDeg()), String.valueOf(gp4.getLonDegFrac()));\n \n         checkTolerance(gp4, gp4a, 5e-5);\n     }\n \n-    private static void checkDDD(DDD ddd, char latDir, int latDeg, int latDegFrac, char lonDir, int lonDeg, int lonDegFrac) {\n-        Assert.assertEquals(latDir, ddd.latDir);\n-        Assert.assertEquals(latDeg, ddd.latDeg);\n-        Assert.assertEquals(latDegFrac, ddd.latDegFrac);\n-        Assert.assertEquals(lonDir, ddd.lonDir);\n-        Assert.assertEquals(lonDeg, ddd.lonDeg);\n-        Assert.assertEquals(lonDegFrac, ddd.lonDegFrac);\n+    private static void checkDDD(Geopoint gp, char latDir, int latDeg, int latDegFrac, char lonDir, int lonDeg, int lonDegFrac) {\n+        Assert.assertEquals(latDir, gp.getLatDir());\n+        Assert.assertEquals(latDeg, gp.getLatDeg());\n+        Assert.assertEquals(latDegFrac, gp.getLatDegFrac());\n+        Assert.assertEquals(lonDir, gp.getLonDir());\n+        Assert.assertEquals(lonDeg, gp.getLonDeg());\n+        Assert.assertEquals(lonDegFrac, gp.getLonDegFrac());\n     }\n \n     private static void checkTolerance(Geopoint gp1, Geopoint gp2, double tolerance) {\n@@ -133,117 +125,109 @@ private static void checkTolerance(Geopoint gp1, Geopoint gp2, double tolerance)\n     public static void testDMM() {\n         // case 1\n         final Geopoint gp1 \u003d new Geopoint(51.3d, 13.8d);\n-        DMM dmm1 \u003d gp1.asDMM();\n \n-        checkDMM(dmm1, \u0027N\u0027, 51, 18, 0, \u0027E\u0027, 13, 48, 0);\n+        checkDMM(gp1, \u0027N\u0027, 51, 18, 0, \u0027E\u0027, 13, 48, 0);\n \n-        Geopoint gp1a \u003d DMM.createGeopoint(String.valueOf(dmm1.latDir), String.valueOf(dmm1.latDeg), String.valueOf(dmm1.latMin), String.valueOf(dmm1.latMinFrac),\n-                String.valueOf(dmm1.lonDir), String.valueOf(dmm1.lonDeg), String.valueOf(dmm1.lonMin), String.valueOf(dmm1.lonMinFrac));\n+        Geopoint gp1a \u003d new Geopoint(String.valueOf(gp1.getLatDir()), String.valueOf(gp1.getLatDeg()), String.valueOf(gp1.getLatMin()), String.valueOf(gp1.getLatMinFrac()),\n+                String.valueOf(gp1.getLonDir()), String.valueOf(gp1.getLonDeg()), String.valueOf(gp1.getLonMin()), String.valueOf(gp1.getLonMinFrac()));\n \n         Assert.assertTrue(gp1a.equals(gp1));\n \n         // case 2\n         final Geopoint gp2 \u003d new Geopoint(51.34567d, 13.87654d);\n-        DMM dmm2 \u003d gp2.asDMM();\n \n-        checkDMM(dmm2, \u0027N\u0027, 51, 20, 740, \u0027E\u0027, 13, 52, 592);\n+        checkDMM(gp2, \u0027N\u0027, 51, 20, 740, \u0027E\u0027, 13, 52, 592);\n \n-        Geopoint gp2a \u003d DMM.createGeopoint(String.valueOf(dmm2.latDir), String.valueOf(dmm2.latDeg), String.valueOf(dmm2.latMin), String.valueOf(dmm2.latMinFrac),\n-                String.valueOf(dmm2.lonDir), String.valueOf(dmm2.lonDeg), String.valueOf(dmm2.lonMin), String.valueOf(dmm2.lonMinFrac));\n+        Geopoint gp2a \u003d new Geopoint(String.valueOf(gp2.getLatDir()), String.valueOf(gp2.getLatDeg()), String.valueOf(gp2.getLatMin()), String.valueOf(gp2.getLatMinFrac()),\n+                String.valueOf(gp2.getLonDir()), String.valueOf(gp2.getLonDeg()), String.valueOf(gp2.getLonMin()), String.valueOf(gp2.getLonMinFrac()));\n \n         checkTolerance(gp2, gp2a, 5e-5);\n \n         // case 3\n-        final Geopoint gp3 \u003d new Geopoint(51.29999833333333d, 13.8d);\n-        DMM dmm3 \u003d gp3.asDMM();\n+        final Geopoint gp3 \u003d new Geopoint(51.3d, 13.8d);\n \n-        checkDMM(dmm3, \u0027N\u0027, 51, 18, 0, \u0027E\u0027, 13, 48, 0);\n+        checkDMM(gp3, \u0027N\u0027, 51, 18, 0, \u0027E\u0027, 13, 48, 0);\n \n-        Geopoint gp3a \u003d DMM.createGeopoint(String.valueOf(dmm3.latDir), String.valueOf(dmm3.latDeg), String.valueOf(dmm3.latMin), String.valueOf(dmm3.latMinFrac),\n-                String.valueOf(dmm3.lonDir), String.valueOf(dmm3.lonDeg), String.valueOf(dmm3.lonMin), String.valueOf(dmm3.lonMinFrac));\n+        Geopoint gp3a \u003d new Geopoint(String.valueOf(gp3.getLatDir()), String.valueOf(gp3.getLatDeg()), String.valueOf(gp3.getLatMin()), String.valueOf(gp3.getLatMinFrac()),\n+                String.valueOf(gp3.getLonDir()), String.valueOf(gp3.getLonDeg()), String.valueOf(gp3.getLonMin()), String.valueOf(gp3.getLonMinFrac()));\n \n         checkTolerance(gp3, gp3a, 5e-5);\n \n         // case 4\n         final Geopoint gp4 \u003d new Geopoint(51.00012d, 13.00089d);\n-        DMM dmm4 \u003d gp4.asDMM();\n \n-        checkDMM(dmm4, \u0027N\u0027, 51, 0, 7, \u0027E\u0027, 13, 0, 53);\n+        checkDMM(gp4, \u0027N\u0027, 51, 0, 7, \u0027E\u0027, 13, 0, 53);\n \n-        Geopoint gp4a \u003d DMM.createGeopoint(String.valueOf(dmm4.latDir), String.valueOf(dmm4.latDeg), String.valueOf(dmm4.latMin), String.valueOf(dmm4.latMinFrac),\n-                String.valueOf(dmm4.lonDir), String.valueOf(dmm4.lonDeg), String.valueOf(dmm4.lonMin), String.valueOf(dmm4.lonMinFrac));\n+        Geopoint gp4a \u003d new Geopoint(String.valueOf(gp4.getLatDir()), String.valueOf(gp4.getLatDeg()), String.valueOf(gp4.getLatMin()), String.valueOf(gp4.getLatMinFrac()),\n+                String.valueOf(gp4.getLonDir()), String.valueOf(gp4.getLonDeg()), String.valueOf(gp4.getLonMin()), String.valueOf(gp4.getLonMinFrac()));\n \n         checkTolerance(gp4, gp4a, 5e-5);\n     }\n \n-    private static void checkDMM(DMM dmm, char latDir, int latDeg, int latMin, int latMinFrac, char lonDir, int lonDeg, int lonMin, int lonMinFrac) {\n-        Assert.assertEquals(latDir, dmm.latDir);\n-        Assert.assertEquals(latDeg, dmm.latDeg);\n-        Assert.assertEquals(latMin, dmm.latMin);\n-        Assert.assertEquals(latMinFrac, dmm.latMinFrac);\n-        Assert.assertEquals(lonDir, dmm.lonDir);\n-        Assert.assertEquals(lonDeg, dmm.lonDeg);\n-        Assert.assertEquals(lonMin, dmm.lonMin);\n-        Assert.assertEquals(lonMinFrac, dmm.lonMinFrac);\n+    private static void checkDMM(Geopoint gp, char latDir, int latDeg, int latMin, int latMinFrac, char lonDir, int lonDeg, int lonMin, int lonMinFrac) {\n+        Assert.assertEquals(latDir, gp.getLatDir());\n+        Assert.assertEquals(latDeg, gp.getLatDeg());\n+        Assert.assertEquals(latMin, gp.getLatMin());\n+        Assert.assertEquals(latMinFrac, gp.getLatMinFrac());\n+        Assert.assertEquals(lonDir, gp.getLonDir());\n+        Assert.assertEquals(lonDeg, gp.getLonDeg());\n+        Assert.assertEquals(lonMin, gp.getLonMin());\n+        Assert.assertEquals(lonMinFrac, gp.getLonMinFrac());\n     }\n \n     public static void testDMS() {\n         // case 1\n         final Geopoint gp1 \u003d new Geopoint(51.3d, 13.8d);\n-        DMS dms1 \u003d gp1.asDMS();\n \n-        checkDMS(dms1, \u0027N\u0027, 51, 18, 0, 0, \u0027E\u0027, 13, 48, 0, 0);\n+        checkDMS(gp1, \u0027N\u0027, 51, 18, 0, 0, \u0027E\u0027, 13, 48, 0, 0);\n \n-        Geopoint gp1a \u003d DMS.createGeopoint(String.valueOf(dms1.latDir), String.valueOf(dms1.latDeg), String.valueOf(dms1.latMin), String.valueOf(dms1.latSec), String.valueOf(dms1.latSecFrac),\n-                String.valueOf(dms1.lonDir), String.valueOf(dms1.lonDeg), String.valueOf(dms1.lonMin), String.valueOf(dms1.lonSec), String.valueOf(dms1.lonSecFrac));\n+        Geopoint gp1a \u003d new Geopoint(String.valueOf(gp1.getLatDir()), String.valueOf(gp1.getLatDeg()), String.valueOf(gp1.getLatMin()), String.valueOf(gp1.getLatSec()), String.valueOf(gp1.getLatSecFrac()),\n+                String.valueOf(gp1.getLonDir()), String.valueOf(gp1.getLonDeg()), String.valueOf(gp1.getLonMin()), String.valueOf(gp1.getLonSec()), String.valueOf(gp1.getLonSecFrac()));\n \n         Assert.assertTrue(gp1a.equals(gp1));\n \n         // case 2\n         final Geopoint gp2 \u003d new Geopoint(51.34567d, 13.87654d);\n-        DMS dms2 \u003d gp2.asDMS();\n \n-        checkDMS(dms2, \u0027N\u0027, 51, 20, 44, 412, \u0027E\u0027, 13, 52, 35, 544);\n+        checkDMS(gp2, \u0027N\u0027, 51, 20, 44, 412, \u0027E\u0027, 13, 52, 35, 544);\n \n-        Geopoint gp2a \u003d DMS.createGeopoint(String.valueOf(dms2.latDir), String.valueOf(dms2.latDeg), String.valueOf(dms2.latMin), String.valueOf(dms2.latSec), String.valueOf(dms2.latSecFrac),\n-                String.valueOf(dms2.lonDir), String.valueOf(dms2.lonDeg), String.valueOf(dms2.lonMin), String.valueOf(dms2.lonSec), String.valueOf(dms2.lonSecFrac));\n+        Geopoint gp2a \u003d new Geopoint(String.valueOf(gp2.getLatDir()), String.valueOf(gp2.getLatDeg()), String.valueOf(gp2.getLatMin()), String.valueOf(gp2.getLatSec()), String.valueOf(gp2.getLatSecFrac()),\n+                String.valueOf(gp2.getLonDir()), String.valueOf(gp2.getLonDeg()), String.valueOf(gp2.getLonMin()), String.valueOf(gp2.getLonSec()), String.valueOf(gp2.getLonSecFrac()));\n \n         checkTolerance(gp2, gp2a, 5e-6);\n \n         // case 3\n         final Geopoint gp3 \u003d new Geopoint(51.29999833333333d, 13.8d);\n-        DMS dms3 \u003d gp3.asDMS();\n \n-        checkDMS(dms3, \u0027N\u0027, 51, 17, 59, 994, \u0027E\u0027, 13, 48, 0, 0);\n+        checkDMS(gp3, \u0027N\u0027, 51, 17, 59, 994, \u0027E\u0027, 13, 48, 0, 0);\n \n-        Geopoint gp3a \u003d DMS.createGeopoint(String.valueOf(dms3.latDir), String.valueOf(dms3.latDeg), String.valueOf(dms3.latMin), String.valueOf(dms3.latSec), String.valueOf(dms3.latSecFrac),\n-                String.valueOf(dms3.lonDir), String.valueOf(dms3.lonDeg), String.valueOf(dms3.lonMin), String.valueOf(dms3.lonSec), String.valueOf(dms3.lonSecFrac));\n+        Geopoint gp3a \u003d new Geopoint(String.valueOf(gp3.getLatDir()), String.valueOf(gp3.getLatDeg()), String.valueOf(gp3.getLatMin()), String.valueOf(gp3.getLatSec()), String.valueOf(gp3.getLatSecFrac()),\n+                String.valueOf(gp3.getLonDir()), String.valueOf(gp3.getLonDeg()), String.valueOf(gp3.getLonMin()), String.valueOf(gp3.getLonSec()), String.valueOf(gp3.getLonSecFrac()));\n \n         checkTolerance(gp3, gp3a, 5e-6);\n \n         // case 4\n         final Geopoint gp4 \u003d new Geopoint(51.00012d, 13.00089d);\n-        DMS dms4 \u003d gp4.asDMS();\n \n-        checkDMS(dms4, \u0027N\u0027, 51, 0, 0, 432, \u0027E\u0027, 13, 0, 3, 204);\n+        checkDMS(gp4, \u0027N\u0027, 51, 0, 0, 432, \u0027E\u0027, 13, 0, 3, 204);\n \n-        Geopoint gp4a \u003d DMS.createGeopoint(String.valueOf(dms4.latDir), String.valueOf(dms4.latDeg), String.valueOf(dms4.latMin), String.valueOf(dms4.latSec), String.valueOf(dms4.latSecFrac),\n-                String.valueOf(dms4.lonDir), String.valueOf(dms4.lonDeg), String.valueOf(dms4.lonMin), String.valueOf(dms4.lonSec), String.valueOf(dms4.lonSecFrac));\n+        Geopoint gp4a \u003d new Geopoint(String.valueOf(gp4.getLatDir()), String.valueOf(gp4.getLatDeg()), String.valueOf(gp4.getLatMin()), String.valueOf(gp4.getLatSec()), String.valueOf(gp4.getLatSecFrac()),\n+                String.valueOf(gp4.getLonDir()), String.valueOf(gp4.getLonDeg()), String.valueOf(gp4.getLonMin()), String.valueOf(gp4.getLonSec()), String.valueOf(gp4.getLonSecFrac()));\n \n         checkTolerance(gp4, gp4a, 5e-6);\n     }\n \n-    private static void checkDMS(DMS dms, char latDir, int latDeg, int latMin, int latSec, int latSecFrac, char lonDir, int lonDeg, int lonMin, int lonSec, int lonSecFrac) {\n-        Assert.assertEquals(latDir, dms.latDir);\n-        Assert.assertEquals(latDeg, dms.latDeg);\n-        Assert.assertEquals(latMin, dms.latMin);\n-        Assert.assertEquals(latSec, dms.latSec);\n-        Assert.assertEquals(latSecFrac, dms.latSecFrac);\n-        Assert.assertEquals(lonDir, dms.lonDir);\n-        Assert.assertEquals(lonDeg, dms.lonDeg);\n-        Assert.assertEquals(lonMin, dms.lonMin);\n-        Assert.assertEquals(lonSec, dms.lonSec);\n-        Assert.assertEquals(lonSecFrac, dms.lonSecFrac);\n+    private static void checkDMS(Geopoint gp, char latDir, int latDeg, int latMin, int latSec, int latSecFrac, char lonDir, int lonDeg, int lonMin, int lonSec, int lonSecFrac) {\n+        Assert.assertEquals(latDir, gp.getLatDir());\n+        Assert.assertEquals(latDeg, gp.getLatDeg());\n+        Assert.assertEquals(latMin, gp.getLatMin());\n+        Assert.assertEquals(latSec, gp.getLatSec());\n+        Assert.assertEquals(latSecFrac, gp.getLatSecFrac());\n+        Assert.assertEquals(lonDir, gp.getLonDir());\n+        Assert.assertEquals(lonDeg, gp.getLonDeg());\n+        Assert.assertEquals(lonMin, gp.getLonMin());\n+        Assert.assertEquals(lonSec, gp.getLonSec());\n+        Assert.assertEquals(lonSecFrac, gp.getLonSecFrac());\n     }\n \n     public static void testElevation() {"
        }
      ]
    }
  },
  {
    "name": "NumberFormatException in ZencoderClient when parsing error response from server",
    "url": "https://github.com/bitzeche/zencoder-java/issues/7",
    "description": "Use ZencoderClient.createJob() to submit encoding job.\nIf malformed video url is submitted zencoder.com returns XML with error description:\n\n``` xml\n\u003c?xml version\u003d1.0 encoding\u003dUTF-8?\u003e\n\u003capi-response\u003e\n  \u003cerrors type\u003darray\u003e\n    \u003cerror\u003eUrl must include a file name\u003c/error\u003e\n    \u003cerror\u003eUrl of input file is invalid\u003c/error\u003e\n    \u003cerror\u003eUrl of input file is not well formed. Please confirm that it is a valid URL.\u003c/error\u003e\n  \u003c/errors\u003e\n\u003c/api-response\u003e\n```\n\nZencoderClient.createJob method attempts to parse job id from the response and fails with NumberFormatException. It would be nice if ZencoderClient would detect error in response, parse response and return error details. \n",
    "keywords": [
      "zencoderclient",
      "file",
      "response",
      "xml",
      "error",
      "\u003cerror\u003eurl"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/bitzeche/zencoder-java/commit/73a109f54af8832a4bb27a47393c6b81a2ec33de",
      "files": [
        {
          "file_name": "pom.xml",
          "patch": "@@ -68,7 +68,7 @@\n \t\u003cproperties\u003e\n \t\t\u003ctarget.dir\u003etarget\u003c/target.dir\u003e\n \t\t\u003corg.slf4j.version\u003e1.6.1\u003c/org.slf4j.version\u003e\n-        \u003ccurrent.year\u003e2012\u003c/current.year\u003e\n+\t\t\u003ccurrent.year\u003e2012\u003c/current.year\u003e\n \t\u003c/properties\u003e\n \t\u003cdependencies\u003e\n \t\t\u003cdependency\u003e\n@@ -105,6 +105,12 @@\n \t\t\t\u003cartifactId\u003ejersey-apache-client\u003c/artifactId\u003e\n \t\t\t\u003cversion\u003e1.4\u003c/version\u003e\n \t\t\u003c/dependency\u003e\n+\n+\t\t\u003cdependency\u003e\n+\t\t\t\u003cgroupId\u003eorg.apache.commons\u003c/groupId\u003e\n+\t\t\t\u003cartifactId\u003ecommons-lang3\u003c/artifactId\u003e\n+\t\t\t\u003cversion\u003e3.1\u003c/version\u003e\n+\t\t\u003c/dependency\u003e\n \t\u003c/dependencies\u003e\n \t\u003cbuild\u003e\n \t\t\u003coutputDirectory\u003e${basedir}/${target.dir}/classes\u003c/outputDirectory\u003e"
        },
        {
          "file_name": "src/main/java/de/bitzeche/video/transcoding/zencoder/IZencoderClient.java",
          "patch": "@@ -19,23 +19,28 @@\n import org.w3c.dom.Document;\n \n import de.bitzeche.video.transcoding.zencoder.job.ZencoderJob;\n-\n+import de.bitzeche.video.transcoding.zencoder.response.ZencoderErrorResponseException;\n \n public interface IZencoderClient {\n \n \t/**\n \t * Submits a new Zencoder Job\n+\t * \n \t * @param job\n \t * @return XML Response from zencoder\n \t */\n-\tpublic Document createJob(ZencoderJob job);\n-\t\n+\tpublic Document createJob(ZencoderJob job)\n+\t\t\tthrows ZencoderErrorResponseException;\n+\n \tpublic boolean resubmitJob(int jobId);\n+\n \tpublic boolean resubmitJob(ZencoderJob job);\n \n \tpublic boolean cancelJob(int jobId);\n+\n \tpublic boolean cancelJob(ZencoderJob job);\n \n \tpublic boolean deleteJob(int jobId);\n+\n \tpublic boolean deleteJob(ZencoderJob job);\n }"
        },
        {
          "file_name": "src/main/java/de/bitzeche/video/transcoding/zencoder/ZencoderClient.java",
          "patch": "@@ -31,6 +31,7 @@\n import javax.xml.xpath.XPathExpressionException;\n import javax.xml.xpath.XPathFactory;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.w3c.dom.Document;\n@@ -43,6 +44,7 @@\n \n import de.bitzeche.video.transcoding.zencoder.enums.ZencoderAPIVersion;\n import de.bitzeche.video.transcoding.zencoder.job.ZencoderJob;\n+import de.bitzeche.video.transcoding.zencoder.response.ZencoderErrorResponseException;\n \n public class ZencoderClient implements IZencoderClient {\n \n@@ -73,7 +75,8 @@ public ZencoderClient(String zencoderApiKey, ZencoderAPIVersion apiVersion) {\n \t}\n \n \t@Override\n-\tpublic Document createJob(ZencoderJob job) {\n+\tpublic Document createJob(ZencoderJob job)\n+\t\t\tthrows ZencoderErrorResponseException {\n \t\tDocument data;\n \t\ttry {\n \t\t\tdata \u003d job.createXML();\n@@ -87,10 +90,12 @@ public Document createJob(ZencoderJob job) {\n \t\t\t\t\t\"https://app.zencoder.com/api/jobs?format\u003dxml\", data);\n \t\t\tString id \u003d (String) xPath.evaluate(\"/api-response/job/id\",\n \t\t\t\t\tresponse, XPathConstants.STRING);\n-\t\t\tif (id !\u003d null) {\n+\t\t\tif (StringUtils.isNotEmpty(id)) {\n \t\t\t\tjob.setJobId(Integer.parseInt(id));\n+\t\t\t\treturn response;\n \t\t\t}\n-\t\t\treturn response;\n+\t\t\tLOGGER.error(\"Error when sending request to Zencoder: \", response);\n+\t\t\tthrow new ZencoderErrorResponseException(response);\n \t\t} catch (ParserConfigurationException e) {\n \t\t\tLOGGER.error(\"Parser threw Exception\", e);\n \t\t} catch (XPathExpressionException e) {\n@@ -146,15 +151,16 @@ public boolean deleteJob(ZencoderJob job) {\n \n \t@Deprecated\n \tpublic boolean deleteJob(int id) {\n-\t\tthrow new IllegalArgumentException(\"Deleting jobs is not supported at the moment. Use cancel instead.\");\n-\t\t\n-//\t\tString url \u003d zencoderAPIBaseUrl + \"jobs/\" + id + \"?api_key\u003d\"\n-//\t\t\t\t+ zencoderAPIKey;\n-//\t\tLOGGER.debug(\"calling to delete job: {}\", url);\n-//\t\tWebResource webResource \u003d httpClient.resource(url);\n-//\t\tClientResponse response \u003d webResource.delete(ClientResponse.class);\n-//\t\tint responseStatus \u003d response.getStatus();\n-//\t\treturn (responseStatus \u003d\u003d 200);\n+\t\tLOGGER.warn(\"Deleting jobs is deprecated. Use cancel instead.\");\n+\t\treturn cancelJob(id);\n+\n+\t\t// String url \u003d zencoderAPIBaseUrl + \"jobs/\" + id + \"?api_key\u003d\"\n+\t\t// + zencoderAPIKey;\n+\t\t// LOGGER.debug(\"calling to delete job: {}\", url);\n+\t\t// WebResource webResource \u003d httpClient.resource(url);\n+\t\t// ClientResponse response \u003d webResource.delete(ClientResponse.class);\n+\t\t// int responseStatus \u003d response.getStatus();\n+\t\t// return (responseStatus \u003d\u003d 200);\n \t}\n \n \tprotected ClientResponse sendGetRequest(String url) {"
        },
        {
          "file_name": "src/main/java/de/bitzeche/video/transcoding/zencoder/response/ZencoderErrorResponseException.java",
          "patch": "@@ -0,0 +1,18 @@\n+package de.bitzeche.video.transcoding.zencoder.response;\n+\n+import org.w3c.dom.Document;\n+\n+public class ZencoderErrorResponseException extends Exception {\n+\n+\tprivate static final long serialVersionUID \u003d 7693985002277452696L;\n+\n+\tprivate final Document errorResponse;\n+\n+\tpublic ZencoderErrorResponseException(Document response) {\n+\t\tthis.errorResponse \u003d response;\n+\t}\n+\n+\tpublic Document getErrorResponse() {\n+\t\treturn errorResponse;\n+\t}\n+}"
        },
        {
          "file_name": "src/test/java/de/bitzeche/video/transcoding/zencoder/test/ZencoderClientTest.java",
          "patch": "@@ -37,6 +37,7 @@\n import de.bitzeche.video.transcoding.zencoder.job.ZencoderS3AccessControlItem;\n import de.bitzeche.video.transcoding.zencoder.job.ZencoderThumbnail;\n import de.bitzeche.video.transcoding.zencoder.job.ZencoderWatermark;\n+import de.bitzeche.video.transcoding.zencoder.response.ZencoderErrorResponseException;\n \n public class ZencoderClientTest {\n \n@@ -99,7 +100,8 @@ public void createJobAndCheckXML() {\n \t}\n \n \t@Test(dataProvider \u003d \"ApiVersionDS\")\n-\tpublic void createAndCancelJobTest(ApiVersionProvider provider) {\n+\tpublic void createAndCancelJobTest(ApiVersionProvider provider)\n+\t\t\tthrows ZencoderErrorResponseException {\n \n \t\tZencoderAPIVersion apiVersion \u003d provider.getApiVersion();\n \t\tIZencoderClient client \u003d createClient(apiVersion);\n@@ -117,6 +119,18 @@ public void createAndCancelJobTest(ApiVersionProvider provider) {\n \t\tAssert.assertTrue(canceled);\n \t}\n \n+\t@Test(dataProvider \u003d \"ApiVersionDS\", expectedExceptions \u003d ZencoderErrorResponseException.class)\n+\tpublic void createJobAndProduceErrorWithMalformedVideoURL(\n+\t\t\tApiVersionProvider provider) throws ZencoderErrorResponseException {\n+\t\tZencoderAPIVersion apiVersion \u003d provider.getApiVersion();\n+\t\tIZencoderClient client \u003d createClient(apiVersion);\n+\t\tZencoderJob job \u003d new ZencoderJob(\"s\" + TEST_VIDEO_URL);\n+\t\tjob.setZencoderRegion(ZENCODER_REGION);\n+\t\tjob.setTest(true);\n+\n+\t\tclient.createJob(job);\n+\t}\n+\n \t@Test(dataProvider \u003d \"ApiVersionDS\", dependsOnMethods \u003d \"createAndCancelJobTest\")\n \tpublic void resubmitAndCancelJobTest(ApiVersionProvider provider) {\n \n@@ -133,7 +147,7 @@ public void resubmitAndCancelJobTest(ApiVersionProvider provider) {\n \t\tAssert.assertTrue(canceled);\n \t}\n \n-\t@Test(dataProvider \u003d \"ApiVersionDS\", dependsOnMethods \u003d \"resubmitAndCancelJobTest\", expectedExceptions \u003d IllegalArgumentException.class)\n+\t@Test(dataProvider \u003d \"ApiVersionDS\", dependsOnMethods \u003d \"resubmitAndCancelJobTest\")\n \tpublic void deleteTest(ApiVersionProvider provider) {\n \t\tZencoderAPIVersion apiVersion \u003d provider.getApiVersion();\n \t\tIZencoderClient client \u003d createClient(apiVersion);"
        }
      ]
    }
  },
  {
    "name": "Parse error in .tt",
    "url": "https://github.com/Camelcade/Perl5-IDEA/issues/1262",
    "description": "``` javascript\n\u003cscript type\u003d\"text/javascript\"\u003e\n    var a \u003d 5;\n    [% b \u003d 4 %]\n    if([% b %] \u003c\u003d a) {\n        console.log(\"Hello world\");\n    }\n\u003c/script\u003e\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Camelcade/Perl5-IDEA/commit/11184f0d551c30297f0638dd4ed3183e2a8bc248",
      "files": [
        {
          "file_name": "src/com/perl5/lang/tt2/lexer/TemplateToolkitLexer.java",
          "patch": "@@ -59,7 +59,6 @@ else if (currentCustomState \u003d\u003d LEX_HTML)\n \t\t{\n \t\t\tint offset \u003d tokenStart;\n \t\t\tboolean blockStart \u003d false;\n-\t\t\tint lastNonSpaceCharacterOffset \u003d -1;\n \t\t\tfor (; offset \u003c bufferEnd; offset++)\n \t\t\t{\n \t\t\t\tchar currentChar \u003d buffer.charAt(offset);\n@@ -72,15 +71,11 @@ else if (isOutlineOpener(buffer, offset))\n \t\t\t\t{\n \t\t\t\t\tbreak;\n \t\t\t\t}\n-\t\t\t\telse if (!Character.isWhitespace(currentChar))\n-\t\t\t\t{\n-\t\t\t\t\tlastNonSpaceCharacterOffset \u003d offset;\n-\t\t\t\t}\n \t\t\t}\n \n \t\t\tif (offset \u003e tokenStart)\n \t\t\t{\n-\t\t\t\treLexHTMLBLock(tokenStart, offset, lastNonSpaceCharacterOffset, TT2_HTML);\n+\t\t\t\tpushPreparsedToken(tokenStart, offset, TT2_HTML);\n \t\t\t}\n \n \t\t\tif (blockStart)"
        },
        {
          "file_name": "test/parser/TemplateToolkitParserTest.java",
          "patch": "@@ -270,6 +270,11 @@ public void testTags()\n \t\tdoTest(\"tags\");\n \t}\n \n+\tpublic void testIssue1262()\n+\t{\n+\t\tdoTest(\"issue1262\");\n+\t}\n+\n \tpublic void testChompMarkers()\n \t{\n \t\tdoTest(\"chomp_markers\");"
        },
        {
          "file_name": "testData/parser/tt2/array.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -24,6 +24,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -40,7 +41,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00274\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# n is [ 1, 2, 3, 4 ]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # n is [ 1, 2, 3, 4 ]\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -69,4 +70,4 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027y\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/block_anon.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiAnonBlockImpl(TemplateToolkit2Element.ANON_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiAnonBlockDirectiveImpl(TemplateToolkit2Element.ANON_BLOCK_DIRECTIVE)\n@@ -8,52 +8,55 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027And Caesar\u0027s spirit, ranging for revenge,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   And Caesar\u0027s spirit, ranging for revenge,\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027someval\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027With Ate by his side come hot from hell,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   With Ate by his side come hot from hell,\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiAnonBlockImpl(TemplateToolkit2Element.ANON_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiAnonBlockDirectiveImpl(TemplateToolkit2Element.ANON_BLOCK_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027julius\u0027)\n       PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027And Caesar\u0027s spirit, ranging for revenge,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   And Caesar\u0027s spirit, ranging for revenge,\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027someval\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027With Ate by his side come hot from hell,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   With Ate by his side come hot from hell,\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiAnonBlockImpl(TemplateToolkit2Element.ANON_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiAnonBlockDirectiveImpl(TemplateToolkit2Element.ANON_BLOCK_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027julius\u0027)\n       PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027And Caesar\u0027s spirit, ranging for revenge,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   And Caesar\u0027s spirit, ranging for revenge,\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027someval\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027With Ate by his side come hot from hell,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   With Ate by his side come hot from hell,\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiAnonBlockImpl(TemplateToolkit2Element.ANON_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiAnonBlockDirectiveImpl(TemplateToolkit2Element.ANON_BLOCK_DIRECTIVE)\n@@ -62,19 +65,20 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027And Caesar\u0027s spirit, ranging for revenge,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   And Caesar\u0027s spirit, ranging for revenge,\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027someval\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027With Ate by his side come hot from hell,\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   With Ate by his side come hot from hell,\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027data\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/block_anon_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiAnonBlockImpl(TemplateToolkit2Element.ANON_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -9,10 +9,10 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n         PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027And Caesar\u0027s spirit, ranging for revenge,\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   And Caesar\u0027s spirit, ranging for revenge,\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027someval\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027With Ate by his side come hot from hell,\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   With Ate by his side come hot from hell,\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/block_named.txt",
          "patch": "@@ -1,42 +1,43 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n       PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tabrow\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\\n  \u0027)\n     PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n         PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n@@ -49,29 +50,30 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\\n  \u0027)\n     PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n         PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n@@ -84,76 +86,78 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\\n  \u0027)\n     PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n         PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n       PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tabrow\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\\n  \u0027)\n     PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n         PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n  \u003ctd\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n\u003c/tr\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n       PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/block_named_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -8,26 +8,26 @@ Template Toolkit File\n         PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tabrow\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003ctr\u003e\\n  \u003ctd\u003e\u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\\n  \u0027)\n       PsiNamedBlockImpl(TemplateToolkit2Element.NAMED_BLOCK)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiBlockDirectiveImpl(TemplateToolkit2Element.BLOCK_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.BLOCK)(\u0027BLOCK\u0027)\n           PsiBlockNameImpl(TemplateToolkit2Element.BLOCK_NAME)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027tmpblk\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This is OK\u0027)\n+        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 This is OK \u0027)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n  \u003ctd\u003e\u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)"
        },
        {
          "file_name": "testData/parser/tt2/call.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -8,6 +8,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027disconnect\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -26,6 +27,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027page_count\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)"
        },
        {
          "file_name": "testData/parser/tt2/chomp.txt",
          "patch": "@@ -1,25 +1,28 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n@@ -28,4 +31,4 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/chomp_markers.txt",
          "patch": "@@ -1,25 +1,28 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n@@ -28,20 +31,23 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.+)(\u0027+\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.+)(\u0027+\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.+)(\u0027+\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n@@ -50,20 +56,23 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.+)(\u0027+\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n@@ -72,20 +81,23 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.~)(\u0027~\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.~)(\u0027~\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiElement(TemplateToolkit2Token.~)(\u0027~\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n@@ -94,4 +106,4 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somefield\u0027)\n   PsiElement(TemplateToolkit2Token.~)(\u0027~\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/clear.txt",
          "patch": "@@ -1,9 +1,10 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiClearDirectiveImpl(TemplateToolkit2Element.CLEAR_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CLEAR)(\u0027CLEAR\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiClearDirectiveImpl(TemplateToolkit2Element.CLEAR_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CLEAR)(\u0027CLEAR\u0027)\n@@ -15,11 +16,12 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027some\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027var\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/comments.txt",
          "patch": "@@ -1,22 +1,26 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027#line comment in block \u0027)\n   TemplateToolkitCompositeElementImpl(TemplateToolkit2Element.EMPTY_DIRECTIVE)\n     \u003cempty list\u003e\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiBlockCommentImpl(TemplateToolkit2Element.BLOCK_COMMENT)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027#\\n    this entire directive is ignored no\\n    matter how many lines it wraps onto\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiBlockCommentImpl(TemplateToolkit2Element.BLOCK_COMMENT)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027#\\n    this entire directive is ignored no\\n    matter how \u0027many lines it wraps onto\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiBlockCommentImpl(TemplateToolkit2Element.BLOCK_COMMENT)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# this entire\\n    \"directive is ignored no\\n    matter how many lines it wraps onto\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# this is a comment\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n@@ -64,4 +68,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# this is\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/debug.txt",
          "patch": "@@ -1,17 +1,17 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n     PsiElement(TemplateToolkit2Token.on)(\u0027on\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n     PsiElement(TemplateToolkit2Token.off)(\u0027off\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n@@ -48,16 +48,17 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\u003e\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n     PsiElement(TemplateToolkit2Token.on)(\u0027on\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n     PsiElement(TemplateToolkit2Token.off)(\u0027off\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n@@ -93,4 +94,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027-\u0027)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\u003e\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/default.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDefaultDirectiveImpl(TemplateToolkit2Element.DEFAULT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEFAULT)(\u0027DEFAULT\u0027)\n@@ -70,4 +70,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/filter.txt",
          "patch": "@@ -1,17 +1,18 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.FILTER)(\u0027FILTER\u0027)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027html\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n@@ -24,11 +25,12 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00273\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027blah\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027blah \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n@@ -45,23 +47,25 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00272\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Is there anybody out there?\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nIs there anybody out there?\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.FILTER)(\u0027FILTER\u0027)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027echo\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Mother, should I build a wall?\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nMother, should I build a wall?\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -73,6 +77,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027html\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n@@ -81,9 +86,9 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.$)(\u0027$\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027myfilter\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/filter_postfix.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n@@ -25,11 +25,12 @@ Template Toolkit File\n                 PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiFilterDirectiveImpl(TemplateToolkit2Element.FILTER_DIRECTIVE)\n@@ -55,11 +56,12 @@ Template Toolkit File\n                 PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiWrapperDirectiveImpl(TemplateToolkit2Element.WRAPPER_DIRECTIVE)\n@@ -94,11 +96,12 @@ Template Toolkit File\n               PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n                 PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n@@ -122,12 +125,12 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n     PsiElement(TemplateToolkit2Token.off)(\u0027off\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n@@ -151,7 +154,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiDebugDirectiveImpl(TemplateToolkit2Element.DEBUG_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEBUG)(\u0027DEBUG\u0027)\n@@ -174,7 +177,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiNextDirectiveImpl(TemplateToolkit2Element.NEXT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.NEXT)(\u0027NEXT\u0027)\n@@ -197,7 +200,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiNextDirectiveImpl(TemplateToolkit2Element.NEXT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.NEXT)(\u0027NEXT\u0027)\n@@ -219,7 +222,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n@@ -242,7 +245,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n@@ -264,7 +267,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiReturnDirectiveImpl(TemplateToolkit2Element.RETURN_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.RETURN)(\u0027RETURN\u0027)\n@@ -287,7 +290,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiReturnDirectiveImpl(TemplateToolkit2Element.RETURN_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.RETURN)(\u0027RETURN\u0027)\n@@ -309,7 +312,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiStopDirectiveImpl(TemplateToolkit2Element.STOP_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.STOP)(\u0027STOP\u0027)\n@@ -332,7 +335,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiStopDirectiveImpl(TemplateToolkit2Element.STOP_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.STOP)(\u0027STOP\u0027)\n@@ -354,7 +357,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiClearDirectiveImpl(TemplateToolkit2Element.CLEAR_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CLEAR)(\u0027CLEAR\u0027)\n@@ -377,7 +380,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiClearDirectiveImpl(TemplateToolkit2Element.CLEAR_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CLEAR)(\u0027CLEAR\u0027)\n@@ -399,7 +402,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n@@ -422,7 +425,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is on (assuming DEBUG option is set true)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ndirective debugging is on (assuming DEBUG option is set true)\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n@@ -444,7 +447,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027directive debugging is off\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDefaultDirectiveImpl(TemplateToolkit2Element.DEFAULT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEFAULT)(\u0027DEFAULT\u0027)\n@@ -485,6 +488,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiDefaultDirectiveImpl(TemplateToolkit2Element.DEFAULT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.DEFAULT)(\u0027DEFAULT\u0027)\n@@ -525,7 +529,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027insert_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\ninsert_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -550,6 +554,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -577,7 +582,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: ABSOLUTE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # file error: ABSOLUTE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -610,6 +615,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -635,7 +641,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -666,7 +672,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# en/misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027  # en/misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -698,6 +704,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -722,6 +729,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -749,7 +757,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: ABSOLUTE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # file error: ABSOLUTE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -782,6 +790,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -807,7 +816,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -838,7 +847,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# en/misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027  # en/misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -870,7 +879,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027include_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\ninclude_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -895,6 +904,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -922,7 +932,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: ABSOLUTE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # file error: ABSOLUTE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -955,6 +965,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -980,7 +991,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1011,7 +1022,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# en/misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027  # en/misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1043,6 +1054,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1067,6 +1079,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1094,7 +1107,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: ABSOLUTE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # file error: ABSOLUTE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1127,6 +1140,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1152,7 +1166,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1183,7 +1197,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# en/misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027  # en/misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -1215,7 +1229,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027process_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nprocess_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -1240,6 +1254,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -1270,6 +1285,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -1294,6 +1310,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -1324,7 +1341,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027call_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\ncall_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -1351,6 +1368,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -1405,6 +1423,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -1459,6 +1478,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -1513,6 +1533,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n@@ -1541,7 +1562,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027throw_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nthrow_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1580,7 +1601,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1622,7 +1643,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1664,7 +1685,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1710,7 +1731,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1748,7 +1769,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1789,7 +1810,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1830,7 +1851,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1875,7 +1896,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1914,7 +1935,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1956,7 +1977,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -1998,7 +2019,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -2044,7 +2065,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -2082,7 +2103,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -2123,7 +2144,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -2164,7 +2185,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -2209,7 +2230,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\\nset_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\\nset_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -2271,6 +2292,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.SET)(\u0027SET\u0027)\n@@ -2333,6 +2355,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -2394,6 +2417,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.SET)(\u0027SET\u0027)\n@@ -2456,7 +2480,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027get_directive\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nget_directive\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n@@ -2481,6 +2505,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n@@ -2528,6 +2553,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n@@ -2574,6 +2600,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -2619,6 +2646,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -2641,4 +2669,4 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/filter_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiFilterBlockImpl(TemplateToolkit2Element.FILTER_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -8,4 +8,4 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027html\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   HTML text may have \u003c and \u003e characters embedded\\n   which you want converted to the correct HTML entities.\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/foreach.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -32,7 +32,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Things:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nThings:\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -58,17 +58,18 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027thing\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Items:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nItems:\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -80,17 +81,18 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027items\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027i\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Stuff:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nStuff:\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -110,6 +112,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -121,16 +124,18 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027stuff\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027s\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -142,10 +147,12 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027items\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -219,6 +226,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -230,24 +238,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -256,20 +268,24 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -307,6 +323,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiElement(TemplateToolkit2Token.})(\u0027}\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -318,26 +335,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027users\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027u\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027key\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 : \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027u\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027value\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -349,26 +368,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Name:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Name: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Email:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    Email: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -392,25 +413,28 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027reverse\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027match\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027score\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 : \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027match\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027url\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -438,7 +462,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n     PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003cli\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u003cli\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -454,16 +478,18 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027size\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027item\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -475,6 +501,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027giter\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -488,39 +515,41 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027user #\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n         user #\u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027loop\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027count\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027in\\n         group\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 in\\n         group \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027giter\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027count\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027is\\n         named\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 is\\n         named \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -553,7 +582,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Things:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nThings:\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -579,17 +608,18 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027thing\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Items:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nItems:\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -601,17 +631,18 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027items\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027i\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Stuff:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nStuff:\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -631,6 +662,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -642,16 +674,18 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027stuff\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027s\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -663,10 +697,12 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027items\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -740,6 +776,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -751,24 +788,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -777,20 +818,24 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -828,6 +873,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiElement(TemplateToolkit2Token.})(\u0027}\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -839,26 +885,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027users\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027u\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027key\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 : \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027u\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027value\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -870,26 +918,28 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Name:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Name: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Email:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    Email: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -913,25 +963,28 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027reverse\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027match\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027score\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 : \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027match\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027url\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -959,7 +1012,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n     PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003cli\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u003cli\u003e\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -975,16 +1028,18 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027size\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027: \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027item\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -996,6 +1051,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027giter\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -1009,36 +1065,38 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027userlist\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027user #\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n         user #\u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027loop\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027count\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027in\\n         group\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 in\\n         group \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027giter\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027count\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027is\\n         named\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 is\\n         named \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/foreach_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\nThings:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\nThings:\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -26,10 +26,10 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n             PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027*\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   * \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027thing\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/get.txt",
          "patch": "@@ -1,11 +1,12 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.GET)(\u0027GET\u0027)\n@@ -16,6 +17,7 @@ Template Toolkit File\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -27,6 +29,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -42,6 +45,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -69,6 +73,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -100,6 +105,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027title\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -121,6 +127,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027100\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -154,6 +161,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027items\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiTernarExprImpl(TemplateToolkit2Element.TERNAR_EXPR)\n@@ -187,7 +195,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00276\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# 2.5\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027            # 2.5\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -205,7 +213,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00276\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# 2\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027          # 2\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -223,7 +231,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00276\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# 3\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027          # 3\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)"
        },
        {
          "file_name": "testData/parser/tt2/hash.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n# minimal TT style\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n# minimal TT style\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -36,7 +36,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027666\u0027)\n         PsiElement(TemplateToolkit2Token.})(\u0027}\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# perl style\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n# perl style\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -76,4 +76,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.,)(\u0027,\u0027)\n         PsiElement(TemplateToolkit2Token.})(\u0027}\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/if.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n     PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -8,19 +8,19 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027frames\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest words\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027frameset\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest words\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest words\\n\\n\u0027)\n   PsiUnlessBlockImpl(TemplateToolkit2Element.UNLESS_BLOCK)\n     PsiUnlessBranchImpl(TemplateToolkit2Element.UNLESS_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -29,19 +29,19 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027text_mode\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest words\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027biglogo\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest words\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test words\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\ntest words\\n\\n\u0027)\n   PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n     PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -54,13 +54,13 @@ Template Toolkit File\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\\n\u0027)\n     PsiElsifBranchImpl(TemplateToolkit2Element.ELSIF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiElsifDirectiveImpl(TemplateToolkit2Element.ELSIF_DIRECTIVE)\n@@ -72,30 +72,30 @@ Template Toolkit File\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002718\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Sorry, you\u0027re not old enough to enter\\n   Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Sorry, you\u0027re not old enough to enter\\n   Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   (and too dumb to lie about your age)\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   (and too dumb to lie about your age)\\n\u0027)\n     PsiElseBranchImpl(TemplateToolkit2Element.ELSE_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiElseDirectiveImpl(TemplateToolkit2Element.ELSE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.ELSE)(\u0027ELSE\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Welcome\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Welcome \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n   test words\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n   test words\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# ridiculously contrived complex example\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n# ridiculously contrived complex example\\n\u0027)\n   PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n     PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -131,13 +131,13 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027debug\u0027)\n               PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n      Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   I\u0027m confused.\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   I\u0027m confused.\\n\u0027)\n     PsiElsifBranchImpl(TemplateToolkit2Element.ELSIF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiElsifDirectiveImpl(TemplateToolkit2Element.ELSIF_DIRECTIVE)\n@@ -149,15 +149,15 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027less\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027That\u0027s more or less correct.\\n   Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   That\u0027s more or less correct.\\n   Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/if_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n     PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -12,13 +12,13 @@ Template Toolkit File\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\\n\u0027)\n     PsiElsifBranchImpl(TemplateToolkit2Element.ELSIF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiElsifDirectiveImpl(TemplateToolkit2Element.ELSIF_DIRECTIVE)\n@@ -30,26 +30,26 @@ Template Toolkit File\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002718\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Sorry, you\u0027re not old enough to enter\\n   Hello\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Sorry, you\u0027re not old enough to enter\\n   Hello \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   (and too dumb to lie about your age)\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   (and too dumb to lie about your age)\\n\u0027)\n     PsiErrorElement:Unclosed block directive, missing END\n       PsiElseBranchImpl(TemplateToolkit2Element.ELSE_BRANCH)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiElseDirectiveImpl(TemplateToolkit2Element.ELSE_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.ELSE)(\u0027ELSE\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Welcome\u0027)\n+        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Welcome \u0027)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n   test words\u0027)\n+        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n   test words\\n\\n\u0027)\n         PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n           PsiErrorElement:Unclosed block directive, missing END\n             PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n@@ -63,13 +63,13 @@ Template Toolkit File\n                   PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n                     PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n               PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-              PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Hello\u0027)\n+              PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Hello \u0027)\n               PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n               PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n                 PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n                   PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n               PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-              PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\u0027)\n+              PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, does your mother know you\u0027re\\n   using her AOL account?\\n\\n\u0027)\n               PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n                 PsiErrorElement:Unclosed block directive, missing END\n                   PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n@@ -83,7 +83,7 @@ Template Toolkit File\n                         PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n                           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n                     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-                    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Hello\u0027)\n+                    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Hello \u0027)\n                     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n                     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n                       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)"
        },
        {
          "file_name": "testData/parser/tt2/include.txt",
          "patch": "@@ -1,11 +1,12 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -21,21 +22,22 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myheader\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u0027myheader\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # \u0027myheader\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n     PsiVariableExprImpl(TemplateToolkit2Element.VARIABLE_EXPR)\n       PsiElement(TemplateToolkit2Token.$)(\u0027$\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027myheader\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u0027my/misc/header\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # \u0027my/misc/header\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -45,7 +47,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myheader\u0027)\n       PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u0027my/misc/header\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # \u0027my/misc/header\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -59,18 +61,21 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027World\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027table\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -87,6 +92,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Projects\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -119,6 +125,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00272\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -137,6 +144,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.})(\u0027}\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -153,14 +161,15 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Boz\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# Boz\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # Boz\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -196,4 +205,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Site\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/insert.txt",
          "patch": "@@ -1,32 +1,35 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n   PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# looks for /here/foo then /there/foo\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027            # looks for /here/foo then /there/foo\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -36,7 +39,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027passwd\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: ABSOLUTE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # file error: ABSOLUTE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -45,7 +48,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027secret\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# file error: RELATIVE not set\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027      # file error: RELATIVE not set\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -56,6 +59,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027txt\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -70,6 +74,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027stupid\u0027)\n       PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -93,14 +98,15 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027txt\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n     PsiVariableExprImpl(TemplateToolkit2Element.VARIABLE_EXPR)\n       PsiElement(TemplateToolkit2Token.$)(\u0027$\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027legalese\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -113,7 +119,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027legalese\u0027)\n       PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# en/misc/legalese.txt\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027  # en/misc/legalese.txt\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiInsertDirectiveImpl(TemplateToolkit2Element.INSERT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.INSERT)(\u0027INSERT\u0027)\n@@ -127,4 +133,4 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027txt\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/issue1262.code",
          "patch": "@@ -0,0 +1,17 @@\n+\u003cscript type\u003d\"text/javascript\"\u003e\n+    [% comments \u003d 1 %]\n+    [% IF comments # some comment here %]\n+     //javacript comment\n+    [% END %]\n+\n+    function calculate(a){\n+    [% IF negative %]\n+        if( a \u003c 0){\n+            alert(\u0027Negative\u0027);\n+            return false;\n+        }\n+    [% END %]\n+        return a+10;\n+    }\n+\n+\u003c/script\u003e\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/issue1262.txt",
          "patch": "@@ -0,0 +1,41 @@\n+Template Toolkit File\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003cscript type\u003d\"text/javascript\"\u003e\\n    \u0027)\n+  PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+  PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n+    PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n+      PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n+        PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027comments\u0027)\n+      PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n+      PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n+        PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00271\u0027)\n+  PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n    \u0027)\n+  PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n+    PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n+      PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+      PsiIfDirectiveImpl(TemplateToolkit2Element.IF_DIRECTIVE)\n+        PsiElement(TemplateToolkit2Token.IF)(\u0027IF\u0027)\n+        PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n+          PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027comments\u0027)\n+      PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# some comment here \u0027)\n+      PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n     //javacript comment\\n    \u0027)\n+    PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+    PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n+      PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+    PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n    function calculate(a){\\n    \u0027)\n+  PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n+    PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n+      PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+      PsiIfDirectiveImpl(TemplateToolkit2Element.IF_DIRECTIVE)\n+        PsiElement(TemplateToolkit2Token.IF)(\u0027IF\u0027)\n+        PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n+          PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027negative\u0027)\n+      PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n        if( a \u003c 0){\\n            alert(\u0027Negative\u0027);\\n            return false;\\n        }\\n    \u0027)\n+    PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+    PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n+      PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n+    PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n        return a+10;\\n    }\\n\\n\u003c/script\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/last.txt",
          "patch": "@@ -1,9 +1,10 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027LAST\u0027)\n@@ -15,17 +16,20 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027some\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027var\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027BREAK\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiLastDirectiveImpl(TemplateToolkit2Element.LAST_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.LAST)(\u0027BREAK\u0027)\n@@ -37,4 +41,4 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/macro.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -11,6 +11,7 @@ Template Toolkit File\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -46,6 +47,7 @@ Template Toolkit File\n                 PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -59,6 +61,7 @@ Template Toolkit File\n             PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027frames\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -67,21 +70,25 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElseBranchImpl(TemplateToolkit2Element.ELSE_BRANCH)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiElseDirectiveImpl(TemplateToolkit2Element.ELSE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.ELSE)(\u0027ELSE\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n             PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -95,6 +102,7 @@ Template Toolkit File\n             PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027frames\u0027)\n           PsiElement(TemplateToolkit2Token.OUTLINE_END)(\u0027\\n\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -103,21 +111,25 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElseBranchImpl(TemplateToolkit2Element.ELSE_BRANCH)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiElseDirectiveImpl(TemplateToolkit2Element.ELSE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.ELSE)(\u0027ELSE\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n             PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -131,6 +143,7 @@ Template Toolkit File\n             PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027frames\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -139,18 +152,21 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElseBranchImpl(TemplateToolkit2Element.ELSE_BRANCH)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiElseDirectiveImpl(TemplateToolkit2Element.ELSE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.ELSE)(\u0027ELSE\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n             PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n         PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n         PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/meta.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMetaDirectiveImpl(TemplateToolkit2Element.META_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.META)(\u0027META\u0027)\n@@ -37,4 +37,4 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER)(\u00271.23\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/multi_directives_blocks.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiIfBlockImpl(TemplateToolkit2Element.IF_BLOCK)\n     PsiIfBranchImpl(TemplateToolkit2Element.IF_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -39,6 +39,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -123,6 +124,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -218,6 +220,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027end_form\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiMacroDirectiveImpl(TemplateToolkit2Element.MACRO_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.MACRO)(\u0027MACRO\u0027)\n@@ -276,6 +279,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n         PsiElement(TemplateToolkit2Token.-)(\u0027-\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -351,13 +355,14 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -407,17 +412,20 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -439,13 +447,14 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -454,6 +463,7 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myerror\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -498,7 +508,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027errors\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027in\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   in \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -508,7 +518,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027module\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\\n      \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -529,9 +539,9 @@ Template Toolkit File\n                 PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/next.txt",
          "patch": "@@ -1,9 +1,10 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiNextDirectiveImpl(TemplateToolkit2Element.NEXT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.NEXT)(\u0027NEXT\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiNextDirectiveImpl(TemplateToolkit2Element.NEXT_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.NEXT)(\u0027NEXT\u0027)\n@@ -15,11 +16,12 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027some\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027var\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/operators.txt",
          "patch": "@@ -1,10 +1,11 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -18,6 +19,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -35,6 +37,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiEqualExprImpl(TemplateToolkit2Element.EQUAL_EXPR)\n@@ -52,6 +55,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiEqualExprImpl(TemplateToolkit2Element.EQUAL_EXPR)\n@@ -69,6 +73,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -86,6 +91,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -103,6 +109,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -120,6 +127,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -137,6 +145,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAndExprImpl(TemplateToolkit2Element.AND_EXPR)\n@@ -154,6 +163,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAndExprImpl(TemplateToolkit2Element.AND_EXPR)\n@@ -171,6 +181,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAndExprImpl(TemplateToolkit2Element.AND_EXPR)\n@@ -188,6 +199,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -205,6 +217,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -222,6 +235,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -237,6 +251,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n@@ -250,6 +265,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n@@ -263,6 +279,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n@@ -281,6 +298,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiTernarExprImpl(TemplateToolkit2Element.TERNAR_EXPR)\n@@ -301,6 +319,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -318,6 +337,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -335,6 +355,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -352,6 +373,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -369,6 +391,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -386,6 +409,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -403,6 +427,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -420,6 +445,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -437,6 +463,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -472,6 +499,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027author\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -493,6 +521,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027author\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -539,4 +568,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027$\u0027)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027author\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/perl.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n@@ -54,6 +54,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u0027)\n   PsiRawperlBlockImpl(TemplateToolkit2Element.RAWPERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiRawperlDirectiveImpl(TemplateToolkit2Element.RAWPERL_DIRECTIVE)\n@@ -137,6 +138,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u0027)\n   PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n@@ -167,6 +169,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n@@ -226,6 +229,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n@@ -293,6 +297,7 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n@@ -318,4 +323,4 @@ Template Toolkit File\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/perl_unclosed.txt",
          "patch": "@@ -1,9 +1,9 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed perl block, missing END\n     PsiPerlBlockImpl(TemplateToolkit2Element.PERL_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiPerlDirectiveImpl(TemplateToolkit2Element.PERL_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.PERL)(\u0027PERL\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027print $context-\u003einclude(\u0027myfile\u0027);\\n   print $stash;\\n   print $output;\\n   print $error;\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   print $context-\u003einclude(\u0027myfile\u0027);\\n   print $stash;\\n   print $output;\\n   print $error;\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/precedence.txt",
          "patch": "@@ -1,21 +1,24 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n       PsiElement(TemplateToolkit2Token.!)(\u0027!\u0027)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n@@ -29,12 +32,14 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiUnaryExprImpl(TemplateToolkit2Element.UNARY_EXPR)\n       PsiElement(TemplateToolkit2Token.not)(\u0027not\u0027)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -76,6 +81,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -116,6 +122,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.not)(\u0027not\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -161,6 +168,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiMulExprImpl(TemplateToolkit2Element.MUL_EXPR)\n@@ -205,6 +213,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.not)(\u0027not\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027baz\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -226,6 +235,7 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -246,6 +256,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.!)(\u0027!\u0027)\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -271,6 +282,7 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAddExprImpl(TemplateToolkit2Element.ADD_EXPR)\n@@ -295,6 +307,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.!)(\u0027!\u0027)\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -317,6 +330,7 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCompareExprImpl(TemplateToolkit2Element.COMPARE_EXPR)\n@@ -338,6 +352,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.!)(\u0027!\u0027)\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiEqualExprImpl(TemplateToolkit2Element.EQUAL_EXPR)\n@@ -369,6 +384,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiEqualExprImpl(TemplateToolkit2Element.EQUAL_EXPR)\n@@ -399,6 +415,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.*)(\u0027*\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027bar\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAndExprImpl(TemplateToolkit2Element.AND_EXPR)\n@@ -439,6 +456,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiAndExprImpl(TemplateToolkit2Element.AND_EXPR)\n@@ -478,6 +496,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -518,6 +537,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -557,6 +577,7 @@ Template Toolkit File\n             PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n               PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiTernarExprImpl(TemplateToolkit2Element.TERNAR_EXPR)\n@@ -593,6 +614,7 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiTernarExprImpl(TemplateToolkit2Element.TERNAR_EXPR)\n@@ -628,4 +650,4 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.!)(\u0027!\u0027)\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/process.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -9,24 +9,26 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027foo is\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nfoo is \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027foo is\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nfoo is \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -36,12 +38,13 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027foo is\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nfoo is \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -54,12 +57,13 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002720\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027foo is\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\nfoo is \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -75,21 +79,22 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myheader\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u0027myheader\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # \u0027myheader\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n     PsiVariableExprImpl(TemplateToolkit2Element.VARIABLE_EXPR)\n       PsiElement(TemplateToolkit2Token.$)(\u0027$\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027myheader\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u0027my/misc/header\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027              # \u0027my/misc/header\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n@@ -103,4 +108,4 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027/\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/return.txt",
          "patch": "@@ -1,9 +1,10 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiReturnDirectiveImpl(TemplateToolkit2Element.RETURN_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.RETURN)(\u0027RETURN\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiReturnDirectiveImpl(TemplateToolkit2Element.RETURN_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.RETURN)(\u0027RETURN\u0027)\n@@ -15,11 +16,12 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027some\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027var\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/set.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.SET)(\u0027SET\u0027)\n@@ -14,6 +14,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027World\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -27,6 +28,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027World\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -38,7 +40,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Foo\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# literal value \u0027Foo\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027               # literal value \u0027Foo\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -48,7 +50,7 @@ Template Toolkit File\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# value of variable \u0027foo\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027               # value of variable \u0027foo\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -61,7 +63,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027100\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# literal value \u0027$100\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027               # literal value \u0027$100\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -82,7 +84,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u002700\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# value \"Foo: $100.00\"\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   # value \"Foo: $100.00\"\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -126,6 +128,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u002700\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -181,6 +184,7 @@ Template Toolkit File\n         PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00277\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -208,6 +212,7 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027author\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -229,4 +234,4 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027author\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/stop.txt",
          "patch": "@@ -1,9 +1,10 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiStopDirectiveImpl(TemplateToolkit2Element.STOP_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.STOP)(\u0027STOP\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiStopDirectiveImpl(TemplateToolkit2Element.STOP_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.STOP)(\u0027STOP\u0027)\n@@ -15,11 +16,12 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027condition\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027some\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027var\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/strings.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003e\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n@@ -17,6 +17,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n@@ -33,6 +34,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\\\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiDqStringExprImpl(TemplateToolkit2Element.DQ_STRING_EXPR)\n@@ -50,6 +52,7 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\"\u0027)\n       PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiDqStringExprImpl(TemplateToolkit2Element.DQ_STRING_EXPR)\n@@ -66,4 +69,4 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\\\u0027)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\"\u0027)\n       PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/sub.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -9,6 +9,7 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002710\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -22,7 +23,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002720\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# received 10, 20\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027       # received 10, 20\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -39,6 +40,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002730\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -66,6 +68,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -93,6 +96,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u002730\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -104,6 +108,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Romeo\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -126,4 +131,4 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027v\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# outputs \"Romeo\"\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027       # outputs \"Romeo\"\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/switch.txt",
          "patch": "@@ -1,12 +1,13 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiSwitchBlockImpl(TemplateToolkit2Element.SWITCH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiSwitchDirectiveImpl(TemplateToolkit2Element.SWITCH_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.SWITCH)(\u0027SWITCH\u0027)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027myvar\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -16,7 +17,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027value1\u0027)\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n       ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -34,7 +35,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# multiple values\\n       ...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   # multiple values\\n       ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -44,20 +45,20 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027keys\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# ditto\\n       ...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027            # ditto\\n       ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CASE)(\u0027CASE\u0027)\n         PsiElement(TemplateToolkit2Token.DEFAULT)(\u0027DEFAULT\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# default\\n       ...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027                        # default\\n       ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CASE)(\u0027CASE\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# default\\n       ...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027                        # default\\n       ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -67,7 +68,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027value1\u0027)\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# %]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -85,7 +86,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.])(\u0027]\u0027)\n       PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027#%]   # multiple values\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n@@ -95,22 +96,22 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027keys\u0027)\n       PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# %]            # ditto\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CASE)(\u0027CASE\u0027)\n         PsiElement(TemplateToolkit2Token.DEFAULT)(\u0027DEFAULT\u0027)\n       PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# %]                        # default\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     ...\\n\u0027)\n     PsiCaseBlockImpl(TemplateToolkit2Element.CASE_BLOCK)\n       PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n       PsiCaseDirectiveImpl(TemplateToolkit2Element.CASE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CASE)(\u0027CASE\u0027)\n       PsiComment(TemplateToolkit2Token.LINE_COMMENT)(\u0027# %]                        # default\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     ...\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/tags.txt",
          "patch": "@@ -1,15 +1,16 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiTagsDirectiveImpl(TemplateToolkit2Element.TAGS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.TAGS)(\u0027TAGS\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027\u003c+ +\u003e\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiTagsDirectiveImpl(TemplateToolkit2Element.TAGS_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.TAGS)(\u0027TAGS\u0027)\n     PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n       PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027html\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/throw.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -20,7 +20,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027error\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -44,7 +44,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027login\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -68,7 +68,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027info\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -96,7 +96,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Ingredients\u0027)\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ntest text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -116,7 +116,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027error\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -139,7 +139,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027 \u0027)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027login\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -162,7 +162,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027info\u0027)\n         PsiElement(TemplateToolkit2Token.DQ_CLOSE)(\u0027\"\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027test text\\n\u0027)\n   PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n   PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)"
        },
        {
          "file_name": "testData/parser/tt2/try_catch.txt",
          "patch": "@@ -1,42 +1,44 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...blah...blah...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...blah...blah...\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somecode\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...etc...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...etc...\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027someblock\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...and so on...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...and so on...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CATCH)(\u0027CATCH\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027An error occurred!\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   An error occurred!\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -49,43 +51,48 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027mydsn\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CATCH)(\u0027CATCH\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027ERROR! Type:\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ERROR! Type: \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027error\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027type\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Info:\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n          Info: \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027error\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027info\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myfile\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -98,12 +105,14 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027mydsn\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somecode\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -112,14 +121,15 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027file\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027File Error!\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   File Error! \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027error\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027info\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -128,6 +138,7 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027DBI\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -138,33 +149,38 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027html\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CATCH)(\u0027CATCH\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027error\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n   \u0027)\n       PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n         PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n      \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -174,6 +190,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n               PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n         PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -182,17 +199,19 @@ Template Toolkit File\n               PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n                 PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027file\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n      \u0027)\n           PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n           PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n             PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n             PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n               PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027header\u0027)\n           PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+          PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -201,6 +220,7 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027DBI\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n@@ -211,17 +231,19 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027html\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -230,7 +252,7 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027this\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -239,24 +261,25 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027that\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiFinalBranchImpl(TemplateToolkit2Element.FINAL_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiFinalDirectiveImpl(TemplateToolkit2Element.FINAL_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.FINAL)(\u0027FINAL\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027All done!\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   All done!\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This gets printed\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   This gets printed\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiThrowDirectiveImpl(TemplateToolkit2Element.THROW_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.THROW)(\u0027THROW\u0027)\n@@ -269,7 +292,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027carrots\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027This doesn\u0027t\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   This doesn\u0027t\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -278,29 +301,32 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027food\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiClearDirectiveImpl(TemplateToolkit2Element.CLEAR_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CLEAR)(\u0027CLEAR\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027culinary delights:\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   culinary delights: \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027error\u0027)\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027info\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n@@ -309,6 +335,7 @@ Template Toolkit File\n           PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027myerror\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiOrExprImpl(TemplateToolkit2Element.OR_EXPR)\n@@ -326,6 +353,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027no\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n     \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiTernarExprImpl(TemplateToolkit2Element.TERNAR_EXPR)\n@@ -354,7 +382,7 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027errors\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027in\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   in \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -364,7 +392,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027module\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\\n      \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -385,9 +413,9 @@ Template Toolkit File\n                 PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n               PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/try_catch_unclosed.txt",
          "patch": "@@ -1,30 +1,30 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiTryCatchBlockImpl(TemplateToolkit2Element.TRY_CATCH_BLOCK)\n     PsiTryBranchImpl(TemplateToolkit2Element.TRY_BRANCH)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiTryDirectiveImpl(TemplateToolkit2Element.TRY_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.TRY)(\u0027TRY\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...blah...blah...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...blah...blah...\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiCallDirectiveImpl(TemplateToolkit2Element.CALL_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.CALL)(\u0027CALL\u0027)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somecode\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...etc...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...etc...\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiIncludeDirectiveImpl(TemplateToolkit2Element.INCLUDE_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.INCLUDE)(\u0027INCLUDE\u0027)\n         PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027someblock\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...and so on...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...and so on...\\n\u0027)\n     PsiErrorElement:Unclosed block directive, missing END\n       PsiCatchBranchImpl(TemplateToolkit2Element.CATCH_BRANCH)\n         PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n         PsiCatchDirectiveImpl(TemplateToolkit2Element.CATCH_DIRECTIVE)\n           PsiElement(TemplateToolkit2Token.CATCH)(\u0027CATCH\u0027)\n         PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027An error occurred!\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+        PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   An error occurred!\\n\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/use.txt",
          "patch": "@@ -1,52 +1,53 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027myplugin\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027CGI\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u003d\u003e Template::Plugin::CGI\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027        # \u003d\u003e Template::Plugin::CGI\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027Cgi\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u003d\u003e Template::Plugin::CGI\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027        # \u003d\u003e Template::Plugin::CGI\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027cgi\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# \u003d\u003e Template::Plugin::CGI\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027        # \u003d\u003e Template::Plugin::CGI\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027Foo\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# look for \u0027Foo\u0027 then \u0027foo\u0027\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027      # look for \u0027Foo\u0027 then \u0027foo\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n     PsiModuleNameImpl(TemplateToolkit2Element.MODULE_NAME)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027MyPlugin\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027#  \u003d\u003e Template::Plugin::MyPlugin\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     #  \u003d\u003e Template::Plugin::MyPlugin\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -56,7 +57,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027Bar\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027#  \u003d\u003e Template::Plugin::Foo::Bar\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027     #  \u003d\u003e Template::Plugin::Foo::Bar\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -80,6 +81,7 @@ Template Toolkit File\n               PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n             PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWhileBlockImpl(TemplateToolkit2Element.WHILE_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiWhileDirectiveImpl(TemplateToolkit2Element.WHILE_DIRECTIVE)\n@@ -96,17 +98,18 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027getline\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c!--\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u003c!-- \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027line\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027--\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 --\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -124,6 +127,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027123\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -159,6 +163,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00271\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -178,6 +183,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00273\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -191,7 +197,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027rows\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u003ctr\u003e\\n   \u0027)\n     PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -203,22 +209,23 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027row\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ctd\u003e\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n    \u003ctd\u003e\u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027item\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/td\u003e\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n         PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/tr\u003e\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u003c/tr\u003e\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -241,6 +248,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00275\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiForeachBlockImpl(TemplateToolkit2Element.FOREACH_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiForeachDirectiveImpl(TemplateToolkit2Element.FOREACH_DIRECTIVE)\n@@ -254,11 +262,12 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027rows\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -284,6 +293,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -309,6 +319,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -325,6 +336,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -341,6 +353,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiUseDirectiveImpl(TemplateToolkit2Element.USE_DIRECTIVE)\n     PsiElement(TemplateToolkit2Token.USE)(\u0027USE\u0027)\n@@ -372,7 +385,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00271\u0027)\n       PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ca href\u003d\"\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003ca href\u003d\"\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)"
        },
        {
          "file_name": "testData/parser/tt2/variables.txt",
          "patch": "@@ -1,82 +1,85 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\nThis is version\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\nThis is version \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027version\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027(\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 (\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027release\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027).\\nSerial number:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027).\\nSerial number: \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027serial_no\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027article\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027person\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027: \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027person\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u003c\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027person\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027email\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027primes\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027first\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027-\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 - \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027primes\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027last\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, including\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027, including \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027primes\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u00273\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027primes\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027size\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027prime numbers:\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 prime numbers: \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -93,11 +96,13 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027wizard\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiCallExprImpl(TemplateToolkit2Element.CALL_EXPR)\n@@ -113,6 +118,7 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -128,12 +134,13 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n           PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027article\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003ca href\u003d\"\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003ca href\u003d\"\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -155,35 +162,35 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027next\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\"\u003eNext Page\u003c/a\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\"\u003eNext Page\u003c/a\u003e\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027message\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# outputs \"Hello World!\"\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # outputs \"Hello World!\"\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027_secret\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# no output\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027           # no output\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027thing\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027public\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# outputs \"123\"\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027      # outputs \"123\"\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027thing\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027_private\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# no output\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027    # no output\\n\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -195,6 +202,7 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027next\u0027)\n         PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -206,14 +214,15 @@ Template Toolkit File\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somethign\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# same as\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027       # same as \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027page\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027next\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n@@ -227,14 +236,15 @@ Template Toolkit File\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027somethign\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027# same as\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027       # same as \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027page\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027next\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n     PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -270,22 +280,23 @@ Template Toolkit File\n       PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027666\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027The\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\nThe \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027product\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027id\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027 \u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027product\u0027)\n       PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n       PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027desc\u0027)\n   PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027costs $\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\ncosts $\u0027)\n   PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n   PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n     PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)"
        },
        {
          "file_name": "testData/parser/tt2/while.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiWhileBlockImpl(TemplateToolkit2Element.WHILE_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiWhileDirectiveImpl(TemplateToolkit2Element.WHILE_DIRECTIVE)\n@@ -11,7 +11,7 @@ Template Toolkit File\n         PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027100\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n       PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -21,10 +21,12 @@ Template Toolkit File\n         PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n           PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027calculate_new_total\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWhileBlockImpl(TemplateToolkit2Element.WHILE_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiWhileDirectiveImpl(TemplateToolkit2Element.WHILE_DIRECTIVE)\n@@ -39,15 +41,17 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027get_next_user_record\u0027)\n         PsiElement(TemplateToolkit2Token.))(\u0027)\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   \u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiGetDirectiveImpl(TemplateToolkit2Element.GET_DIRECTIVE)\n       PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027user\u0027)\n         PsiElement(TemplateToolkit2Token..)(\u0027.\u0027)\n         PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027name\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/while_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiWhileBlockImpl(TemplateToolkit2Element.WHILE_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -12,7 +12,7 @@ Template Toolkit File\n           PsiTermExprImpl(TemplateToolkit2Element.TERM_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_NUMBER_SIMPLE)(\u0027100\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027...\u0027)\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   ...\\n   \u0027)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n       PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n         PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n@@ -22,4 +22,4 @@ Template Toolkit File\n           PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n             PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027calculate_new_total\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/wrapper.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiWrapperDirectiveImpl(TemplateToolkit2Element.WRAPPER_DIRECTIVE)\n@@ -17,23 +17,25 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Mechanics\u0027)\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiWrapperDirectiveImpl(TemplateToolkit2Element.WRAPPER_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.WRAPPER)(\u0027WRAPPER\u0027)\n       PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027section\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiWrapperDirectiveImpl(TemplateToolkit2Element.WRAPPER_DIRECTIVE)\n@@ -50,19 +52,20 @@ Template Toolkit File\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027 \u0027)\n           PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Mechanics\u0027)\n           PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n     PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u0027)\n   PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiWrapperDirectiveImpl(TemplateToolkit2Element.WRAPPER_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.WRAPPER)(\u0027WRAPPER\u0027)\n       PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n         PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027section\u0027)\n-    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\u0027)\n+    PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\u0027)\n     PsiElement(TemplateToolkit2Token.%%)(\u0027%%\u0027)\n     PsiEndDirectiveImpl(TemplateToolkit2Element.END_DIRECTIVE)\n       PsiElement(TemplateToolkit2Token.END)(\u0027END\u0027)\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/tt2/wrapper_unclosed.txt",
          "patch": "@@ -1,5 +1,5 @@\n Template Toolkit File\n-  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u003chead\u003ehttp://template-toolkit.org/docs/manual/Variables.html\u003c/head\u003e\\n\u003cbody\u003e\\n\\n\u0027)\n   PsiErrorElement:Unclosed block directive, missing END\n     PsiWrapperBlockImpl(TemplateToolkit2Element.WRAPPER_BLOCK)\n       PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n@@ -18,4 +18,4 @@ Template Toolkit File\n             PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027Mechanics\u0027)\n             PsiElement(TemplateToolkit2Token.SQ_CLOSE)(\u0027\u0027\u0027)\n       PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n-      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file\n+      PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n   Quantum mechanics is a very interesting subject wish\\n   should prove easy for the layman to fully comprehend.\\n\\n\\n\u003c/body\u003e\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Fix bug where parse error is thrown if a inner filter is used in a nested filter/query.",
    "url": "https://github.com/elastic/elasticsearch/pull/10309",
    "description": "PR for #10308\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/1c162ed34aacedf9b81f2dd31c604f12f5da4247",
      "files": [
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/NestedQueryParser.java",
          "patch": "@@ -148,7 +148,7 @@ public ToParentBlockJoinQuery build() throws IOException {\n             }\n \n             if (innerHits !\u003d null) {\n-                InnerHitsContext.NestedInnerHits nestedInnerHits \u003d new InnerHitsContext.NestedInnerHits(innerHits.v2(), getInnerQuery(), null, getParentObjectMapper(), nestedObjectMapper);\n+                InnerHitsContext.NestedInnerHits nestedInnerHits \u003d new InnerHitsContext.NestedInnerHits(innerHits.v2(), innerQuery, null, getParentObjectMapper(), nestedObjectMapper);\n                 String name \u003d innerHits.v1() !\u003d null ? innerHits.v1() : path;\n                 parseContext.addInnerHits(name, nestedInnerHits);\n             }"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/search/innerhits/InnerHitsTests.java",
          "patch": "@@ -39,6 +39,7 @@\n import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n import static org.elasticsearch.index.query.FilterBuilders.hasChildFilter;\n import static org.elasticsearch.index.query.FilterBuilders.nestedFilter;\n+import static org.elasticsearch.index.query.FilterBuilders.queryFilter;\n import static org.elasticsearch.index.query.QueryBuilders.*;\n import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.*;\n import static org.hamcrest.Matchers.*;\n@@ -110,7 +111,9 @@ public void testSimpleNested() throws Exception {\n                         .setQuery(nestedQuery(\"comments\", matchQuery(\"comments.message\", \"elephant\")))\n                         .addInnerHit(\"comment\", new InnerHitsBuilder.InnerHit().setPath(\"comments\").setQuery(matchQuery(\"comments.message\", \"elephant\"))).request(),\n                 client().prepareSearch(\"articles\")\n-                        .setQuery(nestedQuery(\"comments\", matchQuery(\"comments.message\", \"elephant\")).innerHit(new QueryInnerHitBuilder().setName(\"comment\"))).request()\n+                        .setQuery(nestedQuery(\"comments\", matchQuery(\"comments.message\", \"elephant\")).innerHit(new QueryInnerHitBuilder().setName(\"comment\"))).request(),\n+                client().prepareSearch(\"articles\")\n+                        .setQuery(nestedQuery(\"comments\", queryFilter(matchQuery(\"comments.message\", \"elephant\"))).innerHit(new QueryInnerHitBuilder().setName(\"comment\").addSort(\"_doc\", SortOrder.DESC))).request()\n         };\n         for (SearchRequest searchRequest : searchRequests) {\n             SearchResponse response \u003d client().search(searchRequest).actionGet();"
        }
      ]
    }
  },
  {
    "name": "Parse error for multipart content with empty lines",
    "url": "https://github.com/RestComm/jain-sip/issues/49",
    "description": "When decoding the mutipart content pasted below, the Content object of the second part returns a null contentTypeHeader and getContent() returns all between the two boundaries. When looking into the source I suppose, that in MultipartMimeContentImpl.parseBodyPart the bodyPart.split(\"\\r?\\n\\r?\\n\") should be replaced by bodyPart.split(\"\\r?\\n\\r?\\n\", 2)\n\n--boundary1\nContent-Type: application/sdp\nContent-Length: 452\n\nv\u003d0\no\u003dRms-31-206-189-6-1032386 2169717192 254428813 IN IP4 62.52.99.70\ns\u003d \nc\u003dIN IP4 62.52.99.70\nt\u003d0 0\na\u003dsetup:passive\nm\u003dmessage 15911 TCP/TLS/MSRP *\na\u003daccept-types:message/cpim application/im-iscomposing+xml\na\u003dsendrecv\na\u003daccept-wrapped-types:message/imdn+xml text/plain application/vnd.gsma.rcspushlocation+xml application/vnd.gsma.rcs-ft-http+xml\na\u003dmax-size:20971520\na\u003dpath:msrps://62.52.99.70:15911/23988752-4324-23988753;tcp\na\u003dmsrp-acm\n\n--boundary1\nContent-Type: message/cpim\nContent-Length: 326\n\nFrom: sip:anonymous@anonymous.invalid\nNS: imdn urn:ietf:params:imdn\nimdn.Message-ID: PDaTKqv4w9opLgXQ7ux8UhYyISo7C7MP\nimdn.Disposition-Notification: positive-delivery, display\nDateTime: 2016-01-04T08:49:41.690Z\nTo: sip:anonymous@anonymous.invalid\n\nContent-type: text/plain;charset\u003dutf-8\nContent-Length: 4\n\nTest\n--boundary1--\n",
    "keywords": [
      "99",
      "content-length",
      "content-type",
      "52",
      "content",
      "imdn"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/RestComm/jain-sip/commit/ed9be915a8d399217b13a9d8ef20058312b20c75",
      "files": [
        {
          "file_name": "src/gov/nist/javax/sip/parser/NioPipelineParser.java",
          "patch": "@@ -527,7 +527,13 @@ else if (counter \u003d\u003d 0)\n         if(counter \u003d\u003d 1 \u0026\u0026 crlfCounter \u003e 0) {\n         \treturn new String(crlfBuffer,0,crlfCounter,\"UTF-8\");\n         } else {\n-        \treturn new String(lineBuffer,0,counter,\"UTF-8\");\n+        \tString lineRead \u003d new String(lineBuffer,0,counter,\"UTF-8\");\n+                //In case \\r\\n are not in the same chunk, wait for the rest\n+                //fixes https://github.com/RestComm/jain-sip/issues/48\n+                if (crlfCounter \u003d\u003d 1) {\n+                    lineRead \u003d lineRead + \"\\r\";\n+                }\n+                return lineRead;\n         }\n         \n     }"
        },
        {
          "file_name": "src/test/unit/gov/nist/javax/sip/parser/NioPipelineParserTest.java",
          "patch": "@@ -0,0 +1,109 @@\n+package test.unit.gov.nist.javax.sip.parser;\r\n+\r\n+import gov.nist.javax.sip.message.SIPMessage;\r\n+import gov.nist.javax.sip.parser.NioPipelineParser;\r\n+import gov.nist.javax.sip.parser.SIPMessageListener;\r\n+import gov.nist.javax.sip.stack.NioMessageProcessorFactory;\r\n+import gov.nist.javax.sip.stack.SIPTransactionStack;\r\n+import java.text.ParseException;\r\n+import java.util.Properties;\r\n+import javax.sip.PeerUnavailableException;\r\n+import javax.sip.SipFactory;\r\n+import javax.sip.SipStack;\r\n+import junit.framework.Assert;\r\n+import test.tck.msgflow.callflows.ScenarioHarness;\r\n+\r\n+public class NioPipelineParserTest extends ScenarioHarness {\r\n+\r\n+    private static NioPipelineParser parser;\r\n+    private static AsserterListener listener;\r\n+\r\n+    public NioPipelineParserTest() {\r\n+        super(\"NioPipelineParserTest\", true);\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setUp() throws PeerUnavailableException {\r\n+        final Properties defaultProperties \u003d new Properties();\r\n+\r\n+        defaultProperties.setProperty(\"javax.sip.STACK_NAME\", \"server\");\r\n+        defaultProperties.setProperty(\"gov.nist.javax.sip.TRACE_LEVEL\", \"DEBUG\");\r\n+        defaultProperties.setProperty(\"gov.nist.javax.sip.DEBUG_LOG\", \"server_debug_ViaRPortTest.txt\");\r\n+        defaultProperties.setProperty(\"gov.nist.javax.sip.SERVER_LOG\", \"server_log_ViaRPortTest.txt\");\r\n+        //do not set pool size, so test is sync\r\n+        //defaultProperties.setProperty(\"gov.nist.javax.sip.TCP_POST_PARSING_THREAD_POOL_SIZE\", \"64\");\r\n+        defaultProperties.setProperty(\"gov.nist.javax.sip.MESSAGE_PROCESSOR_FACTORY\", NioMessageProcessorFactory.class.getName());\r\n+        SipFactory sipFactory \u003d SipFactory.getInstance();\r\n+        sipFactory.setPathName(\"gov.nist\");\r\n+        SipStack sipStack \u003d sipFactory.createSipStack(defaultProperties);\r\n+        listener \u003d new AsserterListener();\r\n+        parser \u003d new NioPipelineParser((SIPTransactionStack) sipStack, listener, 10000);\r\n+    }\r\n+\r\n+    private static final String HEADER_CHUNK \u003d \"INVITE sip:00001002000022@p25dr;user\u003dTIA-P25-SU SIP/2.0\\r\\n\"\r\n+            + \"CSeq: 1 INVITE\\r\\n\"\r\n+            + \"From: \u003csip:0000100200000c@p25dr;user\u003dTIA-P25-SU\u003e;tag\u003d841\\r\\n\"\r\n+            + \"To: \u003csip:00001002000022@p25dr;user\u003dTIA-P25-SU\u003e\\r\\n\"\r\n+            + \"Via: SIP/2.0/UDP 02.002.00001.p25dr;branch\u003dz9hG4bKa10f04383e3d8e8dbf3f6d06f6bb6880\\r\\n\"\r\n+            + \"Max-Forwards: 70\\r\\n\"\r\n+            + \"Contact: \u003csip:02.002.00001.p25dr\u003e\\r\\n\"\r\n+            + \"Call-ID: c6a12ddad0ddc1946d9f443c884a7768@127.0.0.1\\r\\n\"\r\n+            + \"Content-Type: application/sdp;level\u003d1\\r\\n\"\r\n+            + \"Content-Length: 145\\r\\n\";\r\n+    private static final String HEADER1 \u003d  \"Allow: REGISTER,INVITE,ACK,BYE,CANCEL\\r\";\r\n+    private static final String HEADER2 \u003d  \"\\n\";\r\n+    private static final String BODY_CHUNK \u003d\"v\u003d0\\r\\n\"\r\n+            + \"o\u003d- 30576 0 IN IP4 127.0.0.1\\r\\n\"\r\n+            + \"s\u003dTIA-P25-SuToSuCall\\r\\n\"\r\n+            + \"t\u003d0 0\\r\\n\"\r\n+            + \"c\u003dIN IP4 127.0.0.1\\r\\n\"\r\n+            + \"m\u003daudio 12412 RTP/AVP 100\\r\\n\"\r\n+            + \"a\u003drtpmap:100 X-TIA-P25-IMBE/8000\\r\\n\";\r\n+\r\n+    class AsserterListener implements SIPMessageListener {\r\n+\r\n+        private int processedMsgs \u003d 0;\r\n+        private SIPMessage lastMsg \u003d null;\r\n+\r\n+        @Override\r\n+        public void processMessage(SIPMessage msg) throws Exception {\r\n+            lastMsg \u003d msg;\r\n+            processedMsgs \u003d processedMsgs + 1;\r\n+        }\r\n+\r\n+        @Override\r\n+        public void sendSingleCLRF() throws Exception {\r\n+        }\r\n+\r\n+        @Override\r\n+        public void handleException(ParseException ex, SIPMessage sipMessage, Class headerClass, String headerText, String messageText) throws ParseException {\r\n+        }\r\n+\r\n+        public int getProcessedMsgs() {\r\n+            return processedMsgs;\r\n+        }\r\n+\r\n+        public SIPMessage getLastMsg() {\r\n+            return lastMsg;\r\n+        }\r\n+    }\r\n+    \r\n+    public void testNormalBodySeparation() throws Exception {\r\n+        parser.addBytes((HEADER_CHUNK + \"\\r\\n\").getBytes());\r\n+        parser.addBytes(BODY_CHUNK.getBytes());\r\n+        Assert.assertEquals(1, listener.getProcessedMsgs());\r\n+    }\r\n+    \r\n+    public void testHeaderSeparationAtChunkEnd() throws Exception {\r\n+        parser.addBytes((HEADER_CHUNK + HEADER1).getBytes());\r\n+        parser.addBytes((HEADER2 + \"\\r\\n\" + BODY_CHUNK).getBytes());\r\n+        Assert.assertEquals(1, listener.getProcessedMsgs());\r\n+    }    \r\n+\r\n+    public void testBodySeparationAtChunkEnd() throws Exception {\r\n+        parser.addBytes((HEADER_CHUNK + \"\\r\").getBytes());\r\n+        parser.addBytes((\"\\n\" + BODY_CHUNK).getBytes());\r\n+        Assert.assertEquals(1, listener.getProcessedMsgs());\r\n+    }\r\n+\r\n+}\r"
        }
      ]
    }
  },
  {
    "name": "Parse errors in cgeocoords",
    "url": "https://github.com/cgeo/cgeo/issues/2389",
    "description": "From Google Play. Some of the Geopoint constructors don\u0027t do any sanity checks on the input.\n\n```\njava.lang.NumberFormatException: unable to parse \u0027\u0027 as integer\nat java.lang.Integer.parseInt(Integer.java:362)\nat java.lang.Integer.parseInt(Integer.java:332)\nat cgeo.geocaching.geopoint.Geopoint.\u003cinit\u003e(Geopoint.java:148)\nat cgeo.geocaching.cgeocoords.calc(cgeocoords.java:377)\nat cgeo.geocaching.cgeocoords.access$600(cgeocoords.java:27)\nat cgeo.geocaching.cgeocoords$InputDoneListener.onClick(cgeocoords.java:460)\nat android.view.View.performClick(View.java:2533)\nat android.view.View$PerformClick.run(View.java:9320)\nat android.os.Handler.handleCallback(Handler.java:587)\nat android.os.Handler.dispatchMessage(Handler.java:92)\nat android.os.Looper.loop(Looper.java:150)\nat android.app.ActivityThread.main(ActivityThread.java:4385)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:507)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:849)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:607)\nat dalvik.system.NativeStart.main(Native Method)\n```\n",
    "keywords": [
      "cgeo",
      "handler",
      "os",
      "method",
      "android",
      "geopoint",
      "main",
      "integer",
      "java lang",
      "geocaching",
      "view",
      "java",
      "cgeocoords",
      "lang",
      "zygoteinit"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/cgeo/cgeo/commit/6e66c8f2da1d6893e2d9e100957a966bc3f9e69a",
      "files": [
        {
          "file_name": "main/src/cgeo/geocaching/geopoint/Geopoint.java",
          "patch": "@@ -103,10 +103,8 @@ public Geopoint(final Parcel in) {\n      */\n     public Geopoint(final String latDir, final String latDeg, final String latDegFrac,\n                     final String lonDir, final String lonDeg, final String lonDegFrac) {\n-        latitude \u003d Double.parseDouble(latDeg + \".\" + addZeros(Integer.parseInt(latDegFrac), 5)) *\n-                getLatSign(latDir);\n-        longitude \u003d Double.parseDouble(lonDeg + \".\" + addZeros(Integer.parseInt(lonDegFrac), 5)) *\n-                getLonSign(lonDir);\n+        this(getLatSign(latDir) + latDeg + \".\" + addZeros(latDegFrac, 5),\n+                getLonSign(lonDir) + lonDeg + \".\" + addZeros(lonDegFrac, 5));\n     }\n \n     /**\n@@ -123,10 +121,8 @@ public Geopoint(final String latDir, final String latDeg, final String latDegFra\n      */\n     public Geopoint(final String latDir, final String latDeg, final String latMin, final String latMinFrac,\n                     final String lonDir, final String lonDeg, final String lonMin, final String lonMinFrac) {\n-        latitude \u003d (Double.parseDouble(latDeg) + Double.parseDouble(latMin + \".\" + addZeros(Integer.parseInt(latMinFrac), 3)) / 60) *\n-                (getLatSign(latDir));\n-        longitude \u003d (Double.parseDouble(lonDeg) + Double.parseDouble(lonMin + \".\" + addZeros(Integer.parseInt(lonMinFrac), 3)) / 60) *\n-                (getLonSign(lonDir));\n+        this(latDir + \" \" + latDeg + \" \" + latMin + \".\" + addZeros(latMinFrac, 3),\n+                lonDir + \" \" + lonDeg + \" \" + lonMin + \".\" + addZeros(lonMinFrac, 3));\n     }\n \n     /**\n@@ -145,10 +141,8 @@ public Geopoint(final String latDir, final String latDeg, final String latMin, f\n      */\n     public Geopoint(final String latDir, final String latDeg, final String latMin, final String latSec, final String latSecFrac,\n                     final String lonDir, final String lonDeg, final String lonMin, final String lonSec, final String lonSecFrac) {\n-        latitude \u003d (Double.parseDouble(latDeg) + Double.parseDouble(latMin) / 60 + Double.parseDouble(latSec + \".\" + addZeros(Integer.parseInt(latSecFrac), 3)) / 3600) *\n-                (getLatSign(latDir));\n-        longitude \u003d (Double.parseDouble(lonDeg) + Double.parseDouble(lonMin) / 60 + Double.parseDouble(lonSec + \".\" + addZeros(Integer.parseInt(lonSecFrac), 3)) / 3600) *\n-                (getLonSign(lonDir));\n+        this(latDir + \" \" + latDeg + \" \" + latMin + \" \" + latSec + \".\" + addZeros(latSecFrac, 3),\n+                lonDir + \" \" + lonDeg + \" \" + lonMin + \" \" + lonSec + \".\" + addZeros(lonSecFrac, 3));\n     }\n \n     /**\n@@ -586,16 +580,15 @@ private static double getSecRaw(final double deg) {\n         return (Math.abs(deg) * 3600) % 60;\n     }\n \n-    private static String addZeros(final int value, final int len) {\n-        return StringUtils.leftPad(Integer.toString(value), len, \u00270\u0027);\n+    private static String addZeros(final String value, final int len) {\n+        return StringUtils.leftPad(value.trim(), len, \u00270\u0027);\n     }\n \n-    private static int getLonSign(final String lonDir) {\n-        return \"W\".equalsIgnoreCase(lonDir) ? -1 : 1;\n+    private static String getLonSign(final String lonDir) {\n+        return \"W\".equalsIgnoreCase(lonDir) ? \"-\" : \"\";\n     }\n \n-    private static int getLatSign(final String latDir) {\n-        return \"S\".equalsIgnoreCase(latDir) ? -1 : 1;\n+    private static String getLatSign(final String latDir) {\n+        return \"S\".equalsIgnoreCase(latDir) ? \"-\" : \"\";\n     }\n-\n }"
        },
        {
          "file_name": "tests/src/cgeo/geocaching/geopoint/GeopointTest.java",
          "patch": "@@ -1,10 +1,10 @@\n package cgeo.geocaching.geopoint;\n \n-import junit.framework.Assert;\n-\n import android.os.Bundle;\n import android.test.AndroidTestCase;\n \n+import junit.framework.Assert;\n+\n public class GeopointTest extends AndroidTestCase {\n \n     public static void testCreation() {\n@@ -234,4 +234,67 @@ public static void testElevation() {\n         assertEquals(125.663703918457, (new Geopoint(48.0, 2.0)).getElevation(), 0.1);\n     }\n \n+    private static void assertParseException(Runnable runnable) {\n+        try {\n+            runnable.run();\n+            Assert.fail(\"Should have thrown Geopoint.ParseException\");\n+        } catch (Geopoint.ParseException e) {\n+            //success\n+        }\n+    }\n+\n+    public static void testParseParam1() {\n+        assertParseException(new Runnable() {\n+\n+            @SuppressWarnings(\"unused\")\n+            @Override\n+            public void run() {\n+                new Geopoint(\"some nonsense text\");\n+            }\n+        });\n+    }\n+\n+    public static void testParseParam2() throws Exception {\n+        assertParseException(new Runnable() {\n+\n+            @SuppressWarnings(\"unused\")\n+            @Override\n+            public void run() {\n+                new Geopoint(\"latitude\", \"longitude\");\n+            }\n+        });\n+    }\n+\n+    public static void testParseParam6() throws Exception {\n+        assertParseException(new Runnable() {\n+\n+            @SuppressWarnings(\"unused\")\n+            @Override\n+            public void run() {\n+                new Geopoint(\"latDir\", \"latDeg\", \"latDegFrac\", \"lonDir\", \"lonDeg\", \"lonDegFrac\");\n+            }\n+        });\n+    }\n+\n+    public static void testParseParam8() throws Exception {\n+        assertParseException(new Runnable() {\n+\n+            @SuppressWarnings(\"unused\")\n+            @Override\n+            public void run() {\n+                new Geopoint(\"latDir\", \"latDeg\", \"latMin\", \"latMinFrac\", \"lonDir\", \"lonDeg\", \"lonMin\", \"lonMinFrac\");\n+            }\n+        });\n+    }\n+\n+    public static void testParseParam10() throws Exception {\n+        assertParseException(new Runnable() {\n+\n+            @SuppressWarnings(\"unused\")\n+            @Override\n+            public void run() {\n+                new Geopoint(\"latDir\", \"latDeg\", \"latMin\", \"latSec\", \"latSecFrac\", \"lonDir\", \"lonDeg\", \"lonMin\", \"lonSec\", \"lonSecFrac\");\n+            }\n+        });\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Fix: Error descriptor crash during parsing process",
    "url": "https://github.com/Jaspersoft/js-android-sdk/pull/67",
    "description": "No Jira Issue\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Jaspersoft/js-android-sdk/commit/185494b5a50e5675dc3d26b82c8dfa741cb8b32a",
      "files": [
        {
          "file_name": "core/src/main/java/com/jaspersoft/android/sdk/network/HttpException.java",
          "patch": "@@ -29,13 +29,13 @@\n import com.google.gson.JsonParseException;\n import com.jaspersoft.android.sdk.network.entity.execution.ErrorDescriptor;\n import com.jaspersoft.android.sdk.network.entity.type.GsonFactory;\n+import com.squareup.okhttp.ResponseBody;\n+import retrofit.Response;\n \n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n \n-import retrofit.Response;\n-\n /**\n  * Wrapper around exceptions which could pop up during request processing.\n  * Motivation behind class was to incapsulate 3-d party errors in generic interface.\n@@ -44,46 +44,35 @@\n  * @since 2.0\n  */\n public class HttpException extends Exception {\n+    private final int mCode;\n+    private final ResponseBody mBody;\n \n-    static HttpException httpError(Response response) {\n-        return httpError(response.raw());\n+    HttpException(String responseMessage, int code, ResponseBody responseBody) {\n+        super(responseMessage + \" \" + code);\n+        mCode \u003d code;\n+        mBody \u003d responseBody;\n     }\n \n-    static HttpException httpError(com.squareup.okhttp.Response response) {\n-        String message \u003d response.code() + \" \" + response.message();\n-        return new HttpException(message, response, null);\n+    static HttpException httpError(Response response) {\n+        return new HttpException(response.message(), response.code(), response.errorBody());\n     }\n \n-    private final com.squareup.okhttp.Response response;\n-\n-    HttpException(String message, com.squareup.okhttp.Response response, Throwable exception) {\n-        super(message, exception);\n-        this.response \u003d response;\n+    static HttpException httpError(com.squareup.okhttp.Response response) {\n+        return new HttpException(response.message(), response.code(), response.body());\n     }\n \n-    // HTTP status code.\n     public int code() {\n-        return response.code();\n-    }\n-\n-    // HTTP status message.\n-    public String message() {\n-        return response.message();\n+        return mCode;\n     }\n \n     public ErrorDescriptor getDescriptor() throws IOException {\n         Gson gson \u003d GsonFactory.create();\n-        InputStream stream \u003d response.body().byteStream();\n+        InputStream stream \u003d mBody.byteStream();\n         InputStreamReader reader \u003d new InputStreamReader(stream);\n         try {\n             return gson.fromJson(reader, ErrorDescriptor.class);\n         } catch (JsonParseException ex) {\n             return null;\n         }\n     }\n-\n-    public String urlString() {\n-        return response.request().urlString();\n-    }\n-\n }"
        }
      ]
    }
  },
  {
    "name": "Fixes parse error with complex shapes",
    "url": "https://github.com/elastic/elasticsearch/pull/6976",
    "description": "The bug reproduces when the point under test for the placement of the hole of the polygon has an x coordinate which only intersects with the ends of edges in the main polygon. The previous code threw out these cases as not relevant but an intersect at 1.0 of the distance from the start to the end of an edge is just as valid as an intersect at any other point along the edge.  The fix corrects this and adds a test.\n\nCloses #5773\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/5483c62de62872584c3c7d070837ced96efbb493",
      "files": [
        {
          "file_name": "src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java",
          "patch": "@@ -19,8 +19,12 @@\n \n package org.elasticsearch.common.geo.builders;\n \n+import com.spatial4j.core.context.jts.JtsSpatialContext;\n+import com.spatial4j.core.shape.Shape;\n import com.spatial4j.core.shape.jts.JtsGeometry;\n+import com.vividsolutions.jts.geom.Coordinate;\n import com.vividsolutions.jts.geom.Geometry;\n+import com.vividsolutions.jts.geom.GeometryFactory;\n import org.elasticsearch.ElasticsearchIllegalArgumentException;\n import org.elasticsearch.ElasticsearchParseException;\n import org.elasticsearch.common.logging.ESLogger;\n@@ -32,10 +36,6 @@\n import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.json.JsonXContent;\n \n-import com.spatial4j.core.context.jts.JtsSpatialContext;\n-import com.spatial4j.core.shape.Shape;\n-import com.vividsolutions.jts.geom.Coordinate;\n-import com.vividsolutions.jts.geom.GeometryFactory;\n import java.io.IOException;\n import java.util.*;\n \n@@ -297,9 +297,6 @@ protected static int intersections(double dateline, Edge[] edges) {\n                     if (Double.compare(p1.x, dateline) \u003d\u003d Double.compare(edges[i].next.next.coordinate.x, dateline)) {\n                         // Ignore the ear\n                         continue;\n-                    } else if (p2.x \u003d\u003d dateline) {\n-                        // Ignore Linesegment on dateline\n-                        continue;\n                     }\n                 }\n                 edges[i].intersection(position);"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java",
          "patch": "@@ -30,8 +30,7 @@\n import org.elasticsearch.test.ElasticsearchTestCase;\n import org.junit.Test;\n \n-import static org.elasticsearch.test.hamcrest.ElasticsearchGeoAssertions.assertMultiLineString;\n-import static org.elasticsearch.test.hamcrest.ElasticsearchGeoAssertions.assertMultiPolygon;\n+import static org.elasticsearch.test.hamcrest.ElasticsearchGeoAssertions.*;\n /**\n  * Tests for {@link ShapeBuilder}\n  */\n@@ -234,4 +233,79 @@ public void testDateline() {\n \n          assertMultiPolygon(shape);\n      }\n+\n+    @Test\n+    public void testComplexShapeWithHole() {\n+        PolygonBuilder builder \u003d ShapeBuilder.newPolygon()\n+            .point(-85.0018514,37.1311314)\n+            .point(-85.0016645,37.1315293)\n+            .point(-85.0016246,37.1317069)\n+            .point(-85.0016526,37.1318183)\n+            .point(-85.0017119,37.1319196)\n+            .point(-85.0019371,37.1321182)\n+            .point(-85.0019972,37.1322115)\n+            .point(-85.0019942,37.1323234)\n+            .point(-85.0019543,37.1324336)\n+            .point(-85.001906,37.1324985)\n+            .point(-85.001834,37.1325497)\n+            .point(-85.0016965,37.1325907)\n+            .point(-85.0016011,37.1325873)\n+            .point(-85.0014816,37.1325353)\n+            .point(-85.0011755,37.1323509)\n+            .point(-85.000955,37.1322802)\n+            .point(-85.0006241,37.1322529)\n+            .point(-85.0000002,37.1322307)\n+            .point(-84.9994,37.1323001)\n+            .point(-84.999109,37.1322864)\n+            .point(-84.998934,37.1322415)\n+            .point(-84.9988639,37.1321888)\n+            .point(-84.9987841,37.1320944)\n+            .point(-84.9987208,37.131954)\n+            .point(-84.998736,37.1316611)\n+            .point(-84.9988091,37.131334)\n+            .point(-84.9989283,37.1311337)\n+            .point(-84.9991943,37.1309198)\n+            .point(-84.9993573,37.1308459)\n+            .point(-84.9995888,37.1307924)\n+            .point(-84.9998746,37.130806)\n+            .point(-85.0000002,37.1308358)\n+            .point(-85.0004984,37.1310658)\n+            .point(-85.0008008,37.1311625)\n+            .point(-85.0009461,37.1311684)\n+            .point(-85.0011373,37.1311515)\n+            .point(-85.0016455,37.1310491)\n+            .point(-85.0018514,37.1311314);\n+\n+        builder.hole()\n+            .point(-85.0000002,37.1317672)\n+            .point(-85.0001983,37.1317538)\n+            .point(-85.0003378,37.1317582)\n+            .point(-85.0004697,37.131792)\n+            .point(-85.0008048,37.1319439)\n+            .point(-85.0009342,37.1319838)\n+            .point(-85.0010184,37.1319463)\n+            .point(-85.0010618,37.13184)\n+            .point(-85.0010057,37.1315102)\n+            .point(-85.000977,37.1314403)\n+            .point(-85.0009182,37.1313793)\n+            .point(-85.0005366,37.1312209)\n+            .point(-85.000224,37.1311466)\n+            .point(-85.000087,37.1311356)\n+            .point(-85.0000002,37.1311433)\n+            .point(-84.9995021,37.1312336)\n+            .point(-84.9993308,37.1312859)\n+            .point(-84.9992567,37.1313252)\n+            .point(-84.9991868,37.1314277)\n+            .point(-84.9991593,37.1315381)\n+            .point(-84.9991841,37.1316527)\n+            .point(-84.9992329,37.1317117)\n+            .point(-84.9993527,37.1317788)\n+            .point(-84.9994931,37.1318061)\n+            .point(-84.9996815,37.1317979)\n+            .point(-85.0000002,37.1317672);\n+\n+        Shape shape \u003d builder.close().build();\n+\n+         assertPolygon(shape);\n+     }\n }"
        }
      ]
    }
  },
  {
    "name": "[admin dashboard] JSON parse error",
    "url": "https://github.com/docdoku/docdoku-plm/issues/773",
    "description": "If data contains single quotes, the parsing will fail. (Super admin dashboard)\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/docdoku/docdoku-plm/commit/793f976e39b1de05dbc2d9fc08b503292bc4506c",
      "files": [
        {
          "file_name": "docdoku-server/docdoku-server-web/src/main/webapp/admin/superadmin/superDashboard.xhtml",
          "patch": "@@ -66,11 +66,11 @@\n         \u003cscript type\u003d\"text/javascript\"\u003e\n \n             // Values from bean\n-            var diskUsage \u003d JSON.parse(\u0027#{superAdminStateBean.diskSpaceUsageStats}\u0027);\n-            var usersStats \u003d JSON.parse(\u0027#{superAdminStateBean.usersStats}\u0027);\n-            var docsStats \u003d JSON.parse(\u0027#{superAdminStateBean.docsStats}\u0027);\n-            var productsStats \u003d JSON.parse(\u0027#{superAdminStateBean.productsStats}\u0027);\n-            var partsStats \u003d JSON.parse(\u0027#{superAdminStateBean.partsStats}\u0027);\n+            var diskUsage \u003d #{superAdminStateBean.diskSpaceUsageStats};\n+            var usersStats \u003d #{superAdminStateBean.usersStats};\n+            var docsStats \u003d #{superAdminStateBean.docsStats};\n+            var productsStats \u003d #{superAdminStateBean.productsStats};\n+            var partsStats \u003d #{superAdminStateBean.partsStats};\n \n             // Charts\n             // ----------------------- DISK USAGE"
        },
        {
          "file_name": "docdoku-server/docdoku-server-web/src/main/webapp/admin/workspace/workspaceDashboard.xhtml",
          "patch": "@@ -87,15 +87,15 @@\n         \u003cscript type\u003d\"text/javascript\"\u003e\n \n             // Values from bean\n-            var diskUsage \u003d JSON.parse(\u0027#{adminStateBean.diskSpaceUsageStats}\u0027);\n+            var diskUsage \u003d #{adminStateBean.diskSpaceUsageStats};\n             var usersCount \u003d parseInt(\u0027#{adminStateBean.usersCount}\u0027);\n             var documentsCount \u003d parseInt(\u0027#{adminStateBean.documentsCount}\u0027);\n             var productsCount \u003d parseInt(\u0027#{adminStateBean.productsCount}\u0027);\n             var partsCount \u003d parseInt(\u0027#{adminStateBean.partsCount}\u0027);\n-            var cod \u003d JSON.parse(\u0027#{adminStateBean.checkedOutDocumentsStats}\u0027);\n-            var cop \u003d JSON.parse(\u0027#{adminStateBean.checkedOutPartsStats}\u0027);\n-            var usersInWorkspace \u003d JSON.parse(\u0027#{adminStateBean.usersInWorkspace}\u0027);\n-            var usersStats \u003d JSON.parse(\u0027#{adminStateBean.usersStats}\u0027);\n+            var cod \u003d #{adminStateBean.checkedOutDocumentsStats};\n+            var cop \u003d #{adminStateBean.checkedOutPartsStats};\n+            var usersInWorkspace \u003d #{adminStateBean.usersInWorkspace};\n+            var usersStats \u003d #{adminStateBean.usersStats};\n \n             // Charts\n             // ----------------------- DISK USAGE"
        }
      ]
    }
  },
  {
    "name": "Parsing an anonymous function generates \"mismatched input\" error",
    "url": "https://github.com/fabriciocolombo/sonar-delphi/issues/18",
    "description": "Analyzing a unit with an anonymous function generates the following error:\n\n```\n19:31:09.270 INFO  - Parsing project Default Project\n19:31:09.271 INFO  - Files to parse: 1\nC:\\Develop\\tmp_work\\sonar-test\\src\\AnonymousFuncTest.pas line 20:26 mismatched input \u0027(\u0027 expecting END\n19:31:09.640 INFO  - 0% done...\n19:31:09.641 INFO  - 10% done...\n```\n\n``` delphi\nunit AnonymousFuncTest;\n\ninterface\n\ntype\n  TStringPredicate \u003d reference to function(const aValue : string) : Boolean;\n\nfunction StringMatches(const aValue : string; aPredicate : TStringPredicate) : Boolean;\nfunction IsStringEmpty(const aValue : string) : Boolean;\n\nimplementation\n\nfunction StringMatches(const aValue : string; aPredicate : TStringPredicate) : Boolean;\nbegin\n  Result :\u003d aPredicate(aValue);\nend;\n\nfunction IsStringEmpty(const aValue : string) : Boolean;\nbegin\n  Result :\u003d StringMatches(aValue,\n    function(const aValue : string) : Boolean\n    begin\n      Result :\u003d aValue \u003d \u0027\u0027;\n    end);\nend;\n\nend.\n```\n",
    "keywords": [
      "boolean;",
      "avalue",
      ":\u003d",
      "string",
      "const",
      "tstringpredicate",
      "const avalue",
      "19:31:09",
      "apredicate",
      "result",
      "stringmatches",
      "function",
      "end",
      "begin",
      "info"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/fabriciocolombo/sonar-delphi/commit/e587d1dab831a130c791b3dfc175c5ceeea8f750",
      "files": [
        {
          "file_name": "src/test/java/org/sonar/plugins/delphi/antlr/GrammarTest.java",
          "patch": "@@ -95,4 +95,9 @@ public void parseUTF8FileWithBOM() throws Exception {\n     parseFile(\"UTF8WithBOM.pas\", \"utf-8\");\n   }\n \n+  @Test\n+  public void parseAnonymousMethods() throws Exception {\n+    parseFile(\"AnonymousMethods.pas\");\n+  }\n+\n }"
        },
        {
          "file_name": "src/test/resources/org/sonar/plugins/delphi/grammar/AnonymousMethods.pas",
          "patch": "@@ -0,0 +1,27 @@\n+unit AnonymousMethods;\n+\n+interface\n+\n+type\n+  TStringPredicate \u003d reference to function(const aValue : string) : Boolean;\n+\n+function StringMatches(const aValue : string; aPredicate : TStringPredicate) : Boolean;\n+function IsStringEmpty(const aValue : string) : Boolean;\n+\n+implementation\n+\n+function StringMatches(const aValue : string; aPredicate : TStringPredicate) : Boolean;\n+begin\n+  Result :\u003d aPredicate(aValue);\n+end;\n+\n+function IsStringEmpty(const aValue : string) : Boolean;\n+begin\n+  Result :\u003d StringMatches(aValue,\n+    function(const aValue : string) : Boolean\n+    begin\n+      Result :\u003d aValue \u003d \u0027\u0027;\n+    end);\n+end;\n+\n+end."
        },
        {
          "file_name": "src/test/resources/org/sonar/plugins/delphi/grammar/RecordInitialization.pas",
          "patch": "@@ -1,4 +1,4 @@\n-unit ComplexArray;\n+unit RecordInitialization;\n \n interface\n "
        }
      ]
    }
  },
  {
    "name": "HTML visualization config parser error",
    "url": "https://github.com/korpling/ANNIS/issues/404",
    "description": "Hi,\n\nI\u0027m trying to devise a custom HTML visualization for a multi-layer dialogue corpus and I\u0027ve noticed that the HTML visualization config parser throws an error when the triggering condition contains a digit (which is part of a namespace in my case, so perhaps the issue is restricted to namespaces?).\n\nHere\u0027s my `vis.config` file:\n\n```\nspk0:ort        p       value\n```\n\nAnd here\u0027s the error:\n\n![annis_htmlvis_parser_error](https://cloud.githubusercontent.com/assets/2734517/7453753/eca36bf0-f26c-11e4-921c-e2904e18219c.png)\n\nPerhaps `spk0:ort` is not a valid namespace + annotation name combination in ANNIS (I thought restricting myself to strings which are also valid XML attribute names would be enough -- maybe it\u0027s not?), but in that case it\u0027s slightly confusing that the only place this leads to an error is in the HTML visualization module.\n\nI can easily rename my namespaces for the time being, but it would be nice to solve this in a consistent way in the long run :)\n\nI\u0027m using the current release (ANNIS 3.2.3), by the way.\n",
    "keywords": [
      "visualization",
      "html",
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/korpling/ANNIS/commit/5f178e3f06dcd7a91469682191a1fb3b72948fd8",
      "files": [
        {
          "file_name": "annis-visualizers/src/main/antlr4/annis/visualizers/htmlvis/HTMLVisConfig.g4",
          "patch": "@@ -31,7 +31,7 @@ END : \u0027annis:END\u0027;\n QUOTE : \u0027\"\u0027;\n NEWLINE : \u0027\\n\u0027;\n COMMENT : \u0027#\u0027 ~(\u0027\\n\u0027)+ -\u003e skip;\n-ID: [a-zA-Z\\_\\-*?]+;\n+ID: [a-zA-Z0-9\\_\\-*?]+;\n TXT : (.)+?;\n \n innervalue: ~(QUOTE)+;"
        }
      ]
    }
  },
  {
    "name": "Capturing Block Output Parse Error",
    "url": "https://github.com/Camelcade/Perl5-IDEA/issues/1263",
    "description": "```\n[% BLOCK footer %]\n    [% year \u003d 2016 %]]\n   Copyright [% year %]\n[% END %]\n\n[% result \u003d PROCESS footer %]\n```\n\nhttp://template-toolkit.org/docs/manual/Syntax.html#section_Block_Directives\n",
    "keywords": [
      "%]",
      "[%"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Camelcade/Perl5-IDEA/commit/2c3aca5baa01c2bbb82166f85157a6adf27ac274",
      "files": [
        {
          "file_name": "grammar/TemplateToolkit.bnf",
          "patch": "@@ -207,7 +207,7 @@ call_directive ::\u003d TT2_CALL expr [directive_postfix] {pin\u003d1}\n get_directive ::\u003d [TT2_GET] expr [directive_postfix]\n \n set_directive ::\u003d [TT2_SET] \u003c\u003cparseSetElement\u003e\u003e + [directive_postfix]\n-private parse_set_element ::\u003d identifier_expr TT2_ASSIGN !TT2_CLOSE_TAG expr\n+private parse_set_element ::\u003d identifier_expr TT2_ASSIGN !TT2_CLOSE_TAG {process_directive|expr}\n \n default_directive ::\u003d TT2_DEFAULT assign_expr + [directive_postfix] {pin\u003d1}\n "
        },
        {
          "file_name": "resources/META-INF/plugin.xml",
          "patch": "@@ -45,10 +45,12 @@\n       \u003c/ul\u003e\u003c/li\u003e\n       \u003c/ul\u003e\n      \u003c/p\u003e\n-     \u003c!--\u003cp\u003eFixes:--\u003e\n-      \u003c!--\u003cul\u003e--\u003e\n-      \u003c!--\u003c/ul\u003e--\u003e\n-     \u003c!--\u003c/p\u003e--\u003e\n+     \u003cp\u003eFixes:\n+      \u003cul\u003e\n+      \u003cli\u003eJS line comment bug in Template Toolkit templates\u003c/li\u003e\n+      \u003cli\u003eBug with PROCESS directive capturing parsing\u003c/li\u003e\n+      \u003c/ul\u003e\n+     \u003c/p\u003e\n     ]]\u003e\n     \u003c/change-notes\u003e\n "
        },
        {
          "file_name": "test/parser/TemplateToolkitParserTest.java",
          "patch": "@@ -270,11 +270,6 @@ public void testTags()\n \t\tdoTest(\"tags\");\n \t}\n \n-\tpublic void testIssue1262()\n-\t{\n-\t\tdoTest(\"issue1262\");\n-\t}\n-\n \tpublic void testChompMarkers()\n \t{\n \t\tdoTest(\"chomp_markers\");\n@@ -285,4 +280,14 @@ public void testMultiDirectiveBlocks()\n \t\tdoTest(\"multi_directives_blocks\");\n \t}\n \n+\tpublic void testIssue1262()\n+\t{\n+\t\tdoTest(\"issue1262\");\n+\t}\n+\n+\tpublic void testIssue1263()\n+\t{\n+\t\tdoTest(\"issue1263\");\n+\t}\n+\n }"
        },
        {
          "file_name": "testData/parser/tt2/issue1263.code",
          "patch": "@@ -0,0 +1,4 @@\n+\u003chtml\u003e\n+[% result \u003d PROCESS footer %]\n+[% SET result \u003d PROCESS footer %]\n+\u003c/html\u003e"
        },
        {
          "file_name": "testData/parser/tt2/issue1263.txt",
          "patch": "@@ -0,0 +1,27 @@\n+Template Toolkit File\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\u003chtml\u003e\\n\u0027)\n+  PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+  PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n+    PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n+      PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n+        PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027result\u0027)\n+      PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n+      PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n+        PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n+        PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+          PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027footer\u0027)\n+  PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u0027)\n+  PsiElement(TemplateToolkit2Token.[%)(\u0027[%\u0027)\n+  PsiSetDirectiveImpl(TemplateToolkit2Element.SET_DIRECTIVE)\n+    PsiElement(TemplateToolkit2Token.SET)(\u0027SET\u0027)\n+    PsiAssignExprImpl(TemplateToolkit2Element.ASSIGN_EXPR)\n+      PsiIdentifierExprImpl(TemplateToolkit2Element.IDENTIFIER_EXPR)\n+        PsiElement(TemplateToolkit2Token.TT2_IDENTIFIER)(\u0027result\u0027)\n+      PsiElement(TemplateToolkit2Token.\u003d)(\u0027\u003d\u0027)\n+      PsiProcessDirectiveImpl(TemplateToolkit2Element.PROCESS_DIRECTIVE)\n+        PsiElement(TemplateToolkit2Token.PROCESS)(\u0027PROCESS\u0027)\n+        PsiSqStringExprImpl(TemplateToolkit2Element.SQ_STRING_EXPR)\n+          PsiElement(TemplateToolkit2Token.STRING_CONTENT)(\u0027footer\u0027)\n+  PsiElement(TemplateToolkit2Token.%])(\u0027%]\u0027)\n+  PsiComment(TemplateToolkit2Token.TT2_HTML)(\u0027\\n\u003c/html\u003e\u0027)\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Parse error when a method is named \u0027continue\u0027",
    "url": "https://github.com/google/closure-compiler/issues/565",
    "description": "Tried runing the Closure Compiler on my [ES6 port of 2048](https://github.com/MatrixFrog/2048-es6) and got an error at https://github.com/MatrixFrog/2048-es6/blob/master/js/html_actuator.js#L37\n\n```\njs/html_actuator.js:37: ERROR - Parse error. \u0027}\u0027 expected\n  continue() {\n  ^\n```\n\nI believe this is legal, even though `continue` is a keyword, so we need to allow keywords as method names in the parser.\n",
    "keywords": [
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/google/closure-compiler/commit/bc7d98fff7ce3452abb0c95415b39c11d200ed3a",
      "files": [
        {
          "file_name": "src/com/google/javascript/jscomp/parsing/parser/Parser.java",
          "patch": "@@ -442,7 +442,7 @@ private boolean peekClassElement() {\n       case SEMI_COLON:\n         return true;\n       default:\n-        return false;\n+        return Keywords.isKeyword(token.type);\n     }\n   }\n \n@@ -463,7 +463,8 @@ private ParseTree parseMethodDeclaration(boolean allowStatic) {\n     SourcePosition start \u003d getTreeStartLocation();\n     boolean isStatic \u003d allowStatic \u0026\u0026 eatOpt(TokenType.STATIC) !\u003d null;\n     boolean isGenerator \u003d eatOpt(TokenType.STAR) !\u003d null;\n-    if (peekId()) {\n+    TokenType type \u003d peekType();\n+    if (type \u003d\u003d TokenType.IDENTIFIER || Keywords.isKeyword(type)) {\n       IdentifierToken name \u003d eatIdOrKeywordAsId();\n       return parseFunctionTail(\n           start, name, isStatic, isGenerator,"
        },
        {
          "file_name": "test/com/google/javascript/jscomp/parsing/NewParserTest.java",
          "patch": "@@ -2129,6 +2129,16 @@ public void testClass3() {\n         \"}\\n\");\n   }\n \n+  public void testClassKeywordsAsMethodNames() {\n+    mode \u003d LanguageMode.ECMASCRIPT6;\n+    parse(Joiner.on(\u0027\\n\u0027).join(\n+        \"class KeywordMethods {\",\n+        \"  continue() {}\",\n+        \"  throw() {}\",\n+        \"  else() {}\",\n+        \"}\"));\n+  }\n+\n   public void testSuper1() {\n     mode \u003d LanguageMode.ECMASCRIPT6;\n "
        }
      ]
    }
  },
  {
    "name": "IE8报html parsing error unable to modify the parent container element before the child element is closed",
    "url": "https://github.com/beangle/library/issues/143",
    "description": "这个错误表现在grid渲染中，发生的。当时div还没有结束，就包含了一些script在div中创建分页div等。\n导致ie6,7显示出页面之后，说打不开，ie8则报上述错误。\n\n参考文章：\n- http://blogs.msdn.com/b/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx\n- http://stauren.net/log/i3sfwwvma.html\n\n将script移动到div之外就好了\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/beangle/library/commit/5545be9b8b13ae469c4363b4bdf37b7b64ef93a0",
      "files": [
        {
          "file_name": "struts2/org.beangle.struts2.view/src/main/java/org/beangle/struts2/view/component/Agent.java",
          "patch": "@@ -0,0 +1,38 @@\n+/* Copyright c 2005-2012.\n+ * Licensed under GNU  LESSER General Public License, Version 3.\n+ * http://www.gnu.org/licenses\n+ */\n+package org.beangle.struts2.view.component;\n+\n+import org.beangle.commons.http.agent.Browser;\n+\n+import com.opensymphony.xwork2.util.ValueStack;\n+\n+/**\n+ * Useragent specific javascript\n+ * \n+ * @author chaostone\n+ * @since 3.0.1\n+ */\n+public class Agent extends UIBean {\n+\n+  private final String browser;\n+\n+  private final String version;\n+\n+  public Agent(ValueStack stack) {\n+    super(stack);\n+    Browser browser \u003d Browser.parse(getRequest().getHeader(\"USER-AGENT\"));\n+    this.browser \u003d browser.category.getName();\n+    this.version \u003d browser.version;\n+  }\n+\n+  public String getBrowser() {\n+    return browser;\n+  }\n+\n+  public String getVersion() {\n+    return version;\n+  }\n+\n+}"
        },
        {
          "file_name": "struts2/org.beangle.struts2.view/src/main/resources/static/scripts/browser/json2.js",
          "patch": "@@ -0,0 +1,486 @@\n+/*\n+    json2.js\n+    2012-10-08\n+\n+    Public Domain.\n+\n+    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n+\n+    See http://www.JSON.org/js.html\n+\n+\n+    This code should be minified before deployment.\n+    See http://javascript.crockford.com/jsmin.html\n+\n+    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n+    NOT CONTROL.\n+\n+\n+    This file creates a global JSON object containing two methods: stringify\n+    and parse.\n+\n+        JSON.stringify(value, replacer, space)\n+            value       any JavaScript value, usually an object or array.\n+\n+            replacer    an optional parameter that determines how object\n+                        values are stringified for objects. It can be a\n+                        function or an array of strings.\n+\n+            space       an optional parameter that specifies the indentation\n+                        of nested structures. If it is omitted, the text will\n+                        be packed without extra whitespace. If it is a number,\n+                        it will specify the number of spaces to indent at each\n+                        level. If it is a string (such as \u0027\\t\u0027 or \u0027\u0026nbsp;\u0027),\n+                        it contains the characters used to indent at each level.\n+\n+            This method produces a JSON text from a JavaScript value.\n+\n+            When an object value is found, if the object contains a toJSON\n+            method, its toJSON method will be called and the result will be\n+            stringified. A toJSON method does not serialize: it returns the\n+            value represented by the name/value pair that should be serialized,\n+            or undefined if nothing should be serialized. The toJSON method\n+            will be passed the key associated with the value, and this will be\n+            bound to the value\n+\n+            For example, this would serialize Dates as ISO strings.\n+\n+                Date.prototype.toJSON \u003d function (key) {\n+                    function f(n) {\n+                        // Format integers to have at least two digits.\n+                        return n \u003c 10 ? \u00270\u0027 + n : n;\n+                    }\n+\n+                    return this.getUTCFullYear()   + \u0027-\u0027 +\n+                         f(this.getUTCMonth() + 1) + \u0027-\u0027 +\n+                         f(this.getUTCDate())      + \u0027T\u0027 +\n+                         f(this.getUTCHours())     + \u0027:\u0027 +\n+                         f(this.getUTCMinutes())   + \u0027:\u0027 +\n+                         f(this.getUTCSeconds())   + \u0027Z\u0027;\n+                };\n+\n+            You can provide an optional replacer method. It will be passed the\n+            key and value of each member, with this bound to the containing\n+            object. The value that is returned from your method will be\n+            serialized. If your method returns undefined, then the member will\n+            be excluded from the serialization.\n+\n+            If the replacer parameter is an array of strings, then it will be\n+            used to select the members to be serialized. It filters the results\n+            such that only members with keys listed in the replacer array are\n+            stringified.\n+\n+            Values that do not have JSON representations, such as undefined or\n+            functions, will not be serialized. Such values in objects will be\n+            dropped; in arrays they will be replaced with null. You can use\n+            a replacer function to replace those with JSON values.\n+            JSON.stringify(undefined) returns undefined.\n+\n+            The optional space parameter produces a stringification of the\n+            value that is filled with line breaks and indentation to make it\n+            easier to read.\n+\n+            If the space parameter is a non-empty string, then that string will\n+            be used for indentation. If the space parameter is a number, then\n+            the indentation will be that many spaces.\n+\n+            Example:\n+\n+            text \u003d JSON.stringify([\u0027e\u0027, {pluribus: \u0027unum\u0027}]);\n+            // text is \u0027[\"e\",{\"pluribus\":\"unum\"}]\u0027\n+\n+\n+            text \u003d JSON.stringify([\u0027e\u0027, {pluribus: \u0027unum\u0027}], null, \u0027\\t\u0027);\n+            // text is \u0027[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]\u0027\n+\n+            text \u003d JSON.stringify([new Date()], function (key, value) {\n+                return this[key] instanceof Date ?\n+                    \u0027Date(\u0027 + this[key] + \u0027)\u0027 : value;\n+            });\n+            // text is \u0027[\"Date(---current time---)\"]\u0027\n+\n+\n+        JSON.parse(text, reviver)\n+            This method parses a JSON text to produce an object or array.\n+            It can throw a SyntaxError exception.\n+\n+            The optional reviver parameter is a function that can filter and\n+            transform the results. It receives each of the keys and values,\n+            and its return value is used instead of the original value.\n+            If it returns what it received, then the structure is not modified.\n+            If it returns undefined then the member is deleted.\n+\n+            Example:\n+\n+            // Parse the text. Values that look like ISO date strings will\n+            // be converted to Date objects.\n+\n+            myData \u003d JSON.parse(text, function (key, value) {\n+                var a;\n+                if (typeof value \u003d\u003d\u003d \u0027string\u0027) {\n+                    a \u003d\n+/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n+                    if (a) {\n+                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n+                            +a[5], +a[6]));\n+                    }\n+                }\n+                return value;\n+            });\n+\n+            myData \u003d JSON.parse(\u0027[\"Date(09/09/2001)\"]\u0027, function (key, value) {\n+                var d;\n+                if (typeof value \u003d\u003d\u003d \u0027string\u0027 \u0026\u0026\n+                        value.slice(0, 5) \u003d\u003d\u003d \u0027Date(\u0027 \u0026\u0026\n+                        value.slice(-1) \u003d\u003d\u003d \u0027)\u0027) {\n+                    d \u003d new Date(value.slice(5, -1));\n+                    if (d) {\n+                        return d;\n+                    }\n+                }\n+                return value;\n+            });\n+\n+\n+    This is a reference implementation. You are free to copy, modify, or\n+    redistribute.\n+*/\n+\n+/*jslint evil: true, regexp: true */\n+\n+/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n+    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n+    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n+    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n+    test, toJSON, toString, valueOf\n+*/\n+\n+\n+// Create a JSON object only if one does not already exist. We create the\n+// methods in a closure to avoid creating global variables.\n+\n+if (typeof JSON !\u003d\u003d \u0027object\u0027) {\n+    JSON \u003d {};\n+}\n+\n+(function () {\n+    \u0027use strict\u0027;\n+\n+    function f(n) {\n+        // Format integers to have at least two digits.\n+        return n \u003c 10 ? \u00270\u0027 + n : n;\n+    }\n+\n+    if (typeof Date.prototype.toJSON !\u003d\u003d \u0027function\u0027) {\n+\n+        Date.prototype.toJSON \u003d function (key) {\n+\n+            return isFinite(this.valueOf())\n+                ? this.getUTCFullYear()     + \u0027-\u0027 +\n+                    f(this.getUTCMonth() + 1) + \u0027-\u0027 +\n+                    f(this.getUTCDate())      + \u0027T\u0027 +\n+                    f(this.getUTCHours())     + \u0027:\u0027 +\n+                    f(this.getUTCMinutes())   + \u0027:\u0027 +\n+                    f(this.getUTCSeconds())   + \u0027Z\u0027\n+                : null;\n+        };\n+\n+        String.prototype.toJSON      \u003d\n+            Number.prototype.toJSON  \u003d\n+            Boolean.prototype.toJSON \u003d function (key) {\n+                return this.valueOf();\n+            };\n+    }\n+\n+    var cx \u003d /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n+        escapable \u003d /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n+        gap,\n+        indent,\n+        meta \u003d {    // table of character substitutions\n+            \u0027\\b\u0027: \u0027\\\\b\u0027,\n+            \u0027\\t\u0027: \u0027\\\\t\u0027,\n+            \u0027\\n\u0027: \u0027\\\\n\u0027,\n+            \u0027\\f\u0027: \u0027\\\\f\u0027,\n+            \u0027\\r\u0027: \u0027\\\\r\u0027,\n+            \u0027\"\u0027 : \u0027\\\\\"\u0027,\n+            \u0027\\\\\u0027: \u0027\\\\\\\\\u0027\n+        },\n+        rep;\n+\n+\n+    function quote(string) {\n+\n+// If the string contains no control characters, no quote characters, and no\n+// backslash characters, then we can safely slap some quotes around it.\n+// Otherwise we must also replace the offending characters with safe escape\n+// sequences.\n+\n+        escapable.lastIndex \u003d 0;\n+        return escapable.test(string) ? \u0027\"\u0027 + string.replace(escapable, function (a) {\n+            var c \u003d meta[a];\n+            return typeof c \u003d\u003d\u003d \u0027string\u0027\n+                ? c\n+                : \u0027\\\\u\u0027 + (\u00270000\u0027 + a.charCodeAt(0).toString(16)).slice(-4);\n+        }) + \u0027\"\u0027 : \u0027\"\u0027 + string + \u0027\"\u0027;\n+    }\n+\n+\n+    function str(key, holder) {\n+\n+// Produce a string from holder[key].\n+\n+        var i,          // The loop counter.\n+            k,          // The member key.\n+            v,          // The member value.\n+            length,\n+            mind \u003d gap,\n+            partial,\n+            value \u003d holder[key];\n+\n+// If the value has a toJSON method, call it to obtain a replacement value.\n+\n+        if (value \u0026\u0026 typeof value \u003d\u003d\u003d \u0027object\u0027 \u0026\u0026\n+                typeof value.toJSON \u003d\u003d\u003d \u0027function\u0027) {\n+            value \u003d value.toJSON(key);\n+        }\n+\n+// If we were called with a replacer function, then call the replacer to\n+// obtain a replacement value.\n+\n+        if (typeof rep \u003d\u003d\u003d \u0027function\u0027) {\n+            value \u003d rep.call(holder, key, value);\n+        }\n+\n+// What happens next depends on the value\u0027s type.\n+\n+        switch (typeof value) {\n+        case \u0027string\u0027:\n+            return quote(value);\n+\n+        case \u0027number\u0027:\n+\n+// JSON numbers must be finite. Encode non-finite numbers as null.\n+\n+            return isFinite(value) ? String(value) : \u0027null\u0027;\n+\n+        case \u0027boolean\u0027:\n+        case \u0027null\u0027:\n+\n+// If the value is a boolean or null, convert it to a string. Note:\n+// typeof null does not produce \u0027null\u0027. The case is included here in\n+// the remote chance that this gets fixed someday.\n+\n+            return String(value);\n+\n+// If the type is \u0027object\u0027, we might be dealing with an object or an array or\n+// null.\n+\n+        case \u0027object\u0027:\n+\n+// Due to a specification blunder in ECMAScript, typeof null is \u0027object\u0027,\n+// so watch out for that case.\n+\n+            if (!value) {\n+                return \u0027null\u0027;\n+            }\n+\n+// Make an array to hold the partial results of stringifying this object value.\n+\n+            gap +\u003d indent;\n+            partial \u003d [];\n+\n+// Is the value an array?\n+\n+            if (Object.prototype.toString.apply(value) \u003d\u003d\u003d \u0027[object Array]\u0027) {\n+\n+// The value is an array. Stringify every element. Use null as a placeholder\n+// for non-JSON values.\n+\n+                length \u003d value.length;\n+                for (i \u003d 0; i \u003c length; i +\u003d 1) {\n+                    partial[i] \u003d str(i, value) || \u0027null\u0027;\n+                }\n+\n+// Join all of the elements together, separated with commas, and wrap them in\n+// brackets.\n+\n+                v \u003d partial.length \u003d\u003d\u003d 0\n+                    ? \u0027[]\u0027\n+                    : gap\n+                    ? \u0027[\\n\u0027 + gap + partial.join(\u0027,\\n\u0027 + gap) + \u0027\\n\u0027 + mind + \u0027]\u0027\n+                    : \u0027[\u0027 + partial.join(\u0027,\u0027) + \u0027]\u0027;\n+                gap \u003d mind;\n+                return v;\n+            }\n+\n+// If the replacer is an array, use it to select the members to be stringified.\n+\n+            if (rep \u0026\u0026 typeof rep \u003d\u003d\u003d \u0027object\u0027) {\n+                length \u003d rep.length;\n+                for (i \u003d 0; i \u003c length; i +\u003d 1) {\n+                    if (typeof rep[i] \u003d\u003d\u003d \u0027string\u0027) {\n+                        k \u003d rep[i];\n+                        v \u003d str(k, value);\n+                        if (v) {\n+                            partial.push(quote(k) + (gap ? \u0027: \u0027 : \u0027:\u0027) + v);\n+                        }\n+                    }\n+                }\n+            } else {\n+\n+// Otherwise, iterate through all of the keys in the object.\n+\n+                for (k in value) {\n+                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n+                        v \u003d str(k, value);\n+                        if (v) {\n+                            partial.push(quote(k) + (gap ? \u0027: \u0027 : \u0027:\u0027) + v);\n+                        }\n+                    }\n+                }\n+            }\n+\n+// Join all of the member texts together, separated with commas,\n+// and wrap them in braces.\n+\n+            v \u003d partial.length \u003d\u003d\u003d 0\n+                ? \u0027{}\u0027\n+                : gap\n+                ? \u0027{\\n\u0027 + gap + partial.join(\u0027,\\n\u0027 + gap) + \u0027\\n\u0027 + mind + \u0027}\u0027\n+                : \u0027{\u0027 + partial.join(\u0027,\u0027) + \u0027}\u0027;\n+            gap \u003d mind;\n+            return v;\n+        }\n+    }\n+\n+// If the JSON object does not yet have a stringify method, give it one.\n+\n+    if (typeof JSON.stringify !\u003d\u003d \u0027function\u0027) {\n+        JSON.stringify \u003d function (value, replacer, space) {\n+\n+// The stringify method takes a value and an optional replacer, and an optional\n+// space parameter, and returns a JSON text. The replacer can be a function\n+// that can replace values, or an array of strings that will select the keys.\n+// A default replacer method can be provided. Use of the space parameter can\n+// produce text that is more easily readable.\n+\n+            var i;\n+            gap \u003d \u0027\u0027;\n+            indent \u003d \u0027\u0027;\n+\n+// If the space parameter is a number, make an indent string containing that\n+// many spaces.\n+\n+            if (typeof space \u003d\u003d\u003d \u0027number\u0027) {\n+                for (i \u003d 0; i \u003c space; i +\u003d 1) {\n+                    indent +\u003d \u0027 \u0027;\n+                }\n+\n+// If the space parameter is a string, it will be used as the indent string.\n+\n+            } else if (typeof space \u003d\u003d\u003d \u0027string\u0027) {\n+                indent \u003d space;\n+            }\n+\n+// If there is a replacer, it must be a function or an array.\n+// Otherwise, throw an error.\n+\n+            rep \u003d replacer;\n+            if (replacer \u0026\u0026 typeof replacer !\u003d\u003d \u0027function\u0027 \u0026\u0026\n+                    (typeof replacer !\u003d\u003d \u0027object\u0027 ||\n+                    typeof replacer.length !\u003d\u003d \u0027number\u0027)) {\n+                throw new Error(\u0027JSON.stringify\u0027);\n+            }\n+\n+// Make a fake root object containing our value under the key of \u0027\u0027.\n+// Return the result of stringifying the value.\n+\n+            return str(\u0027\u0027, {\u0027\u0027: value});\n+        };\n+    }\n+\n+\n+// If the JSON object does not yet have a parse method, give it one.\n+\n+    if (typeof JSON.parse !\u003d\u003d \u0027function\u0027) {\n+        JSON.parse \u003d function (text, reviver) {\n+\n+// The parse method takes a text and an optional reviver function, and returns\n+// a JavaScript value if the text is a valid JSON text.\n+\n+            var j;\n+\n+            function walk(holder, key) {\n+\n+// The walk method is used to recursively walk the resulting structure so\n+// that modifications can be made.\n+\n+                var k, v, value \u003d holder[key];\n+                if (value \u0026\u0026 typeof value \u003d\u003d\u003d \u0027object\u0027) {\n+                    for (k in value) {\n+                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n+                            v \u003d walk(value, k);\n+                            if (v !\u003d\u003d undefined) {\n+                                value[k] \u003d v;\n+                            } else {\n+                                delete value[k];\n+                            }\n+                        }\n+                    }\n+                }\n+                return reviver.call(holder, key, value);\n+            }\n+\n+\n+// Parsing happens in four stages. In the first stage, we replace certain\n+// Unicode characters with escape sequences. JavaScript handles many characters\n+// incorrectly, either silently deleting them, or treating them as line endings.\n+\n+            text \u003d String(text);\n+            cx.lastIndex \u003d 0;\n+            if (cx.test(text)) {\n+                text \u003d text.replace(cx, function (a) {\n+                    return \u0027\\\\u\u0027 +\n+                        (\u00270000\u0027 + a.charCodeAt(0).toString(16)).slice(-4);\n+                });\n+            }\n+\n+// In the second stage, we run the text against regular expressions that look\n+// for non-JSON patterns. We are especially concerned with \u0027()\u0027 and \u0027new\u0027\n+// because they can cause invocation, and \u0027\u003d\u0027 because it can cause mutation.\n+// But just to be safe, we want to reject all unexpected forms.\n+\n+// We split the second stage into 4 regexp operations in order to work around\n+// crippling inefficiencies in IE\u0027s and Safari\u0027s regexp engines. First we\n+// replace the JSON backslash pairs with \u0027@\u0027 (a non-JSON character). Second, we\n+// replace all simple value tokens with \u0027]\u0027 characters. Third, we delete all\n+// open brackets that follow a colon or comma or that begin the text. Finally,\n+// we look to see that the remaining characters are only whitespace or \u0027]\u0027 or\n+// \u0027,\u0027 or \u0027:\u0027 or \u0027{\u0027 or \u0027}\u0027. If that is so, then the text is safe for eval.\n+\n+            if (/^[\\],:{}\\s]*$/\n+                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, \u0027@\u0027)\n+                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \u0027]\u0027)\n+                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \u0027\u0027))) {\n+\n+// In the third stage we use the eval function to compile the text into a\n+// JavaScript structure. The \u0027{\u0027 operator is subject to a syntactic ambiguity\n+// in JavaScript: it can begin a block or an object literal. We wrap the text\n+// in parens to eliminate the ambiguity.\n+\n+                j \u003d eval(\u0027(\u0027 + text + \u0027)\u0027);\n+\n+// In the optional fourth stage, we recursively walk the new structure, passing\n+// each name/value pair to a reviver function for possible transformation.\n+\n+                return typeof reviver \u003d\u003d\u003d \u0027function\u0027\n+                    ? walk({\u0027\u0027: j}, \u0027\u0027)\n+                    : j;\n+            }\n+\n+// If the text is not JSON parseable, then a SyntaxError is thrown.\n+\n+            throw new SyntaxError(\u0027JSON.parse\u0027);\n+        };\n+    }\n+}());"
        },
        {
          "file_name": "struts2/org.beangle.struts2.view/src/main/resources/template/xml/agent.ftl",
          "patch": "@@ -0,0 +1,11 @@\n+[#ftl/]\n+[#assign browserjs\u003d{\"ie6\":\"json2.js\",\"ie7\":\"json2.js\",\"ie8\":\"json2.js\"}]\n+[#if tag.browser?starts_with(\u0027Internet Explorer\u0027)]\n+  [#if tag.version?starts_with(\"6\") ]\n+  \u003cscript type\u003d\"text/javascript\" src\u003d\"${base}/static/scripts/browser/${browserjs[\u0027ie6\u0027]}\"\u003e\u003c/script\u003e\n+  [#elseif tag.version?starts_with(\"7\")]\n+  \u003cscript type\u003d\"text/javascript\" src\u003d\"${base}/static/scripts/browser/${browserjs[\u0027ie7\u0027]}\"\u003e\u003c/script\u003e\n+  [#elseif tag.version?starts_with(\"8\")]\n+  \u003cscript type\u003d\"text/javascript\" src\u003d\"${base}/static/scripts/browser/${browserjs[\u0027ie8\u0027]}\"\u003e\u003c/script\u003e\n+  [/#if]\n+[/#if]"
        }
      ]
    }
  },
  {
    "name": "Some VDMUnit error strings cause parser errors",
    "url": "https://github.com/overturetool/overture/issues/143",
    "description": "\u003e The following bug was [originally reported](https://sourceforge.net/p/overture/bugs/143/) on Sourceforge by [nick_battle](https://sourceforge.net/u/nick_battle/profile/), 2012-05-17 12:58:00:\n\nThe TestCase class handles errors by trying to compose the VDM expression \"Error`throw(message)\", where the message is a string literal from the actual error raised. This has to be quoted, so that backslashes and double quotes that occur in the message are turned into legal VDM. But some errors still catch it out. In particular, the following fails:\n\nThe error exception is:\n\n```\nError 4146: Measure failure: blocksInStmts([mk_AST2`VarRefStmt(mk_token(\"0\"))]), measure l2, current 1, previous 1 in \u0027AST2Util\u0027 (.\\AST.vdmpp) at line 104:41\n```\n\nThat is quoted-up and passed to Error`throw as:\n\n```\nError`throw(\"Error 4146: Measure failure: blocksInStmts([mk_AST2`VarRefStmt(mk_token(\\\\\"0\\\\\"))]), measure l2, current 1, previous 1 in \u0027AST2Util\u0027 (.\\\\AST.vdmpp) at line 104:41\")\n```\n\nBut that has too many backslashes before the double-quotes, and fails to parse at that point.\n",
    "keywords": [
      "1",
      "measure",
      "error`throw",
      "message",
      "error",
      "errors"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/overturetool/overture/commit/2819394f69bd1dbd6828b48341617748e9d1f999",
      "files": [
        {
          "file_name": "core/interpreter/src/main/java/TestCase.java",
          "patch": "@@ -39,7 +39,7 @@ public static Value reflectionRunTest(Value obj, Value name)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tthrow e;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\treturn ClassInterpreter.getInstance().evaluate(\"Error`throw(\\\"\"+e.getMessage().replaceAll(\"\\\"\", \"\\\\\\\\\\\"\").replaceAll(\"\\\u0027\", \"\\\\\\\u0027\").replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")+\"\\\")\", mainContext);\n+\t\t\t\t\t\treturn ClassInterpreter.getInstance().evaluate(\"Error`throw(\\\"\"+e.getMessage().replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\"\", \"\\\\\\\\\\\"\").replaceAll(\"\\\u0027\", \"\\\\\\\u0027\")+\"\\\")\", mainContext);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}"
        }
      ]
    }
  },
  {
    "name": "[Core] Fix log on error during parsing",
    "url": "https://github.com/peshkira/c3po/issues/27",
    "description": "Fix the log on error during parsing and output the correct file path/identifier, so that it is clear which objects were not processed. The problem is because of the change to streams. now the log prints the address of the InputStream object instead of the filename.\n\nThe controller should take care of this.\n\n`[FITSAdaptor] An exception occurred for file \u0027java.io.FileInputStream@24164d75\u0027: null`\n",
    "keywords": [
      "log"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/peshkira/c3po/commit/5b298b3c8d3ab47369676557d8d45f15427e4c02",
      "files": [
        {
          "file_name": "c3po-api/src/main/java/com/petpet/c3po/api/MetaDataGatherer.java",
          "patch": "@@ -1,9 +1,10 @@\n package com.petpet.c3po.api;\n \n-import java.io.InputStream;\n import java.util.List;\n import java.util.Map;\n \n+import com.petpet.c3po.datamodel.DigitalObjectStream;\n+\n /**\n  * An interface for a meta data gatherer. The implementing class could be a\n  * filesystem gatherer or some specific repository gatherer.\n@@ -43,6 +44,6 @@\n    *          the desired number of records.\n    * @return\n    */\n-  List\u003cInputStream\u003e getNext(int count);\n+  List\u003cDigitalObjectStream\u003e getNext(int count);\n \n }"
        },
        {
          "file_name": "c3po-api/src/main/java/com/petpet/c3po/datamodel/DigitalObjectStream.java",
          "patch": "@@ -0,0 +1,24 @@\n+package com.petpet.c3po.datamodel;\n+\n+import java.io.InputStream;\n+\n+public class DigitalObjectStream {\n+\n+  private String fileName;\n+\n+  private InputStream data;\n+  \n+  \n+  public DigitalObjectStream(String fileName, InputStream data) {\n+    this.fileName \u003d fileName;\n+    this.data \u003d data;\n+  }\n+  \n+  public String getFileName() {\n+    return this.fileName;\n+  }\n+  \n+  public InputStream getData() {\n+    return this.data;\n+  }\n+}"
        },
        {
          "file_name": "c3po-core/src/main/java/com/petpet/c3po/adaptor/fits/FITSAdaptor.java",
          "patch": "@@ -1,7 +1,6 @@\n package com.petpet.c3po.adaptor.fits;\n \n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.List;\n import java.util.Map;\n import java.util.UUID;\n@@ -15,14 +14,15 @@\n \n import com.petpet.c3po.adaptor.AbstractAdaptor;\n import com.petpet.c3po.common.Constants;\n+import com.petpet.c3po.datamodel.DigitalObjectStream;\n import com.petpet.c3po.datamodel.Element;\n import com.petpet.c3po.datamodel.MetadataRecord;\n \n public class FITSAdaptor extends AbstractAdaptor {\n \n   private static final Logger LOG \u003d LoggerFactory.getLogger(FITSAdaptor.class);\n \n-  private InputStream metadata;\n+  private DigitalObjectStream metadata;\n \n   private Digester digester;\n \n@@ -157,7 +157,7 @@ public Element getElement() {\n       DigesterContext context \u003d new DigesterContext(this.getController().getPersistence().getCache(),\n           this.getPreProcessingRules());\n       this.digester.push(context);\n-      context \u003d (DigesterContext) this.digester.parse(this.metadata);\n+      context \u003d (DigesterContext) this.digester.parse(this.metadata.getData());\n       final Element element \u003d this.postProcess(context);\n \n       return element;\n@@ -168,7 +168,7 @@ public Element getElement() {\n       LOG.error(\"An exception occurred while parsing {}: {}\", this.metadata, e.getMessage());\n     } finally {\n       try {\n-        this.metadata.close();\n+        this.metadata.getData().close();\n       } catch (IOException ioe) {\n         LOG.error(\"An exception occurred while closing {}: {}\", this.metadata, ioe.getMessage());\n       }\n@@ -201,7 +201,7 @@ private Element postProcess(DigesterContext context) {\n \n   @Override\n   public void run() {\n-    InputStream next \u003d this.getController().getNext();\n+    DigitalObjectStream next \u003d this.getController().getNext();\n \n     while (next !\u003d null) {\n       try {\n@@ -213,13 +213,13 @@ public void run() {\n           this.getController().getPersistence().insert(Constants.TBL_ELEMENTS, element.getDocument());\n \n         } else {\n-          LOG.warn(\"No element could be extracted for file {}\", metadata);\n+          LOG.warn(\"No element could be extracted for file {}\", metadata.getFileName());\n           // potentially move file to some place for further investigation.\n         }\n \n       } catch (Exception e) {\n         // save thread from dying due to processing error...\n-        LOG.warn(\"An exception occurred for file \u0027{}\u0027: {}\", metadata, e.getMessage());\n+        LOG.warn(\"An exception occurred for file \u0027{}\u0027: {}\", metadata.getFileName(), e.getMessage());\n         // e.printStackTrace();\n       }\n "
        },
        {
          "file_name": "c3po-core/src/main/java/com/petpet/c3po/controller/Controller.java",
          "patch": "@@ -1,6 +1,5 @@\n package com.petpet.c3po.controller;\n \n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -19,6 +18,7 @@\n import com.petpet.c3po.api.dao.PersistenceLayer;\n import com.petpet.c3po.common.Constants;\n import com.petpet.c3po.datamodel.ActionLog;\n+import com.petpet.c3po.datamodel.DigitalObjectStream;\n import com.petpet.c3po.gatherer.FileSystemGatherer;\n import com.petpet.c3po.utils.ActionLogHelper;\n \n@@ -98,9 +98,9 @@ public PersistenceLayer getPersistence() {\n     return this.persistence;\n   }\n \n-  public synchronized InputStream getNext() {\n-    List\u003cInputStream\u003e next \u003d this.gatherer.getNext(1);\n-    InputStream result \u003d null;\n+  public synchronized DigitalObjectStream getNext() {\n+    List\u003cDigitalObjectStream\u003e next \u003d this.gatherer.getNext(1);\n+    DigitalObjectStream result \u003d null;\n \n     if (!next.isEmpty()) {\n       result \u003d next.get(0);"
        },
        {
          "file_name": "c3po-core/src/main/java/com/petpet/c3po/gatherer/FileSystemGatherer.java",
          "patch": "@@ -4,7 +4,6 @@\n import java.io.FileFilter;\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n@@ -14,6 +13,7 @@\n \n import com.petpet.c3po.api.MetaDataGatherer;\n import com.petpet.c3po.common.Constants;\n+import com.petpet.c3po.datamodel.DigitalObjectStream;\n \n public class FileSystemGatherer implements MetaDataGatherer {\n \n@@ -48,8 +48,8 @@ public long getRemaining() {\n     return this.remaining;\n   }\n \n-  public List\u003cInputStream\u003e getNext(int nr) {\n-    List\u003cInputStream\u003e next \u003d new ArrayList\u003cInputStream\u003e();\n+  public List\u003cDigitalObjectStream\u003e getNext(int nr) {\n+    List\u003cDigitalObjectStream\u003e next \u003d new ArrayList\u003cDigitalObjectStream\u003e();\n \n     if (nr \u003c\u003d 0) {\n       return next;\n@@ -59,7 +59,11 @@ public long getRemaining() {\n       try {\n         nr--;\n         this.remaining--;\n-        next.add(new FileInputStream(this.files.get(pointer++)));\n+\n+        String fileName \u003d this.files.get(pointer++);\n+        DigitalObjectStream dos \u003d new DigitalObjectStream(fileName, new FileInputStream(fileName));\n+        next.add(dos);\n+\n       } catch (FileNotFoundException e) {\n         LOG.warn(\"File \u0027{}\u0027 not found: {}\", this.files.get(this.pointer), e.getMessage());\n       }"
        }
      ]
    }
  },
  {
    "name": "Fix floating-point error when DateProcessor parses UNIX",
    "url": "https://github.com/elastic/elasticsearch/pull/24947",
    "description": "DateProcessor\u0027s DateFormat UNIX format parser resulted in\r\na floating point rounding error when parsing certain stringed\r\nepoch times. Now Double.parseDouble is used, preserving the\r\nintended input.",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/2a6e6866bd6a25f469c07ba0766edec6272e93ac",
      "files": [
        {
          "file_name": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/DateFormat.java",
          "patch": "@@ -38,7 +38,7 @@\n     Unix {\n         @Override\n         Function\u003cString, DateTime\u003e getFunction(String format, DateTimeZone timezone, Locale locale) {\n-            return (date) -\u003e new DateTime((long)(Float.parseFloat(date) * 1000), timezone);\n+            return (date) -\u003e new DateTime((long)(Double.parseDouble(date) * 1000), timezone);\n         }\n     },\n     UnixMs {"
        },
        {
          "file_name": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateFormatTests.java",
          "patch": "@@ -50,6 +50,10 @@ public void testParseUnix() {\n         assertThat(DateFormat.Unix.getFunction(null, DateTimeZone.UTC, null).apply(\"1000.5\").getMillis(), equalTo(1000500L));\n     }\n \n+    public void testParseUnixWithMsPrecision() {\n+        assertThat(DateFormat.Unix.getFunction(null, DateTimeZone.UTC, null).apply(\"1495718015\").getMillis(), equalTo(1495718015000L));\n+    }\n+\n     public void testParseISO8601() {\n         assertThat(DateFormat.Iso8601.getFunction(null, DateTimeZone.UTC, null).apply(\"2001-01-01T00:00:00-0800\").getMillis(),\n                 equalTo(978336000000L));"
        }
      ]
    }
  },
  {
    "name": "Display correct offset on parser errors",
    "url": "https://github.com/neo4j/neo4j/pull/6750",
    "description": "On general syntax exception or parser errors, i.e. those that do not originate\nfrom semantic checking we must keep track of the original statement (including\npre-parser options) in order to always correctly show the offset in the error.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/neo4j/neo4j/commit/5f544eea4e1eb8971209cfac67b4e2c2836d839b",
      "files": [
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/CypherCompiler.scala",
          "patch": "@@ -26,9 +26,9 @@ import org.neo4j.cypher.internal.compiler.v2_2.helpers.LRUCache\n import org.neo4j.cypher.internal.compiler.v2_2.parser.{CypherParser, ParserMonitor}\n import org.neo4j.cypher.internal.compiler.v2_2.planner._\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.rewriter.LogicalPlanRewriter\n-import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.{DefaultQueryPlanner, CachedMetricsFactory, SimpleMetricsFactory}\n+import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.{CachedMetricsFactory, DefaultQueryPlanner, SimpleMetricsFactory}\n import org.neo4j.cypher.internal.compiler.v2_2.spi.PlanContext\n-import org.neo4j.cypher.internal.compiler.v2_2.tracing.rewriters.{RewriterStepSequencer, PlainRewriterStepSequencer}\n+import org.neo4j.cypher.internal.compiler.v2_2.tracing.rewriters.RewriterStepSequencer\n import org.neo4j.graphdb.GraphDatabaseService\n import org.neo4j.helpers.Clock\n \n@@ -125,6 +125,8 @@ object CypherCompilerFactory {\n   }\n }\n \n+case class RawQuery(rawStatement: String, pos: InputPosition)\n+\n case class CypherCompiler(parser: CypherParser,\n                           semanticChecker: SemanticChecker,\n                           executionPlanBuilder: ExecutionPlanBuilder,\n@@ -134,13 +136,13 @@ case class CypherCompiler(parser: CypherParser,\n                           cacheMonitor: CypherCacheFlushingMonitor[CacheAccessor[Statement, ExecutionPlan]],\n                           monitors: Monitors) {\n \n-  def planQuery(queryText: String, context: PlanContext, offset: Option[InputPosition] \u003d None): (ExecutionPlan, Map[String, Any]) \u003d\n-    planPreparedQuery(prepareQuery(queryText, queryText, offset), context)\n+  def planQuery(queryText: String, context: PlanContext, rawQuery: Option[RawQuery] \u003d None): (ExecutionPlan, Map[String, Any]) \u003d\n+    planPreparedQuery(prepareQuery(queryText, rawQuery), context)\n \n-  def prepareQuery(preparsedQueryText: String, rawQueryText: String, offset: Option[InputPosition] \u003d None): PreparedQuery \u003d {\n-    val parsedStatement \u003d parser.parse(preparsedQueryText, offset)\n+  def prepareQuery(preparsedQueryText: String, rawQuery: Option[RawQuery]): PreparedQuery \u003d {\n+    val parsedStatement \u003d parser.parse(preparsedQueryText, rawQuery)\n \n-    val mkException \u003d new SyntaxExceptionCreator(rawQueryText, offset)\n+    val mkException \u003d new SyntaxExceptionCreator(rawQuery)\n     val cleanedStatement: Statement \u003d parsedStatement.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val originalSemanticState \u003d semanticChecker.check(preparsedQueryText, cleanedStatement, mkException)\n "
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/SyntaxExceptionCreator.scala",
          "patch": "@@ -19,9 +19,11 @@\n  */\n package org.neo4j.cypher.internal.compiler.v2_2\n \n-class SyntaxExceptionCreator(queryText: String, preParserOffset: Option[InputPosition]) extends ((String, InputPosition) \u003d\u003e CypherException) {\n+class SyntaxExceptionCreator(rawQuery: Option[RawQuery]) extends ((String, InputPosition) \u003d\u003e CypherException) {\n+  def this(rawQuery: RawQuery) \u003d this(Some(rawQuery))\n+\n   override def apply(message: String, position: InputPosition): CypherException \u003d {\n-    val adjustedPosition \u003d position.withOffset(preParserOffset)\n-    new SyntaxException(s\"$message ($adjustedPosition)\", queryText, adjustedPosition.offset)\n+    val adjustedPosition \u003d position.withOffset(rawQuery.map(_.pos))\n+    new SyntaxException(s\"$message ($adjustedPosition)\", rawQuery.map(_.rawStatement).getOrElse(\"\"), adjustedPosition.offset)\n   }\n }"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/parser/Base.scala",
          "patch": "@@ -112,7 +112,7 @@ trait Base extends Parser {\n     ) memoMismatches) ~~\u003e (_.reduce(_ + \u0027`\u0027 + _))\n   }\n \n-  def parseOrThrow[T](input: String, initialOffset: Option[InputPosition], rule: Rule1[Seq[T]], monitor: Option[ParserMonitor[T]]): T \u003d {\n+  def parseOrThrow[T](input: String, rawQuery: Option[RawQuery], rule: Rule1[Seq[T]], monitor: Option[ParserMonitor[T]]): T \u003d {\n     monitor.foreach(_.startParsing(input))\n     val parsingResults \u003d ReportingParseRunner(rule).run(input)\n     parsingResults.result match {\n@@ -139,8 +139,8 @@ trait Base extends Parser {\n           }\n \n           val bufferPosition \u003d BufferPosition(error.getInputBuffer, error.getStartIndex)\n-          val position \u003d bufferPosition.withOffset(initialOffset)\n-          throw new SyntaxException(s\"$message ($position)\", input, position.offset)\n+          val position \u003d bufferPosition.withOffset(rawQuery.map(_.pos))\n+          throw new SyntaxException(s\"$message ($position)\", rawQuery.map(_.rawStatement).getOrElse(input), position.offset)\n         }\n \n         throw new ThisShouldNotHappenError(\"cleishm\", \"Parsing failed but no parse errors were provided\")"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/parser/CypherParser.scala",
          "patch": "@@ -30,8 +30,8 @@ class CypherParser(monitor: ParserMonitor[ast.Statement]) extends Parser\n \n \n   @throws(classOf[SyntaxException])\n-  def parse(queryText: String, offset: Option[InputPosition] \u003d None): ast.Statement \u003d\n-    parseOrThrow(queryText, offset, CypherParser.Statements, Some(monitor))\n+  def parse(queryText: String, rawQuery: Option[RawQuery] \u003d None): ast.Statement \u003d\n+    parseOrThrow(queryText, rawQuery, CypherParser.Statements, Some(monitor))\n }\n \n object CypherParser extends Parser with Statement with Expressions {"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/convert/plannerQuery/StatementConvertersTest.scala",
          "patch": "@@ -44,7 +44,7 @@ class StatementConvertersTest extends CypherFunSuite with LogicalPlanningTestSup\n \n   def buildPlannerQuery(query: String, cleanStatement: Boolean \u003d true): UnionQuery \u003d {\n     val ast \u003d parser.parse(query.replace(\"\\r\\n\", \"\\n\"))\n-    val mkException \u003d new SyntaxExceptionCreator(query, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(query, pos))\n     val cleanedStatement: Statement \u003d\n       if (cleanStatement)\n         ast.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/ExpandStarTest.scala",
          "patch": "@@ -106,7 +106,7 @@ class ExpandStarTest extends CypherFunSuite with AstConstructionTestSupport {\n   }\n \n   private def assertRewrite(originalQuery: String, expectedQuery: String) {\n-    val mkException \u003d new SyntaxExceptionCreator(originalQuery, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(originalQuery, pos))\n     val original \u003d parser.parse(originalQuery).endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val expected \u003d parser.parse(expectedQuery).endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n "
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/InlineProjectionsTest.scala",
          "patch": "@@ -21,7 +21,7 @@ package org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters\n \n import org.neo4j.cypher.internal.commons.CypherFunSuite\n import org.neo4j.cypher.internal.compiler.v2_2.planner.{AstRewritingTestSupport, CantHandleQueryException}\n-import org.neo4j.cypher.internal.compiler.v2_2.{SyntaxExceptionCreator, SemanticState, inSequence}\n+import org.neo4j.cypher.internal.compiler.v2_2.{RawQuery, SemanticState, SyntaxExceptionCreator, inSequence}\n import org.neo4j.helpers.Platforms\n \n class InlineProjectionsTest extends CypherFunSuite with AstRewritingTestSupport {\n@@ -404,7 +404,7 @@ class InlineProjectionsTest extends CypherFunSuite with AstRewritingTestSupport\n \n   private def ast(queryText: String) \u003d {\n     val parsed \u003d parser.parse(queryText)\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText,pos))\n     val normalized \u003d parsed.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val checkResult \u003d normalized.semanticCheck(SemanticState.clean)\n     normalized.endoRewrite(inSequence(expandStar(checkResult.state)))"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/IsolateAggregationTest.scala",
          "patch": "@@ -21,7 +21,7 @@ package org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters\n \n import org.neo4j.cypher.internal.commons.CypherFunSuite\n import org.neo4j.cypher.internal.compiler.v2_2.ast.AstConstructionTestSupport\n-import org.neo4j.cypher.internal.compiler.v2_2.{SyntaxExceptionCreator, inSequence}\n+import org.neo4j.cypher.internal.compiler.v2_2.{RawQuery, SyntaxExceptionCreator, inSequence}\n \n class IsolateAggregationTest extends CypherFunSuite with RewriteTest with AstConstructionTestSupport {\n   val rewriterUnderTest \u003d isolateAggregation\n@@ -151,7 +151,7 @@ class IsolateAggregationTest extends CypherFunSuite with RewriteTest with AstCon\n   }\n \n   override protected def parseForRewriting(queryText: String) \u003d {\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText, pos))\n     super.parseForRewriting(queryText).endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n   }\n }"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NamespacerTest.scala",
          "patch": "@@ -21,7 +21,7 @@ package org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters\n \n import org.neo4j.cypher.internal.commons.CypherFunSuite\n import org.neo4j.cypher.internal.compiler.v2_2._\n-import org.neo4j.cypher.internal.compiler.v2_2.ast.{AstConstructionTestSupport, ASTAnnotationMap, Identifier, Statement}\n+import org.neo4j.cypher.internal.compiler.v2_2.ast.{ASTAnnotationMap, AstConstructionTestSupport, Identifier, Statement}\n import org.neo4j.cypher.internal.compiler.v2_2.helpers.StatementHelper._\n import org.neo4j.cypher.internal.compiler.v2_2.parser.ParserFixture.parser\n import org.neo4j.cypher.internal.compiler.v2_2.planner.SemanticTable\n@@ -128,7 +128,7 @@ class NamespacerTest extends CypherFunSuite with AstConstructionTestSupport {\n \n   private def parseAndRewrite(queryText: String): Statement \u003d {\n     val parsedAst \u003d parser.parse(queryText)\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText, pos))\n     val cleanedAst \u003d parsedAst.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val (rewrittenAst, _, _) \u003d astRewriter.rewrite(queryText, cleanedAst, cleanedAst.semanticState)\n     rewrittenAst"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NormalizeReturnClausesTest.scala",
          "patch": "@@ -22,10 +22,9 @@ package org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters\n import org.neo4j.cypher.internal.commons.CypherFunSuite\n import org.neo4j.cypher.internal.compiler.v2_2._\n import org.neo4j.cypher.internal.compiler.v2_2.ast._\n-import org.neo4j.cypher.internal.compiler.v2_2.symbols._\n \n class NormalizeReturnClausesTest extends CypherFunSuite with RewriteTest with AstConstructionTestSupport {\n-  val mkException \u003d new SyntaxExceptionCreator(\"\u003cQuery\u003e\", Some(pos))\n+  val mkException \u003d new SyntaxExceptionCreator(RawQuery(\"\u003cQuery\u003e\", pos))\n   val rewriterUnderTest: Rewriter \u003d normalizeReturnClauses(mkException)\n \n   test(\"alias RETURN clause items\") {"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NormalizeWithClausesTest.scala",
          "patch": "@@ -24,7 +24,7 @@ import org.neo4j.cypher.internal.compiler.v2_2._\n import org.neo4j.cypher.internal.compiler.v2_2.ast.AstConstructionTestSupport\n \n class NormalizeWithClausesTest extends CypherFunSuite with RewriteTest with AstConstructionTestSupport {\n-  val mkException \u003d new SyntaxExceptionCreator(\"\u003cQuery\u003e\", Some(pos))\n+  val mkException \u003d new SyntaxExceptionCreator(RawQuery(\"\u003cQuery\u003e\", pos))\n   val rewriterUnderTest: Rewriter \u003d normalizeWithClauses(mkException)\n \n   test(\"ensure identifiers are aliased\") {"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/ProjectFreshSortExpressionsTest.scala",
          "patch": "@@ -198,7 +198,7 @@ class ProjectFreshSortExpressionsTest extends CypherFunSuite with RewriteTest wi\n \n   private def ast(queryText: String) \u003d {\n     val parsed \u003d parseForRewriting(queryText)\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText, pos))\n     val normalized \u003d parsed.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val checkResult \u003d normalized.semanticCheck(SemanticState.clean)\n     normalized.endoRewrite(inSequence(expandStar(checkResult.state)))"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/ProjectNamedPathsTest.scala",
          "patch": "@@ -22,7 +22,7 @@ package org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters\n import org.neo4j.cypher.internal.commons.CypherFunSuite\n import org.neo4j.cypher.internal.compiler.v2_2.ast._\n import org.neo4j.cypher.internal.compiler.v2_2.planner.AstRewritingTestSupport\n-import org.neo4j.cypher.internal.compiler.v2_2.{SemanticState, SyntaxExceptionCreator, inSequence}\n+import org.neo4j.cypher.internal.compiler.v2_2.{RawQuery, SemanticState, SyntaxExceptionCreator, inSequence}\n import org.neo4j.graphdb.Direction\n \n class ProjectNamedPathsTest extends CypherFunSuite with AstRewritingTestSupport {\n@@ -31,7 +31,7 @@ class ProjectNamedPathsTest extends CypherFunSuite with AstRewritingTestSupport\n \n   private def ast(queryText: String) \u003d {\n     val parsed \u003d parser.parse(queryText)\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText, pos))\n     val normalized \u003d parsed.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val checkResult \u003d normalized.semanticCheck(SemanticState.clean)\n     normalized.endoRewrite(inSequence(expandStar(checkResult.state)))"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/RewriteTest.scala",
          "patch": "@@ -34,7 +34,7 @@ trait RewriteTest {\n   protected def assertRewrite(originalQuery: String, expectedQuery: String) {\n     val original \u003d parseForRewriting(originalQuery)\n     val expected \u003d parseForRewriting(expectedQuery)\n-    val mkException \u003d new SyntaxExceptionCreator(originalQuery, Some(DummyPosition(0)))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(originalQuery, DummyPosition(0)))\n     semanticChecker.check(originalQuery, original, mkException)\n \n     val result \u003d rewrite(original)"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/LogicalPlanningTestSupport.scala",
          "patch": "@@ -28,12 +28,12 @@ import org.neo4j.cypher.internal.compiler.v2_2.parser.{CypherParser, ParserMonit\n import org.neo4j.cypher.internal.compiler.v2_2.planner.execution.PipeExecutionBuilderContext\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.Metrics._\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical._\n-import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.greedy.{GreedyPlanTable, expandsOrJoins, expandsOnly, GreedyQueryGraphSolver}\n+import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.greedy.{GreedyPlanTable, GreedyQueryGraphSolver, expandsOnly, expandsOrJoins}\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans._\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.rewriter.LogicalPlanRewriter\n import org.neo4j.cypher.internal.compiler.v2_2.planner.logical.steps.LogicalPlanProducer\n import org.neo4j.cypher.internal.compiler.v2_2.spi.{GraphStatistics, PlanContext}\n-import org.neo4j.cypher.internal.compiler.v2_2.tracing.rewriters.{ValidatingRewriterStepSequencer, RewriterStepSequencer}\n+import org.neo4j.cypher.internal.compiler.v2_2.tracing.rewriters.RewriterStepSequencer\n import org.neo4j.graphdb.Direction\n import org.neo4j.helpers.Clock\n \n@@ -161,7 +161,7 @@ trait LogicalPlanningTestSupport extends CypherTestSupport with AstConstructionT\n \n   def produceLogicalPlan(queryText: String)(implicit planner: CostBasedPipeBuilder, planContext: PlanContext): LogicalPlan \u003d {\n     val parsedStatement \u003d parser.parse(queryText)\n-    val mkException \u003d new SyntaxExceptionCreator(queryText, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryText, pos))\n     val semanticState \u003d semanticChecker.check(queryText, parsedStatement, mkException)\n     val (rewrittenStatement, _, postConditions) \u003d astRewriter.rewrite(queryText, parsedStatement, semanticState)\n     CostBasedPipeBuilder.rewriteStatement(rewrittenStatement, semanticState.scopeTree, SemanticTable(types \u003d semanticState.typeTable), rewriterSequencer, semanticChecker, postConditions, monitors.newMonitor[AstRewritingMonitor]()) match {"
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/LogicalPlanningTestSupport2.scala",
          "patch": "@@ -147,7 +147,7 @@ trait LogicalPlanningTestSupport2 extends CypherTestSupport with AstConstruction\n \n     def planFor(queryString: String): SemanticPlan \u003d {\n       val parsedStatement \u003d parser.parse(queryString)\n-      val mkException \u003d new SyntaxExceptionCreator(queryString, Some(pos))\n+      val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryString, pos))\n       val cleanedStatement: Statement \u003d parsedStatement.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n       val semanticState \u003d semanticChecker.check(queryString, cleanedStatement, mkException)\n       val (rewrittenStatement, _, postConditions) \u003d astRewriter.rewrite(queryString, cleanedStatement, semanticState)\n@@ -168,7 +168,7 @@ trait LogicalPlanningTestSupport2 extends CypherTestSupport with AstConstruction\n \n     def getLogicalPlanFor(queryString: String): (LogicalPlan, SemanticTable) \u003d {\n       val parsedStatement \u003d parser.parse(queryString)\n-      val mkException \u003d new SyntaxExceptionCreator(queryString, Some(pos))\n+      val mkException \u003d new SyntaxExceptionCreator(RawQuery(queryString, pos))\n       val semanticState \u003d semanticChecker.check(queryString, parsedStatement, mkException)\n       val (rewrittenStatement, _, postConditions) \u003d astRewriter.rewrite(queryString, parsedStatement, semanticState)\n "
        },
        {
          "file_name": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/logical/QueryGraphProducer.scala",
          "patch": "@@ -34,7 +34,7 @@ trait QueryGraphProducer extends MockitoSugar {\n   def producePlannerQueryForPattern(query: String): (PlannerQuery, SemanticTable) \u003d {\n     val q \u003d query + \" RETURN 1 AS Result\"\n     val ast \u003d parser.parse(q)\n-    val mkException \u003d new SyntaxExceptionCreator(query, Some(pos))\n+    val mkException \u003d new SyntaxExceptionCreator(RawQuery(query, pos))\n     val semanticChecker \u003d new SemanticChecker(mock[SemanticCheckMonitor])\n     val cleanedStatement: Statement \u003d ast.endoRewrite(inSequence(normalizeReturnClauses(mkException), normalizeWithClauses(mkException)))\n     val semanticState \u003d semanticChecker.check(query, cleanedStatement, mkException)"
        },
        {
          "file_name": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/CompatibilityFor2_2.scala",
          "patch": "@@ -154,7 +154,7 @@ trait CompatibilityFor2_2 {\n   implicit val indexSearchMonitor \u003d kernelMonitors.newMonitor(classOf[IndexSearchMonitor])\n \n   def produceParsedQuery(statementAsText: String, rawStatement: String, offset: InputPosition) \u003d new ParsedQuery {\n-    val preparedQueryForV_2_2 \u003d Try(compiler.prepareQuery(statementAsText, rawStatement, Some(offset)))\n+    val preparedQueryForV_2_2 \u003d Try(compiler.prepareQuery(statementAsText, Some(RawQuery(rawStatement,offset))))\n \n     def isPeriodicCommit \u003d preparedQueryForV_2_2.map(_.isPeriodicCommit).getOrElse(false)\n "
        },
        {
          "file_name": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/SemanticErrorAcceptanceTest.scala",
          "patch": "@@ -20,7 +20,8 @@\n package org.neo4j.cypher\n \n import org.neo4j.graphdb.QueryExecutionException\n-import collection.JavaConverters._\n+\n+import scala.collection.JavaConverters._\n \n class SemanticErrorAcceptanceTest extends ExecutionEngineFunSuite {\n \n@@ -547,6 +548,11 @@ class SemanticErrorAcceptanceTest extends ExecutionEngineFunSuite {\n \n   }\n \n+  test(\"position should be correct when using cypher options on general syntax exceptions\") {\n+    executeAndEnsureError(\"CYPHER planner\u003dcost REXTURN 1\",\n+                          \"Invalid input \u0027X\u0027: expected \u0027m/M\u0027 or \u0027t/T\u0027 (line 1, column 23 (offset: 22))\")\n+  }\n+\n   def executeAndEnsureError(query: String, expected: String) {\n     import org.neo4j.cypher.internal.compiler.v2_2.commands.expressions.StringHelper._\n "
        },
        {
          "file_name": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/CypherCompilerPerformanceTest.scala",
          "patch": "@@ -152,7 +152,7 @@ class CypherCompilerPerformanceTest extends GraphDatabaseFunSuite {\n \n   def plan(query: String): (Double, Double) \u003d {\n     val compiler \u003d createCurrentCompiler\n-    val (prepareTime, preparedQuery) \u003d measure(compiler.prepareQuery(query, query))\n+    val (prepareTime, preparedQuery) \u003d measure(compiler.prepareQuery(query, None))\n     val (planTime, _) \u003d graph.inTx {\n       measure(compiler.executionPlanBuilder.build(planContext, preparedQuery))\n     }"
        },
        {
          "file_name": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/CypherCompilerAstCacheAcceptanceTest.scala",
          "patch": "@@ -21,15 +21,15 @@ package org.neo4j.cypher.internal.compiler.v2_2\n \n import org.neo4j.cypher.GraphDatabaseTestSupport\n import org.neo4j.cypher.internal.commons.CypherFunSuite\n-import org.neo4j.cypher.internal.compatibility.{WrappedMonitors, StringInfoLogger}\n+import org.neo4j.cypher.internal.compatibility.{StringInfoLogger, WrappedMonitors}\n+import org.neo4j.cypher.internal.compiler.v2_2.ast.Statement\n import org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlan\n import org.neo4j.cypher.internal.compiler.v2_2.tracing.rewriters.RewriterStepSequencer\n import org.neo4j.graphdb.factory.GraphDatabaseSettings\n import org.neo4j.helpers.{Clock, FrozenClock}\n import org.neo4j.kernel.impl.util.StringLogger.DEV_NULL\n import org.neo4j.kernel.impl.util.TestLogger.LogCall\n import org.neo4j.kernel.impl.util.{StringLogger, TestLogger}\n-import org.neo4j.cypher.internal.compiler.v2_2.ast.Statement\n \n import scala.collection.Map\n \n@@ -147,7 +147,7 @@ class CypherCompilerAstCacheAcceptanceTest extends CypherFunSuite with GraphData\n     val compiler \u003d createCompiler(queryPlanTTL \u003d 0, clock \u003d clock, logger \u003d logger)\n     compiler.monitors.addMonitorListener(counter)\n     val query: String \u003d \"match (n:Person:Dog) return n\"\n-    val statement \u003d compiler.prepareQuery(query, query).statement\n+    val statement \u003d compiler.prepareQuery(query, None).statement\n \n     createLabeledNode(\"Dog\")\n     (0 until 50).foreach { _ \u003d\u003e createLabeledNode(\"Person\") }"
        }
      ]
    }
  },
  {
    "name": "Parse error no default omnipod for HBR-F Head",
    "url": "https://github.com/EmilyBjoerk/lsml/issues/661",
    "description": "java.lang.IllegalArgumentException: There exists no original omnipod for HBR-F at Head\r\n\tat org.lisoft.lsml.model.datacache.OmniPodDB.lookupOriginal(OmniPodDB.java:149)\r\n\tat org.lisoft.lsml.model.loadout.DefaultLoadoutFactory.produceEmpty(DefaultLoadoutFactory.java:168)\r\n\tat org.lisoft.lsml.view_fx.ChassisPage.setupTableData(ChassisPage.java:282)\r\n\tat org.lisoft.lsml.view_fx.ChassisPage.setupChassisTable(ChassisPage.java:172)\r\n\tat org.lisoft.lsml.view_fx.ChassisPage.\u003cinit\u003e(ChassisPage.java:152)\r\n\tat org.lisoft.lsml.view_fx.MainWindow.\u003cinit\u003e(MainWindow.java:77)\r\n\tat org.lisoft.lsml.view_fx.LiSongMechLab.lambda$7(LiSongMechLab.java:496)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)\r\n\tat com.sun.glass.ui.win.WinApplication._runLoop(Native Method)\r\n\tat com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)\r\n\tat java.lang.Thread.run(Thread.java:745)",
    "keywords": [
      "com",
      "lisoft lsml",
      "glass",
      "java",
      "lsml",
      "ui",
      "org",
      "chassispage",
      "winapplication",
      "sun",
      "view_fx",
      "lisoft"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/EmilyBjoerk/lsml/commit/ccb071ef7e737295f1f7a9225821f3fb9a7cb5a0",
      "files": [
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdAddItem.java",
          "patch": "@@ -30,11 +30,11 @@\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.util.CommandStack.Command;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdAutoAddItem.java",
          "patch": "@@ -32,13 +32,13 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.util.CommandStack.Command;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdChangeEngine.java",
          "patch": "@@ -23,9 +23,9 @@\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.HeatSink;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdDistributeArmour.java",
          "patch": "@@ -31,8 +31,8 @@\n import org.lisoft.lsml.model.chassi.ArmourSide;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.item.EngineType;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdItemBase.java",
          "patch": "@@ -27,9 +27,9 @@\n import org.lisoft.lsml.model.item.EngineType;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdLoadStock.java",
          "patch": "@@ -28,15 +28,15 @@\n import org.lisoft.lsml.model.datacache.OmniPodDB;\n import org.lisoft.lsml.model.datacache.StockLoadoutDB;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n import org.lisoft.lsml.model.loadout.StockLoadout;\n import org.lisoft.lsml.model.loadout.StockLoadout.StockComponent.ActuatorState;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n \n /**\n  * This operation loads a \u0027mechs stock {@link LoadoutStandard}.\n@@ -74,18 +74,12 @@ public void buildCommand() throws EquipException {\n \n             if (loadout instanceof LoadoutOmniMech) {\n                 final LoadoutOmniMech loadoutOmniMech \u003d (LoadoutOmniMech) loadout;\n-\n-                final OmniPod omnipod;\n-                if (stockComponent.getOmniPod() !\u003d null) {\n-                    omnipod \u003d OmniPodDB.lookup(stockComponent.getOmniPod());\n-                }\n-                else {\n-                    omnipod \u003d OmniPodDB.lookupOriginal(loadoutOmniMech.getChassis(), location);\n-                }\n-\n                 final ConfiguredComponentOmniMech omniComponent \u003d loadoutOmniMech.getComponent(location);\n \n-                addOp(new CmdSetOmniPod(messageBuffer, loadoutOmniMech, omniComponent, omnipod));\n+                stockComponent.getOmniPod().ifPresent(aOmniPodID -\u003e {\n+                    final OmniPod omnipod \u003d OmniPodDB.lookup(aOmniPodID);\n+                    addOp(new CmdSetOmniPod(messageBuffer, loadoutOmniMech, omniComponent, omnipod));\n+                });\n \n                 final ActuatorState actuatorState \u003d stockComponent.getActuatorState();\n                 if (actuatorState !\u003d null) {"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdRemoveItem.java",
          "patch": "@@ -24,8 +24,8 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdRemoveMatching.java",
          "patch": "@@ -27,9 +27,9 @@\n import org.lisoft.lsml.model.item.Ammunition;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetArmour.java",
          "patch": "@@ -24,11 +24,11 @@\n import org.lisoft.lsml.messages.MessageDelivery;\n import org.lisoft.lsml.messages.MessageXBar;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetArmourSymmetric.java",
          "patch": "@@ -23,9 +23,9 @@\n import org.lisoft.lsml.messages.MessageXBar;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n import org.lisoft.lsml.model.chassi.Location;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetGuidanceType.java",
          "patch": "@@ -25,12 +25,12 @@\n import org.lisoft.lsml.model.item.Ammunition;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.MissileWeapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetHeatSinkType.java",
          "patch": "@@ -24,9 +24,9 @@\n import org.lisoft.lsml.messages.UpgradesMessage.ChangeMsg;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;\n import org.lisoft.lsml.util.CommandStack.Command;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetMaxArmour.java",
          "patch": "@@ -21,8 +21,8 @@\n \n import org.lisoft.lsml.messages.MessageDelivery;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n /**\n  * This operation sets the maximum amount of armour possible on a mech with a given ratio between front and back."
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdSetOmniPod.java",
          "patch": "@@ -25,10 +25,10 @@\n import org.lisoft.lsml.model.chassi.OmniPod;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.JumpJet;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdStripArmour.java",
          "patch": "@@ -21,9 +21,9 @@\n \n import org.lisoft.lsml.messages.MessageDelivery;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdStripEquipment.java",
          "patch": "@@ -23,10 +23,10 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.CompositeCommand;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdToggleItem.java",
          "patch": "@@ -24,11 +24,11 @@\n import org.lisoft.lsml.messages.MessageDelivery;\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.util.CommandStack.Command;\n \n /**"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/command/CmdUpgradeBase.java",
          "patch": "@@ -20,10 +20,10 @@\n package org.lisoft.lsml.command;\n \n import org.lisoft.lsml.messages.MessageDelivery;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;\n import org.lisoft.lsml.util.CommandStack.Command;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/messages/ArmourMessage.java",
          "patch": "@@ -19,8 +19,8 @@\n //@formatter:on\n package org.lisoft.lsml.messages;\n \n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n public class ArmourMessage implements Message {\n     public enum Type {"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/messages/ItemMessage.java",
          "patch": "@@ -20,8 +20,8 @@\n package org.lisoft.lsml.messages;\n \n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n /**\n  * This message is sent when an item is added to or removed from the loadout."
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/messages/OmniPodMessage.java",
          "patch": "@@ -19,8 +19,8 @@\n //@formatter:on\n package org.lisoft.lsml.messages;\n \n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n public class OmniPodMessage implements Message {\n     public final ConfiguredComponent component;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/DynamicSlotDistributor.java",
          "patch": "@@ -20,9 +20,9 @@\n package org.lisoft.lsml.model;\n \n import org.lisoft.lsml.model.chassi.Location;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n \n /**\n  * This class handles distribution of dynamic slots from Ferro Fibrous armour and Endo Steel internal structure."
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/chassi/ChassisFilter.java",
          "patch": "@@ -140,7 +140,7 @@ else if (aLoadout instanceof LoadoutOmniMech) {\n                     return false;\n \n                 for (Entry\u003cLocation, OmniPod\u003e entry : pods.get().entrySet()) {\n-                    loadoutOmniMech.getComponent(entry.getKey()).setOmniPod(entry.getValue());\n+                    loadoutOmniMech.getComponent(entry.getKey()).changeOmniPod(entry.getValue());\n                 }\n \n                 return true;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/chassi/ChassisOmniMech.java",
          "patch": "@@ -20,8 +20,10 @@\n package org.lisoft.lsml.model.chassi;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.lisoft.lsml.model.datacache.OmniPodDB;\n import org.lisoft.lsml.model.item.Engine;\n@@ -214,12 +216,9 @@ public MovementProfile getMovementProfileMin() {\n      * @return The set of {@link Modifier} for the stock selection of {@link OmniPod}s.\n      */\n     public Collection\u003cModifier\u003e getStockModifiers() {\n-        final List\u003cModifier\u003e ans \u003d new ArrayList\u003c\u003e();\n-        for (final Location location : Location.values()) {\n-            final OmniPod omniPod \u003d OmniPodDB.lookupOriginal(this, location);\n-            ans.addAll(omniPod.getQuirks());\n-        }\n-        return ans;\n+        return Arrays.stream(Location.values()).map(location -\u003e OmniPodDB.lookupStock(this, location))\n+                .filter(pod -\u003e pod.isPresent()).flatMap(pod -\u003e pod.get().getQuirks().stream())\n+                .collect(Collectors.toList());\n     }\n \n     @Override\n@@ -236,9 +235,10 @@ public boolean isAllowed(Item aItem) {\n \n         for (final Location location : Location.values()) {\n             final List\u003cCollection\u003cModifier\u003e\u003e group \u003d new ArrayList\u003c\u003e();\n+            final ComponentOmniMech component \u003d getComponent(location);\n \n-            if (getComponent(location).hasFixedOmniPod()) {\n-                group.add(OmniPodDB.lookupOriginal(this, location).getQuirks());\n+            if (component.hasFixedOmniPod()) {\n+                group.add(component.getFixedOmniPod().getQuirks());\n             }\n             else {\n                 for (final OmniPod omniPod : OmniPodDB.lookup(this, location)) {"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/chassi/OmniPod.java",
          "patch": "@@ -223,19 +223,6 @@ public boolean isCompatible(ChassisOmniMech aChassis) {\n         return aChassis.getSeriesName().toUpperCase().equals(series);\n     }\n \n-    /**\n-     * Tests if this {@link OmniPod} is the stock/original {@link OmniPod} on a given {@link Chassis}.\n-     *\n-     * @param aChassisBase\n-     *            The {@link Chassis} to test.\n-     * @return \u003ccode\u003etrue\u003c/code\u003e if this {@link OmniPod} is original on the given {@link Chassis}.\n-     */\n-    public boolean isOriginalForChassis(Chassis aChassisBase) {\n-        // Handle variations without a proper variation tag for now.\n-        final String name \u003d aChassisBase.getMwoName().toUpperCase();\n-        return chassis.equals(name) || chassis.equals(name.substring(0, name.length() - 1));\n-    }\n-\n     @Override\n     public String toString() {\n         return getChassisName();"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/chassi/OmniPodSelector.java",
          "patch": "@@ -33,7 +33,7 @@\n \n /**\n  * Determines {@link OmniPod}s for a {@link LoadoutOmniMech} so that the given requirements on hard points is met.\n- * \n+ *\n  * @author Emily Björk\n  */\n public class OmniPodSelector {\n@@ -58,7 +58,7 @@\n \n         /**\n          * Creates a root partial selection to start searching for. Also defines the constraints.\n-         * \n+         *\n          * @param aAllowedPods\n          *            The pods that are allowed to be selected (preferably (but not necessarily) pruned from pods that\n          *            do not affect the constraints).\n@@ -93,11 +93,11 @@ private PartialSelection(PartialSelection aPrevious, int aLocation, int aPod) {\n             allowedPods \u003d aPrevious.allowedPods;\n \n             currentState \u003d new HashMap\u003c\u003e(aPrevious.currentState);\n-            Location key \u003d LOCATION_ORDER[location];\n+            final Location key \u003d LOCATION_ORDER[location];\n             if (aPrevious.location \u003d\u003d location) {\n                 // Change pod\n-                OmniPod oldPod \u003d currentState.get(key);\n-                OmniPod newPod \u003d allowedPods.get(key).get(pod);\n+                final OmniPod oldPod \u003d currentState.get(key);\n+                final OmniPod newPod \u003d allowedPods.get(key).get(pod);\n                 remainingEnergy \u003d aPrevious.remainingEnergy - newPod.getHardPointCount(HardPointType.ENERGY)\n                         + oldPod.getHardPointCount(HardPointType.ENERGY);\n                 remainingMissile \u003d aPrevious.remainingMissile - newPod.getHardPointCount(HardPointType.MISSILE)\n@@ -111,7 +111,7 @@ private PartialSelection(PartialSelection aPrevious, int aLocation, int aPod) {\n             }\n             else {\n                 // Add new pod\n-                OmniPod newPod \u003d allowedPods.get(key).get(pod);\n+                final OmniPod newPod \u003d allowedPods.get(key).get(pod);\n                 remainingEnergy \u003d aPrevious.remainingEnergy - newPod.getHardPointCount(HardPointType.ENERGY);\n                 remainingMissile \u003d aPrevious.remainingMissile - newPod.getHardPointCount(HardPointType.MISSILE);\n                 remainingBallistic \u003d aPrevious.remainingBallistic - newPod.getHardPointCount(HardPointType.BALLISTIC);\n@@ -122,6 +122,40 @@ private PartialSelection(PartialSelection aPrevious, int aLocation, int aPod) {\n         }\n \n         @Override\n+        public boolean accept() {\n+            return remainingBallistic \u003c\u003d 0 \u0026\u0026 //\n+                    remainingMissile \u003c\u003d 0 \u0026\u0026 //\n+                    remainingEnergy \u003c\u003d 0 \u0026\u0026 //\n+                    remainingJumpJet \u003c\u003d 0 \u0026\u0026 //\n+                    remainingECM \u003c\u003d 0;\n+        }\n+\n+        @Override\n+        public Optional\u003cPartialSelection\u003e first() {\n+            int newLocation \u003d location;\n+            final int newPod \u003d 0;\n+            List\u003cOmniPod\u003e allowed \u003d null;\n+            do {\n+                newLocation \u003d newLocation + 1;\n+                if (newLocation \u003e\u003d LOCATION_ORDER.length) {\n+                    return Optional.empty();\n+                }\n+                allowed \u003d allowedPods.get(LOCATION_ORDER[newLocation]);\n+            } while (allowed.isEmpty());\n+            return Optional.of(new PartialSelection(this, newLocation, newPod));\n+        }\n+\n+        @Override\n+        public Optional\u003cPartialSelection\u003e next() {\n+            final List\u003cOmniPod\u003e allowed \u003d allowedPods.get(LOCATION_ORDER[location]);\n+            final int newPod \u003d pod + 1;\n+            if (newPod \u003c allowed.size()) {\n+                return Optional.of(new PartialSelection(this, location, newPod));\n+            }\n+            return Optional.empty();\n+        }\n+\n+        @Override\n         public boolean reject() {\n             int maxPossibleEnergy \u003d 0;\n             int maxPossibleMissile \u003d 0;\n@@ -130,14 +164,14 @@ public boolean reject() {\n             int maxPossibleEcm \u003d 0;\n \n             for (int remLoc \u003d location + 1; remLoc \u003c LOCATION_ORDER.length; ++remLoc) {\n-                List\u003cOmniPod\u003e allowed \u003d allowedPods.get(LOCATION_ORDER[remLoc]);\n+                final List\u003cOmniPod\u003e allowed \u003d allowedPods.get(LOCATION_ORDER[remLoc]);\n                 int localMaxPossibleEnergy \u003d 0;\n                 int localMaxPossibleMissile \u003d 0;\n                 int localMaxPossibleBallistic \u003d 0;\n                 int localMaxPossibleJumpJet \u003d 0;\n                 int localMaxPossibleEcm \u003d 0;\n \n-                for (OmniPod omniPod : allowed) {\n+                for (final OmniPod omniPod : allowed) {\n                     localMaxPossibleBallistic \u003d max(localMaxPossibleBallistic,\n                             omniPod.getHardPointCount(HardPointType.BALLISTIC));\n                     localMaxPossibleEnergy \u003d max(localMaxPossibleEnergy,\n@@ -160,62 +194,28 @@ public boolean reject() {\n                     maxPossibleJumpJet \u003c remainingJumpJet || //\n                     maxPossibleEcm \u003c remainingECM;\n         }\n-\n-        @Override\n-        public boolean accept() {\n-            return remainingBallistic \u003c\u003d 0 \u0026\u0026 //\n-                    remainingMissile \u003c\u003d 0 \u0026\u0026 //\n-                    remainingEnergy \u003c\u003d 0 \u0026\u0026 //\n-                    remainingJumpJet \u003c\u003d 0 \u0026\u0026 //\n-                    remainingECM \u003c\u003d 0;\n-        }\n-\n-        @Override\n-        public Optional\u003cPartialSelection\u003e first() {\n-            int newLocation \u003d location;\n-            int newPod \u003d 0;\n-            List\u003cOmniPod\u003e allowed \u003d null;\n-            do {\n-                newLocation \u003d newLocation + 1;\n-                if (newLocation \u003e\u003d LOCATION_ORDER.length) {\n-                    return Optional.empty();\n-                }\n-                allowed \u003d allowedPods.get(LOCATION_ORDER[newLocation]);\n-            } while (allowed.isEmpty());\n-            return Optional.of(new PartialSelection(this, newLocation, newPod));\n-        }\n-\n-        @Override\n-        public Optional\u003cPartialSelection\u003e next() {\n-            List\u003cOmniPod\u003e allowed \u003d allowedPods.get(LOCATION_ORDER[location]);\n-            int newPod \u003d pod + 1;\n-            if (newPod \u003c allowed.size()) {\n-                return Optional.of(new PartialSelection(this, location, newPod));\n-            }\n-            return Optional.empty();\n-        }\n     }\n \n     private final BackTrackingSolver\u003cPartialSelection\u003e solver \u003d new BackTrackingSolver\u003c\u003e();\n \n     public Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e selectPods(ChassisOmniMech aChassis, int aWantedEnergy, int aWantedMissile,\n             int aWantedBallistic, int aWantedJumpJet, boolean aWantEcm) {\n \n-        Map\u003cLocation, List\u003cOmniPod\u003e\u003e allowedPods \u003d new HashMap\u003c\u003e();\n-        for (Location location : Location.values()) {\n+        final Map\u003cLocation, List\u003cOmniPod\u003e\u003e allowedPods \u003d new HashMap\u003c\u003e();\n+        for (final Location location : Location.values()) {\n             allowedPods.put(location, OmniPodDB.lookup(aChassis, location));\n         }\n \n         // Discount hard points in the CT\n-        OmniPod ct \u003d OmniPodDB.lookupOriginal(aChassis, Location.CenterTorso);\n-        int energy \u003d aWantedEnergy - ct.getHardPointCount(HardPointType.ENERGY);\n-        int missile \u003d aWantedMissile - ct.getHardPointCount(HardPointType.MISSILE);\n-        int ballistic \u003d aWantedBallistic - ct.getHardPointCount(HardPointType.BALLISTIC);\n-        int jumpJet \u003d aWantedJumpJet - aChassis.getFixedJumpJets();\n-        boolean ecm \u003d ct.getHardPointCount(HardPointType.ECM) \u003e 0 ? false : aWantEcm;\n-\n-        PartialSelection root \u003d new PartialSelection(allowedPods, energy, missile, ballistic, jumpJet, ecm);\n-        Optional\u003cPartialSelection\u003e ans \u003d solver.solveOne(root);\n+        final OmniPod ct \u003d aChassis.getComponent(Location.CenterTorso).getFixedOmniPod();\n+        final int energy \u003d aWantedEnergy - ct.getHardPointCount(HardPointType.ENERGY);\n+        final int missile \u003d aWantedMissile - ct.getHardPointCount(HardPointType.MISSILE);\n+        final int ballistic \u003d aWantedBallistic - ct.getHardPointCount(HardPointType.BALLISTIC);\n+        final int jumpJet \u003d aWantedJumpJet - aChassis.getFixedJumpJets();\n+        final boolean ecm \u003d ct.getHardPointCount(HardPointType.ECM) \u003e 0 ? false : aWantEcm;\n+\n+        final PartialSelection root \u003d new PartialSelection(allowedPods, energy, missile, ballistic, jumpJet, ecm);\n+        final Optional\u003cPartialSelection\u003e ans \u003d solver.solveOne(root);\n         if (ans.isPresent()) {\n             return Optional.of(ans.get().currentState);\n         }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/datacache/DataCache.java",
          "patch": "@@ -814,7 +814,7 @@ else if (moduleID \u003d\u003d 4048) { // ENHANCED NARC - LTD (Clan Only)\n                         items.addAll(stockComponent.getItems());\n                         armourFront \u003d isRear ? stockComponent.getArmourFront() : armourFront;\n                         armourBack \u003d isRear ? armourBack : stockComponent.getArmourBack();\n-                        omniPod \u003d stockComponent.getOmniPod();\n+                        omniPod \u003d stockComponent.getOmniPod().orElse(null);\n                         it.remove();\n                         break;\n                     }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/datacache/OmniPodDB.java",
          "patch": "@@ -25,11 +25,15 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.TreeMap;\n \n+import org.lisoft.lsml.model.chassi.Chassis;\n import org.lisoft.lsml.model.chassi.ChassisOmniMech;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.chassi.OmniPod;\n+import org.lisoft.lsml.model.loadout.StockLoadout;\n+import org.lisoft.lsml.model.loadout.StockLoadout.StockComponent;\n \n /**\n  * This class acts as a database for all {@link OmniPod}s.\n@@ -40,6 +44,8 @@\n     private static final Map\u003cString, List\u003cOmniPod\u003e\u003e series2pod;\n     private static final Map\u003cInteger, OmniPod\u003e id2pod;\n \n+    private static final Map\u003cString, OmniPod\u003e chassiLocation2stock;\n+\n     /**\n      * A decision has been made to rely on static initializers for *DB classes. The motivation is that all items are\n      * immutable, and this is the only way that allows providing global item constants such as ItemDB.AMS.\n@@ -57,7 +63,6 @@\n         id2pod \u003d new TreeMap\u003c\u003e();\n \n         for (final OmniPod omniPod : dataCache.getOmniPods()) {\n-\n             final String series \u003d omniPod.getChassisSeries();\n \n             List\u003cOmniPod\u003e list \u003d series2pod.get(canonize(series));\n@@ -69,6 +74,16 @@\n \n             id2pod.put(omniPod.getMwoId(), omniPod);\n         }\n+\n+        chassiLocation2stock \u003d new HashMap\u003c\u003e();\n+        for (final StockLoadout stock : StockLoadoutDB.all()) {\n+            for (final StockComponent comp : stock.getComponents()) {\n+                comp.getOmniPod().ifPresent(pod -\u003e {\n+                    final String key \u003d chassiLocationOf(stock.getChassis(), comp.getLocation());\n+                    chassiLocation2stock.put(key, id2pod.get(pod));\n+                });\n+            }\n+        }\n     }\n \n     /**\n@@ -120,36 +135,15 @@ public static OmniPod lookup(int aId) {\n         return ans;\n     }\n \n-    /**\n-     * @param aChassis\n-     *            The chassis to get the pods for.\n-     * @return A {@List} of the {@link OmniPod}s that are \"original\" to the given chassis.\n-     */\n-    public static List\u003cOmniPod\u003e lookupOriginal(ChassisOmniMech aChassis) {\n-        final List\u003cOmniPod\u003e ans \u003d new ArrayList\u003c\u003e();\n-        for (final Location location : Location.values()) {\n-            ans.add(OmniPodDB.lookupOriginal(aChassis, location));\n-        }\n-        return ans;\n-    }\n-\n-    /**\n-     * @param aChassis\n-     *            The chassis to get the pod for.\n-     * @param aLocation\n-     *            The location to get the pod for.\n-     * @return The {@link OmniPod}s that is \"original\" to the given chassis and {@link Location}.\n-     */\n-    public static OmniPod lookupOriginal(ChassisOmniMech aChassis, Location aLocation) {\n-        for (final OmniPod omniPod : lookup(aChassis.getSeriesName(), aLocation)) {\n-            if (omniPod.isOriginalForChassis(aChassis)) {\n-                return omniPod;\n-            }\n-        }\n-        throw new IllegalArgumentException(\"There exists no original omnipod for \" + aChassis + \" at \" + aLocation);\n+    public static Optional\u003cOmniPod\u003e lookupStock(ChassisOmniMech aChassis, Location aLocation) {\n+        return Optional.ofNullable(chassiLocation2stock.get(chassiLocationOf(aChassis, aLocation)));\n     }\n \n     private static String canonize(String aKey) {\n         return aKey.toUpperCase();\n     }\n+\n+    private final static String chassiLocationOf(Chassis aChassis, Location aLocation) {\n+        return aChassis.getMwoName() + aLocation.shortName();\n+    }\n }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/datacache/StockLoadoutDB.java",
          "patch": "@@ -20,6 +20,7 @@\n package org.lisoft.lsml.model.datacache;\n \n import java.io.IOException;\n+import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -29,28 +30,13 @@\n \n /**\n  * A database class that holds descriptions of all stock loadouts.\n- * \n+ *\n  * @author Emily Björk\n  */\n public class StockLoadoutDB {\n     private static final Map\u003cChassis, StockLoadout\u003e stockloadouts;\n \n     /**\n-     * Will find the stock loadout matching the given {@link ChassisStandard}.\n-     * \n-     * @param aChassis\n-     *            The {@link ChassisStandard} to get the stock loadout for.\n-     * @return A {@link StockLoadout} description of the stock loadout.\n-     */\n-    public static StockLoadout lookup(Chassis aChassis) {\n-        StockLoadout ans \u003d stockloadouts.get(aChassis);\n-        if (null \u003d\u003d ans) {\n-            throw new IllegalArgumentException(\"No stock loadouts found for: \" + aChassis);\n-        }\n-        return ans;\n-    }\n-\n-    /**\n      * A decision has been made to rely on static initializers for *DB classes. The motivation is that all items are\n      * immutable, and this is the only way that allows providing global item constans such as ItemDB.AMS.\n      */\n@@ -59,13 +45,32 @@ public static StockLoadout lookup(Chassis aChassis) {\n         try {\n             dataCache \u003d DataCache.getInstance();\n         }\n-        catch (IOException e) {\n+        catch (final IOException e) {\n             throw new RuntimeException(e); // Promote to unchecked. This is a critical failure.\n         }\n \n         stockloadouts \u003d new HashMap\u003c\u003e();\n-        for (StockLoadout loadout : dataCache.getStockLoadouts()) {\n+        for (final StockLoadout loadout : dataCache.getStockLoadouts()) {\n             stockloadouts.put(loadout.getChassis(), loadout);\n         }\n     }\n+\n+    public static Collection\u003cStockLoadout\u003e all() {\n+        return stockloadouts.values();\n+    }\n+\n+    /**\n+     * Will find the stock loadout matching the given {@link ChassisStandard}.\n+     *\n+     * @param aChassis\n+     *            The {@link ChassisStandard} to get the stock loadout for.\n+     * @return A {@link StockLoadout} description of the stock loadout.\n+     */\n+    public static StockLoadout lookup(Chassis aChassis) {\n+        final StockLoadout ans \u003d stockloadouts.get(aChassis);\n+        if (null \u003d\u003d ans) {\n+            throw new IllegalArgumentException(\"No stock loadouts found for: \" + aChassis);\n+        }\n+        return ans;\n+    }\n }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/LoadoutCoderV1.java",
          "patch": "@@ -42,10 +42,10 @@\n import org.lisoft.lsml.model.export.garage.CompatibilityHelper;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/LoadoutCoderV2.java",
          "patch": "@@ -44,10 +44,10 @@\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/LoadoutCoderV3.java",
          "patch": "@@ -51,14 +51,14 @@\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.PilotModule;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder.ErrorReportingCallback;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/SmurfyXML.java",
          "patch": "@@ -27,11 +27,11 @@\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.upgrades.Upgrade;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/garage/ConfiguredComponentConverter.java",
          "patch": "@@ -29,12 +29,12 @@\n import org.lisoft.lsml.model.datacache.OmniPodDB;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n \n import com.thoughtworks.xstream.converters.Converter;\n import com.thoughtworks.xstream.converters.MarshallingContext;\n@@ -123,7 +123,7 @@ private void parseV2(HierarchicalStreamReader aReader, UnmarshallingContext aCon\n             LoadoutOmniMech omniMech \u003d ((LoadoutOmniMech) loadout);\n             if (!omniMech.getComponent(partType).getInternalComponent().hasFixedOmniPod()) {\n                 OmniPod omnipod \u003d OmniPodDB.lookup(Integer.parseInt(aReader.getAttribute(\"omnipod\")));\n-                omniMech.getComponent(partType).setOmniPod(omnipod);\n+                omniMech.getComponent(partType).changeOmniPod(omnipod);\n             }\n         }\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/export/garage/LoadoutConverter.java",
          "patch": "@@ -31,15 +31,15 @@\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n import org.lisoft.lsml.model.item.PilotModule;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder.ErrorReportingCallback;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n import org.lisoft.lsml.model.loadout.WeaponGroups;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.Efficiencies;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;\n import org.lisoft.lsml.model.upgrades.Upgrades;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/garage/GarageSerialiser.java",
          "patch": "@@ -34,9 +34,9 @@\n import org.lisoft.lsml.model.export.garage.UpgradesConverter;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.loadout.LoadoutBuilder.ErrorReportingCallback;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n \n import com.thoughtworks.xstream.XStream;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/item/Engine.java",
          "patch": "@@ -27,7 +27,7 @@\n import org.lisoft.lsml.model.chassi.HardPointType;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.datacache.ModifiersDB;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.modifiers.Attribute;\n import org.lisoft.lsml.model.modifiers.Modifier;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/ConfiguredComponent.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -37,10 +37,7 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.LoadoutStandard;\n import org.lisoft.lsml.model.modifiers.Attribute;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.modifiers.ModifierDescription;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/ConfiguredComponentOmniMech.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -34,81 +34,172 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.Weapon;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n \n /**\n  * This class models a configured {@link OmniPod} on an {@link LoadoutOmniMech}.\n- * \n+ *\n  * @author Emily Björk\n  */\n public class ConfiguredComponentOmniMech extends ConfiguredComponent {\n     private OmniPod omniPod;\n     private final Map\u003cItem, Boolean\u003e toggleStates \u003d new HashMap\u003c\u003e();\n \n+    public ConfiguredComponentOmniMech(ComponentOmniMech aComponentOmniMech, boolean aManualArmour) {\n+        super(aComponentOmniMech, aManualArmour);\n+        if (!aComponentOmniMech.hasFixedOmniPod()) {\n+            throw new IllegalArgumentException(\"Component without fixed omnipod was constructed without omnipod!\");\n+        }\n+\n+        setOmniPod(aComponentOmniMech.getFixedOmniPod());\n+    }\n+\n     public ConfiguredComponentOmniMech(ComponentOmniMech aComponentOmniMech, boolean aManualArmour, OmniPod aOmniPod) {\n         super(aComponentOmniMech, aManualArmour);\n+\n+        if (aComponentOmniMech.hasFixedOmniPod()) {\n+            throw new IllegalArgumentException(\"Component with fixed omnipod was constructed with omnipod!\");\n+        }\n         setOmniPod(aOmniPod);\n     }\n \n     public ConfiguredComponentOmniMech(ConfiguredComponentOmniMech aConfiguredOmnipod) {\n         super(aConfiguredOmnipod);\n-        setOmniPod(aConfiguredOmnipod.omniPod);\n+        changeOmniPod(aConfiguredOmnipod.omniPod);\n         toggleStates.putAll(aConfiguredOmnipod.toggleStates);\n     }\n \n     @Override\n-    public ComponentOmniMech getInternalComponent() {\n-        return (ComponentOmniMech) super.getInternalComponent();\n+    public EquipResult canEquip(Item aItem) {\n+        final EquipResult superResult \u003d super.canEquip(aItem);\n+        if (superResult !\u003d EquipResult.SUCCESS) {\n+            return superResult;\n+        }\n+\n+        int slotComp \u003d 0;\n+        if (aItem instanceof Weapon \u0026\u0026 ((Weapon) aItem).isLargeBore()) {\n+            if (getToggleState(ItemDB.HA)) {\n+                slotComp++;\n+            }\n+            if (getToggleState(ItemDB.LAA)) {\n+                slotComp++;\n+            }\n+        }\n+\n+        if (getSlotsFree() + slotComp \u003c aItem.getSlots()) {\n+            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotEnoughSlots);\n+        }\n+        return EquipResult.SUCCESS;\n     }\n \n-    @Override\n-    public int getHardPointCount(HardPointType aHardpointType) {\n-        return omniPod.getHardPointCount(aHardpointType);\n+    /**\n+     * Checks local conditions if the given item can be toggled on. The loadout must have enough free slots and tonnage\n+     * globally too which is up to the caller to make sure.\n+     *\n+     * @param aItem\n+     *            The item to try to enable.\n+     * @return \u003ccode\u003etrue\u003c/code\u003e if the item can be toggled on.\n+     */\n+    public EquipResult canToggleOn(Item aItem) {\n+        if (!toggleStates.containsKey(aItem)) {\n+            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotToggleable);\n+        }\n+\n+        if (getSlotsFree() \u003c 1) {\n+            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotEnoughSlots);\n+        }\n+\n+        boolean removeHALAA \u003d false;\n+\n+        for (final Item item : getItemsEquipped()) {\n+            if (item instanceof Weapon \u0026\u0026 ((Weapon) item).isLargeBore()) {\n+                removeHALAA \u003d true;\n+                break;\n+            }\n+        }\n+\n+        if (!removeHALAA) {\n+            for (final Item item : getInternalComponent().getFixedItems()) {\n+                if (item instanceof Weapon \u0026\u0026 ((Weapon) item).isLargeBore()) {\n+                    removeHALAA \u003d true;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (removeHALAA) {\n+            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.LargeBoreWeaponPresent);\n+        }\n+\n+        if (aItem \u003d\u003d ItemDB.HA) {\n+            if (!toggleStates.get(ItemDB.LAA)) {\n+                return EquipResult.make(EquipResultType.LaaBeforeHa);\n+            }\n+        }\n+        return EquipResult.SUCCESS; // This can only be LAA, which can always be enabled if there is at least one free\n+                                    // slot locally and globally\n     }\n \n-    @Override\n-    public int hashCode() {\n-        final int prime \u003d 31;\n-        int result \u003d super.hashCode();\n-        result \u003d prime * result + ((omniPod \u003d\u003d null) ? 0 : omniPod.hashCode());\n-        result \u003d prime * result + ((toggleStates \u003d\u003d null) ? 0 : toggleStates.hashCode());\n-        return result;\n+    /**\n+     * @param aOmniPod\n+     *            The {@link OmniPod} to set for this component.\n+     */\n+    public void changeOmniPod(OmniPod aOmniPod) {\n+        if (getInternalComponent().hasFixedOmniPod()) {\n+            throw new UnsupportedOperationException(\"Cannot change omnipod on a component with a fixed omnipod.\");\n+        }\n+        setOmniPod(aOmniPod);\n     }\n \n     @Override\n     public boolean equals(Object obj) {\n-        if (this \u003d\u003d obj)\n+        if (this \u003d\u003d obj) {\n             return true;\n-        if (!super.equals(obj))\n+        }\n+        if (!super.equals(obj)) {\n             return false;\n-        if (getClass() !\u003d obj.getClass())\n+        }\n+        if (getClass() !\u003d obj.getClass()) {\n             return false;\n-        ConfiguredComponentOmniMech other \u003d (ConfiguredComponentOmniMech) obj;\n-        if (omniPod !\u003d other.omniPod)\n+        }\n+        final ConfiguredComponentOmniMech other \u003d (ConfiguredComponentOmniMech) obj;\n+        if (omniPod !\u003d other.omniPod) {\n             return false;\n-        if (!toggleStates.equals(other.toggleStates))\n+        }\n+        if (!toggleStates.equals(other.toggleStates)) {\n             return false;\n+        }\n         return true;\n     }\n \n     @Override\n+    public int getHardPointCount(HardPointType aHardpointType) {\n+        return omniPod.getHardPointCount(aHardpointType);\n+    }\n+\n+    @Override\n     public Collection\u003cHardPoint\u003e getHardPoints() {\n         return omniPod.getHardPoints();\n     }\n \n     @Override\n+    public ComponentOmniMech getInternalComponent() {\n+        return (ComponentOmniMech) super.getInternalComponent();\n+    }\n+\n+    @Override\n     public List\u003cItem\u003e getItemsFixed() {\n-        List\u003cItem\u003e fixed \u003d new ArrayList\u003c\u003e(getInternalComponent().getFixedItems());\n+        final List\u003cItem\u003e fixed \u003d new ArrayList\u003c\u003e(getInternalComponent().getFixedItems());\n         fixed.addAll(getOmniPod().getFixedItems());\n \n-        Boolean laa \u003d toggleStates.get(ItemDB.LAA);\n-        if (laa !\u003d null \u0026\u0026 laa \u003d\u003d true)\n+        final Boolean laa \u003d toggleStates.get(ItemDB.LAA);\n+        if (laa !\u003d null \u0026\u0026 laa \u003d\u003d true) {\n             fixed.add(ItemDB.LAA);\n-        Boolean ha \u003d toggleStates.get(ItemDB.HA);\n-        if (ha !\u003d null \u0026\u0026 ha \u003d\u003d true)\n+        }\n+        final Boolean ha \u003d toggleStates.get(ItemDB.HA);\n+        if (ha !\u003d null \u0026\u0026 ha \u003d\u003d true) {\n             fixed.add(ItemDB.HA);\n+        }\n         return fixed;\n     }\n \n@@ -120,33 +211,12 @@ public OmniPod getOmniPod() {\n     }\n \n     @Override\n-    public EquipResult canEquip(Item aItem) {\n-        EquipResult superResult \u003d super.canEquip(aItem);\n-        if (superResult !\u003d EquipResult.SUCCESS) {\n-            return superResult;\n-        }\n-\n-        int slotComp \u003d 0;\n-        if (aItem instanceof Weapon \u0026\u0026 ((Weapon) aItem).isLargeBore()) {\n-            if (getToggleState(ItemDB.HA))\n-                slotComp++;\n-            if (getToggleState(ItemDB.LAA))\n-                slotComp++;\n-        }\n-\n-        if (getSlotsFree() + slotComp \u003c aItem.getSlots()) {\n-            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotEnoughSlots);\n-        }\n-        return EquipResult.SUCCESS;\n-    }\n-\n-    @Override\n     public int getSlotsUsed() {\n         int slots \u003d 0;\n         int engineHsSlots \u003d 0;\n         int numHs \u003d 0;\n         int hsSize \u003d 0;\n-        for (Item item : getItemsFixed()) {\n+        for (final Item item : getItemsFixed()) {\n             slots +\u003d item.getSlots();\n             if (item instanceof Engine) {\n                 engineHsSlots \u003d ((Engine) item).getNumHeatsinkSlots();\n@@ -156,7 +226,7 @@ else if (item instanceof HeatSink) {\n                 numHs++;\n             }\n         }\n-        for (Item item : getItemsEquipped()) {\n+        for (final Item item : getItemsEquipped()) {\n             slots +\u003d item.getSlots();\n             if (item instanceof Engine) {\n                 engineHsSlots \u003d ((Engine) item).getNumHeatsinkSlots();\n@@ -171,98 +241,56 @@ else if (item instanceof HeatSink) {\n     }\n \n     /**\n-     * Checks local conditions if the given item can be toggled on. The loadout must have enough free slots and tonnage\n-     * globally too which is up to the caller to make sure.\n-     * \n-     * @param aItem\n-     *            The item to try to enable.\n-     * @return \u003ccode\u003etrue\u003c/code\u003e if the item can be toggled on.\n-     */\n-    public EquipResult canToggleOn(Item aItem) {\n-        if (!toggleStates.containsKey(aItem)) {\n-            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotToggleable);\n-        }\n-\n-        if (getSlotsFree() \u003c 1)\n-            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.NotEnoughSlots);\n-\n-        boolean removeHALAA \u003d false;\n-\n-        for (Item item : getItemsEquipped()) {\n-            if (item instanceof Weapon \u0026\u0026 ((Weapon) item).isLargeBore()) {\n-                removeHALAA \u003d true;\n-                break;\n-            }\n-        }\n-\n-        if (!removeHALAA) {\n-            for (Item item : getInternalComponent().getFixedItems()) {\n-                if (item instanceof Weapon \u0026\u0026 ((Weapon) item).isLargeBore()) {\n-                    removeHALAA \u003d true;\n-                    break;\n-                }\n-            }\n-        }\n-\n-        if (removeHALAA) {\n-            return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.LargeBoreWeaponPresent);\n-        }\n-\n-        if (aItem \u003d\u003d ItemDB.HA) {\n-            if (!toggleStates.get(ItemDB.LAA)) // HA can only be enabled if LAA is enabled\n-                return EquipResult.make(EquipResultType.LaaBeforeHa);\n-        }\n-        return EquipResult.SUCCESS; // This can only be LAA, which can always be enabled if there is at least one free\n-                                    // slot locally and globally\n-    }\n-\n-    /**\n      * @param aItem\n      *            The item to get the toggle state for.\n      * @return \u003ccode\u003etrue\u003c/code\u003e if the given item is toggled on. Returns \u003ccode\u003efalse\u003c/code\u003e for items that are not\n      *         toggleable.\n      */\n     public boolean getToggleState(Item aItem) {\n-        Boolean ans \u003d toggleStates.get(aItem);\n+        final Boolean ans \u003d toggleStates.get(aItem);\n         return ans \u003d\u003d null ? false : ans;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        final int prime \u003d 31;\n+        int result \u003d super.hashCode();\n+        result \u003d prime * result + (omniPod \u003d\u003d null ? 0 : omniPod.hashCode());\n+        result \u003d prime * result + (toggleStates \u003d\u003d null ? 0 : toggleStates.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean hasMissileBayDoors() {\n+        return getOmniPod().hasMissileBayDoors();\n+    }\n+\n     /**\n      * Sets the toggle state of the item without any questions asked. The caller must verify that the toggle will result\n      * in a valid loadout.\n-     * \n+     *\n      * @param aItem\n      *            The item to toggle. If this is not a toggleable item, an {@link IllegalArgumentException} will be\n      *            thrown.\n      * @param aNewState\n      *            The new state of the toggle.\n      */\n     public void setToggleState(Item aItem, boolean aNewState) {\n-        if (!toggleStates.containsKey(aItem))\n+        if (!toggleStates.containsKey(aItem)) {\n             throw new IllegalArgumentException(\"Not a toggleable item: \" + aItem);\n+        }\n         toggleStates.put(aItem, aNewState);\n     }\n \n-    /**\n-     * @param aOmniPod\n-     *            The {@link OmniPod} to set for this component.\n-     */\n-    public void setOmniPod(OmniPod aOmniPod) {\n-        if (null \u003d\u003d aOmniPod)\n-            throw new NullPointerException(\"aOmniPod must not be null.\");\n+    private void setOmniPod(OmniPod aOmniPod) {\n         omniPod \u003d aOmniPod;\n \n         // Well, I assume that the toggleable internals are only ever defined in the omnipods and the only fixed items\n         // ever defined in the omnipods.\n         toggleStates.clear();\n-        for (Item item : omniPod.getToggleableItems()) {\n+        for (final Item item : omniPod.getToggleableItems()) {\n             toggleStates.put(item, true); // Default enabled\n         }\n     }\n \n-    @Override\n-    public boolean hasMissileBayDoors() {\n-        return getOmniPod().hasMissileBayDoors();\n-    }\n-\n }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/ConfiguredComponentStandard.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import java.util.Collection;\n import java.util.List;\n@@ -29,13 +29,11 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.LoadoutStandard;\n \n /**\n  * This class implements {@link ConfiguredComponent} for {@link LoadoutStandard}.\n- * \n+ *\n  * @author Emily Björk\n  */\n public class ConfiguredComponentStandard extends ConfiguredComponent {\n@@ -50,7 +48,7 @@ public ConfiguredComponentStandard(ConfiguredComponentStandard aComponent) {\n \n     @Override\n     public EquipResult canEquip(Item aItem) {\n-        EquipResult superResult \u003d super.canEquip(aItem);\n+        final EquipResult superResult \u003d super.canEquip(aItem);\n         if (superResult !\u003d EquipResult.SUCCESS) {\n             return superResult;\n         }\n@@ -59,15 +57,16 @@ public EquipResult canEquip(Item aItem) {\n             return EquipResult.SUCCESS;\n         }\n \n-        if (aItem \u003d\u003d ItemDB.CASE \u0026\u0026 getItemsEquipped().contains(ItemDB.CASE))\n+        if (aItem \u003d\u003d ItemDB.CASE \u0026\u0026 getItemsEquipped().contains(ItemDB.CASE)) {\n             return EquipResult.make(getInternalComponent().getLocation(), EquipResultType.ComponentAlreadyHasCase);\n+        }\n \n         int engineHsDiscount \u003d 0;\n         if (aItem instanceof Engine) {\n-            Engine engine \u003d (Engine) aItem;\n+            final Engine engine \u003d (Engine) aItem;\n             int heatsinks \u003d 0;\n             HeatSink hsType \u003d null;\n-            for (Item item : getItemsEquipped()) {\n+            for (final Item item : getItemsEquipped()) {\n                 if (item instanceof HeatSink) {\n                     heatsinks++;\n                     hsType \u003d (HeatSink) item;\n@@ -95,13 +94,13 @@ public int getHardPointCount(HardPointType aHardpointType) {\n     }\n \n     @Override\n-    public List\u003cItem\u003e getItemsFixed() {\n-        return getInternalComponent().getFixedItems();\n+    public ComponentStandard getInternalComponent() {\n+        return (ComponentStandard) super.getInternalComponent();\n     }\n \n     @Override\n-    public ComponentStandard getInternalComponent() {\n-        return (ComponentStandard) super.getInternalComponent();\n+    public List\u003cItem\u003e getItemsFixed() {\n+        return getInternalComponent().getFixedItems();\n     }\n \n     @Override"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/DefaultLoadoutFactory.java",
          "patch": "@@ -19,6 +19,8 @@\n //@formatter:on\n package org.lisoft.lsml.model.loadout;\n \n+import java.util.Optional;\n+\n import org.lisoft.lsml.command.CmdDistributeArmour;\n import org.lisoft.lsml.command.CmdLoadStock;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n@@ -27,15 +29,13 @@\n import org.lisoft.lsml.model.chassi.ChassisStandard;\n import org.lisoft.lsml.model.chassi.ComponentStandard;\n import org.lisoft.lsml.model.chassi.Location;\n+import org.lisoft.lsml.model.chassi.OmniPod;\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.datacache.OmniPodDB;\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n import org.lisoft.lsml.model.item.Faction;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.PilotModule;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.Efficiencies;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n@@ -76,7 +76,9 @@ public Loadout produceClone(Loadout aSource) {\n             if (srcCmpnt instanceof ConfiguredComponentOmniMech) {\n                 final ConfiguredComponentOmniMech omniSourceComponent \u003d (ConfiguredComponentOmniMech) srcCmpnt;\n                 final ConfiguredComponentOmniMech omniTargetComponent \u003d (ConfiguredComponentOmniMech) tgtCmpnt;\n-                omniTargetComponent.setOmniPod(omniSourceComponent.getOmniPod());\n+                if (!omniTargetComponent.getInternalComponent().hasFixedOmniPod()) {\n+                    omniTargetComponent.changeOmniPod(omniSourceComponent.getOmniPod());\n+                }\n \n                 matchToggleState(omniTargetComponent, omniSourceComponent, ItemDB.HA);\n                 matchToggleState(omniTargetComponent, omniSourceComponent, ItemDB.LAA);\n@@ -164,8 +166,16 @@ else if (aChassis instanceof ChassisOmniMech) {\n \n             final ConfiguredComponentOmniMech[] components \u003d new ConfiguredComponentOmniMech[Location.values().length];\n             for (final Location location : Location.values()) {\n-                components[location.ordinal()] \u003d new ConfiguredComponentOmniMech(chassis.getComponent(location), false,\n-                        OmniPodDB.lookupOriginal(chassis, location));\n+                final Optional\u003cOmniPod\u003e pod \u003d OmniPodDB.lookupStock(chassis, location);\n+\n+                final ConfiguredComponentOmniMech component;\n+                if (pod.isPresent()) {\n+                    component \u003d new ConfiguredComponentOmniMech(chassis.getComponent(location), false, pod.get());\n+                }\n+                else {\n+                    component \u003d new ConfiguredComponentOmniMech(chassis.getComponent(location), false);\n+                }\n+                components[location.ordinal()] \u003d component;\n             }\n             return new LoadoutOmniMech(components, chassis, upgrades, new WeaponGroups());\n         }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/Loadout.java",
          "patch": "@@ -41,7 +41,6 @@\n import org.lisoft.lsml.model.item.ModuleSlot;\n import org.lisoft.lsml.model.item.PilotModule;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.modifiers.Efficiencies;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.upgrades.Upgrades;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/LoadoutOmniMech.java",
          "patch": "@@ -27,7 +27,6 @@\n import org.lisoft.lsml.model.chassi.OmniPodSet;\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.ModuleSlot;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.lisoft.lsml.util.CommandStack.Command;\n@@ -181,6 +180,6 @@ public int hashCode() {\n      */\n     public void setOmniPod(OmniPod aOmniPod) {\n         final ConfiguredComponentOmniMech component \u003d getComponent(aOmniPod.getLocation());\n-        component.setOmniPod(aOmniPod);\n+        component.changeOmniPod(aOmniPod);\n     }\n }"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/LoadoutStandard.java",
          "patch": "@@ -26,8 +26,6 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.ModuleSlot;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/loadout/StockLoadout.java",
          "patch": "@@ -22,6 +22,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Optional;\n \n import org.lisoft.lsml.model.chassi.Chassis;\n import org.lisoft.lsml.model.chassi.Location;\n@@ -157,10 +158,10 @@ public Location getLocation() {\n         }\n \n         /**\n-         * @return The omnipod to use for this component or 0 if default/none.\n+         * @return The omnipod to use for this component or empty if no omnipod is specified.\n          */\n-        public Integer getOmniPod() {\n-            return omniPod;\n+        public Optional\u003cInteger\u003e getOmniPod() {\n+            return Optional.ofNullable(omniPod);\n         }\n \n         @Override"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/metrics/CriticalItemDamage.java",
          "patch": "@@ -21,7 +21,7 @@\n \n import org.lisoft.lsml.math.probability.BinomialDistribution;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n \n /**\n  * This {@link ItemMetric} calculates statistically how much damage the given item takes per 1 damage to the component"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/metrics/CriticalStrikeProbability.java",
          "patch": "@@ -24,7 +24,7 @@\n import java.util.List;\n \n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n \n /**\n  * This {@link ItemMetric} calculates the probability that the given item will be critically hit at least once by a"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/metrics/ItemEffectiveHP.java",
          "patch": "@@ -23,7 +23,7 @@\n import java.util.List;\n \n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n \n /**\n  * This class calculates the statistical effective HP of an {@link Item} when it is equipped on a"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/metrics/helpers/ComponentDestructionSimulator.java",
          "patch": "@@ -27,7 +27,7 @@\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.metrics.CriticalStrikeProbability;\n import org.lisoft.lsml.model.modifiers.Modifier;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/upgrades/GuidanceUpgrade.java",
          "patch": "@@ -25,9 +25,9 @@\n import org.lisoft.lsml.model.item.Faction;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.MissileWeapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n import com.thoughtworks.xstream.annotations.XStreamAsAttribute;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/drawers/EquippedItemCell.java",
          "patch": "@@ -35,10 +35,10 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.view_fx.LiSongMechLab;\n import org.lisoft.lsml.view_fx.Settings;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/loadout/LoadoutInfoPane.java",
          "patch": "@@ -42,8 +42,8 @@\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.datacache.EnvironmentDB;\n import org.lisoft.lsml.model.environment.Environment;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.modifiers.ModifierDescription;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/loadout/component/ComponentItemToolTip.java",
          "patch": "@@ -23,7 +23,7 @@\n import java.util.Collection;\n \n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.metrics.CriticalStrikeProbability;\n import org.lisoft.lsml.model.metrics.ItemEffectiveHP;\n import org.lisoft.lsml.model.metrics.helpers.ComponentDestructionSimulator;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/loadout/component/ComponentPane.java",
          "patch": "@@ -47,10 +47,10 @@\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.datacache.OmniPodDB;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.view_fx.LiSongMechLab;\n import org.lisoft.lsml.view_fx.Settings;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/loadout/component/EquippedItemsList.java",
          "patch": "@@ -35,8 +35,8 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n \n import javafx.collections.ObservableListBase;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/loadout/component/HardPointPane.java",
          "patch": "@@ -21,7 +21,7 @@\n \n import org.lisoft.lsml.model.chassi.HardPointType;\n import org.lisoft.lsml.model.chassi.Location;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.view_fx.style.HardPointFormatter;\n import org.lisoft.lsml.view_fx.style.StyleManager;\n "
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/properties/ArmourFactory.java",
          "patch": "@@ -26,8 +26,8 @@\n import org.lisoft.lsml.messages.MessageReceiver;\n import org.lisoft.lsml.messages.MessageXBar;\n import org.lisoft.lsml.model.chassi.ArmourSide;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n \n import javafx.beans.property.BooleanProperty;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/properties/LoadoutModelAdaptor.java",
          "patch": "@@ -40,10 +40,10 @@\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n import org.lisoft.lsml.model.item.Faction;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.modifiers.Efficiencies;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/style/ItemToolTipFormatter.java",
          "patch": "@@ -34,8 +34,8 @@\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.TargetingComputer;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.metrics.TopSpeed;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.view_fx.loadout.component.ComponentItemToolTip;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/view_fx/util/FxTableUtils.java",
          "patch": "@@ -34,8 +34,8 @@\n import org.lisoft.lsml.model.item.EnergyWeapon;\n import org.lisoft.lsml.model.item.MissileWeapon;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.metrics.TopSpeed;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.modifiers.Modifier;"
        },
        {
          "file_name": "src/main/resources/data_cache.xml"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdAddItemTest.java",
          "patch": "@@ -54,12 +54,12 @@\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.Weapon;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.mockito.InOrder;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdAutoAddItemTest.java",
          "patch": "@@ -44,13 +44,13 @@\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.util.ListArrayUtils;\n import org.mockito.InOrder;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdDistributeArmourTest.java",
          "patch": "@@ -33,10 +33,10 @@\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.export.Base64LoadoutCoder;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.mockito.Mock;\n import org.mockito.Mockito;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdLoadStockTest.java",
          "patch": "@@ -46,11 +46,11 @@\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.ItemDB;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n \n import junitparams.JUnitParamsRunner;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdRemoveItemTest.java",
          "patch": "@@ -42,9 +42,9 @@\n import org.lisoft.lsml.model.item.EngineType;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.mockito.InOrder;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdSetArmourSymmetricTest.java",
          "patch": "@@ -31,9 +31,9 @@\n import org.lisoft.lsml.model.chassi.ArmourSide;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.datacache.ChassisDB;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdSetArmourTest.java",
          "patch": "@@ -18,9 +18,9 @@\n import org.lisoft.lsml.model.chassi.ArmourSide;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.helpers.MockLoadoutContainer;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack.Command;\n import org.mockito.InOrder;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdSetHeatSinkTypeTest.java",
          "patch": "@@ -31,10 +31,10 @@\n import org.lisoft.lsml.model.export.Base64LoadoutCoder;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;\n import org.mockito.Mockito;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdSetMaxArmourTest.java",
          "patch": "@@ -40,7 +40,7 @@\n import org.lisoft.lsml.model.chassi.ArmourSide;\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.helpers.MockLoadoutContainer;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.mockito.ArgumentCaptor;\n import org.mockito.InOrder;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdStripArmourTest.java",
          "patch": "@@ -26,9 +26,9 @@\n import org.junit.runner.RunWith;\n import org.lisoft.lsml.messages.MessageDelivery;\n import org.lisoft.lsml.model.datacache.ChassisDB;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.mockito.Mock;\n import org.mockito.runners.MockitoJUnitRunner;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdStripEquipmentTest.java",
          "patch": "@@ -29,10 +29,10 @@\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n import org.lisoft.lsml.model.export.Base64LoadoutCoder;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n import org.mockito.Mock;\n import org.mockito.runners.MockitoJUnitRunner;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdStripLoadoutTest.java",
          "patch": "@@ -29,10 +29,10 @@\n import org.lisoft.lsml.model.chassi.ChassisStandard;\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.UpgradeDB;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.util.CommandStack;\n \n public class CmdStripLoadoutTest {"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/command/CmdToggleItemTest.java",
          "patch": "@@ -37,11 +37,11 @@\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.loadout.EquipException;\n import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.mockito.InOrder;\n \n @SuppressWarnings(\"javadoc\")"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/DynamicSlotDistributorTest.java",
          "patch": "@@ -32,10 +32,10 @@\n import org.junit.runner.RunWith;\n import org.lisoft.lsml.model.chassi.ComponentOmniMech;\n import org.lisoft.lsml.model.chassi.Location;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentOmniMech;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.loadout.LoadoutOmniMech;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.StructureUpgrade;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/chassi/ChassisOmniMechTest.java",
          "patch": "@@ -37,6 +37,7 @@\n import java.util.Map;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.lisoft.lsml.model.datacache.ChassisDB;\n import org.lisoft.lsml.model.datacache.ItemDB;\n@@ -267,6 +268,7 @@ public final void testGetFixedStructureType() {\n         assertSame(structureType, makeDefaultCUT().getFixedStructureType());\n     }\n \n+    @Ignore // This test is brittle and doesn\u0027t really provide any useful diagnostic. Should be rewritten.\n     @Test\n     public final void testGetMovementProfiles() {\n         final ChassisOmniMech mech \u003d (ChassisOmniMech) ChassisDB.lookup(\"kfx-prime\");\n@@ -280,8 +282,8 @@ public final void testGetMovementProfiles() {\n         assertTrue(baseProfile.getTorsoYawSpeed(null) \u003c baseProfile.getTorsoYawSpeed(stock));\n         assertTrue(baseProfile.getTorsoYawMax(null) \u003c baseProfile.getTorsoYawMax(stock));\n \n-        assertTrue(baseProfile.getTorsoYawSpeed(null) \u003c min.getTorsoYawSpeed(null));\n-        assertTrue(baseProfile.getTorsoYawSpeed(null) \u003c max.getTorsoYawSpeed(null));\n+        assertTrue(baseProfile.getTorsoYawSpeed(null) \u003e min.getTorsoYawSpeed(null));\n+        assertTrue(baseProfile.getTorsoYawSpeed(null) \u003e max.getTorsoYawSpeed(null));\n     }\n \n     @Test"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/chassi/OmniPodSelectorTest.java",
          "patch": "@@ -13,7 +13,7 @@\n \n /**\n  * Test suite for the {@link OmniPodSelector} class.\n- * \n+ *\n  * @author Emily Björk\n  *\n  */\n@@ -25,90 +25,90 @@\n \n     @Test\n     public void testSelectPods() {\n-        ChassisOmniMech hbr_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-A\");\n-        ChassisOmniMech hbr_b \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-B\");\n-        ChassisOmniMech hbr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-PRIME\");\n+        final ChassisOmniMech hbr_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-A\");\n+        final ChassisOmniMech hbr_b \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-B\");\n+        final ChassisOmniMech hbr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"HBR-PRIME\");\n \n-        OmniPodSelector cut \u003d new OmniPodSelector();\n-        Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(hbr_a, 7, 2, 0, 0, true);\n+        final OmniPodSelector cut \u003d new OmniPodSelector();\n+        final Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(hbr_a, 7, 2, 0, 0, true);\n \n         // Should only exist one solution:\n         // RA-Prime, RT-B, HD-A, LT-Prime, LA-A\n         assertTrue(ans.isPresent());\n-        Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n-        assertSame(OmniPodDB.lookupOriginal(hbr_prime, Location.RightArm), pods.get(Location.RightArm));\n-        assertSame(OmniPodDB.lookupOriginal(hbr_b, Location.RightTorso), pods.get(Location.RightTorso));\n-        assertSame(OmniPodDB.lookupOriginal(hbr_a, Location.Head), pods.get(Location.Head));\n-        assertSame(OmniPodDB.lookupOriginal(hbr_prime, Location.LeftTorso), pods.get(Location.LeftTorso));\n-        assertSame(OmniPodDB.lookupOriginal(hbr_a, Location.LeftArm), pods.get(Location.LeftArm));\n+        final Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n+        assertSame(OmniPodDB.lookupStock(hbr_prime, Location.RightArm).get(), pods.get(Location.RightArm));\n+        assertSame(OmniPodDB.lookupStock(hbr_b, Location.RightTorso).get(), pods.get(Location.RightTorso));\n+        assertSame(OmniPodDB.lookupStock(hbr_a, Location.Head).get(), pods.get(Location.Head));\n+        assertSame(OmniPodDB.lookupStock(hbr_prime, Location.LeftTorso).get(), pods.get(Location.LeftTorso));\n+        assertSame(OmniPodDB.lookupStock(hbr_a, Location.LeftArm).get(), pods.get(Location.LeftArm));\n     }\n \n+    /**\n+     * Test that hard points in the CT are counted towards the required values.\n+     */\n     @Test\n-    public void testSelectPods_OmniJJ() {\n-        ChassisOmniMech tbr_s \u003d (ChassisOmniMech) ChassisDB.lookup(\"TBR-S\");\n-        ChassisOmniMech tbr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"TBR-PRIME\");\n+    public void testSelectPods_CTHardPointCounted() {\n+        final ChassisOmniMech ifr_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-A\");\n+        final ChassisOmniMech ifr_d \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-D\");\n+        final ChassisOmniMech ifr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-PRIME\");\n \n-        OmniPodSelector cut \u003d new OmniPodSelector();\n-        Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(tbr_prime, 0, 0, 0, 4, false);\n+        final OmniPodSelector cut \u003d new OmniPodSelector();\n+        final Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(ifr_a, 5, 0, 0, 0, false);\n \n         // Expected solution:\n-        // RT/LT-S\n+        // RA-D, LA-Prime\n         assertTrue(ans.isPresent());\n-        Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n-        assertSame(OmniPodDB.lookupOriginal(tbr_s, Location.RightTorso), pods.get(Location.RightTorso));\n-        assertSame(OmniPodDB.lookupOriginal(tbr_s, Location.LeftTorso), pods.get(Location.LeftTorso));\n-    }\n-\n-    @Test\n-    public void testSelectPods_NoSolution() {\n-        ChassisOmniMech adr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"ADR-PRIME\");\n-\n-        OmniPodSelector cut \u003d new OmniPodSelector();\n-        Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(adr_prime, 5, 0, 2, 0, false);\n-\n-        assertFalse(ans.isPresent());\n+        final Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n+        assertSame(OmniPodDB.lookupStock(ifr_d, Location.RightArm).get(), pods.get(Location.RightArm));\n+        assertSame(OmniPodDB.lookupStock(ifr_prime, Location.LeftArm).get(), pods.get(Location.LeftArm));\n     }\n \n     /**\n      * Test that jump jets that are satisfied through the chassis (as opposed to the omni mech) are accounted properly.\n      */\n     @Test\n     public void testSelectPods_NonOmniJJ() {\n-        ChassisOmniMech shc_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-A\");\n-        ChassisOmniMech shc_b \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-B\");\n-        ChassisOmniMech shc_p \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-P\");\n-        ChassisOmniMech shc_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-PRIME\");\n+        final ChassisOmniMech shc_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-A\");\n+        final ChassisOmniMech shc_b \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-B\");\n+        final ChassisOmniMech shc_p \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-P\");\n+        final ChassisOmniMech shc_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"SHC-PRIME\");\n \n-        OmniPodSelector cut \u003d new OmniPodSelector();\n-        Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(shc_prime, 0, 2, 3, 6, true);\n+        final OmniPodSelector cut \u003d new OmniPodSelector();\n+        final Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(shc_prime, 0, 2, 3, 6, true);\n \n         // Expected solution:\n         // RA-B, RT-A, LT-B, LA-P\n         assertTrue(ans.isPresent());\n-        Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n-        assertSame(OmniPodDB.lookupOriginal(shc_b, Location.RightArm), pods.get(Location.RightArm));\n-        assertSame(OmniPodDB.lookupOriginal(shc_a, Location.RightTorso), pods.get(Location.RightTorso));\n-        assertSame(OmniPodDB.lookupOriginal(shc_b, Location.LeftTorso), pods.get(Location.LeftTorso));\n-        assertSame(OmniPodDB.lookupOriginal(shc_p, Location.LeftArm), pods.get(Location.LeftArm));\n+        final Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n+        assertSame(OmniPodDB.lookupStock(shc_b, Location.RightArm).get(), pods.get(Location.RightArm));\n+        assertSame(OmniPodDB.lookupStock(shc_a, Location.RightTorso).get(), pods.get(Location.RightTorso));\n+        assertSame(OmniPodDB.lookupStock(shc_b, Location.LeftTorso).get(), pods.get(Location.LeftTorso));\n+        assertSame(OmniPodDB.lookupStock(shc_p, Location.LeftArm).get(), pods.get(Location.LeftArm));\n     }\n \n-    /**\n-     * Test that hard points in the CT are counted towards the required values.\n-     */\n     @Test\n-    public void testSelectPods_CTHardPointCounted() {\n-        ChassisOmniMech ifr_a \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-A\");\n-        ChassisOmniMech ifr_d \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-D\");\n-        ChassisOmniMech ifr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"IFR-PRIME\");\n+    public void testSelectPods_NoSolution() {\n+        final ChassisOmniMech adr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"ADR-PRIME\");\n+\n+        final OmniPodSelector cut \u003d new OmniPodSelector();\n+        final Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(adr_prime, 5, 0, 2, 0, false);\n+\n+        assertFalse(ans.isPresent());\n+    }\n \n-        OmniPodSelector cut \u003d new OmniPodSelector();\n-        Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(ifr_a, 5, 0, 0, 0, false);\n+    @Test\n+    public void testSelectPods_OmniJJ() {\n+        final ChassisOmniMech tbr_s \u003d (ChassisOmniMech) ChassisDB.lookup(\"TBR-S\");\n+        final ChassisOmniMech tbr_prime \u003d (ChassisOmniMech) ChassisDB.lookup(\"TBR-PRIME\");\n+\n+        final OmniPodSelector cut \u003d new OmniPodSelector();\n+        final Optional\u003cMap\u003cLocation, OmniPod\u003e\u003e ans \u003d cut.selectPods(tbr_prime, 0, 0, 0, 4, false);\n \n         // Expected solution:\n-        // RA-D, LA-Prime\n+        // RT/LT-S\n         assertTrue(ans.isPresent());\n-        Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n-        assertSame(OmniPodDB.lookupOriginal(ifr_d, Location.RightArm), pods.get(Location.RightArm));\n-        assertSame(OmniPodDB.lookupOriginal(ifr_prime, Location.LeftArm), pods.get(Location.LeftArm));\n+        final Map\u003cLocation, OmniPod\u003e pods \u003d ans.get();\n+        assertSame(OmniPodDB.lookupStock(tbr_s, Location.RightTorso).get(), pods.get(Location.RightTorso));\n+        assertSame(OmniPodDB.lookupStock(tbr_s, Location.LeftTorso).get(), pods.get(Location.LeftTorso));\n     }\n }"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/chassi/OmniPodTest.java",
          "patch": "@@ -274,41 +274,6 @@ public void testIsCompatible() {\n     }\n \n     @Test\n-    public void testIsOriginalForChassis() {\n-        series \u003d \"TIMBER WOLF\";\n-        chassisName \u003d \"TBR-PRIME\";\n-\n-        final ChassisOmniMech chassisP \u003d Mockito.mock(ChassisOmniMech.class);\n-        Mockito.when(chassisP.getSeriesName()).thenReturn(series.toLowerCase());\n-        Mockito.when(chassisP.getName()).thenReturn(series.toLowerCase() + \" tBR-PRIME\");\n-        Mockito.when(chassisP.getNameShort()).thenReturn(\"TBR-PRImE\");\n-        Mockito.when(chassisP.getMwoName()).thenReturn(\"TBR-PRImE\");\n-\n-        final ChassisOmniMech chassisPI \u003d Mockito.mock(ChassisOmniMech.class);\n-        Mockito.when(chassisPI.getSeriesName()).thenReturn(series.toLowerCase());\n-        Mockito.when(chassisPI.getName()).thenReturn(series.toLowerCase() + \" TBR-PRIME(I)\");\n-        Mockito.when(chassisPI.getNameShort()).thenReturn(\"TBR-PRiME\");\n-        Mockito.when(chassisPI.getMwoName()).thenReturn(\"TBR-PRImEI\");\n-\n-        final ChassisOmniMech chassisPG \u003d Mockito.mock(ChassisOmniMech.class);\n-        Mockito.when(chassisPG.getSeriesName()).thenReturn(series.toLowerCase());\n-        Mockito.when(chassisPG.getName()).thenReturn(series.toLowerCase() + \" TBR-PRIME(G)\");\n-        Mockito.when(chassisPG.getNameShort()).thenReturn(\"TBr-PRIME(G)\");\n-        Mockito.when(chassisPG.getMwoName()).thenReturn(\"TBR-PRImEg\");\n-\n-        final ChassisOmniMech chassisC \u003d Mockito.mock(ChassisOmniMech.class);\n-        Mockito.when(chassisC.getSeriesName()).thenReturn(series.toLowerCase());\n-        Mockito.when(chassisC.getName()).thenReturn(series.toLowerCase() + \" TBR-C\");\n-        Mockito.when(chassisC.getNameShort()).thenReturn(\"TBr-c\");\n-        Mockito.when(chassisC.getMwoName()).thenReturn(\"TBR-c)\");\n-\n-        assertTrue(makeCUT().isOriginalForChassis(chassisP));\n-        assertTrue(makeCUT().isOriginalForChassis(chassisPI));\n-        assertTrue(makeCUT().isOriginalForChassis(chassisPG));\n-        assertFalse(makeCUT().isOriginalForChassis(chassisC));\n-    }\n-\n-    @Test\n     public void testToString() {\n         assertEquals(chassisName.toUpperCase(), makeCUT().toString());\n     }"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/export/LoadoutCoderStatsGenerator.java",
          "patch": "@@ -35,9 +35,9 @@\n import org.lisoft.lsml.model.item.Equipment;\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.PilotModule;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.DefaultLoadoutFactory;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n \n /**\n  * This class is used for generating the frequency tables that are used for the Huffman coding in the loadout coders."
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/helpers/MockLoadoutContainer.java",
          "patch": "@@ -30,10 +30,10 @@\n import org.lisoft.lsml.model.chassi.Location;\n import org.lisoft.lsml.model.chassi.MovementProfile;\n import org.lisoft.lsml.model.item.Internal;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n import org.lisoft.lsml.model.loadout.LoadoutStandard;\n import org.lisoft.lsml.model.loadout.WeaponGroups;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.modifiers.Efficiencies;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/item/ItemTests.java",
          "patch": "@@ -35,7 +35,7 @@\n import org.lisoft.lsml.messages.MessageXBar;\n import org.lisoft.lsml.model.chassi.HardPointType;\n import org.lisoft.lsml.model.datacache.ItemDB;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.mockito.Mock;\n import org.mockito.MockitoAnnotations;\n "
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/ConfiguredComponentOmniMechTest.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotEquals;\n@@ -39,7 +39,6 @@\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.util.ListArrayUtils;\n \n@@ -125,6 +124,35 @@ public void testCanEquip_NoHardpoint() {\n     }\n \n     @Test\n+    public final void testChangeGetOmniPod() throws Exception {\n+        final ConfiguredComponentOmniMech cut \u003d makeDefaultCUT();\n+        final OmniPod omniPod2 \u003d mock(OmniPod.class);\n+\n+        cut.changeOmniPod(omniPod2);\n+        assertSame(omniPod2, cut.getOmniPod());\n+    }\n+\n+    @Test(expected \u003d NullPointerException.class)\n+    public final void testChangeOmniPod_Null() throws Exception {\n+        makeDefaultCUT().changeOmniPod(null);\n+    }\n+\n+    /**\n+     * The {@link ConfiguredComponentOmniMech#changeOmniPod(OmniPod)} shall throw {@link UnsupportedOperationException}\n+     * if the component has a fixed {@link OmniPod}.\n+     */\n+    @Test(expected \u003d UnsupportedOperationException.class)\n+    public final void testChangeOmniPodFixed() throws Exception {\n+        setupDefaultMocks();\n+        when(omniInternal.hasFixedOmniPod()).thenReturn(true);\n+        when(omniInternal.getFixedOmniPod()).thenReturn(omniPod);\n+        final ConfiguredComponentOmniMech cut \u003d new ConfiguredComponentOmniMech(omniInternal, manualArmour);\n+        final OmniPod omniPod2 \u003d mock(OmniPod.class);\n+\n+        cut.changeOmniPod(omniPod2);\n+    }\n+\n+    @Test\n     public final void testCopyCtor_ToggleStateNotLinked() {\n         togglables.add(ItemDB.LAA);\n         final ConfiguredComponentOmniMech cut \u003d makeDefaultCUT();\n@@ -168,8 +196,8 @@ public final void testEquals_OmniPods() {\n         final ConfiguredComponentOmniMech cut2 \u003d makeDefaultCUT();\n         final OmniPod pod1 \u003d mock(OmniPod.class);\n         final OmniPod pod2 \u003d mock(OmniPod.class);\n-        cut.setOmniPod(pod1);\n-        cut2.setOmniPod(pod2);\n+        cut.changeOmniPod(pod1);\n+        cut2.changeOmniPod(pod2);\n \n         assertNotEquals(cut, cut2);\n     }\n@@ -235,6 +263,18 @@ public final void testGetOmniPod() throws Exception {\n     }\n \n     @Test\n+    public final void testGetOmniPodFixed() throws Exception {\n+        setupDefaultMocks();\n+        when(omniInternal.hasFixedOmniPod()).thenReturn(true);\n+        when(omniInternal.getFixedOmniPod()).thenReturn(omniPod);\n+        final ConfiguredComponentOmniMech cut \u003d new ConfiguredComponentOmniMech(omniInternal, manualArmour);\n+\n+        assertSame(omniPod, cut.getOmniPod());\n+    }\n+\n+    // TODO: Test togglestate handling and fixeditems\n+\n+    @Test\n     public final void testGetSlotsUsedFree_DynamicSlots() {\n         when(omniInternal.getDynamicArmourSlots()).thenReturn(2);\n         when(omniInternal.getDynamicStructureSlots()).thenReturn(3);\n@@ -250,24 +290,13 @@ public final void testHasMissileBayDoors() throws Exception {\n         assertEquals(missileBayDoors, makeDefaultCUT().hasMissileBayDoors());\n     }\n \n-    // TODO: Test togglestate handling and fixeditems\n-\n-    @Test\n-    public final void testSetGetOmniPod() throws Exception {\n-        final ConfiguredComponentOmniMech cut \u003d makeDefaultCUT();\n-        final OmniPod omniPod2 \u003d mock(OmniPod.class);\n-\n-        cut.setOmniPod(omniPod2);\n-        assertSame(omniPod2, cut.getOmniPod());\n-    }\n-\n-    @Test(expected \u003d NullPointerException.class)\n-    public final void testSetOmniPod_Null() throws Exception {\n-        makeDefaultCUT().setOmniPod(null);\n-    }\n-\n     @Override\n     protected ConfiguredComponentOmniMech makeDefaultCUT() {\n+        setupDefaultMocks();\n+        return new ConfiguredComponentOmniMech(omniInternal, manualArmour, omniPod);\n+    }\n+\n+    protected void setupDefaultMocks() {\n         when(internal.getLocation()).thenReturn(location);\n         when(internal.getSlots()).thenReturn(slots);\n         when(internal.getFixedItemSlots()).thenReturn(internalFixedSlots);\n@@ -279,6 +308,5 @@ protected ConfiguredComponentOmniMech makeDefaultCUT() {\n             when(omniPod.getToggleableItems()).thenReturn(togglables);\n             when(omniPod.getFixedItems()).thenReturn(omniPodFixed);\n         }\n-        return new ConfiguredComponentOmniMech(omniInternal, manualArmour, omniPod);\n     }\n }"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/ConfiguredComponentStandardTest.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n@@ -37,7 +37,6 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.util.ListArrayUtils;\n "
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/ConfiguredComponentTest.java",
          "patch": "@@ -17,7 +17,7 @@\n  * along with this program.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n  */\n //@formatter:on\n-package org.lisoft.lsml.model.loadout.component;\n+package org.lisoft.lsml.model.loadout;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -38,7 +38,6 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.HeatSink;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.EquipResult;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n import org.lisoft.lsml.util.ListArrayUtils;\n import org.mockito.Mockito;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/DefaultLoadoutFactoryTest.java",
          "patch": "@@ -134,7 +134,7 @@ public void testProduceClone_OmniPods() {\n             final List\u003cOmniPod\u003e possiblePods \u003d new ArrayList\u003c\u003e(OmniPodDB.lookup(loadout.getChassis(), loc));\n             final OmniPod newPod \u003d possiblePods.get(podId % possiblePods.size());\n             podId++;\n-            loadout.getComponent(loc).setOmniPod(newPod);\n+            loadout.getComponent(loc).changeOmniPod(newPod);\n         }\n \n         final Loadout clone \u003d cut.produceClone(loadout);"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/LoadoutOmniMechTest.java",
          "patch": "@@ -51,7 +51,6 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.ModuleSlot;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentOmniMech;\n import org.lisoft.lsml.model.modifiers.MechEfficiencyType;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n@@ -133,7 +132,7 @@ public final void testEquals_Components() throws Exception {\n \n         final CommandStack stack \u003d new CommandStack(0);\n         stack.pushAndApply(new CmdSetOmniPod(null, cut, cut.getComponent(Location.LeftArm),\n-                OmniPodDB.lookupOriginal((ChassisOmniMech) ChassisDB.lookup(\"DWF-B\"), Location.LeftArm)));\n+                OmniPodDB.lookupStock((ChassisOmniMech) ChassisDB.lookup(\"DWF-B\"), Location.LeftArm).get()));\n \n         assertNotEquals(cut, cut1);\n     }"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/LoadoutStandardTest.java",
          "patch": "@@ -36,7 +36,6 @@\n import org.lisoft.lsml.model.item.Item;\n import org.lisoft.lsml.model.item.JumpJet;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponentStandard;\n import org.lisoft.lsml.model.modifiers.Modifier;\n import org.lisoft.lsml.model.upgrades.UpgradesMutable;\n import org.mockito.Mockito;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/loadout/LoadoutTest.java",
          "patch": "@@ -46,7 +46,6 @@\n import org.lisoft.lsml.model.item.JumpJet;\n import org.lisoft.lsml.model.item.Weapon;\n import org.lisoft.lsml.model.loadout.EquipResult.EquipResultType;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.ArmourUpgrade;\n import org.lisoft.lsml.model.upgrades.GuidanceUpgrade;\n import org.lisoft.lsml.model.upgrades.HeatSinkUpgrade;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/metrics/CriticalItemDamageTest.java",
          "patch": "@@ -29,8 +29,8 @@\n import org.junit.runner.RunWith;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.mockito.InjectMocks;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/metrics/CriticalStrikeProbabilityTest.java",
          "patch": "@@ -30,8 +30,8 @@\n import org.junit.runner.RunWith;\n import org.lisoft.lsml.model.item.Internal;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.mockito.InjectMocks;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/metrics/HeatOverTimeTest.java",
          "patch": "@@ -20,7 +20,7 @@\n import org.lisoft.lsml.model.item.Engine;\n import org.lisoft.lsml.model.item.HeatSource;\n import org.lisoft.lsml.model.item.Weapon;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n \n public class HeatOverTimeTest {\n     private MessageXBar xBar;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/metrics/ItemEffectiveHPTest.java",
          "patch": "@@ -29,8 +29,8 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.lisoft.lsml.model.item.Item;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.loadout.Loadout;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n import org.lisoft.lsml.model.upgrades.Upgrades;\n import org.mockito.InjectMocks;\n import org.mockito.Mock;"
        },
        {
          "file_name": "src/test/java/org/lisoft/lsml/model/metrics/helpers/ComponentDestructionSimulatorTest.java",
          "patch": "@@ -28,7 +28,7 @@\n import org.lisoft.lsml.model.chassi.ComponentStandard;\n import org.lisoft.lsml.model.datacache.ItemDB;\n import org.lisoft.lsml.model.item.Item;\n-import org.lisoft.lsml.model.loadout.component.ConfiguredComponent;\n+import org.lisoft.lsml.model.loadout.ConfiguredComponent;\n import org.lisoft.lsml.model.metrics.CriticalStrikeProbability;\n import org.mockito.Mockito;\n "
        },
        {
          "file_name": "src/test/resources/garage_172.xml"
        },
        {
          "file_name": "src/test/resources/lsmlv1stock.txt",
          "patch": "@@ -113,7 +113,6 @@\n [ATLAS AS7-D(F)]\u003dlsml://rAAD50RAFFISXhxAFFJEGY375AQzwNm8WQkAgI0\u003d\n [STALKER STK-3F]\u003dlsml://rAAALy4yDjISSBYyDjIu2jgiVLEEBT8AllRBAdo4JQ\u003d\u003d\n [STALKER STK-3H]\u003dlsml://rAAAMC4yDjISSBYyDjIuvbAiWIICn4BLEEBvbAk\u003d\n-[MISERY]\u003dlsml://rAAASzY0FD4SUBo0FD422SwAIQQFPxViADp1Ado\u003d\n [VICTOR VTR-9B]\u003dlsml://rAAAWR4oFCgSPB4oFCgejUfffIqKfQKlR5gio7U\u003d\n [VICTOR VTR-9K]\u003dlsml://rBAAWCQuFCgSRB4uFCgkiE6d8RUQn0CpUefIIqM6dQ\u003d\u003d\n [VICTOR VTR-9S]\u003dlsml://rAAAWh4iECgSOBYiECgejUfffIqKfQKlRLgio7U\u003d"
        },
        {
          "file_name": "src/test/resources/lsmlv2stock.txt",
          "patch": "@@ -113,7 +113,6 @@\n [ATLAS AS7-D(F)]\u003dlsml://rQAD50RAFFISXhxAFFJEuipmxNhITziZMJhcTJswWVP55EmEyYTYKQ\u003d\u003d\n [STALKER STK-3F]\u003dlsml://rQAALy4yDjISSBYyDjIuuipmzMtKbwjTpohMmCRKZMJ400QmTGZaU3gp\n [STALKER STK-3H]\u003dlsml://rQAAMC4yDjISSBYyDjIuuipmxZcxN4J00QmTBIlMmE6aITJhZcxN4A\u003d\u003d\n-[MISERY]\u003dlsml://rQAASzY0FD4SUBo0FD42uipmzME6ZMmTRRCZMEiYxYTJrLBMmMwU\n [VICTOR VTR-9B]\u003dlsml://rQAAWR4oFCgSPB4oFCgeuipmyQE0884m6QUuTJunpEmITdJmCg\u003d\u003d\n [VICTOR VTR-9K]\u003dlsml://rQAAWCQuFCgSRB4uFCgkvqmbFgsskhN0iYUuTJunpEmSiE3SL14p\n [VICTOR VTR-9S]\u003dlsml://rQAAWh4iECgSOBYiECgeuipmyQE0884m6QUuTJunpE8Qm6TMFA\u003d\u003d"
        },
        {
          "file_name": "src/test/resources/lsmlv3stock.txt",
          "patch": "@@ -264,7 +264,6 @@\n [EXECUTIONER EXE-C(L)]\u003dlsml://rgFXQCgUUBJKEigUUEAC6yz0WefT0O8fvH7x+AlPSU87aefy6p6Onnt5DeQz1bI\u003d\n [MAULER MAL-MX90]\u003dlsml://rgFGIB4KKBIuEB4KKCDne6/ep3rMydZ3HCmsXFMUtuYFZ3HCmsXFMUtydg\u003d\u003d\n [BATTLEMASTER BLR-3S]\u003dlsml://rgCWLjYQMhJOFDYQMi7ne6/ep3rMS1x44YU1jY2Oww2GzSwwwww3DhTchjY2Oww2yA\u003d\u003d\n-[MISERY]\u003dlsml://rgBLNjQUPhJQGjQUPjbne6/ep3rMjG4cMMMMORYYbWh5OzCYQwyxYYbGNg\u003d\u003d\n [AWESOME AWS-8V]\u003dlsml://rgAfMDAUQhI8JjAUQjDne6/ep3rMyVhhhhhhwVhhsHcePFdhhhhhhhydhhsMNg\u003d\u003d\n [AWESOME AWS-8T]\u003dlsml://rgAeMDAUQhI8JjAUQjDne6/ep3rMhydhhhhhwVhhsHcePFdhhhhwVhhuTsg\u003d\n [AWESOME AWS-8R]\u003dlsml://rgAPMDAUQhI8JjAUQjDne6/ep3rMhydhhhhhhwVhhsHcePFdhhhhhhwVhhsMNg\u003d\u003d"
        }
      ]
    }
  },
  {
    "name": "RestUtils.httpRequest needs to handle parse errors when deserializing responses",
    "url": "https://github.com/confluentinc/schema-registry/issues/142",
    "description": "Both HTTP_OK and error responses parse the data without any protection against exceptions.  [This email thread](https://groups.google.com/forum/?utm_medium\u003demail\u0026utm_source\u003dfooter#!msg/confluent-platform/OaWMfE533OI/A_rJIzNHgKsJ) shows a case where it looks like we\u0027re getting HTML instead of JSON back from the server (the `\u003c` in the error message is probably the first opening tag). We should still be able to generate a reasonable error response to pass along if it was an HTTP error code, or generate a new error indicating the parsing problem if it was a 200 OK.\n",
    "keywords": [
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/confluentinc/schema-registry/commit/8e1154de1fd1352c2fe70d0ac24238a705e79f90",
      "files": [
        {
          "file_name": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/RestService.java",
          "patch": "@@ -16,6 +16,7 @@\n package io.confluent.kafka.schemaregistry.client.rest;\n \n import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import io.confluent.kafka.schemaregistry.client.rest.entities.Config;\n import io.confluent.kafka.schemaregistry.client.rest.entities.ErrorMessage;\n@@ -76,6 +77,7 @@\n           UPDATE_CONFIG_RESPONSE_TYPE_REFERENCE \u003d\n           new TypeReference\u003cConfigUpdateRequest\u003e() {\n           };\n+  private static final int JSON_PARSE_ERROR_CODE \u003d 50005;\n   private static ObjectMapper jsonDeserializer \u003d new ObjectMapper();\n \n   public static final Map\u003cString, String\u003e DEFAULT_REQUEST_PROPERTIES;\n@@ -152,7 +154,12 @@ public RestService(String baseUrlConfig) {\n         return null;\n       } else {\n         InputStream es \u003d connection.getErrorStream();\n-        ErrorMessage errorMessage \u003d jsonDeserializer.readValue(es, ErrorMessage.class);\n+        ErrorMessage errorMessage;\n+        try {\n+          errorMessage \u003d jsonDeserializer.readValue(es, ErrorMessage.class);\n+        } catch (JsonProcessingException e) {\n+          errorMessage \u003d new ErrorMessage(JSON_PARSE_ERROR_CODE, e.getMessage());\n+        }\n         es.close();\n         throw new RestClientException(errorMessage.getMessage(), responseCode,\n                 errorMessage.getErrorCode());"
        },
        {
          "file_name": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/exceptions/Errors.java",
          "patch": "@@ -44,6 +44,7 @@\n   public static final int OPERATION_TIMEOUT_ERROR_CODE \u003d 50002;\n   public static final int REQUEST_FORWARDING_FAILED_ERROR_CODE \u003d 50003;\n   public static final int UNKNOWN_MASTER_ERROR_CODE \u003d 50004;\n+  // 50005 is used by the RestService to indicate a JSON Parse Error\n \n   public static RestException subjectNotFoundException() {\n     return new RestNotFoundException(SUBJECT_NOT_FOUND_MESSAGE, SUBJECT_NOT_FOUND_ERROR_CODE);"
        }
      ]
    }
  },
  {
    "name": "Error parsing binary message",
    "url": "https://github.com/chochos/j8583/issues/61",
    "description": "When using Binary mode, there is an error when parsing numeric field having a odd number length. \nthe error is here :\npublic static BigInteger decodeToBigInteger(byte[] buf, int pos, int length)\nthrows IndexOutOfBoundsException {\nchar[] digits \u003d new char[length];\nint start \u003d 0;\nfor (int i \u003d pos; i \u003c pos + (length / 2) + (length % 2); i++) {\n\u003d\u003e Should ignore the first digit because there is a padding with 0 to fill the hex value (20 digits instead of 19!)\ndigits[start++] \u003d (char)(((buf[i] \u0026 0xf0) \u003e\u003e 4) + 48);\ndigits[start++] \u003d (char)((buf[i] \u0026 0x0f) + 48);\n}\nreturn new BigInteger(new String(digits));\n}\nTry this with field 2 length \u003d 19.\nYou should ignore the first zero when parsing odd binary value.\nFeel free to contact me if you need any help on this.\n",
    "keywords": [
      "new",
      "2",
      "binary",
      "length",
      "digits",
      ";",
      "error",
      "parsing",
      "int"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/chochos/j8583/commit/a0c8413171323c2d5efdfc19b50e1d9eeb4d67cb",
      "files": [
        {
          "file_name": "src/main/java/com/solab/iso8583/util/Bcd.java",
          "patch": "@@ -79,7 +79,12 @@ public static BigInteger decodeToBigInteger(byte[] buf, int pos, int length)\n             throws IndexOutOfBoundsException {\n         char[] digits \u003d new char[length];\n         int start \u003d 0;\n-        for (int i \u003d pos; i \u003c pos + (length / 2) + (length % 2); i++) {\n+        int i \u003d pos;\n+        if (length % 2 !\u003d 0) {\n+            digits[start++] \u003d (char)((buf[i] \u0026 0x0f) + 48);\n+            i++;\n+        }\n+        for (;i \u003c pos + (length / 2) + (length % 2); i++) {\n             digits[start++] \u003d (char)(((buf[i] \u0026 0xf0) \u003e\u003e 4) + 48);\n             digits[start++] \u003d (char)((buf[i] \u0026 0x0f) + 48);\n         }"
        }
      ]
    }
  },
  {
    "name": "parse shows error in spec when there is no error there",
    "url": "https://github.com/ignatov/intellij-erlang/issues/96",
    "description": "-spec get_all_env() -\u003e [] | [{atom(), any()}].\n\nthis is correct spec definition, but parser shows error \"type expected, got \u0027]\u0027\" for \u0027[]\u0027\n",
    "keywords": [
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/ignatov/intellij-erlang/commit/5c0d02710eb944cc42b7439461b36253caa822f3",
      "files": [
        {
          "file_name": "bin/Erlang.zip"
        },
        {
          "file_name": "bin/erlang.jar"
        },
        {
          "file_name": "gen/org/intellij/erlang/parser/ErlangParser.java",
          "patch": "@@ -4748,6 +4748,7 @@ private static boolean tuple_recoverer_0_0(PsiBuilder builder_, int level_) {\n   //   | ( q_atom \u0027(\u0027 top_types \u0027)\u0027)\n   //   | binary_type\n   //   | q_var\n+  //   | \u0027[\u0027\u0027]\u0027\n   //   | (\u0027[\u0027 top_type (\u0027,\u0027 \u0027...\u0027)? \u0027]\u0027)\n   //   | (\u0027{\u0027 top_types? \u0027}\u0027)\n   //   | (\u0027#\u0027 q_atom \u0027{\u0027 field_types? \u0027}\u0027)\n@@ -4766,6 +4767,7 @@ public static boolean type(PsiBuilder builder_, int level_) {\n     if (!result_) result_ \u003d type_7(builder_, level_ + 1);\n     if (!result_) result_ \u003d type_8(builder_, level_ + 1);\n     if (!result_) result_ \u003d type_9(builder_, level_ + 1);\n+    if (!result_) result_ \u003d type_10(builder_, level_ + 1);\n     if (result_) {\n       marker_.done(ERL_TYPE);\n     }\n@@ -4970,20 +4972,36 @@ private static boolean type_4_0(PsiBuilder builder_, int level_) {\n     return result_;\n   }\n \n-  // (\u0027[\u0027 top_type (\u0027,\u0027 \u0027...\u0027)? \u0027]\u0027)\n+  // \u0027[\u0027\u0027]\u0027\n   private static boolean type_7(PsiBuilder builder_, int level_) {\n     if (!recursion_guard_(builder_, level_, \"type_7\")) return false;\n-    return type_7_0(builder_, level_ + 1);\n+    boolean result_ \u003d false;\n+    Marker marker_ \u003d builder_.mark();\n+    result_ \u003d consumeToken(builder_, ERL_BRACKET_LEFT);\n+    result_ \u003d result_ \u0026\u0026 consumeToken(builder_, ERL_BRACKET_RIGHT);\n+    if (!result_) {\n+      marker_.rollbackTo();\n+    }\n+    else {\n+      marker_.drop();\n+    }\n+    return result_;\n+  }\n+\n+  // (\u0027[\u0027 top_type (\u0027,\u0027 \u0027...\u0027)? \u0027]\u0027)\n+  private static boolean type_8(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_8\")) return false;\n+    return type_8_0(builder_, level_ + 1);\n   }\n \n   // \u0027[\u0027 top_type (\u0027,\u0027 \u0027...\u0027)? \u0027]\u0027\n-  private static boolean type_7_0(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_7_0\")) return false;\n+  private static boolean type_8_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_8_0\")) return false;\n     boolean result_ \u003d false;\n     Marker marker_ \u003d builder_.mark();\n     result_ \u003d consumeToken(builder_, ERL_BRACKET_LEFT);\n     result_ \u003d result_ \u0026\u0026 top_type(builder_, level_ + 1);\n-    result_ \u003d result_ \u0026\u0026 type_7_0_2(builder_, level_ + 1);\n+    result_ \u003d result_ \u0026\u0026 type_8_0_2(builder_, level_ + 1);\n     result_ \u003d result_ \u0026\u0026 consumeToken(builder_, ERL_BRACKET_RIGHT);\n     if (!result_) {\n       marker_.rollbackTo();\n@@ -4995,21 +5013,21 @@ private static boolean type_7_0(PsiBuilder builder_, int level_) {\n   }\n \n   // (\u0027,\u0027 \u0027...\u0027)?\n-  private static boolean type_7_0_2(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_7_0_2\")) return false;\n-    type_7_0_2_0(builder_, level_ + 1);\n+  private static boolean type_8_0_2(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_8_0_2\")) return false;\n+    type_8_0_2_0(builder_, level_ + 1);\n     return true;\n   }\n \n   // (\u0027,\u0027 \u0027...\u0027)\n-  private static boolean type_7_0_2_0(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_7_0_2_0\")) return false;\n-    return type_7_0_2_0_0(builder_, level_ + 1);\n+  private static boolean type_8_0_2_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_8_0_2_0\")) return false;\n+    return type_8_0_2_0_0(builder_, level_ + 1);\n   }\n \n   // \u0027,\u0027 \u0027...\u0027\n-  private static boolean type_7_0_2_0_0(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_7_0_2_0_0\")) return false;\n+  private static boolean type_8_0_2_0_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_8_0_2_0_0\")) return false;\n     boolean result_ \u003d false;\n     Marker marker_ \u003d builder_.mark();\n     result_ \u003d consumeToken(builder_, ERL_COMMA);\n@@ -5024,18 +5042,18 @@ private static boolean type_7_0_2_0_0(PsiBuilder builder_, int level_) {\n   }\n \n   // (\u0027{\u0027 top_types? \u0027}\u0027)\n-  private static boolean type_8(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_8\")) return false;\n-    return type_8_0(builder_, level_ + 1);\n+  private static boolean type_9(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_9\")) return false;\n+    return type_9_0(builder_, level_ + 1);\n   }\n \n   // \u0027{\u0027 top_types? \u0027}\u0027\n-  private static boolean type_8_0(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_8_0\")) return false;\n+  private static boolean type_9_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_9_0\")) return false;\n     boolean result_ \u003d false;\n     Marker marker_ \u003d builder_.mark();\n     result_ \u003d consumeToken(builder_, ERL_CURLY_LEFT);\n-    result_ \u003d result_ \u0026\u0026 type_8_0_1(builder_, level_ + 1);\n+    result_ \u003d result_ \u0026\u0026 type_9_0_1(builder_, level_ + 1);\n     result_ \u003d result_ \u0026\u0026 consumeToken(builder_, ERL_CURLY_RIGHT);\n     if (!result_) {\n       marker_.rollbackTo();\n@@ -5047,27 +5065,27 @@ private static boolean type_8_0(PsiBuilder builder_, int level_) {\n   }\n \n   // top_types?\n-  private static boolean type_8_0_1(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_8_0_1\")) return false;\n+  private static boolean type_9_0_1(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_9_0_1\")) return false;\n     top_types(builder_, level_ + 1);\n     return true;\n   }\n \n   // (\u0027#\u0027 q_atom \u0027{\u0027 field_types? \u0027}\u0027)\n-  private static boolean type_9(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_9\")) return false;\n-    return type_9_0(builder_, level_ + 1);\n+  private static boolean type_10(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_10\")) return false;\n+    return type_10_0(builder_, level_ + 1);\n   }\n \n   // \u0027#\u0027 q_atom \u0027{\u0027 field_types? \u0027}\u0027\n-  private static boolean type_9_0(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_9_0\")) return false;\n+  private static boolean type_10_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_10_0\")) return false;\n     boolean result_ \u003d false;\n     Marker marker_ \u003d builder_.mark();\n     result_ \u003d consumeToken(builder_, ERL_RADIX);\n     result_ \u003d result_ \u0026\u0026 q_atom(builder_, level_ + 1);\n     result_ \u003d result_ \u0026\u0026 consumeToken(builder_, ERL_CURLY_LEFT);\n-    result_ \u003d result_ \u0026\u0026 type_9_0_3(builder_, level_ + 1);\n+    result_ \u003d result_ \u0026\u0026 type_10_0_3(builder_, level_ + 1);\n     result_ \u003d result_ \u0026\u0026 consumeToken(builder_, ERL_CURLY_RIGHT);\n     if (!result_) {\n       marker_.rollbackTo();\n@@ -5079,8 +5097,8 @@ private static boolean type_9_0(PsiBuilder builder_, int level_) {\n   }\n \n   // field_types?\n-  private static boolean type_9_0_3(PsiBuilder builder_, int level_) {\n-    if (!recursion_guard_(builder_, level_, \"type_9_0_3\")) return false;\n+  private static boolean type_10_0_3(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"type_10_0_3\")) return false;\n     field_types(builder_, level_ + 1);\n     return true;\n   }"
        },
        {
          "file_name": "grammars/erlang.bnf",
          "patch": "@@ -200,6 +200,7 @@ type ::\u003d\n   | ( q_atom \u0027(\u0027 top_types \u0027)\u0027)\n   | binary_type\n   | q_var\n+  | \u0027[\u0027\u0027]\u0027\n   | (\u0027[\u0027 top_type (\u0027,\u0027 \u0027...\u0027)? \u0027]\u0027)\n   | (\u0027{\u0027 top_types? \u0027}\u0027)\n   | (\u0027#\u0027 q_atom \u0027{\u0027 field_types? \u0027}\u0027)"
        },
        {
          "file_name": "testData/parser/96.erl",
          "patch": "@@ -0,0 +1,2 @@\n+-spec get_all_env() -\u003e [] | [{atom(), any()}].\n+get_all_env() -\u003e [].\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/96.txt",
          "patch": "@@ -0,0 +1,59 @@\n+ERL_FILE\n+  ERL_ATTRIBUTE\n+    PsiElement(-)(\u0027-\u0027)\n+    ERL_SPECIFICATION\n+      PsiElement(atom)(\u0027spec\u0027)\n+      ERL_TYPE_SPEC\n+        ERL_SPEC_FUN\n+          ERL_Q_ATOM\n+            PsiElement(atom)(\u0027get_all_env\u0027)\n+        ERL_TYPE_SIG\n+          ERL_FUN_TYPE\n+            PsiElement(()(\u0027(\u0027)\n+            PsiElement())(\u0027)\u0027)\n+            ERL_TOP_TYPE_CLAUSE\n+              PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+              ERL_TOP_TYPE\n+                ERL_TOP_TYPE_100_T\n+                  ERL_TYPE\n+                    PsiElement([)(\u0027[\u0027)\n+                    PsiElement(])(\u0027]\u0027)\n+                  PsiElement(|)(\u0027|\u0027)\n+                  ERL_TOP_TYPE_100_T\n+                    ERL_TYPE\n+                      PsiElement([)(\u0027[\u0027)\n+                      ERL_TOP_TYPE\n+                        ERL_TOP_TYPE_100_T\n+                          ERL_TYPE\n+                            PsiElement({)(\u0027{\u0027)\n+                            ERL_TOP_TYPE\n+                              ERL_TOP_TYPE_100_T\n+                                ERL_TYPE\n+                                  ERL_Q_ATOM\n+                                    PsiElement(atom)(\u0027atom\u0027)\n+                                  PsiElement(()(\u0027(\u0027)\n+                                  PsiElement())(\u0027)\u0027)\n+                            PsiElement(,)(\u0027,\u0027)\n+                            ERL_TOP_TYPE\n+                              ERL_TOP_TYPE_100_T\n+                                ERL_TYPE\n+                                  ERL_Q_ATOM\n+                                    PsiElement(atom)(\u0027any\u0027)\n+                                  PsiElement(()(\u0027(\u0027)\n+                                  PsiElement())(\u0027)\u0027)\n+                            PsiElement(})(\u0027}\u0027)\n+                      PsiElement(])(\u0027]\u0027)\n+  PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027get_all_env\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_LIST_EXPRESSION\n+          PsiElement([)(\u0027[\u0027)\n+          PsiElement(])(\u0027]\u0027)\n+  PsiElement(.)(\u0027.\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/org/intellij/erlang/parser/ErlangParserTest.java",
          "patch": "@@ -50,6 +50,7 @@ public ErlangParserTest() {\n   public void test74()                { doTest(true, false); }\n   public void testErrors()            { doTest(true, true); }\n   public void test51()                { doTest(true, false); } // performance\n+  public void test96()                { doTest(true, false); }\n \n   protected void doTest(boolean checkResult, boolean suppressErrors) {\n //    OVERWRITE_TESTDATA \u003d true;"
        }
      ]
    }
  },
  {
    "name": "plugin.bat error parsing Java options",
    "url": "https://github.com/elastic/elasticsearch/issues/13616",
    "description": "When running `plugin.bat` on Windows, passing Java options via the command line results in the following error:\n\n```\nc:\\elasticsearch\\bin\u003eplugin \"-Des.plugins.staging\u003dtrue\" install analysis-icu\nERROR: unknown command [-Des.plugins.staging\u003dtrue]. Use [-h] option to list available commands\n```\n\nAdding `-Des.plugins.staging\u003dtrue` directly to the script [here](https://github.com/elastic/elasticsearch/blob/master/distribution/src/main/resources/bin/plugin.bat#L14) works.\n\nThis might be because `plugin.bat` is missing the equivalent of [this in the bash script.](https://github.com/elastic/elasticsearch/blob/master/distribution/src/main/resources/bin/plugin#L69-L83).\n",
    "keywords": [
      "plugins",
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/63366add7d6ddba9acff8792f00c71921d8eb16f",
      "files": [
        {
          "file_name": "distribution/src/main/resources/bin/plugin.bat",
          "patch": "@@ -1,6 +1,6 @@\n @echo off\n \n-SETLOCAL\n+SETLOCAL enabledelayedexpansion\n \n if NOT DEFINED JAVA_HOME goto err\n \n@@ -9,9 +9,46 @@ for %%I in (\"%SCRIPT_DIR%..\") do set ES_HOME\u003d%%~dpfI\n \n TITLE Elasticsearch Plugin Manager ${project.version}\n \n+SET properties\u003d\n+SET args\u003d\n+\n+:loop\n+SET \"current\u003d%~1\"\n+SHIFT\n+IF \"x!current!\" \u003d\u003d \"x\" GOTO breakloop\n+\n+IF \"!current:~0,2%!\" \u003d\u003d \"-D\" (\n+    ECHO \"!current!\" | FINDSTR /C:\"\u003d\"\u003enul \u0026\u0026 (\n+         :: current matches -D*\u003d*\n+         IF \"x!properties!\" NEQ \"x\" (\n+             SET properties\u003d!properties! \"!current!\"\n+         ) ELSE (\n+             SET properties\u003d\"!current!\"\n+         )\n+    ) || (\n+         :: current matches -D*\n+         IF \"x!properties!\" NEQ \"x\" (\n+            SET properties\u003d!properties! \"!current!\u003d%~1\"\n+         ) ELSE (\n+            SET properties\u003d\"!current!\u003d%~1\"\n+         )\n+         SHIFT\n+    )\n+) ELSE (\n+    :: current matches *\n+    IF \"x!args!\" NEQ \"x\" (\n+        SET args\u003d!args! \"!current!\"\n+    ) ELSE (\n+        SET args\u003d\"!current!\"\n+    )\n+)\n+\n+GOTO loop\n+:breakloop\n+\n SET HOSTNAME\u003d%COMPUTERNAME%\n \n-\"%JAVA_HOME%\\bin\\java\" -client -Des.path.home\u003d\"%ES_HOME%\" -cp \"%ES_HOME%/lib/*;\" \"org.elasticsearch.plugins.PluginManagerCliParser\" %*\n+\"%JAVA_HOME%\\bin\\java\" -client -Des.path.home\u003d\"%ES_HOME%\" !properties! -cp \"%ES_HOME%/lib/*;\" \"org.elasticsearch.plugins.PluginManagerCliParser\" !args!\n goto finally\n \n "
        }
      ]
    }
  },
  {
    "name": "Error parsing",
    "url": "https://github.com/hsz/idea-latex/issues/9",
    "description": "I have the following code, and `\\begin{figure}` is highlighted as unexpected token.\n\n```\n% Command for centering image, keeping aspect ratio\n\\newcommand*{\\includeimage}[2][]{%\n    \\centering{\n        \\begin{figure}\n            \\includegraphics[width\u003d\\textwidth, height\u003d0.8\\paperheight, keepaspectratio]{#2}\n        \\end{figure}\n    }\n}\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/hsz/idea-latex/commit/10183b7f06e12d7c095a970db3d3dbcd4d744ed7",
      "files": [
        {
          "file_name": "resources/bnf/Latex.bnf",
          "patch": "@@ -62,10 +62,10 @@ instruction                     ::\u003d IDENTIFIER       instruction_extra { pin \u003d 1\n text                            ::\u003d ( ARGUMENT special_expr ? ) +\n \n \n+private instruction_extra       ::\u003d ASTERISK ? argument_group *\n private argument_group          ::\u003d expr_list_bracket | expr_list_brace | expr_list_paren\n-private argument_expr           ::\u003d ( special_expr * ( ARGUMENT | instruction ) special_expr * ) * { pin(\".*\") \u003d 2 }\n+private argument_expr           ::\u003d ( special_expr * ( ARGUMENT | section | instruction ) special_expr * ) * { pin(\".*\") \u003d 2 }\n private special_expr            ::\u003d SPECIAL | COLON | COMMA | LINE_BREAK | CRLF\n-private instruction_extra       ::\u003d ASTERISK ? argument_group *\n \n private meta expr_list_bracket  ::\u003d LBRACKET \u003c\u003csequence argument_expr special_expr\u003e\u003e ? RBRACKET { pin(\".*\") \u003d 1 }\n private meta expr_list_brace    ::\u003d LBRACE   \u003c\u003csequence argument_expr special_expr\u003e\u003e ? RBRACE   { pin(\".*\") \u003d 1 }"
        },
        {
          "file_name": "src/mobi/hsz/idea/latex/lexer/LatexLexer.java",
          "patch": "@@ -1,17 +1,20 @@\n-/* The following code was generated by JFlex 1.4.3 on 17.11.15 15:40 */\n+/* The following code was generated by JFlex 1.4.3 on 18.11.15 11:50 */\n \n package mobi.hsz.idea.latex.lexer;\n \n-import com.intellij.lexer.FlexLexer;\n+import java.io.File;\n+import java.util.List;\n+import com.intellij.lexer.*;\n import com.intellij.psi.tree.IElementType;\n-\n-import static com.intellij.psi.TokenType.WHITE_SPACE;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.vfs.VirtualFile;\n import static mobi.hsz.idea.latex.psi.LatexTypes.*;\n+import static com.intellij.psi.TokenType.*;\n \n /**\n  * This class is a scanner generated by \n  * \u003ca href\u003d\"http://www.jflex.de/\"\u003eJFlex\u003c/a\u003e 1.4.3\n- * on 17.11.15 15:40 from the specification file\n+ * on 18.11.15 11:50 from the specification file\n  * \u003ctt\u003e/home/hsz/Projects/idea-latex/src/mobi/hsz/idea/latex/lexer/Latex.flex\u003c/tt\u003e\n  */\n public class LatexLexer implements FlexLexer {"
        }
      ]
    }
  },
  {
    "name": "@if{} else {} parsing error in Simple Mode",
    "url": "https://github.com/rythmengine/rythmengine/issues/96",
    "description": "The following simple template rendered unexpected result:\n\n``` Java\n@if(true) {true} else {false}\n```\n\nExpected:\n\n``` Java\ntrue\n```\n\nFound:\n\n``` Java\ntrue else {false}\n```\n\nNote if a template has argument declaration then there is no such issue as Rythm will not treat it as simple template\n",
    "keywords": [
      "template",
      "java",
      "else",
      "true",
      "simple"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/rythmengine/rythmengine/commit/8e5f44a4b09837671518cb32e65808ce1f527780",
      "files": [
        {
          "file_name": "pom.xml",
          "patch": "@@ -9,7 +9,7 @@\n     \u003cgroupId\u003ecom.rythmengine\u003c/groupId\u003e\n     \u003cartifactId\u003erythm\u003c/artifactId\u003e\n     \u003cpackaging\u003ejar\u003c/packaging\u003e\n-    \u003cversion\u003e1.0.0-20121128\u003c/version\u003e\n+    \u003cversion\u003e1.0.0-20121210\u003c/version\u003e\n \n     \u003cname\u003eRythm Template Engine\u003c/name\u003e\n     \u003cdescription\u003eRythm Template Engine\u003c/description\u003e"
        },
        {
          "file_name": "samples/build.xml",
          "patch": "@@ -18,7 +18,7 @@\n         \u003cpathelement location\u003d\"${lib}/pat-1.5.3.jar\"/\u003e\r\n         \u003cpathelement location\u003d\"${lib}/org.eclipse.jdt.core-3.7.1.v_B76_R37x.jar\"/\u003e\r\n         \u003cpathelement location\u003d\"${lib}/commons-lang3-3.1.jar\"/\u003e\r\n-        \u003cpathelement location\u003d\"${lib}/rythm-1.0.0-20121128.jar\"/\u003e\r\n+        \u003cpathelement location\u003d\"${lib}/rythm-1.0.0-20121210.jar\"/\u003e\r\n     \u003c/path\u003e\r\n \r\n     \u003ctarget name\u003d\"init\"\u003e\r"
        },
        {
          "file_name": "src/main/java/com/greenlaw110/rythm/RythmEngine.java",
          "patch": "@@ -43,7 +43,7 @@\n  */\n public class RythmEngine {\n \n-    public static final String version \u003d \"1.0.0-20121128\";\n+    public static final String version \u003d \"1.0.0-20121210\";\n     public static String pluginVersion \u003d \"\";\n \n     Rythm.ReloadMethod reloadMethod \u003d Rythm.ReloadMethod.RESTART;"
        },
        {
          "file_name": "src/main/java/com/greenlaw110/rythm/internal/dialect/SimpleRythm.java",
          "patch": "@@ -16,7 +16,7 @@ public String a() {\n     protected Class\u003c?\u003e[] buildInParserClasses() {\n         // InvokeTagParse must be put in front of ExpressionParser as the later\u0027s matching pattern covers the former\n         // BraceParser must be put in front of ElseIfParser\n-        return new Class\u003c?\u003e[]{AssignParser.class, BreakParser.class, BraceParser.class, ContinueParser.class,\n+        return new Class\u003c?\u003e[]{AssignParser.class, BreakParser.class,  ContinueParser.class,\n                 CommentParser.class, DebugParser.class, EscapeParser.class, ElseForParser.class, ElseIfParser.class, BraceParser.class,\n                 InvokeParser.class, InvokeTagParser.class, ExpressionParser.class, ForEachParser.class, IfParser.class,\n                 ImportParser.class, NoSIMParser.class, RawParser.class, ReturnParser.class, SimpleParser.class,"
        }
      ]
    }
  },
  {
    "name": "Parser recovering error in if condition",
    "url": "https://github.com/Camelcade/Perl5-IDEA/issues/503",
    "description": "If condition with garbage inside (specifically two expression without operator betweeen them) recovers badly.\n\nSeems the problem is because of condition recovery with nested parens\n",
    "keywords": [
      "condition"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Camelcade/Perl5-IDEA/commit/1baa116392bcaf77b1559551449f1475ba50d822",
      "files": [
        {
          "file_name": "src/META-INF/plugin.xml",
          "patch": "@@ -47,12 +47,14 @@\n         \u003cli\u003eSUPER methods now resolved properly even if invoked on unknown variable, fixes #534\u003c/li\u003e\n         \u003cli\u003eHere-doc reference should work fine after converting string to here-doc, fixes #541\u003c/li\u003e\n         \u003cli\u003eRemoved redundant indetion of eval and do blocks on re-formatting, fixes #523\u003c/li\u003e\n-        \u003cli\u003ePOD is now properly treated as statement, fixes #522\u003c/li\u003e\n+        \u003cli\u003ePOD is now properly treated as statement (which can, however, be before elsif/else/continue blocks), fixes #522\u003c/li\u003e\n         \u003cli\u003ePackage names auto-completion now works in qw expression, fixes #540\u003c/li\u003e\n         \u003cli\u003eforeach compound live template now has default values which prevents formatting bugs on inserting, fixes #519\u003c/li\u003e\n         \u003cli\u003eRecursive inheritance inspection is absolutely redundant, disabled, fixes #517\u003c/li\u003e\n         \u003cli\u003eLocal re-declarations of built-in variables are not marked as unused anymore (like \u003ccode\u003e$/\u003c/code\u003e), fixes #533\u003c/li\u003e\n         \u003cli\u003eRemoved empty prototype from generated constructor, fixes #537\u003c/li\u003e\n+        \u003cli\u003eExtra close parenthesis and brackets now handled smarter, should improve parser\u0027s recovery, fixes #503\u003c/li\u003e\n+        \u003cli\u003eError block contents now couldn\u0027t be re-formatted to avoid unexpected effects, fixes #506\u003c/li\u003e\n       \u003c/ul\u003e\n       \u003c/p\u003e\n "
        },
        {
          "file_name": "src/com/perl5/lang/perl/idea/formatter/PerlFormattingBlock.java",
          "patch": "@@ -31,6 +31,7 @@\n import com.intellij.psi.tree.TokenSet;\n import com.perl5.lang.perl.idea.formatter.settings.PerlCodeStyleSettings;\n import com.perl5.lang.perl.lexer.PerlElementTypes;\n+import com.perl5.lang.perl.parser.PerlParserUtil;\n import com.perl5.lang.perl.psi.impl.PerlHeredocElementImpl;\n import com.perl5.lang.perl.psi.references.PerlHeredocReference;\n import org.jetbrains.annotations.NotNull;\n@@ -51,7 +52,8 @@\n \t\t\tHEREDOC,\n \t\t\tHEREDOC_QX,\n \t\t\tHEREDOC_QQ,\n-\t\t\tPOD\n+\t\t\tPOD,\n+\t\t\tPerlParserUtil.DUMMY_BLOCK\n \t);\n \n \t/**\n@@ -125,7 +127,9 @@ private static boolean shouldCreateBlockFor(ASTNode node)\n \tprotected List\u003cBlock\u003e buildChildren()\n \t{\n \t\tif (mySubBlocks \u003d\u003d null)\n+\t\t{\n \t\t\tmySubBlocks \u003d buildSubBlocks();\n+\t\t}\n \n \t\t// fixme what is re-creation for?\n \t\treturn new ArrayList\u003cBlock\u003e(mySubBlocks);"
        },
        {
          "file_name": "src/com/perl5/lang/perl/parser/Perl5.bnf",
          "patch": "@@ -414,7 +414,8 @@ private namespace_item ::\u003d\n         | statement\n         | block_compound  // put it after statement to handle anon hashes before it.\n         | annotation\n-        | POD\n+\t\t| POD\n+\t\t| \u003c\u003cparseBadCharacters\u003e\u003e // Fallback for bad characters\n      )\n \n nyi_statement ::\u003d OPERATOR_HELLIP\n@@ -437,8 +438,8 @@ named_block ::\u003d BLOCK_NAME block\n \n if_compound ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_IF conditional_block if_compound_elsif * [unconditional_block]  {pin\u003d2}\n unless_compound ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_UNLESS conditional_block if_compound_elsif * [unconditional_block]  {pin\u003d2}\n-private if_compound_elsif ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_ELSIF conditional_block  {pin\u003d2}\n-unconditional_block ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_ELSE block {pin\u003d2}\n+private if_compound_elsif ::\u003d [POD] [PACKAGE_CORE_IDENTIFIER] RESERVED_ELSIF conditional_block  {pin\u003d3}\n+unconditional_block ::\u003d [POD] [PACKAGE_CORE_IDENTIFIER] RESERVED_ELSE block {pin\u003d3}\n \n conditional_block ::\u003d condition_statement block {pin\u003d1 name\u003d\"Conditional block\"}\n condition_statement ::\u003d LEFT_PAREN condition_statement_expr RIGHT_PAREN {pin\u003d1 name\u003d\"Condition\"}\n@@ -455,7 +456,7 @@ default_compound ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_DEFAULT block {pin\u003d2}\n while_compound ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_WHILE conditional_block_while [continue_block]  {pin\u003d2}\n until_compound ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_UNTIL conditional_block [continue_block]  {pin\u003d2}\n \n-continue_block ::\u003d [PACKAGE_CORE_IDENTIFIER] RESERVED_CONTINUE block {pin\u003d2}\n+continue_block ::\u003d [POD] [PACKAGE_CORE_IDENTIFIER] RESERVED_CONTINUE block {pin\u003d3}\n \n private block_compound ::\u003d block [continue_block]\n \n@@ -483,7 +484,6 @@ private statement_body ::\u003d\n     | no_statements\n     | sub_declaration\n     | normal_statement\n-    | \u003c\u003cparseBadCharacters\u003e\u003e // this is kinda hack to handle bad characters we have\n     {recoverWhile\u003drecover_statement}\n \n private normal_statement ::\u003d expr [\u003c\u003cparseStatementModifier\u003e\u003e] {pin\u003d1}"
        },
        {
          "file_name": "src/com/perl5/lang/perl/parser/PerlParserUtil.java",
          "patch": "@@ -1598,18 +1598,38 @@ public static boolean parseRegexContent(PsiBuilder b, int l, boolean isExtended)\n \t **/\n \tpublic static boolean parseBadCharacters(PsiBuilder b, int l)\n \t{\n-\t\tif (!b.eof() \u0026\u0026 b.getTokenType() \u003d\u003d TokenType.BAD_CHARACTER)\n+\t\tIElementType tokenType \u003d b.getTokenType();\n+\n+\t\tif (tokenType \u003d\u003d null || tokenType \u003d\u003d RESERVED_PACKAGE || tokenType \u003d\u003d RIGHT_BRACE || tokenType \u003d\u003d REGEX_QUOTE_CLOSE || tokenType \u003d\u003d SEMICOLON || tokenType \u003d\u003d EMBED_MARKER_SEMICOLON)\n \t\t{\n-\t\t\tPsiBuilder.Marker m \u003d b.mark();\n+\t\t\treturn false;\n+\t\t}\n \n+\t\tPsiBuilder.Marker m \u003d b.mark();\n+\t\tb.advanceLexer();\n+\n+\t\tif (tokenType \u003d\u003d TokenType.BAD_CHARACTER)\n+\t\t{\n \t\t\twhile (b.getTokenType() \u003d\u003d TokenType.BAD_CHARACTER)\n \t\t\t{\n \t\t\t\tb.advanceLexer();\n \t\t\t}\n+\t\t\tm.error(\"Unexpected tokens, plugin currently supports only ASCII identifiers\");\n+\t\t}\n+\t\telse if (tokenType \u003d\u003d RIGHT_PAREN)\n+\t\t{\n+\t\t\tm.error(\"Unopened closing parenthesis\");\n+\t\t}\n+\t\telse if (tokenType \u003d\u003d RIGHT_BRACKET)\n+\t\t{\n+\t\t\tm.error(\"Unopened closing bracket\");\n+\t\t}\n+\t\telse\n+\t\t{\n \t\t\tm.error(\"Unexpected token\");\n-\t\t\treturn true;\n \t\t}\n-\t\treturn false;\n+\n+\t\treturn true;\n \t}\n \n \tpublic static boolean parseIncompleteAnnotation(PsiBuilder b, int l)"
        }
      ]
    }
  },
  {
    "name": "[Parse error] unless attribute of the exec function",
    "url": "https://github.com/iwarapter/sonar-puppet/issues/58",
    "description": "The following piece of code does not parse:\n\n```\nexec { \u0027titi\u0027:\n  unless \u003d\u003e \u0027toto\u0027,\n}\n```\n\nbecause it looks like `unless` is being parsed as https://docs.puppetlabs.com/puppet/latest/reference/lang_conditional.html#unless-statements instead of an attribute of the `exec` function: https://docs.puppetlabs.com/references/latest/type.html#exec-attributes\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/iwarapter/sonar-puppet/commit/32783bb9a8a899b7f0ed75f15596ab0dc7ef01b9",
      "files": [
        {
          "file_name": "puppet-squid/src/main/java/com/iadams/sonarqube/puppet/api/PuppetGrammar.java",
          "patch": "@@ -270,22 +270,23 @@ public static void grammar(LexerfulGrammarBuilder b) {\n         b.rule(END_COMMA).is(b.optional(COMMA));\n \t\tb.rule(END_SEMIC).is(b.optional(SEMIC));\n \n-        b.rule(KEYWORD).is(\n-                AND,\n-                CASE,\n-                CLASS,\n-                DEFAULT,\n-                DEFINE,\n-                ELSE,\n-                ELSIF,\n-                IF,\n-                IN,\n-                IMPORT,\n-                INHERITS,\n-                NODE,\n-                OR,\n-                UNDEF,\n-                UNLESS);\n+        b.rule(KEYWORD).is(b.firstOf(\n+\t\t\t\tAND,\n+\t\t\t\tCASE,\n+\t\t\t\tCLASS,\n+\t\t\t\tDEFAULT,\n+\t\t\t\tDEFINE,\n+\t\t\t\tELSE,\n+\t\t\t\tELSIF,\n+\t\t\t\tIF,\n+\t\t\t\tIN,\n+\t\t\t\tIMPORT,\n+\t\t\t\tINHERITS,\n+\t\t\t\tNODE,\n+\t\t\t\tOR,\n+\t\t\t\tUNDEF,\n+\t\t\t\tUNLESS));\n+\n     }\n \n     /**\n@@ -554,7 +555,7 @@ public static void expressions(LexerfulGrammarBuilder b){\n         b.rule(ASSIGNMENT_EXPRESSION).is(BOOL_EXPRESSION, b.zeroOrMore(EQUALS, BOOL_EXPRESSION)).skipIfOneChild();\n \n         b.rule(ATOM).is(b.firstOf(\n-                HASH_ARRAY_ACCESS,\n+                HASH_ARRAY_ACCESSES,\n                 b.sequence(LPAREN, ASSIGNMENT_EXPRESSION, RPAREN),\n                 SELECTOR,\n                 REGULAR_EXPRESSION_LITERAL,\n@@ -616,9 +617,9 @@ public static void expressions(LexerfulGrammarBuilder b){\n \t\t\t\tNUMBER,\n                 NAME,\n                 TRUE, FALSE,\n+                HASH_ARRAY_ACCESSES,\n                 VARIABLE,\n                 ARRAY,\n-                HASH_ARRAY_ACCESSES,\n                 RESOURCE_REF,\n                 UNDEF));\n "
        },
        {
          "file_name": "puppet-squid/src/test/groovy/com/iadams/sonarqube/puppet/parser/compound_statements/ResourceSpec.groovy",
          "patch": "@@ -86,11 +86,11 @@ public class ResourceSpec extends GrammarSpec {\n \t\tassertThat(p).matches(\u0027::apache::mod { \\\u0027expires\\\u0027: }\u0027)\n \t}\n \n-\tdef \"resource with before attribute\"(){\n+\tdef \"resource with unless attribute\"(){\n \t\texpect:\n-\t\tassertThat(p).matches(\u0027\u0027\u0027file { \u0027expires.conf\u0027:\n-\t\t\t\t\t\t\t\t\tbefore  \u003d\u003e File[$::apache::mod_dir],\n-\t\t\t\t\t\t\t\t  }\u0027\u0027\u0027)\n+\t\tassertThat(p).matches(\u0027\u0027\u0027exec { \u0027titi\u0027:\n+\t\t\t\t\t\t\t\t  unless \u003d\u003e \u0027toto\u0027,\n+\t\t\t\t\t\t\t\t}\u0027\u0027\u0027)\n \t}\n \n \tdef \"handle multiple resource bodies\"(){"
        },
        {
          "file_name": "puppet-squid/src/test/groovy/com/iadams/sonarqube/puppet/parser/compound_statements/SelectorSpec.groovy",
          "patch": "@@ -127,4 +127,11 @@ public class SelectorSpec extends GrammarSpec {\n \t\t\t\t\t\t\t\t root    \u003d\u003e 0,\n \t\t\t\t\t\t\t\t}\u0027\u0027\u0027)\n \t}\n+\n+\tdef \"hash accessors work in selectors\"(){\n+\t\texpect:\n+\t\tassertThat(p).matches(\u0027\u0027\u0027$abc ? {\n+\t\t\t\t\t\t\t\t  false   \u003d\u003e $::ntp_server[0],\n+\t\t\t\t\t\t\t\t}\u0027\u0027\u0027)\n+\t}\n }"
        },
        {
          "file_name": "puppet-squid/src/test/groovy/com/iadams/sonarqube/puppet/parser/simple_statements/FunctionSpec.groovy",
          "patch": "@@ -90,4 +90,9 @@ class FunctionSpec extends GrammarSpec {\n         expect:\n         assertThat(p).matches(\u0027include $my_classes\u0027)\n     }\n+\n+\tdef \"function using hash array accessor\"(){\n+\t\texpect:\n+\t\tassertThat(p).matches(\u0027dirname($logfiles[1][1])\u0027)\n+\t}\n }\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Syntax errors during parsing of functx.xq",
    "url": "https://github.com/ligasgr/intellij-xquery/issues/8",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ligasgr/intellij-xquery/commit/46e140e97baf401c33d994a8dd9e0174de01aa27",
      "files": [
        {
          "file_name": "src/main/java/org/intellij/xquery/lexer/XQuery.flex",
          "patch": "@@ -124,6 +124,8 @@ Char\u003d\\u9| \\uA | \\uD | [\\u20-\\uD7FF] | [\\uE000-\\uFFFD] | [\\u10000-\\u10FFFF]\n \"\u003c\" / {S}? {IntegerLiteral}               {return XQueryTypes.LT_CHAR;}\n \"\u003c\" / {S}? {DecimalLiteral}               {return XQueryTypes.LT_CHAR;}\n \"\u003c\" / {S}? {DoubleLiteral}                {return XQueryTypes.LT_CHAR;}\n+\"\u003c\" / {S}? {NCName} {S}? \"(\"              {return XQueryTypes.LT_CHAR;}\n+\"\u003c\" / {S}? {NCName} {S}? \":\" {NCName} {S}? \"(\" {return XQueryTypes.LT_CHAR;}\n \"\u003c\u003d\"                                      {return XQueryTypes.LE_CHARS;}\n \"\u003e\u003d\"                                      {return XQueryTypes.GE_CHARS;}\n \"\u003c\"                                       {pushState(START_TAG); return XQueryTypes.LT_CHAR;}\n@@ -272,7 +274,7 @@ Char\u003d\\u9| \\uA | \\uD | [\\u20-\\uD7FF] | [\\uE000-\\uFFFD] | [\\u10000-\\u10FFFF]\n }\n \n \u003cSTART_TAG\u003e {\n-{S}                                       {return XQueryTypes.S;}\n+{S}                                       {return TokenType.WHITE_SPACE;}\n {NCName}                                  {return XQueryTypes.NCNAME;}\n \":\"                                       {return XQueryTypes.COLON;}\n \"\u003d\"                                       {return XQueryTypes.EQUAL;}\n@@ -299,7 +301,7 @@ Char\u003d\\u9| \\uA | \\uD | [\\u20-\\uD7FF] | [\\uE000-\\uFFFD] | [\\u10000-\\u10FFFF]\n }\n \n \u003cEND_TAG\u003e {\n-{S}                                       {return XQueryTypes.S;}\n+{S}                                       {return TokenType.WHITE_SPACE;}\n {NCName}                                  {return XQueryTypes.NCNAME;}\n \":\"                                       {return XQueryTypes.COLON;}\n \"\u003e\"                                       {popState(); return XQueryTypes.GT_CHAR;}"
        },
        {
          "file_name": "src/main/java/org/intellij/xquery/lexer/_XQueryLexer.java"
        },
        {
          "file_name": "src/test/java/org/intellij/xquery/lexer/XQueryLexerTest.java",
          "patch": "@@ -573,4 +573,58 @@ public void testImportModuleWithoutPrefix() throws Exception {\n                 \";\", \";\"\n         });\n     }\n+\n+    public void testComparisonWithFunctionResult() throws Exception {\n+        assertProducedTokens(\"if (0 \u003c string-length(\u0027\u0027)) then 0 else 1\", new String[]{\n+                \"if\", \"if\",\n+                \"WHITE_SPACE\", \" \",\n+                \"(\", \"(\",\n+                \"IntegerLiteral\", \"0\",\n+                \"WHITE_SPACE\", \" \",\n+                \"\u003c\", \"\u003c\",\n+                \"WHITE_SPACE\", \" \",\n+                \"NCName\", \"string-length\",\n+                \"(\", \"(\",\n+                \"WHITE_SPACE\", \"\",\n+                \"StringLiteral\", \"\u0027\u0027\",\n+                \")\", \")\",\n+                \")\", \")\",\n+                \"WHITE_SPACE\", \" \",\n+                \"then\", \"then\",\n+                \"WHITE_SPACE\", \" \",\n+                \"IntegerLiteral\", \"0\",\n+                \"WHITE_SPACE\", \" \",\n+                \"else\", \"else\",\n+                \"WHITE_SPACE\", \" \",\n+                \"IntegerLiteral\", \"1\"\n+        });\n+    }\n+\n+    public void testComparisonWithFunctionResultWithNamespacePrefix() throws Exception {\n+        assertProducedTokens(\"if (0 \u003c functx:string-length(\u0027\u0027)) then 0 else 1\", new String[]{\n+                \"if\", \"if\",\n+                \"WHITE_SPACE\", \" \",\n+                \"(\", \"(\",\n+                \"IntegerLiteral\", \"0\",\n+                \"WHITE_SPACE\", \" \",\n+                \"\u003c\", \"\u003c\",\n+                \"WHITE_SPACE\", \" \",\n+                \"NCName\", \"functx\",\n+                \":\", \":\",\n+                \"NCName\", \"string-length\",\n+                \"(\", \"(\",\n+                \"WHITE_SPACE\", \"\",\n+                \"StringLiteral\", \"\u0027\u0027\",\n+                \")\", \")\",\n+                \")\", \")\",\n+                \"WHITE_SPACE\", \" \",\n+                \"then\", \"then\",\n+                \"WHITE_SPACE\", \" \",\n+                \"IntegerLiteral\", \"0\",\n+                \"WHITE_SPACE\", \" \",\n+                \"else\", \"else\",\n+                \"WHITE_SPACE\", \" \",\n+                \"IntegerLiteral\", \"1\"\n+        });\n+    }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "src/test/java/org/intellij/xquery/parser/XQueryParserTest.java",
          "patch": "@@ -121,6 +121,10 @@ public void testProcessingInstruction() throws Exception {\n         doTest(true);\n     }\n \n+    public void testFunctx() throws Exception {\n+        doTest(true);\n+    }\n+\n     @Override\n     protected String getTestDataPath() {\n         return \"src/test/testData/org/intellij/xquery\";"
        },
        {
          "file_name": "src/test/testData/org/intellij/xquery/parser/Functx.txt"
        },
        {
          "file_name": "src/test/testData/org/intellij/xquery/parser/Functx.xq",
          "patch": "@@ -0,0 +1,1409 @@\n+(:~\n+\n+ : --------------------------------\n+ : The FunctX XQuery Function Library\n+ : --------------------------------\n+\n+ : Copyright (C) 2007 Datypic\n+\n+ : This library is free software; you can redistribute it and/or\n+ : modify it under the terms of the GNU Lesser General Public\n+ : License as published by the Free Software Foundation; either\n+ : version 2.1 of the License.\n+\n+ : This library is distributed in the hope that it will be useful,\n+ : but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ : MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ : Lesser General Public License for more details.\n+\n+ : You should have received a copy of the GNU Lesser General Public\n+ : License along with this library; if not, write to the Free Software\n+ : Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+\n+ : For more information on the FunctX XQuery library, contact contrib@functx.com.\n+\n+ : @version 1.0\n+ : @see     http://www.xqueryfunctions.com\n+ :)\n+module namespace  functx \u003d \"http://www.functx.com\" ;\n+\n+declare function functx:add-attributes\n+( $elements as element()* ,\n+\t\t$attrNames as xs:QName* ,\n+\t\t$attrValues as xs:anyAtomicType* )  as element()? {\n+\n+\tfor $element in $elements\n+\treturn element { node-name($element)}\n+\t{ for $attrName at $seq in $attrNames\n+\treturn if ($element/@*[node-name(.) \u003d $attrName])\n+\tthen ()\n+\telse attribute {$attrName}\n+\t\t{$attrValues[$seq]},\n+\t$element/@*,\n+\t$element/node() }\n+} ;\n+\n+declare function functx:add-months\n+( $date as xs:anyAtomicType? ,\n+\t\t$months as xs:integer )  as xs:date? {\n+\n+\txs:date($date) + functx:yearMonthDuration(0,$months)\n+} ;\n+\n+declare function functx:add-or-update-attributes\n+( $elements as element()* ,\n+\t\t$attrNames as xs:QName* ,\n+\t\t$attrValues as xs:anyAtomicType* )  as element()? {\n+\n+\tfor $element in $elements\n+\treturn element { node-name($element)}\n+\t{ for $attrName at $seq in $attrNames\n+\treturn attribute {$attrName}\n+\t{$attrValues[$seq]},\n+\t$element/@*[not(node-name(.) \u003d $attrNames)],\n+\t$element/node() }\n+} ;\n+\n+declare function functx:all-whitespace\n+( $arg as xs:string? )  as xs:boolean {\n+\n+\tnormalize-space($arg) \u003d \u0027\u0027\n+} ;\n+\n+declare function functx:are-distinct-values\n+( $seq as xs:anyAtomicType* )  as xs:boolean {\n+\n+\tcount(distinct-values($seq)) \u003d count($seq)\n+} ;\n+\n+declare function functx:atomic-type\n+( $values as xs:anyAtomicType* )  as xs:string* {\n+\n+\tfor $val in $values\n+\treturn\n+\t(if ($val instance of xs:untypedAtomic) then \u0027xs:untypedAtomic\u0027\n+\telse if ($val instance of xs:anyURI) then \u0027xs:anyURI\u0027\n+\t\telse if ($val instance of xs:ENTITY) then \u0027xs:ENTITY\u0027\n+\t\t\telse if ($val instance of xs:ID) then \u0027xs:ID\u0027\n+\t\t\t\telse if ($val instance of xs:NMTOKEN) then \u0027xs:NMTOKEN\u0027\n+\t\t\t\t\telse if ($val instance of xs:language) then \u0027xs:language\u0027\n+\t\t\t\t\t\telse if ($val instance of xs:NCName) then \u0027xs:NCName\u0027\n+\t\t\t\t\t\t\telse if ($val instance of xs:Name) then \u0027xs:Name\u0027\n+\t\t\t\t\t\t\t\telse if ($val instance of xs:token) then \u0027xs:token\u0027\n+\t\t\t\t\t\t\t\t\telse if ($val instance of xs:normalizedString)\n+\t\t\t\t\t\t\t\t\t\tthen \u0027xs:normalizedString\u0027\n+\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:string) then \u0027xs:string\u0027\n+\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:QName) then \u0027xs:QName\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:boolean) then \u0027xs:boolean\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:base64Binary) then \u0027xs:base64Binary\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:hexBinary) then \u0027xs:hexBinary\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:byte) then \u0027xs:byte\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:short) then \u0027xs:short\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:int) then \u0027xs:int\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:long) then \u0027xs:long\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:unsignedByte) then \u0027xs:unsignedByte\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:unsignedShort) then \u0027xs:unsignedShort\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:unsignedInt) then \u0027xs:unsignedInt\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:unsignedLong) then \u0027xs:unsignedLong\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:positiveInteger)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:positiveInteger\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:nonNegativeInteger)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:nonNegativeInteger\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:negativeInteger)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:negativeInteger\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:nonPositiveInteger)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:nonPositiveInteger\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:integer) then \u0027xs:integer\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:decimal) then \u0027xs:decimal\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:float) then \u0027xs:float\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:double) then \u0027xs:double\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:date) then \u0027xs:date\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:time) then \u0027xs:time\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:dateTime) then \u0027xs:dateTime\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:dayTimeDuration)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:dayTimeDuration\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:yearMonthDuration)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen \u0027xs:yearMonthDuration\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:duration) then \u0027xs:duration\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:gMonth) then \u0027xs:gMonth\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:gYear) then \u0027xs:gYear\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:gYearMonth) then \u0027xs:gYearMonth\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:gDay) then \u0027xs:gDay\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse if ($val instance of xs:gMonthDay) then \u0027xs:gMonthDay\u0027\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse \u0027unknown\u0027)\n+} ;\n+\n+declare function functx:avg-empty-is-zero\n+( $values as xs:anyAtomicType* ,\n+\t\t$allNodes as node()* )  as xs:double {\n+\n+\tif (empty($allNodes))\n+\tthen 0\n+\telse sum($values[string(.) !\u003d \u0027\u0027]) div count($allNodes)\n+} ;\n+\n+declare function functx:between-exclusive\n+( $value as xs:anyAtomicType? ,\n+\t\t$minValue as xs:anyAtomicType ,\n+\t\t$maxValue as xs:anyAtomicType )  as xs:boolean {\n+\n+\t$value \u003e $minValue and $value \u003c $maxValue\n+} ;\n+\n+declare function functx:between-inclusive\n+( $value as xs:anyAtomicType? ,\n+\t\t$minValue as xs:anyAtomicType ,\n+\t\t$maxValue as xs:anyAtomicType )  as xs:boolean {\n+\n+\t$value \u003e\u003d $minValue and $value \u003c\u003d $maxValue\n+} ;\n+\n+declare function functx:camel-case-to-words\n+( $arg as xs:string? ,\n+\t\t$delim as xs:string )  as xs:string {\n+\n+\tconcat(substring($arg,1,1),\n+\t\t\treplace(substring($arg,2),\u0027(\\p{Lu})\u0027,\n+\t\t\t\t\tconcat($delim, \u0027$1\u0027)))\n+} ;\n+\n+declare function functx:capitalize-first\n+( $arg as xs:string? )  as xs:string? {\n+\n+\tconcat(upper-case(substring($arg,1,1)),\n+\t\t\tsubstring($arg,2))\n+} ;\n+\n+declare function functx:change-element-names-deep\n+( $nodes as node()* ,\n+\t\t$oldNames as xs:QName* ,\n+\t\t$newNames as xs:QName* )  as node()* {\n+\n+\tif (count($oldNames) !\u003d count($newNames))\n+\tthen error(xs:QName(\u0027functx:Different_number_of_names\u0027))\n+\telse\n+\t\tfor $node in $nodes\n+\t\treturn if ($node instance of element())\n+\t\tthen element\n+\t\t\t{functx:if-empty\n+\t\t\t($newNames[index-of($oldNames,\n+\t\t\t\t\tnode-name($node))],\n+\t\t\t\t\tnode-name($node)) }\n+\t\t\t{$node/@*,\n+\t\t\tfunctx:change-element-names-deep($node/node(),\n+\t\t\t\t\t$oldNames, $newNames)}\n+\t\telse if ($node instance of document-node())\n+\t\t\tthen functx:change-element-names-deep($node/node(),\n+\t\t\t\t\t\t$oldNames, $newNames)\n+\t\t\telse $node\n+} ;\n+\n+declare function functx:change-element-ns-deep\n+( $nodes as node()* ,\n+\t\t$newns as xs:string ,\n+\t\t$prefix as xs:string )  as node()* {\n+\n+\tfor $node in $nodes\n+\treturn if ($node instance of element())\n+\tthen (element\n+\t\t{QName ($newns,\n+\t\t\t\tconcat($prefix,\n+\t\t\t\t\t\tif ($prefix \u003d \u0027\u0027)\n+\t\t\t\t\t\tthen \u0027\u0027\n+\t\t\t\t\t\telse \u0027:\u0027,\n+\t\t\t\t\t\tlocal-name($node)))}\n+\t\t{$node/@*,\n+\t\tfunctx:change-element-ns-deep($node/node(),\n+\t\t\t\t$newns, $prefix)})\n+\telse if ($node instance of document-node())\n+\t\tthen functx:change-element-ns-deep($node/node(),\n+\t\t\t\t\t$newns, $prefix)\n+\t\telse $node\n+} ;\n+\n+declare function functx:change-element-ns\n+( $elements as element()* ,\n+\t\t$newns as xs:string ,\n+\t\t$prefix as xs:string )  as element()? {\n+\n+\tfor $element in $elements\n+\treturn\n+\telement {QName ($newns,\n+\t\t\tconcat($prefix,\n+\t\t\t\t\tif ($prefix \u003d \u0027\u0027)\n+\t\t\t\t\tthen \u0027\u0027\n+\t\t\t\t\telse \u0027:\u0027,\n+\t\t\t\t\tlocal-name($element)))}\n+\t{$element/@*, $element/node()}\n+} ;\n+\n+declare function functx:chars\n+( $arg as xs:string? )  as xs:string* {\n+\n+\tfor $ch in string-to-codepoints($arg)\n+\treturn codepoints-to-string($ch)\n+} ;\n+\n+declare function functx:contains-any-of\n+( $arg as xs:string? ,\n+\t\t$searchStrings as xs:string* )  as xs:boolean {\n+\n+\tsome $searchString in $searchStrings\n+\tsatisfies contains($arg,$searchString)\n+} ;\n+\n+declare function functx:contains-case-insensitive\n+( $arg as xs:string? ,\n+\t\t$substring as xs:string )  as xs:boolean? {\n+\n+\tcontains(upper-case($arg), upper-case($substring))\n+} ;\n+\n+declare function functx:contains-word\n+( $arg as xs:string? ,\n+\t\t$word as xs:string )  as xs:boolean {\n+\n+\tmatches(upper-case($arg),\n+\t\t\tconcat(\u0027^(.*\\W)?\u0027,\n+\t\t\t\t\tupper-case(functx:escape-for-regex($word)),\n+\t\t\t\t\t\u0027(\\W.*)?$\u0027))\n+} ;\n+\n+declare function functx:copy-attributes\n+( $copyTo as element() ,\n+\t\t$copyFrom as element() )  as element() {\n+\n+\telement { node-name($copyTo)}\n+\t{ $copyTo/@*[not(node-name(.) \u003d $copyFrom/@*/node-name(.))],\n+\t$copyFrom/@*,\n+\t$copyTo/node() }\n+\n+} ;\n+\n+declare function functx:date\n+( $year as xs:anyAtomicType ,\n+\t\t$month as xs:anyAtomicType ,\n+\t\t$day as xs:anyAtomicType )  as xs:date {\n+\n+\txs:date(\n+\t\t\tconcat(\n+\t\t\t\t\tfunctx:pad-integer-to-length(xs:integer($year),4),\u0027-\u0027,\n+\t\t\t\t\tfunctx:pad-integer-to-length(xs:integer($month),2),\u0027-\u0027,\n+\t\t\t\t\tfunctx:pad-integer-to-length(xs:integer($day),2)))\n+} ;\n+\n+declare function functx:dateTime\n+( $year as xs:anyAtomicType ,\n+\t\t$month as xs:anyAtomicType ,\n+\t\t$day as xs:anyAtomicType ,\n+\t\t$hour as xs:anyAtomicType ,\n+\t\t$minute as xs:anyAtomicType ,\n+\t\t$second as xs:anyAtomicType )  as xs:dateTime {\n+\n+\txs:dateTime(\n+\t\t\tconcat(functx:date($year,$month,$day),\u0027T\u0027,\n+\t\t\t\t\tfunctx:time($hour,$minute,$second)))\n+} ;\n+\n+declare function functx:day-in-year\n+( $date as xs:anyAtomicType? )  as xs:integer? {\n+\n+\tdays-from-duration(\n+\t\t\txs:date($date) - functx:first-day-of-year($date)) + 1\n+} ;\n+\n+declare function functx:day-of-week-abbrev-en\n+( $date as xs:anyAtomicType? )  as xs:string? {\n+\n+\t(\u0027Sun\u0027, \u0027Mon\u0027, \u0027Tues\u0027, \u0027Wed\u0027, \u0027Thurs\u0027, \u0027Fri\u0027, \u0027Sat\u0027)\n+\t[functx:day-of-week($date) + 1]\n+} ;\n+\n+declare function functx:day-of-week-name-en\n+( $date as xs:anyAtomicType? )  as xs:string? {\n+\n+\t(\u0027Sunday\u0027, \u0027Monday\u0027, \u0027Tuesday\u0027, \u0027Wednesday\u0027,\n+\t\u0027Thursday\u0027, \u0027Friday\u0027, \u0027Saturday\u0027)\n+\t[functx:day-of-week($date) + 1]\n+} ;\n+\n+declare function functx:day-of-week\n+( $date as xs:anyAtomicType? )  as xs:integer? {\n+\n+\tif (empty($date))\n+\tthen ()\n+\telse xs:integer((xs:date($date) - xs:date(\u00271901-01-06\u0027))\n+\tdiv xs:dayTimeDuration(\u0027P1D\u0027)) mod 7\n+} ;\n+\n+declare function functx:dayTimeDuration\n+( $days as xs:decimal? ,\n+\t\t$hours as xs:decimal? ,\n+\t\t$minutes as xs:decimal? ,\n+\t\t$seconds as xs:decimal? )  as xs:dayTimeDuration {\n+\n+\t(xs:dayTimeDuration(\u0027P1D\u0027) * functx:if-empty($days,0)) +\n+\t(xs:dayTimeDuration(\u0027PT1H\u0027) * functx:if-empty($hours,0)) +\n+\t(xs:dayTimeDuration(\u0027PT1M\u0027) * functx:if-empty($minutes,0)) +\n+\t(xs:dayTimeDuration(\u0027PT1S\u0027) * functx:if-empty($seconds,0))\n+} ;\n+\n+declare function functx:days-in-month\n+( $date as xs:anyAtomicType? )  as xs:integer? {\n+\n+\tif (month-from-date(xs:date($date)) \u003d 2 and\n+\tfunctx:is-leap-year($date))\n+\tthen 29\n+\telse\n+\t\t(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\n+\t\t[month-from-date(xs:date($date))]\n+} ;\n+\n+declare function functx:depth-of-node\n+( $node as node()? )  as xs:integer {\n+\n+\tcount($node/ancestor-or-self::node())\n+} ;\n+\n+declare function functx:distinct-attribute-names\n+( $nodes as node()* )  as xs:string* {\n+\n+\tdistinct-values($nodes//@*/name(.))\n+} ;\n+\n+declare function functx:distinct-deep\n+( $nodes as node()* )  as node()* {\n+\n+\tfor $seq in (1 to count($nodes))\n+\treturn $nodes[$seq][not(functx:is-node-in-sequence-deep-equal(\n+\t\t\t.,$nodes[position() \u003c $seq]))]\n+} ;\n+\n+declare function functx:distinct-element-names\n+( $nodes as node()* )  as xs:string* {\n+\n+\tdistinct-values($nodes/descendant-or-self::*/name(.))\n+} ;\n+\n+declare function functx:distinct-element-paths\n+( $nodes as node()* )  as xs:string* {\n+\n+\tdistinct-values(functx:path-to-node($nodes/descendant-or-self::*))\n+} ;\n+\n+declare function functx:distinct-nodes\n+( $nodes as node()* )  as node()* {\n+\n+\tfor $seq in (1 to count($nodes))\n+\treturn $nodes[$seq][not(functx:is-node-in-sequence(\n+\t\t\t.,$nodes[position() \u003c $seq]))]\n+} ;\n+\n+declare function functx:duration-from-timezone\n+( $timezone as xs:string )  as xs:dayTimeDuration {\n+\n+\txs:dayTimeDuration(\n+\t\t\tif (not(matches($timezone,\u0027Z|[\\+\\-]\\d{2}:\\d{2}\u0027)))\n+\t\t\tthen error(xs:QName(\u0027functx:Invalid_Timezone_Value\u0027))\n+\t\t\telse if ($timezone \u003d \u0027Z\u0027)\n+\t\t\tthen \u0027PT0S\u0027\n+\t\t\telse replace($timezone,\u0027\\+?(\\d{2}):\\d{2}\u0027,\u0027PT$1H\u0027)\n+\t)\n+} ;\n+\n+declare function functx:dynamic-path\n+( $parent as node() ,\n+\t\t$path as xs:string )  as item()* {\n+\n+\tlet $nextStep :\u003d functx:substring-before-if-contains($path,\u0027/\u0027)\n+\tlet $restOfSteps :\u003d substring-after($path,\u0027/\u0027)\n+\tfor $child in\n+\t($parent/*[functx:name-test(name(),$nextStep)],\n+\t$parent/@*[functx:name-test(name(),\n+\t\t\tsubstring-after($nextStep,\u0027@\u0027))])\n+\treturn if ($restOfSteps)\n+\tthen functx:dynamic-path($child, $restOfSteps)\n+\telse $child\n+} ;\n+\n+declare function functx:escape-for-regex\n+( $arg as xs:string? )  as xs:string {\n+\n+\treplace($arg,\n+\t\t\t\u0027(\\.|\\[|\\]|\\\\|\\||\\-|\\^|\\$|\\?|\\*|\\+|\\{|\\}|\\(|\\))\u0027,\u0027\\\\$1\u0027)\n+} ;\n+\n+declare function functx:exclusive-or\n+( $arg1 as xs:boolean? ,\n+\t\t$arg2 as xs:boolean? )  as xs:boolean? {\n+\n+\t$arg1 !\u003d $arg2\n+} ;\n+\n+declare function functx:first-day-of-month\n+( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+\tfunctx:date(year-from-date(xs:date($date)),\n+\t\t\tmonth-from-date(xs:date($date)),\n+\t\t\t1)\n+} ;\n+\n+declare function functx:first-day-of-year\n+( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+\tfunctx:date(year-from-date(xs:date($date)), 1, 1)\n+} ;\n+\n+declare function functx:first-node\n+( $nodes as node()* )  as node()? {\n+\n+\t($nodes/.)[1]\n+} ;\n+\n+declare function functx:follows-not-descendant\n+( $a as node()? ,\n+\t\t$b as node()? )  as xs:boolean {\n+\n+\t$a \u003e\u003e $b and empty($b intersect $a/ancestor::node())\n+} ;\n+\n+declare function functx:format-as-title-en\n+( $titles as xs:string* )  as xs:string* {\n+\n+\tlet $wordsToMoveToEnd :\u003d (\u0027A\u0027, \u0027An\u0027, \u0027The\u0027)\n+\tfor $title in $titles\n+\tlet $firstWord :\u003d functx:substring-before-match($title,\u0027\\W\u0027)\n+\treturn if ($firstWord \u003d $wordsToMoveToEnd)\n+\tthen replace($title,\u0027(.*?)\\W(.*)\u0027, \u0027$2, $1\u0027)\n+\telse $title\n+} ;\n+\n+declare function functx:fragment-from-uri\n+( $uri as xs:string? )  as xs:string? {\n+\n+\tsubstring-after($uri,\u0027#\u0027)\n+} ;\n+\n+declare function functx:get-matches-and-non-matches\n+( $string as xs:string? ,\n+\t\t$regex as xs:string )  as element()* {\n+\n+\tlet $iomf :\u003d functx:index-of-match-first($string, $regex)\n+\treturn\n+\tif (empty($iomf))\n+\tthen \u003cnon-match\u003e{$string}\u003c/non-match\u003e\n+\telse\n+\t\tif ($iomf \u003e 1)\n+\t\tthen (\u003cnon-match\u003e{substring($string,1,$iomf - 1)}\u003c/non-match\u003e,\n+\t\tfunctx:get-matches-and-non-matches(\n+\t\t\t\tsubstring($string,$iomf),$regex))\n+\t\telse\n+\t\t\tlet $length :\u003d\n+\t\t\t\t\tstring-length($string) -\n+\t\t\t\t\tstring-length(functx:replace-first($string, $regex,\u0027\u0027))\n+\t\t\treturn (\u003cmatch\u003e{substring($string,1,$length)}\u003c/match\u003e,\n+\t\t\tif (string-length($string) \u003e $length)\n+\t\t\tthen functx:get-matches-and-non-matches(\n+\t\t\t\t\tsubstring($string,$length + 1),$regex)\n+\t\t\telse ())\n+} ;\n+\n+declare function functx:get-matches\n+( $string as xs:string? ,\n+\t\t$regex as xs:string )  as xs:string* {\n+\n+\tfunctx:get-matches-and-non-matches($string,$regex)/\n+\tstring(self::match)\n+} ;\n+\n+declare function functx:has-element-only-content\n+( $element as element() )  as xs:boolean {\n+\n+\tnot($element/text()[normalize-space(.) !\u003d \u0027\u0027]) and $element/*\n+} ;\n+\n+declare function functx:has-empty-content\n+( $element as element() )  as xs:boolean {\n+\n+\tnot($element/node())\n+} ;\n+\n+declare function functx:has-mixed-content\n+( $element as element() )  as xs:boolean {\n+\n+\t$element/text()[normalize-space(.) !\u003d \u0027\u0027] and $element/*\n+} ;\n+\n+declare function functx:has-simple-content\n+( $element as element() )  as xs:boolean {\n+\n+\t$element/text() and not($element/*)\n+} ;\n+\n+declare function functx:id-from-element\n+( $element as element()? )  as xs:string? {\n+\n+\tdata(($element/@*[id(.) is ..])[1])\n+} ;\n+\n+declare function functx:id-untyped\n+( $node as node()* ,\n+\t\t$id as xs:anyAtomicType )  as element()* {\n+\n+\t$node//*[@* \u003d $id]\n+} ;\n+\n+declare function functx:if-absent\n+( $arg as item()* ,\n+\t\t$value as item()* )  as item()* {\n+\n+\tif (exists($arg))\n+\tthen $arg\n+\telse $value\n+} ;\n+\n+declare function functx:if-empty\n+( $arg as item()? ,\n+\t\t$value as item()* )  as item()* {\n+\n+\tif (string($arg) !\u003d \u0027\u0027)\n+\tthen data($arg)\n+\telse $value\n+} ;\n+\n+declare function functx:index-of-deep-equal-node\n+( $nodes as node()* ,\n+\t\t$nodeToFind as node() )  as xs:integer* {\n+\n+\tfor $seq in (1 to count($nodes))\n+\treturn $seq[deep-equal($nodes[$seq],$nodeToFind)]\n+} ;\n+\n+declare function functx:index-of-match-first\n+( $arg as xs:string? ,\n+\t\t$pattern as xs:string )  as xs:integer? {\n+\n+\tif (matches($arg,$pattern))\n+\tthen string-length(tokenize($arg, $pattern)[1]) + 1\n+\telse ()\n+} ;\n+\n+declare function functx:index-of-node\n+( $nodes as node()* ,\n+\t\t$nodeToFind as node() )  as xs:integer* {\n+\n+\tfor $seq in (1 to count($nodes))\n+\treturn $seq[$nodes[$seq] is $nodeToFind]\n+} ;\n+\n+declare function functx:index-of-string-first\n+( $arg as xs:string? ,\n+\t\t$substring as xs:string )  as xs:integer? {\n+\n+\tif (contains($arg, $substring))\n+\tthen string-length(substring-before($arg, $substring))+1\n+\telse ()\n+} ;\n+\n+declare function functx:index-of-string-last\n+( $arg as xs:string? ,\n+\t\t$substring as xs:string )  as xs:integer? {\n+\n+\tfunctx:index-of-string($arg, $substring)[last()]\n+} ;\n+\n+declare function functx:index-of-string\n+( $arg as xs:string? ,\n+\t\t$substring as xs:string )  as xs:integer* {\n+\n+\tif (contains($arg, $substring))\n+\tthen (string-length(substring-before($arg, $substring))+1,\n+\tfor $other in\n+\tfunctx:index-of-string(substring-after($arg, $substring),\n+\t\t\t$substring)\n+\treturn\n+\t$other +\n+\tstring-length(substring-before($arg, $substring)) +\n+\tstring-length($substring))\n+\telse ()\n+} ;\n+\n+declare function functx:insert-string\n+( $originalString as xs:string? ,\n+\t\t$stringToInsert as xs:string? ,\n+\t\t$pos as xs:integer )  as xs:string {\n+\n+\tconcat(substring($originalString,1,$pos - 1),\n+\t\t\t$stringToInsert,\n+\t\t\tsubstring($originalString,$pos))\n+} ;\n+\n+declare function functx:is-a-number\n+( $value as xs:anyAtomicType? )  as xs:boolean {\n+\n+\tstring(number($value)) !\u003d \u0027NaN\u0027\n+} ;\n+\n+declare function functx:is-absolute-uri\n+( $uri as xs:string? )  as xs:boolean {\n+\n+\tmatches($uri,\u0027^[a-z]+:\u0027)\n+} ;\n+\n+declare function functx:is-ancestor\n+( $node1 as node() ,\n+\t\t$node2 as node() )  as xs:boolean {\n+\n+\texists($node1 intersect $node2/ancestor::node())\n+} ;\n+\n+declare function functx:is-descendant\n+( $node1 as node() ,\n+\t\t$node2 as node() )  as xs:boolean {\n+\n+\tboolean($node2 intersect $node1/ancestor::node())\n+} ;\n+\n+declare function functx:is-leap-year\n+( $date as xs:anyAtomicType? )  as xs:boolean {\n+\n+\tfor $year in xs:integer(substring(string($date),1,4))\n+\treturn ($year mod 4 \u003d 0 and\n+\t$year mod 100 !\u003d 0) or\n+\t$year mod 400 \u003d 0\n+} ;\n+\n+declare function functx:is-node-among-descendants-deep-equal\n+( $node as node()? ,\n+\t\t$seq as node()* )  as xs:boolean {\n+\n+\tsome $nodeInSeq in $seq/descendant-or-self::*/(.|@*)\n+\tsatisfies deep-equal($nodeInSeq,$node)\n+} ;\n+\n+declare function functx:is-node-among-descendants\n+( $node as node()? ,\n+\t\t$seq as node()* )  as xs:boolean {\n+\n+\tsome $nodeInSeq in $seq/descendant-or-self::*/(.|@*)\n+\tsatisfies $nodeInSeq is $node\n+} ;\n+\n+declare function functx:is-node-in-sequence-deep-equal\n+( $node as node()? ,\n+\t\t$seq as node()* )  as xs:boolean {\n+\n+\tsome $nodeInSeq in $seq satisfies deep-equal($nodeInSeq,$node)\n+} ;\n+\n+declare function functx:is-node-in-sequence\n+( $node as node()? ,\n+\t\t$seq as node()* )  as xs:boolean {\n+\n+\tsome $nodeInSeq in $seq satisfies $nodeInSeq is $node\n+} ;\n+\n+declare function functx:is-value-in-sequence\n+( $value as xs:anyAtomicType? ,\n+\t\t$seq as xs:anyAtomicType* )  as xs:boolean {\n+\n+\t$value \u003d $seq\n+} ;\n+\n+declare function functx:last-day-of-month\n+( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+\tfunctx:date(year-from-date(xs:date($date)),\n+\t\t\tmonth-from-date(xs:date($date)),\n+\t\t\tfunctx:days-in-month($date))\n+} ;\n+\n+declare function functx:last-day-of-year\n+( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+\tfunctx:date(year-from-date(xs:date($date)), 12, 31)\n+} ;\n+\n+declare function functx:last-node\n+( $nodes as node()* )  as node()? {\n+\n+\t($nodes/.)[last()]\n+} ;\n+\n+declare function functx:leaf-elements\n+( $root as node()? )  as element()* {\n+\n+\t$root/descendant-or-self::*[not(*)]\n+} ;\n+\n+declare function functx:left-trim\n+( $arg as xs:string? )  as xs:string {\n+\n+\treplace($arg,\u0027^\\s+\u0027,\u0027\u0027)\n+} ;\n+\n+declare function functx:line-count\n+( $arg as xs:string? )  as xs:integer {\n+\n+\tcount(functx:lines($arg))\n+} ;\n+\n+declare function functx:lines\n+( $arg as xs:string? )  as xs:string* {\n+\n+\ttokenize($arg, \u0027(\\r\\n?|\\n\\r?)\u0027)\n+} ;\n+\n+declare function functx:max-depth\n+( $root as node()? )  as xs:integer? {\n+\n+\tif ($root/*)\n+\tthen max($root/*/functx:max-depth(.)) + 1\n+\telse 1\n+} ;\n+\n+declare function functx:max-determine-type\n+( $seq as xs:anyAtomicType* )  as xs:anyAtomicType? {\n+\n+\tif (every $value in $seq satisfies ($value castable as xs:double))\n+\tthen max(for $value in $seq return xs:double($value))\n+\telse max(for $value in $seq return xs:string($value))\n+} ;\n+\n+declare function functx:max-line-length\n+( $arg as xs:string? )  as xs:integer {\n+\n+\tmax(\n+\t\t\tfor $line in functx:lines($arg)\n+\t\t\treturn string-length($line))\n+} ;\n+\n+declare function functx:max-node\n+( $nodes as node()* )  as node()* {\n+\n+\t$nodes[. \u003d max($nodes)]\n+} ;\n+\n+declare function functx:max-string\n+( $strings as xs:anyAtomicType* )  as xs:string? {\n+\n+\tmax(for $string in $strings return string($string))\n+} ;\n+\n+declare function functx:min-determine-type\n+( $seq as xs:anyAtomicType* )  as xs:anyAtomicType? {\n+\n+\tif (every $value in $seq satisfies ($value castable as xs:double))\n+\tthen min(for $value in $seq return xs:double($value))\n+\telse min(for $value in $seq return xs:string($value))\n+} ;\n+\n+declare function functx:min-node\n+( $nodes as node()* )  as node()* {\n+\n+\t$nodes[. \u003d min($nodes)]\n+} ;\n+\n+declare function functx:min-non-empty-string\n+( $strings as xs:string* )  as xs:string? {\n+\n+\tmin($strings[. !\u003d \u0027\u0027])\n+} ;\n+\n+declare function functx:min-string\n+( $strings as xs:anyAtomicType* )  as xs:string? {\n+\n+\tmin(for $string in $strings return string($string))\n+} ;\n+\n+declare function functx:mmddyyyy-to-date\n+( $dateString as xs:string? )  as xs:date? {\n+\n+\tif (empty($dateString))\n+\tthen ()\n+\telse if (not(matches($dateString,\n+\t\t\t\u0027^\\D*(\\d{2})\\D*(\\d{2})\\D*(\\d{4})\\D*$\u0027)))\n+\tthen error(xs:QName(\u0027functx:Invalid_Date_Format\u0027))\n+\telse xs:date(replace($dateString,\n+\t\t\t\t\u0027^\\D*(\\d{2})\\D*(\\d{2})\\D*(\\d{4})\\D*$\u0027,\n+\t\t\t\t\u0027$3-$1-$2\u0027))\n+} ;\n+\n+declare function functx:month-abbrev-en\n+( $date as xs:anyAtomicType? )  as xs:string? {\n+\n+\t(\u0027Jan\u0027, \u0027Feb\u0027, \u0027Mar\u0027, \u0027Apr\u0027, \u0027May\u0027, \u0027Jun\u0027,\n+\t\u0027Jul\u0027, \u0027Aug\u0027, \u0027Sep\u0027, \u0027Oct\u0027, \u0027Nov\u0027, \u0027Dec\u0027)\n+\t[month-from-date(xs:date($date))]\n+} ;\n+\n+declare function functx:month-name-en\n+( $date as xs:anyAtomicType? )  as xs:string? {\n+\n+\t(\u0027January\u0027, \u0027February\u0027, \u0027March\u0027, \u0027April\u0027, \u0027May\u0027, \u0027June\u0027,\n+\t\u0027July\u0027, \u0027August\u0027, \u0027September\u0027, \u0027October\u0027, \u0027November\u0027, \u0027December\u0027)\n+\t[month-from-date(xs:date($date))]\n+} ;\n+\n+declare function functx:name-test\n+( $testname as xs:string? ,\n+\t\t$names as xs:string* )  as xs:boolean {\n+\n+\t$testname \u003d $names\n+\tor\n+\t$names \u003d \u0027*\u0027\n+\tor\n+\tfunctx:substring-after-if-contains($testname,\u0027:\u0027) \u003d\n+\t(for $name in $names\n+\treturn substring-after($name,\u0027*:\u0027))\n+\tor\n+\tsubstring-before($testname,\u0027:\u0027) \u003d\n+\t(for $name in $names[contains(.,\u0027:*\u0027)]\n+\treturn substring-before($name,\u0027:*\u0027))\n+} ;\n+\n+declare function functx:namespaces-in-use\n+( $root as node()? )  as xs:anyURI* {\n+\n+\tdistinct-values(\n+\t\t\t$root/descendant-or-self::*/(.|@*)/namespace-uri(.))\n+} ;\n+\n+declare function functx:next-day\n+( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+\txs:date($date) + xs:dayTimeDuration(\u0027P1D\u0027)\n+} ;\n+\n+declare function functx:node-kind\n+( $nodes as node()* )  as xs:string* {\n+\n+\tfor $node in $nodes\n+\treturn\n+\tif ($node instance of element()) then \u0027element\u0027\n+\telse if ($node instance of attribute()) then \u0027attribute\u0027\n+\telse if ($node instance of text()) then \u0027text\u0027\n+\t\telse if ($node instance of document-node()) then \u0027document-node\u0027\n+\t\t\telse if ($node instance of comment()) then \u0027comment\u0027\n+\t\t\t\telse if ($node instance of processing-instruction())\n+\t\t\t\t\tthen \u0027processing-instruction\u0027\n+\t\t\t\t\telse \u0027unknown\u0027\n+} ;\n+\n+declare function functx:non-distinct-values\n+( $seq as xs:anyAtomicType* )  as xs:anyAtomicType* {\n+\n+\tfor $val in distinct-values($seq)\n+\treturn $val[count($seq[. \u003d $val]) \u003e 1]\n+} ;\n+\n+declare function functx:number-of-matches\n+( $arg as xs:string? ,\n+\t\t$pattern as xs:string )  as xs:integer {\n+\n+\tcount(tokenize($arg,$pattern)) - 1\n+} ;\n+\n+declare function functx:open-ref-document\n+( $refNode as node() )  as document-node() {\n+\n+\tif (base-uri($refNode))\n+\tthen doc(resolve-uri($refNode, base-uri($refNode)))\n+\telse doc(resolve-uri($refNode))\n+} ;\n+\n+declare function functx:ordinal-number-en\n+( $num as xs:integer? )  as xs:string {\n+\n+\tconcat(xs:string($num),\n+\t\t\tif (matches(xs:string($num),\u0027[04-9]$|1[1-3]$\u0027)) then \u0027th\u0027\n+\t\t\telse if (ends-with(xs:string($num),\u00271\u0027)) then \u0027st\u0027\n+\t\t\telse if (ends-with(xs:string($num),\u00272\u0027)) then \u0027nd\u0027\n+\t\t\t\telse if (ends-with(xs:string($num),\u00273\u0027)) then \u0027rd\u0027\n+\t\t\t\t\telse \u0027\u0027)\n+} ;\n+\n+declare function functx:pad-integer-to-length\n+( $integerToPad as xs:anyAtomicType? ,\n+\t\t$length as xs:integer )  as xs:string {\n+\n+\tif ($length \u003c string-length(string($integerToPad)))\n+   then error(xs:QName(\u0027functx:Integer_Longer_Than_Length\u0027))\n+   else concat\n+         (functx:repeat-string(\n+            \u00270\u0027,$length - string-length(string($integerToPad))),\n+          string($integerToPad))\n+ } ;\n+\n+declare function functx:pad-string-to-length\n+  ( $stringToPad as xs:string? ,\n+    $padChar as xs:string ,\n+    $length as xs:integer )  as xs:string {\n+\n+   substring(\n+     string-join (\n+       ($stringToPad, for $i in (1 to $length) return $padChar)\n+       ,\u0027\u0027)\n+    ,1,$length)\n+ } ;\n+\n+declare function functx:path-to-node-with-pos\n+  ( $node as node()? )  as xs:string {\n+\n+string-join(\n+  for $ancestor in $node/ancestor-or-self::*\n+  let $sibsOfSameName :\u003d $ancestor/../*[name() \u003d name($ancestor)]\n+  return concat(name($ancestor),\n+   if (count($sibsOfSameName) \u003c\u003d 1)\n+   then \u0027\u0027\n+   else concat(\n+      \u0027[\u0027,functx:index-of-node($sibsOfSameName,$ancestor),\u0027]\u0027))\n+ , \u0027/\u0027)\n+ } ;\n+\n+declare function functx:path-to-node\n+  ( $nodes as node()* )  as xs:string* {\n+\n+$nodes/string-join(ancestor-or-self::*/name(.), \u0027/\u0027)\n+ } ;\n+\n+declare function functx:precedes-not-ancestor\n+  ( $a as node()? ,\n+    $b as node()? )  as xs:boolean {\n+\n+   $a \u003c\u003c $b and empty($a intersect $b/ancestor::node())\n+ } ;\n+\n+declare function functx:previous-day\n+  ( $date as xs:anyAtomicType? )  as xs:date? {\n+\n+   xs:date($date) - xs:dayTimeDuration(\u0027P1D\u0027)\n+ } ;\n+\n+declare function functx:remove-attributes-deep\n+  ( $nodes as node()* ,\n+    $names as xs:string* )  as node()* {\n+\n+   for $node in $nodes\n+   return if ($node instance of element())\n+          then  element { node-name($node)}\n+                { $node/@*[not(functx:name-test(name(),$names))],\n+                  functx:remove-attributes-deep($node/node(), $names)}\n+          else if ($node instance of document-node())\n+          then functx:remove-attributes-deep($node/node(), $names)\n+          else $node\n+ } ;\n+\n+declare function functx:remove-attributes\n+  ( $elements as element()* ,\n+    $names as xs:string* )  as element() {\n+\n+   for $element in $elements\n+   return element\n+     {node-name($element)}\n+     {$element/@*[not(functx:name-test(name(),$names))],\n+      $element/node() }\n+ } ;\n+\n+declare function functx:remove-elements-deep\n+  ( $nodes as node()* ,\n+    $names as xs:string* )  as node()* {\n+\n+   for $node in $nodes\n+   return\n+     if ($node instance of element())\n+     then if (functx:name-test(name($node),$names))\n+          then ()\n+          else element { node-name($node)}\n+                { $node/@*,\n+                  functx:remove-elements-deep($node/node(), $names)}\n+     else if ($node instance of document-node())\n+     then functx:remove-elements-deep($node/node(), $names)\n+     else $node\n+ } ;\n+\n+declare function functx:remove-elements-not-contents\n+  ( $nodes as node()* ,\n+    $names as xs:string* )  as node()* {\n+\n+   for $node in $nodes\n+   return\n+    if ($node instance of element())\n+    then if (functx:name-test(name($node),$names))\n+         then functx:remove-elements-not-contents($node/node(), $names)\n+         else element {node-name($node)}\n+              {$node/@*,\n+              functx:remove-elements-not-contents($node/node(),$names)}\n+    else if ($node instance of document-node())\n+    then functx:remove-elements-not-contents($node/node(), $names)\n+    else $node\n+ } ;\n+\n+declare function functx:remove-elements\n+  ( $elements as element()* ,\n+    $names as xs:string* )  as element()* {\n+\n+   for $element in $elements\n+   return element\n+     {node-name($element)}\n+     {$element/@*,\n+      $element/node()[not(functx:name-test(name(),$names))] }\n+ } ;\n+\n+declare function functx:repeat-string\n+  ( $stringToRepeat as xs:string? ,\n+    $count as xs:integer )  as xs:string {\n+\n+   string-join((for $i in 1 to $count return $stringToRepeat),\n+                        \u0027\u0027)\n+ } ;\n+\n+declare function functx:replace-beginning\n+  ( $arg as xs:string? ,\n+    $pattern as xs:string ,\n+    $replacement as xs:string )  as xs:string {\n+\n+   replace($arg, concat(\u0027^.*?\u0027, $pattern), $replacement)\n+ } ;\n+\n+declare function functx:replace-element-values\n+  ( $elements as element()* ,\n+    $values as xs:anyAtomicType* )  as element()* {\n+\n+   for $element at $seq in $elements\n+   return element { node-name($element)}\n+             { $element/@*,\n+               $values[$seq] }\n+ } ;\n+\n+declare function functx:replace-first\n+  ( $arg as xs:string? ,\n+    $pattern as xs:string ,\n+    $replacement as xs:string )  as xs:string {\n+\n+   replace($arg, concat(\u0027(^.*?)\u0027, $pattern),\n+             concat(\u0027$1\u0027,$replacement))\n+ } ;\n+\n+declare function functx:replace-multi\n+  ( $arg as xs:string? ,\n+    $changeFrom as xs:string* ,\n+    $changeTo as xs:string* )  as xs:string? {\n+\n+   if (count($changeFrom) \u003e 0)\n+then functx:replace-multi(\n+replace($arg, $changeFrom[1],\n+functx:if-absent($changeTo[1],\u0027\u0027)),\n+$changeFrom[position() \u003e 1],\n+$changeTo[position() \u003e 1])\n+else $arg\n+} ;\n+\n+declare function functx:reverse-string\n+( $arg as xs:string? )  as xs:string {\n+\n+codepoints-to-string(reverse(string-to-codepoints($arg)))\n+} ;\n+\n+declare function functx:right-trim\n+( $arg as xs:string? )  as xs:string {\n+\n+replace($arg,\u0027\\s+$\u0027,\u0027\u0027)\n+} ;\n+\n+declare function functx:scheme-from-uri\n+( $uri as xs:string? )  as xs:string? {\n+\n+substring-before($uri,\u0027:\u0027)\n+} ;\n+\n+declare function functx:sequence-deep-equal\n+( $seq1 as item()* ,\n+$seq2 as item()* )  as xs:boolean {\n+\n+every $i in 1 to max((count($seq1),count($seq2)))\n+satisfies deep-equal($seq1[$i],$seq2[$i])\n+} ;\n+\n+declare function functx:sequence-node-equal-any-order\n+( $seq1 as node()* ,\n+$seq2 as node()* )  as xs:boolean {\n+\n+not( ($seq1 except $seq2, $seq2 except $seq1))\n+} ;\n+\n+declare function functx:sequence-node-equal\n+( $seq1 as node()* ,\n+$seq2 as node()* )  as xs:boolean {\n+\n+every $i in 1 to max((count($seq1),count($seq2)))\n+satisfies $seq1[$i] is $seq2[$i]\n+} ;\n+\n+declare function functx:sequence-type\n+( $items as item()* )  as xs:string {\n+\n+concat(\n+if (empty($items))\n+then \u0027empty-sequence()\u0027\n+else if (every $val in $items\n+satisfies $val instance of xs:anyAtomicType)\n+then if (count(distinct-values(functx:atomic-type($items)))\n+\u003e 1)\n+then \u0027xs:anyAtomicType\u0027\n+else functx:atomic-type($items[1])\n+else if (some $val in $items\n+satisfies $val instance of xs:anyAtomicType)\n+then \u0027item()\u0027\n+else if (count(distinct-values(functx:node-kind($items))) \u003e 1)\n+then \u0027node()\u0027\n+else concat(functx:node-kind($items[1]),\u0027()\u0027)\n+,\n+if (count($items) \u003e 1)\n+then \u0027+\u0027 else \u0027\u0027)\n+} ;\n+\n+declare function functx:siblings-same-name\n+( $element as element()? )  as element()* {\n+\n+$element/../*[node-name(.) \u003d node-name($element)]\n+except $element\n+} ;\n+\n+declare function functx:siblings\n+( $node as node()? )  as node()* {\n+\n+$node/../node() except $node\n+} ;\n+\n+declare function functx:sort-as-numeric\n+( $seq as item()* )  as item()* {\n+\n+for $item in $seq\n+order by number($item)\n+return $item\n+} ;\n+\n+declare function functx:sort-case-insensitive\n+( $seq as item()* )  as item()* {\n+\n+for $item in $seq\n+order by upper-case(string($item))\n+return $item\n+} ;\n+\n+declare function functx:sort-document-order\n+( $seq as node()* )  as node()* {\n+\n+$seq/.\n+} ;\n+\n+declare function functx:sort\n+( $seq as item()* )  as item()* {\n+\n+for $item in $seq\n+order by $item\n+return $item\n+} ;\n+\n+declare function functx:substring-after-if-contains\n+( $arg as xs:string? ,\n+$delim as xs:string )  as xs:string? {\n+\n+if (contains($arg,$delim))\n+then substring-after($arg,$delim)\n+else $arg\n+} ;\n+\n+declare function functx:substring-after-last-match\n+( $arg as xs:string? ,\n+$regex as xs:string )  as xs:string {\n+\n+replace($arg,concat(\u0027^.*\u0027,$regex),\u0027\u0027)\n+} ;\n+\n+declare function functx:substring-after-last\n+( $arg as xs:string? ,\n+$delim as xs:string )  as xs:string {\n+\n+replace ($arg,concat(\u0027^.*\u0027,functx:escape-for-regex($delim)),\u0027\u0027)\n+} ;\n+\n+declare function functx:substring-after-match\n+( $arg as xs:string? ,\n+$regex as xs:string )  as xs:string? {\n+\n+replace($arg,concat(\u0027^.*?\u0027,$regex),\u0027\u0027)\n+} ;\n+\n+declare function functx:substring-before-if-contains\n+( $arg as xs:string? ,\n+$delim as xs:string )  as xs:string? {\n+\n+if (contains($arg,$delim))\n+then substring-before($arg,$delim)\n+else $arg\n+} ;\n+\n+declare function functx:substring-before-last-match\n+( $arg as xs:string? ,\n+$regex as xs:string )  as xs:string? {\n+\n+replace($arg,concat(\u0027^(.*)\u0027,$regex,\u0027.*\u0027),\u0027$1\u0027)\n+} ;\n+\n+declare function functx:substring-before-last\n+( $arg as xs:string? ,\n+$delim as xs:string )  as xs:string {\n+\n+if (matches($arg, functx:escape-for-regex($delim)))\n+then replace($arg,\n+concat(\u0027^(.*)\u0027, functx:escape-for-regex($delim),\u0027.*\u0027),\n+\u0027$1\u0027)\n+else \u0027\u0027\n+} ;\n+\n+declare function functx:substring-before-match\n+( $arg as xs:string? ,\n+$regex as xs:string )  as xs:string {\n+\n+tokenize($arg,$regex)[1]\n+} ;\n+\n+declare function functx:time\n+( $hour as xs:anyAtomicType ,\n+$minute as xs:anyAtomicType ,\n+$second as xs:anyAtomicType )  as xs:time {\n+\n+xs:time(\n+concat(\n+functx:pad-integer-to-length(xs:integer($hour),2),\u0027:\u0027,\n+functx:pad-integer-to-length(xs:integer($minute),2),\u0027:\u0027,\n+functx:pad-integer-to-length(xs:integer($second),2)))\n+} ;\n+\n+declare function functx:timezone-from-duration\n+( $duration as xs:dayTimeDuration )  as xs:string {\n+\n+if (string($duration) \u003d (\u0027PT0S\u0027,\u0027-PT0S\u0027))\n+then \u0027Z\u0027\n+else if (matches(string($duration),\u0027-PT[1-9]H\u0027))\n+then replace(string($duration),\u0027PT([1-9])H\u0027,\u00270$1:00\u0027)\n+else if (matches(string($duration),\u0027PT[1-9]H\u0027))\n+then replace(string($duration),\u0027PT([1-9])H\u0027,\u0027+0$1:00\u0027)\n+else if (matches(string($duration),\u0027-PT1[0-4]H\u0027))\n+then replace(string($duration),\u0027PT(1[0-4])H\u0027,\u0027$1:00\u0027)\n+else if (matches(string($duration),\u0027PT1[0-4]H\u0027))\n+then replace(string($duration),\u0027PT(1[0-4])H\u0027,\u0027+$1:00\u0027)\n+else error(xs:QName(\u0027functx:Invalid_Duration_Value\u0027))\n+} ;\n+\n+declare function functx:total-days-from-duration\n+( $duration as xs:dayTimeDuration? )  as xs:decimal? {\n+\n+$duration div xs:dayTimeDuration(\u0027P1D\u0027)\n+} ;\n+\n+declare function functx:total-hours-from-duration\n+( $duration as xs:dayTimeDuration? )  as xs:decimal? {\n+\n+$duration div xs:dayTimeDuration(\u0027PT1H\u0027)\n+} ;\n+\n+declare function functx:total-minutes-from-duration\n+( $duration as xs:dayTimeDuration? )  as xs:decimal? {\n+\n+$duration div xs:dayTimeDuration(\u0027PT1M\u0027)\n+} ;\n+\n+declare function functx:total-months-from-duration\n+( $duration as xs:yearMonthDuration? )  as xs:decimal? {\n+\n+$duration div xs:yearMonthDuration(\u0027P1M\u0027)\n+} ;\n+\n+declare function functx:total-seconds-from-duration\n+( $duration as xs:dayTimeDuration? )  as xs:decimal? {\n+\n+$duration div xs:dayTimeDuration(\u0027PT1S\u0027)\n+} ;\n+\n+declare function functx:total-years-from-duration\n+( $duration as xs:yearMonthDuration? )  as xs:decimal? {\n+\n+$duration div xs:yearMonthDuration(\u0027P1Y\u0027)\n+} ;\n+\n+declare function functx:trim\n+( $arg as xs:string? )  as xs:string {\n+\n+replace(replace($arg,\u0027\\s+$\u0027,\u0027\u0027),\u0027^\\s+\u0027,\u0027\u0027)\n+} ;\n+\n+declare function functx:update-attributes\n+( $elements as element()* ,\n+$attrNames as xs:QName* ,\n+$attrValues as xs:anyAtomicType* )  as element()? {\n+\n+for $element in $elements\n+return element { node-name($element)}\n+{ for $attrName at $seq in $attrNames\n+return if ($element/@*[node-name(.) \u003d $attrName])\n+then attribute {$attrName}\n+{$attrValues[$seq]}\n+else (),\n+$element/@*[not(node-name(.) \u003d $attrNames)],\n+$element/node() }\n+} ;\n+\n+declare function functx:value-except\n+( $arg1 as xs:anyAtomicType* ,\n+$arg2 as xs:anyAtomicType* )  as xs:anyAtomicType* {\n+\n+distinct-values($arg1[not(.\u003d$arg2)])\n+} ;\n+\n+declare function functx:value-intersect\n+( $arg1 as xs:anyAtomicType* ,\n+$arg2 as xs:anyAtomicType* )  as xs:anyAtomicType* {\n+\n+distinct-values($arg1[.\u003d$arg2])\n+} ;\n+\n+declare function functx:value-union\n+( $arg1 as xs:anyAtomicType* ,\n+$arg2 as xs:anyAtomicType* )  as xs:anyAtomicType* {\n+\n+distinct-values(($arg1, $arg2))\n+} ;\n+\n+declare function functx:word-count\n+( $arg as xs:string? )  as xs:integer {\n+\n+count(tokenize($arg, \u0027\\W+\u0027)[. !\u003d \u0027\u0027])\n+} ;\n+\n+declare function functx:words-to-camel-case\n+( $arg as xs:string? )  as xs:string {\n+\n+string-join((tokenize($arg,\u0027\\s+\u0027)[1],\n+for $word in tokenize($arg,\u0027\\s+\u0027)[position() \u003e 1]\n+return functx:capitalize-first($word))\n+,\u0027\u0027)\n+} ;\n+\n+declare function functx:wrap-values-in-elements\n+( $values as xs:anyAtomicType* ,\n+$elementName as xs:QName )  as element()* {\n+\n+for $value in $values\n+return element {$elementName} {$value}\n+} ;\n+\n+declare function functx:yearMonthDuration\n+( $years as xs:decimal? ,\n+$months as xs:integer? )  as xs:yearMonthDuration {\n+\n+(xs:yearMonthDuration(\u0027P1M\u0027) * functx:if-empty($months,0)) +\n+(xs:yearMonthDuration(\u0027P1Y\u0027) * functx:if-empty($years,0))\n+} ;\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Error in @get parser",
    "url": "https://github.com/rythmengine/rythmengine/issues/116",
    "description": "Found on 1.0-b4 version\n\n```\ncom.greenlaw110.rythm.exception.ParseException: Error parsing @get call. Correct usage: @get(\"myVal\")\n\nTemplate: /app/rythm/demo.html\n\nRelevant template source lines:\n-------------------------------------------------\n   1: \u003c!DOCTYPE html\u003e\n   2: @args boolean noGoHome \u003d false;\n   3: \u003chtml class\u003d\u0027@get(\"domClass\")\u0027\u003e\n   4: \u003chead\u003e\n\u003e\u003e 5:     \u003ctitle\u003ePlayRythm Demo - @get(\"title\")\u003c/title\u003e\n   6:     \u003cmeta charset\u003d\"@_response_encoding\"\u003e\n   7:     \u003cmeta content\u003d\"\" name\u003d\"description\"\u003e\n```\n",
    "keywords": [
      "@get"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/rythmengine/rythmengine/commit/de0323fd65844f1d834ee4051e90e8c42f88beda",
      "files": [
        {
          "file_name": "src/main/java/com/greenlaw110/rythm/internal/parser/build_in/GetParser.java",
          "patch": "@@ -39,18 +39,39 @@ public Keyword keyword() {\n \n     @Override\n     protected String patternStr() {\n-        return \"^(%s%s((?@())))\";\n+        return \"^(\\\\n?[ \\\\t\\\\x0B\\\\f]*%s%s((?@())))\";\n     }\n \n     @Override\n-    public IParser create(IContext ctx) {\n+    public IParser create(final IContext ctx) {\n         return new ParserBase(ctx) {\n             @Override\n             public TextBuilder go() {\n                 Regex r \u003d reg(dialect());\n                 if (!r.search(remain())) {\n                     raiseParseException(\"Error parsing @get call. Correct usage: @get(\\\"myVal\\\")\");\n                 }\n+                final String matched \u003d r.stringMatched();\n+                int line \u003d ctx.currentLine();\n+                if (matched.startsWith(\"\\n\") || matched.endsWith(\"\\n\")) {\n+                    if (matched.startsWith(\"\\n\")) line \u003d line + 1;\n+                    ctx.getCodeBuilder().addBuilder(new Token.StringToken(\"\\n\", ctx));\n+                    Regex r0 \u003d new Regex(\"\\\\n([ \\\\t\\\\x0B\\\\f]*).*\");\n+                    if (r0.search(matched)) {\n+                        String blank \u003d r0.stringMatched(1);\n+                        if (blank.length() \u003e 0) {\n+                            ctx.getCodeBuilder().addBuilder(new Token.StringToken(blank, ctx));\n+                        }\n+                    }\n+                } else {\n+                    Regex r0 \u003d new Regex(\"([ \\\\t\\\\x0B\\\\f]*).*\");\n+                    if (r0.search(matched)) {\n+                        String blank \u003d r0.stringMatched(1);\n+                        if (blank.length() \u003e 0) {\n+                            ctx.getCodeBuilder().addBuilder(new Token.StringToken(blank, ctx));\n+                        }\n+                    }\n+                }\n                 step(r.stringMatched().length()); // remain: @get(\"name\")...\n                 String s \u003d r.stringMatched(2); // s: (\"name\")\n                 s \u003d s.substring(1); // s: \"name\")\n@@ -78,30 +99,4 @@ protected void output() {\n         };\n     }\n \n-    public static void main(String[] args) {\n-//        String s \u003d \"@get(\\\"var\\\":A.b())\";\n-//        GetParser ap \u003d new GetParser();\n-//        Regex r \u003d ap.reg(new Rythm());\n-//        System.out.println(r);\n-//        if (r.search(s)) {\n-//            System.out.println(\"m: \" + r.stringMatched());\n-//            System.out.println(\"1: \" + r.stringMatched(1));\n-//            System.out.println(\"2: \" + r.stringMatched(2));\n-//            System.out.println(\"3: \" + r.stringMatched(3));\n-//            System.out.println(\"4: \" + r.stringMatched(4));\n-//            System.out.println(\"5: \" + r.stringMatched(5));\n-//        }\n-        Regex r \u003d new Regex(\"(((?@\\\"\\\")|(?@\u0027\u0027)|[a-zA-Z_][\\\\w_]+)(\\\\s*[:\u003d,]\\\\s*(\u0027.\u0027|(?@\\\"\\\")|[a-zA-Z_][a-zA-Z0-9_\\\\.]*(?@())*(?@[])*(?@())*(\\\\.[a-zA-Z][a-zA-Z0-9_\\\\.]*(?@())*(?@[])*(?@())*)*))?)\");\n-        String s \u003d \"(\\\"sammyRoute\\\", \\\"#/\\\")\";\n-        s \u003d s.substring(1); // s: \"name\")\n-        System.out.println(s);\n-        s \u003d s.substring(0, s.length() - 1); // s: \"name\"\n-        System.out.println(s);\n-        if (r.search(s)) {\n-            System.out.println(\"1 \" + r.stringMatched(1));\n-            System.out.println(\"2 \" + r.stringMatched(2));\n-            System.out.println(\"4 \" + r.stringMatched(4));\n-        }\n-    }\n-\n }"
        },
        {
          "file_name": "src/test/java/com/greenlaw110/rythm/issue/GH116.java",
          "patch": "@@ -0,0 +1,16 @@\n+package com.greenlaw110.rythm.issue;\n+\n+import com.greenlaw110.rythm.TestBase;\n+import org.junit.Test;\n+\n+/**\n+ * Verify https://github.com/greenlaw110/Rythm/issues/116\n+ */\n+public class GH116 extends TestBase {\n+    @Test\n+    public void test() {\n+        t \u003d \"PlayRythm Demo - @get(\\\"title\\\")\";\n+        s \u003d r(t);\n+        eq(\"PlayRythm Demo - \");\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "parser error",
    "url": "https://github.com/Camelcade/Perl5-IDEA/issues/1506",
    "description": "`my $var1\u003d$hash-\u003e{key}eq\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;`",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Camelcade/Perl5-IDEA/commit/64a0f40d600d32be42cd7ceafd1e8e13481fe094",
      "files": [
        {
          "file_name": "grammar/Perl.flex",
          "patch": "@@ -69,7 +69,7 @@ DQ_STRING \u003d \"\\\"\" ([^\\\"]|\"\\\\\\\\\"|\"\\\\\\\"\" )* \"\\\"\"?\n SQ_STRING \u003d \"\\\u0027\" ([^\\\u0027]|\"\\\\\\\\\"|\"\\\\\\\u0027\" )* \"\\\u0027\"?\n XQ_STRING \u003d \"\\`\" ([^\\`]|\"\\\\\\\\\"|\"\\\\\\`\" )* \"\\`\"?\n \n-QUOTE_LIKE_SUFFIX\u003d (\"\u0027\" {QUALIFIED_IDENTIFIER} ? )?\n+QUOTE_LIKE_SUFFIX\u003d (\"\u0027\" {IDENTIFIER_CONTINUE}? (\"\u0027\" {IDENTIFIER_CONTINUE}? \"\u0027\") ? )?\n CORE_PREFIX \u003d \"CORE::\"?\n \n PERL_VERSION_CHUNK \u003d [0-9][0-9_]*"
        },
        {
          "file_name": "resources/META-INF/plugin.xml",
          "patch": "@@ -54,6 +54,7 @@\n       \u003cli\u003eFormatter bugfixes. Please, don\u0027t hesitate to report improperly formatted code.\u003c/li\u003e\n       \u003cli\u003eSuppressed lexing of \u003ccode\u003e\u0026~\u003c/code\u003e as non-existing internal variable. \u003ca href\u003d\"https://github.com/Camelcade/Perl5-IDEA/issues/1449\"\u003e#1449\u003c/a\u003e\u003c/li\u003e\n       \u003cli\u003eResolve of dereference chain if comment is inside it, \u003ca href\u003d\"https://github.com/Camelcade/Perl5-IDEA/issues/1483\"\u003e#1483\u003c/a\u003e\u003c/li\u003e\n+      \u003cli\u003eFixed parsing confusion with archaic package format,  \u003ca href\u003d\"https://github.com/Camelcade/Perl5-IDEA/issues/1506\"\u003e#1506\u003c/a\u003e\u003c/li\u003e\n       \u003c/ul\u003e\n      \u003c/p\u003e\n     ]]\u003e"
        },
        {
          "file_name": "test/parser/PerlParserTest.java",
          "patch": "@@ -29,6 +29,8 @@ protected String getTestDataPath() {\n     return \"testData/parser/perl\";\n   }\n \n+  public void testIssue1506() {doTest();}\n+\n   public void testParenthesizedPrintArguments() {doTest();}\n \n   public void testClassAccessorSubDeclaration() {doTest();}"
        },
        {
          "file_name": "testData/parser/perl/issue1506.code",
          "patch": "@@ -0,0 +1,16 @@\n+my $var1\u003d$hash-\u003e{key}lt\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}gt\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}le\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}ge\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}eq\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}ne\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+my $var1\u003d$hash-\u003e{key}cmp\u00271\u0027?\u0027str1\u0027:\u0027str2\u0027;\n+y\u00271\u0027str1\u0027;\n+tr\u00271\u0027str1\u0027;\n+s\u00271\u0027str1\u0027;\n+qw\u00271\u0027;\n+qx\u00271\u0027;\n+qq\u00271\u0027;\n+q\u00271\u0027;\n+qr\u00271\u0027;\n+m\u00271\u0027;"
        },
        {
          "file_name": "testData/parser/perl/issue1506.txt",
          "patch": "@@ -0,0 +1,337 @@\n+Perl5\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: lt)(\u0027lt\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: gt)(\u0027gt\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: le)(\u0027le\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlCompareExprImpl(Perl5: COMPARE_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: ge)(\u0027ge\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlEqualExprImpl(Perl5: EQUAL_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: eq)(\u0027eq\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlEqualExprImpl(Perl5: EQUAL_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: ne)(\u0027ne\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlAssignExprImpl(Perl5: ASSIGN_EXPR)\n+      PsiPerlVariableDeclarationLexicalImpl(Perl5: VARIABLE_DECLARATION_LEXICAL)\n+        PsiElement(Perl5: my)(\u0027my\u0027)\n+        PsiPerlVariableDeclarationElementImpl(VARIABLE_DECLARATION_ELEMENT)\n+          PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+            PsiElement(Perl5: $$)(\u0027$\u0027)\n+            PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027var1\u0027)\n+      PsiElement(Perl5: \u003d)(\u0027\u003d\u0027)\n+      PsiPerlTrenarExprImpl(Perl5: TRENAR_EXPR)\n+        PsiPerlEqualExprImpl(Perl5: EQUAL_EXPR)\n+          PsiPerlDerefExprImpl(Perl5: DEREF_EXPR)\n+            PsiPerlScalarVariableImpl(Perl5: SCALAR_VARIABLE)\n+              PsiElement(Perl5: $$)(\u0027$\u0027)\n+              PerlVariableNameElementImpl(Perl5: SCALAR_NAME)(\u0027hash\u0027)\n+            PsiElement(Perl5: -\u003e)(\u0027-\u003e\u0027)\n+            PsiPerlHashIndexImpl(Perl5: HASH_INDEX)\n+              PsiElement(Perl5: {)(\u0027{\u0027)\n+              PsiPerlStringBareImpl(Perl5: STRING_BARE)\n+                PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027key\u0027)\n+              PsiElement(Perl5: })(\u0027}\u0027)\n+          PsiElement(Perl5: cmp)(\u0027cmp\u0027)\n+          PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+            PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+            PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+            PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: ?)(\u0027?\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+        PsiElement(Perl5: :)(\u0027:\u0027)\n+        PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+          PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+          PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str2\u0027)\n+          PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlTrRegexImpl(Perl5: TR_REGEX)\n+      PsiElement(Perl5: y)(\u0027y\u0027)\n+      PsiElement(Perl5: r{)(\u0027\u0027\u0027)\n+      PsiPerlTrSearchlistImpl(Perl5: TR_SEARCHLIST)\n+        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+      PsiElement(Perl5: r/)(\u0027\u0027\u0027)\n+      PsiPerlTrReplacementlistImpl(Perl5: TR_REPLACEMENTLIST)\n+        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+      PsiElement(Perl5: r})(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlTrRegexImpl(Perl5: TR_REGEX)\n+      PsiElement(Perl5: tr)(\u0027tr\u0027)\n+      PsiElement(Perl5: r{)(\u0027\u0027\u0027)\n+      PsiPerlTrSearchlistImpl(Perl5: TR_SEARCHLIST)\n+        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+      PsiElement(Perl5: r/)(\u0027\u0027\u0027)\n+      PsiPerlTrReplacementlistImpl(Perl5: TR_REPLACEMENTLIST)\n+        PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u0027str1\u0027)\n+      PsiElement(Perl5: r})(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlReplacementRegexImpl(Perl5: REPLACEMENT_REGEX)\n+      PsiElement(Perl5: s)(\u0027s\u0027)\n+      PsiElement(Perl5: r{)(\u0027\u0027\u0027)\n+      PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)\n+        PsiElement(Perl5: regex)(\u00271\u0027)\n+      PsiElement(Perl5: r/)(\u0027\u0027\u0027)\n+      PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)\n+        PsiElement(Perl5: regex)(\u0027str1\u0027)\n+      PsiElement(Perl5: r})(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlStringListImpl(Perl5: STRING_LIST)\n+      PsiElement(Perl5: qw)(\u0027qw\u0027)\n+      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlStringXqImpl(Perl5: STRING_XQ)\n+      PsiElement(Perl5: qx)(\u0027qx\u0027)\n+      PsiElement(Perl5: QUOTE_TICK_OPEN)(\u0027\u0027\u0027)\n+      PerlStringContentElementImpl(Perl5: STRING_CONTENT_XQ)(\u00271\u0027)\n+      PsiElement(Perl5: QUOTE_TICK_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlStringDqImpl(Perl5: STRING_DQ)\n+      PsiElement(Perl5: qq)(\u0027qq\u0027)\n+      PsiElement(Perl5: QUOTE_DOUBLE_OPEN)(\u0027\u0027\u0027)\n+      PerlStringContentElementImpl(Perl5: STRING_CONTENT_QQ)(\u00271\u0027)\n+      PsiElement(Perl5: QUOTE_DOUBLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlStringSqImpl(Perl5: STRING_SQ)\n+      PsiElement(Perl5: q)(\u0027q\u0027)\n+      PsiElement(Perl5: QUOTE_SINGLE_OPEN)(\u0027\u0027\u0027)\n+      PerlStringContentElementImpl(Perl5: STRING_CONTENT)(\u00271\u0027)\n+      PsiElement(Perl5: QUOTE_SINGLE_CLOSE)(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlCompileRegexImpl(Perl5: COMPILE_REGEX)\n+      PsiElement(Perl5: qr)(\u0027qr\u0027)\n+      PsiElement(Perl5: r{)(\u0027\u0027\u0027)\n+      PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)\n+        PsiElement(Perl5: regex)(\u00271\u0027)\n+      PsiElement(Perl5: r})(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n+  PsiPerlStatementImpl(Perl5: STATEMENT)\n+    PsiPerlMatchRegexImpl(Perl5: MATCH_REGEX)\n+      PsiElement(Perl5: m)(\u0027m\u0027)\n+      PsiElement(Perl5: r{)(\u0027\u0027\u0027)\n+      PsiPerlPerlRegexImpl(Perl5: PERL_REGEX)\n+        PsiElement(Perl5: regex)(\u00271\u0027)\n+      PsiElement(Perl5: r})(\u0027\u0027\u0027)\n+    PsiElement(Perl5: ;)(\u0027;\u0027)\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "IT Failure: \"java.lang.instrument.IllegalClassFormatException: Error while instrumenting class com/steadystate/css/parser/SACParserCSS3TokenManager\"",
    "url": "https://github.com/karlmdavis/rps-tourney/issues/104",
    "description": "While running the ITs yesterday, I received the following failure:\n\n```\n-------------------------------------------------------------------------------\nTest set: com.justdavis.karl.rpstourney.webapp.game.GameIT\n-------------------------------------------------------------------------------\nTests run: 14, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 54.175 sec \u003c\u003c\u003c FAILURE! - in com.justdavis.karl.rpstourney.webapp.game.GameIT\nupdateName(com.justdavis.karl.rpstourney.webapp.game.GameIT)  Time elapsed: 0.105 sec  \u003c\u003c\u003c ERROR!\ncom.justdavis.karl.rpstourney.service.client.HttpClientException: Unexpected HTTP 500 status on response: Internal Server Error\n    at com.justdavis.karl.rpstourney.service.client.game.GameClient.createGame(GameClient.java:63)\n    at com.justdavis.karl.rpstourney.webapp.game.GameIT.updateName(GameIT.java:235)\n```\n\nDigging into the logs, this turns out to have been caused by the following odd problem:\n\n```\njava.lang.instrument.IllegalClassFormatException: Error while instrumenting class com/steadystate/css/parser/SACParserCSS3TokenManager.\n    at org.jacoco.agent.rt.internal_b0d6a23.CoverageTransformer.transform(CoverageTransformer.java:95)\n    ...\nCaused by: java.io.IOException: Error while instrumenting class com/steadystate/css/parser/SACParserCSS3TokenManager.\n    at org.jacoco.agent.rt.internal_b0d6a23.core.instr.Instrumenter.instrumentError(Instrumenter.java:152)\n    ...\nCaused by: java.lang.RuntimeException: Method code too large!\n    at org.jacoco.agent.rt.internal_b0d6a23.asm.MethodWriter.getSize(MethodWriter.java:2036)\n    ...\n```\n\nI\u0027ve pasted the full stack trace here: http://pastebin.com/bgVSw8rt. There\u0027s lots of other stuff in the log, but this seems like a good candidate for the actual problem.\n",
    "keywords": [
      "com",
      "webapp",
      "agent",
      "game",
      "rt",
      "karl",
      "instrumenting",
      "org",
      "caused",
      "jacoco",
      "karl rpstourney",
      "error",
      "gameit",
      "0",
      "com/steadystate/css/parser/sacparsercss3tokenmanager",
      "java",
      "internal_b0d6a23",
      "com justdavis",
      "failure",
      "rpstourney",
      "justdavis",
      "lang",
      "webapp game",
      "class"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/karlmdavis/rps-tourney/commit/d57506b61f565654674742f92796bf86810ac6d5",
      "files": [
        {
          "file_name": "rps-tourney-webapp/pom.xml",
          "patch": "@@ -1,5 +1,6 @@\n \u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n-\u003cproject xmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e\n+\u003cproject xmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e\n \t\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\n \n \t\u003cparent\u003e\n@@ -26,8 +27,9 @@\n \n \t\t\u003c!-- The version of the Jetty webapp container to use. --\u003e\n \t\t\u003cjetty.version\u003e9.0.6.v20130930\u003c/jetty.version\u003e\n-\t\t\n-\t\t\u003c!-- Exclude the third-party JavaScript files from static analysis via SonarQube. --\u003e\n+\n+\t\t\u003c!-- Exclude the third-party JavaScript files from static analysis via \n+\t\t\tSonarQube. --\u003e\n \t\t\u003csonar.exclusions\u003e\n \t\t\tsrc/main/webapp/WEB-INF/resources/js/vendor/*\n \t\t\u003c/sonar.exclusions\u003e\n@@ -409,6 +411,11 @@\n \t\t\t\t\t\t\u003cconfiguration\u003e\n \t\t\t\t\t\t\t\u003cdestFile\u003e${sonar.jacoco.itReportPath}\u003c/destFile\u003e\n \t\t\t\t\t\t\t\u003cappend\u003etrue\u003c/append\u003e\n+\t\t\t\t\t\t\t\u003cexcludes\u003e\n+\t\t\t\t\t\t\t\t\u003c!-- This exclude is for an HTMLUnit dependency that can\u0027t be instrumented. \n+\t\t\t\t\t\t\t\t\tSee https://github.com/karlmdavis/rps-tourney/issues/104 for details. --\u003e\n+\t\t\t\t\t\t\t\t\u003cexclude\u003e**com.steadystate*\u003c/exclude\u003e\n+\t\t\t\t\t\t\t\u003c/excludes\u003e\n \t\t\t\t\t\t\u003c/configuration\u003e\n \t\t\t\t\t\u003c/execution\u003e\n \t\t\t\t\u003c/executions\u003e"
        }
      ]
    }
  },
  {
    "name": "\u0027Warning - Syntax error\u0027 -\u003e \u0027Error - Couldn\u0027t repair and continue parse\u0027 and \u0027JAS Error Badly formatted number\u0027 errors",
    "url": "https://github.com/Sable/soot/issues/367",
    "description": "```\njava -cp soot-trunk.jar soot.Main -include-all -cp myjdk.jar:myfx:myfx-graphics:myfx-controls -O -p wjtp on -p wjop on -process-dir myfx-graphics -d myfx-graphics-soot\n\n...\n\nriting to myfx-graphics-soot/javafx/scene/Node.class\nJasmin:105: JAS Error Badly formatted number.\n\n^\njas.jasError: Badly formatted number\n        at jasmin.Scanner.tryParseAsNumber(Scanner.java:383)\n        at jasmin.Scanner.next_token(Scanner.java:308)\n        at jasmin.parser.scan(parser.java:660)\n        at java_cup.runtime.lr_parser.parse(lr_parser.java:563)\n        at jasmin.ClassFile.readJasmin(ClassFile.java:1215)\n        at jasmin.Main.assemble(Main.java:31)\n        at soot.util.JasminOutputStream.flush(JasminOutputStream.java:35)\n        at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)\n        at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)\n        at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)\n        at java.io.PrintWriter.flush(PrintWriter.java:320)\n        at soot.PackManager.writeClass(PackManager.java:1071)\n        at soot.PackManager.writeOutput(PackManager.java:617)\n        at soot.PackManager.writeOutput(PackManager.java:526)\n        at soot.Main.run(Main.java:246)\n        at soot.Main.main(Main.java:152)\nJasmin: Found 1 errors\nWriting to myfx-graphics-soot/javafx/scene/AccessibleRole.class\n\n...\n\nWriting to myfx-graphics-soot/javafx/animation/RotateTransition.class\nJasmin:35: Warning - Syntax error.\n\n^\nJasmin:35: Error - Couldn\u0027t repair and continue parse.\n\n^\nJasmin: Found 2 errors\nWriting to myfx-graphics-soot/javafx/animation/ScaleTransition$1.class\nWriting to myfx-graphics-soot/javafx/animation/ScaleTransition.class\nJasmin:38: Warning - Syntax error.\n\n^\nJasmin:38: Error - Couldn\u0027t repair and continue parse.\n\n^\nJasmin: Found 2 errors\nWriting to myfx-graphics-soot/javafx/animation/ParallelTransition$1.class\n```\n\nThe classes I\u0027m trying to transform were preprocessed with Retrolambda before that. The JDK was not.\n\nThe whole offending pack: https://www.dropbox.com/s/i3pi4fqh9llwcw9/myfx.zip?dl\u003d0\n",
    "keywords": [
      "badly",
      "repair",
      "formatted",
      "main",
      "parse",
      "packmanager",
      "error",
      "found",
      "java",
      "flush",
      "soot",
      "continue",
      "streamencoder",
      "writing",
      "jasmin",
      "scanner",
      "syntax",
      "class",
      "errors",
      "^"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Sable/soot/commit/f2eb57f608d09c0fd6d9737757981b1173f20bee",
      "files": [
        {
          "file_name": "src/soot/AbstractJasminClass.java",
          "patch": "@@ -41,6 +41,8 @@\n import java.util.Map;\n \n import soot.baf.DoubleWordType;\n+import soot.jimple.DoubleConstant;\n+import soot.jimple.FloatConstant;\n import soot.jimple.IdentityStmt;\n import soot.jimple.Stmt;\n import soot.options.Options;\n@@ -593,13 +595,13 @@ else if (field.hasTag(\"LongConstantValueTag\")){\n                 }\n                 else if (field.hasTag(\"FloatConstantValueTag\")){\n                     fieldString +\u003d \" \u003d \";\n-                    float val \u003d ((FloatConstantValueTag)field.getTag(\"FloatConstantValueTag\")).getFloatValue();\n-                    fieldString +\u003d val;\n+                    FloatConstantValueTag val \u003d (FloatConstantValueTag) field.getTag(\"FloatConstantValueTag\");\n+                    fieldString +\u003d floatToString(val.getFloatValue());\n                 }\n                 else if (field.hasTag(\"DoubleConstantValueTag\")){\n                     fieldString +\u003d \" \u003d \";\n-                    double val \u003d ((DoubleConstantValueTag)field.getTag(\"DoubleConstantValueTag\")).getDoubleValue();\n-                    fieldString +\u003d val;\n+                    DoubleConstantValueTag val \u003d (DoubleConstantValueTag) field.getTag(\"DoubleConstantValueTag\");\n+                    fieldString +\u003d doubleToString(val.getDoubleValue());\n                 }\n                 if (field.hasTag(\"SyntheticTag\") || Modifier.isSynthetic(field.getModifiers())){\n                     fieldString +\u003d\" .synthetic\";\n@@ -785,6 +787,56 @@ public void print(PrintWriter out)\n         for (String s : code)\n             out.println(s);\n     }\n+\t\n+    protected String doubleToString(DoubleConstant v) {\n+\t\tString s \u003d v.toString();\n+\t\t\n+\t\tif(s.equals(\"#Infinity\"))\n+\t\t    s\u003d\"+DoubleInfinity\";\n+\t\telse if(s.equals(\"#-Infinity\"))\n+\t\t    s\u003d\"-DoubleInfinity\";\n+\t\telse if(s.equals(\"#NaN\"))\n+\t\t    s\u003d\"+DoubleNaN\";\n+\t\treturn s;\n+\t}\n+    \n+    protected String doubleToString(double d) {\n+        String doubleString \u003d new Double(d).toString();\n+        \n+        if (doubleString.equals(\"NaN\"))\n+        \treturn \"+DoubleNaN\";\n+        else if (doubleString.equals(\"Infinity\"))\n+\t\t    return \"+DoubleInfinity\";\n+        else if (doubleString.equals(\"-Infinity\"))\n+        \treturn \"-DoubleInfinity\";\n+        \n+        return doubleString;\n+\t}\n+\n+    protected String floatToString(FloatConstant v) {\n+\t\tString s \u003d v.toString();\n+\t\t\n+\t\tif(s.equals(\"#InfinityF\"))\n+\t\t    s\u003d\"+FloatInfinity\";\n+\t\telse if(s.equals(\"#-InfinityF\"))\n+\t\t    s\u003d\"-FloatInfinity\";\n+\t\telse if(s.equals(\"#NaNF\"))\n+\t\t    s\u003d\"+FloatNaN\";\n+\t\treturn s;\n+\t}\n+\n+    protected String floatToString(float d) {\n+        String floatString \u003d new Float(d).toString();\n+        \n+        if (floatString.equals(\"NaN\"))\n+        \treturn \"+FloatNaN\";\n+        else if (floatString.equals(\"Infinity\"))\n+\t\t    return \"+FloatInfinity\";\n+        else if (floatString.equals(\"-Infinity\"))\n+        \treturn \"-FloatInfinity\";\n+        \n+        return floatString;\n+\t}\n \n }\n "
        },
        {
          "file_name": "src/soot/baf/Baf.java",
          "patch": "@@ -470,7 +470,7 @@ public IncInst newIncInst(Local aLocal, Constant aConstant)\n   }\n   \n     public LookupSwitchInst newLookupSwitchInst(Unit defaultTarget, \n-                             List lookupValues, List targets)\n+                             List\u003cIntConstant\u003e lookupValues, List targets)\n     {\n         return new BLookupSwitchInst(defaultTarget, lookupValues, targets);\n     }"
        },
        {
          "file_name": "src/soot/baf/JasminClass.java",
          "patch": "@@ -469,17 +469,7 @@ else if (i.getConstant() instanceof DoubleConstant)\n                     else if(v.value \u003d\u003d 1)\n                         emit(\"dconst_1\");\n                     else {\n-                        String s \u003d v.toString();\n-                        \n-                        if(s.equals(\"#Infinity\"))\n-                            s\u003d\"+DoubleInfinity\";\n-                        \n-                        if(s.equals(\"#-Infinity\"))\n-                            s\u003d\"-DoubleInfinity\";\n-                        \n-                        if(s.equals(\"#NaN\"))\n-                            s\u003d\"+DoubleNaN\";\n-                        \n+                        String s \u003d doubleToString(v);\n                         emit(\"ldc2_w \" + s);\n                     }\n                 }\n@@ -493,16 +483,7 @@ else if(v.value \u003d\u003d 1)\n                     else if(v.value \u003d\u003d 2)\n                         emit(\"fconst_2\");\n                     else {\n-                        String s \u003d v.toString();\n-                        \n-                        if(s.equals(\"#InfinityF\"))\n-                            s\u003d\"+FloatInfinity\";\n-                        if(s.equals(\"#-InfinityF\"))\n-                            s\u003d\"-FloatInfinity\";\n-                        \n-                        if(s.equals(\"#NaNF\"))\n-                            s\u003d\"+FloatNaN\";\n-                        \n+                        String s \u003d floatToString(v);\n                         emit(\"ldc \" + s);\n                     }\n                 }\n@@ -1675,7 +1656,7 @@ public void caseLookupSwitchInst(LookupSwitchInst i)\n             {\n                 emit(\"lookupswitch\");\n \n-                List lookupValues \u003d i.getLookupValues();\n+                List\u003cIntConstant\u003e lookupValues \u003d i.getLookupValues();\n                 List\u003cUnit\u003e targets \u003d i.getTargets();\n \n                 for(int j \u003d 0; j \u003c lookupValues.size(); j++)"
        },
        {
          "file_name": "src/soot/baf/LookupSwitchInst.java",
          "patch": "@@ -28,6 +28,7 @@\n import java.util.*;\n \n import soot.*;\n+import soot.jimple.IntConstant;\n \n public interface LookupSwitchInst extends Inst\n {\n@@ -37,8 +38,8 @@\n \n     public void setLookupValue(int index, int value);\n     public int getLookupValue(int index);\n-    public List getLookupValues();\n-    public void setLookupValues(List values);\n+    public List\u003cIntConstant\u003e getLookupValues();\n+    public void setLookupValues(List\u003cIntConstant\u003e values);\n     \n     public int getTargetCount();\n     public Unit getTarget(int index);"
        },
        {
          "file_name": "src/soot/jimple/JasminClass.java",
          "patch": "@@ -1301,7 +1301,7 @@ public void caseLookupSwitchStmt(LookupSwitchStmt s)\n                 emitValue(s.getKey());\n                 emit(\"lookupswitch\", -1);\n \n-                List lookupValues \u003d s.getLookupValues();\n+                List\u003cIntConstant\u003e lookupValues \u003d s.getLookupValues();\n                 List\u003cUnit\u003e targets \u003d s.getTargets();\n \n                 for(int i \u003d 0; i \u003c lookupValues.size(); i++)\n@@ -1928,17 +1928,7 @@ public void caseDoubleConstant(DoubleConstant v)\n                 else if(v.value \u003d\u003d 1)\n                     emit(\"dconst_1\", 2);\n                 else {\n-                    String s \u003d v.toString();\n-                    \n-                    if(s.equals(\"#Infinity\"))\n-                        s\u003d\"+DoubleInfinity\";\n-                    \n-                    if(s.equals(\"#-Infinity\"))\n-                        s\u003d\"-DoubleInfinity\";\n-                    \n-                    if(s.equals(\"#NaN\"))\n-                        s\u003d\"+DoubleNaN\";\n-                        \n+                    String s \u003d doubleToString(v);\n                     emit(\"ldc2_w \" + s, 2);\n                 }\n             }\n@@ -1952,21 +1942,11 @@ else if(v.value \u003d\u003d 1)\n                 else if(v.value \u003d\u003d 2)\n                     emit(\"fconst_2\", 1);\n                 else {\n-                    String s \u003d v.toString();\n-                    \n-                    if(s.equals(\"#InfinityF\"))\n-                        s\u003d\"+FloatInfinity\";\n-                    if(s.equals(\"#-InfinityF\"))\n-                        s\u003d\"-FloatInfinity\";\n-                        \n-                    if(s.equals(\"#NaNF\"))\n-                        s\u003d\"+FloatNaN\";\n-                    \n+                    String s \u003d floatToString(v);\n                     emit(\"ldc \" + s, 1);\n                 }\n             }\n \n-\n             public void caseInstanceFieldRef(InstanceFieldRef v)\n             {\n                 emitValue(v.getBase());"
        }
      ]
    }
  },
  {
    "name": "Parser error for action hiding when used twice on a row",
    "url": "https://github.com/symphonytool/symphony/issues/157",
    "description": "\u003e The following bug was [originally reported](https://sourceforge.net/p/compassresearch/bugs/157/) on Sourceforge by [anderskm](https://sourceforge.net/u/anderskm/profile/), 2013-11-15 12:22:36.406000:\n\nThe parser fails on the following piece of CML:\n\n```\nchannels \na b\n\nprocess A \u003d \nbegin \n    @ (a -\u003e b -\u003e Skip) \\\\ {b} \\\\ {a}\nend\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/symphonytool/symphony/commit/ca2f89f646227c8a5bc98114a1efb81cae755367",
      "files": [
        {
          "file_name": "core/parser/src/main/antlr3/eu/compassresearch/core/parser/Cml.g",
          "patch": "@@ -141,12 +141,12 @@ public List\u003cCmlParserError\u003e getErrors() {\n \n private PAction stm2action(PStm stm)\n {\n-\treturn new AStmAction((stm!\u003dnull?stm.getLocation():null),stm);\n+    return new AStmAction((stm!\u003dnull?stm.getLocation():null),stm);\n }\n \n private PStm action2stm(PAction action)\n {\n-\treturn new AActionStm((action!\u003dnull?action.getLocation():null),null,action);\n+    return new AActionStm((action!\u003dnull?action.getLocation():null),null,action);\n }\n \n \n@@ -519,11 +519,10 @@ processDefinition returns[AProcessDefinition def]\n \n process returns[PProcess proc]\n @after { $proc.setLocation(extractLexLocation($start, $stop)); }\n-    : process0 processSuffix?\n-        {\n-            $proc \u003d $process0.proc;\n-            PProcess suffix \u003d $processSuffix.suffix;\n-            if (suffix !\u003d null) {\n+    : process0                  { $proc \u003d $process0.proc; }\n+        ( processSuffix\n+            {\n+                PProcess suffix \u003d $processSuffix.suffix;\n                 if (suffix instanceof AStartDeadlineProcess)\n                     ((AStartDeadlineProcess)suffix).setLeft($proc);\n                 else if (suffix instanceof AEndDeadlineProcess)\n@@ -533,7 +532,7 @@ process returns[PProcess proc]\n                 suffix.setLocation(extractLexLocation($start,$processSuffix.stop));\n                 $proc \u003d suffix;\n             }\n-        }\n+        )*\n     | processReplicated\n         {\n             $proc \u003d $processReplicated.proc;\n@@ -985,11 +984,10 @@ actionList returns[List\u003cPAction\u003e actions]\n     ;\n \n action returns[PAction action]\n-    : action0 actionSuffix?\n-        {\n-            $action \u003d $action0.action;\n-            PAction suffix \u003d $actionSuffix.suffix;\n-            if (suffix !\u003d null) {\n+    : action0                   { $action \u003d $action0.action; }\n+        ( actionSuffix\n+            {\n+                PAction suffix \u003d $actionSuffix.suffix;\n                 if (suffix instanceof AStartDeadlineAction)\n                     ((AStartDeadlineAction)suffix).setLeft($action);\n                 else if (suffix instanceof AEndDeadlineAction)\n@@ -999,7 +997,7 @@ action returns[PAction action]\n                 suffix.setLocation(extractLexLocation($start,$actionSuffix.stop));\n                 $action \u003d suffix;\n             }\n-        }\n+        )*\n     | actionReplicated  {$actionReplicated.action.setLocation(extractLexLocation($start,$actionReplicated.stop));$action \u003d $actionReplicated.action; }\n     ;\n \n@@ -1286,8 +1284,8 @@ leadingIdAction returns[PAction action]\n         {\n             CmlLexNameToken name \u003d new CmlLexNameToken(\"\", $id.getText(), extractLexLocation($start));\n             $action \u003d new AReferenceAction(null, name, new ArrayList\u003cPExp\u003e());\n-\t\t\t//in case of a channel renaming action; then the location must be set here else only the outer action will have a location set\n-\t\t\t$action.setLocation(extractLexLocation($start,$id));\n+            //in case of a channel renaming action; then the location must be set here else only the outer action will have a location set\n+            $action.setLocation(extractLexLocation($start,$id));\n         }\n         ( renamingExpr\n             // action call plus rename\n@@ -2183,8 +2181,8 @@ functionDefinition returns[SFunctionDefinition def]\n                 $def \u003d $expl.tail;\n                 if ( !$IDENTIFIER.getText().equals($def.getName().getName()) ) {\n                     //fixes bug 172\n-\t\t\t         String msg \u003d \"Mismatch in function definition.  Signature has \" + $IDENTIFIER.getText() + \", definition has \" + $def.getName().getName();\n-\t\t\t         errors.add(new CmlParserError(msg, new RecognitionException(), sourceFileName, $IDENTIFIER));\n+                     String msg \u003d \"Mismatch in function definition.  Signature has \" + $IDENTIFIER.getText() + \", definition has \" + $def.getName().getName();\n+                     errors.add(new CmlParserError(msg, new RecognitionException(), sourceFileName, $IDENTIFIER));\n \n                 }\n             } else {\n@@ -2439,17 +2437,17 @@ operationDef returns[SOperationDefinition def]\n                 // FIXME --- check that the IDENTIFIERs match and\n                 // throw a MismatchedTokenException (if that\u0027s the\n                 // right exception)\n-\t\t\t\tif(!$id.getText().equals($secondId.getText()))\n-\t\t\t\t{\n-\t\t\t\t\t //relates to bug 172\n-\t\t\t         String msg \u003d \"Mismatch in operation definition.  Signature has \" + $id.getText() + \", definition has \" + $secondId.getText();\n-\t\t\t         errors.add(new CmlParserError(msg, new RecognitionException(), sourceFileName, $secondId));\n-\t\t\t\t}\n+                if(!$id.getText().equals($secondId.getText()))\n+                {\n+                     //relates to bug 172\n+                     String msg \u003d \"Mismatch in operation definition.  Signature has \" + $id.getText() + \", definition has \" + $secondId.getText();\n+                     errors.add(new CmlParserError(msg, new RecognitionException(), sourceFileName, $secondId));\n+                }\n \n                 AActionStm bodyWrapper \u003d new AActionStm();\n-\t\t\t\tbodyWrapper.setAction($operationBody.body);\n-\t\t\t\tbodyWrapper.setLocation($operationBody.body.getLocation());\n-               \n+                bodyWrapper.setAction($operationBody.body);\n+                bodyWrapper.setLocation($operationBody.body.getLocation());\n+\n                 AExplicitOperationDefinition opdef \u003d\n                     AstFactory.newAExplicitOperationDefinition(\n                         new CmlLexNameToken(\"\", $id.getText(), extractLexLocation($id)),"
        },
        {
          "file_name": "core/parser/src/test/resources/issues/issue-157.cml",
          "patch": "@@ -0,0 +1,8 @@\n+channels \n+  a b\n+\n+process A \u003d begin \n+  @ (a -\u003e b -\u003e Skip) \\\\ {|b|} \\\\ {|a|}\n+end\n+\n+process B \u003d A \\\\ {|b|} \\\\ {|a|}"
        }
      ]
    }
  },
  {
    "name": "Parser error with indented else in do block",
    "url": "https://github.com/carymrobbins/intellij-haskforce/issues/48",
    "description": "The following snippet causes a parse error -\n\n``` haskell\nfoo \u003d do\n    if True then\n        let msg \u003d \"yep\"\n        in putStrLn msg\n    else  -- \u003cexp\u003e, \u003cpat\u003e, HaskellTokenType.let or HaskellTokenType.rec expected, got \u0027else\u0027\n        putStrLn \"nope\"\n```\n\nI think this has to do with the parser thinking that the dedent for `else` is closing the do block.  For instance, the following snippet parses fine -\n\n``` haskell\nfoo \u003d do\n    if True then\n        let msg \u003d \"yep\"\n        in putStrLn msg else putStrLn \"nope\"\n```\n",
    "keywords": [
      "msg",
      "else",
      "let",
      "putstrln"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/carymrobbins/intellij-haskforce/commit/169932c8097d542e610c3e2516b21beb2e7a5e97",
      "files": [
        {
          "file_name": "gen/com/haskforce/parser/HaskellParser.java",
          "patch": "@@ -3688,7 +3688,7 @@ static boolean kindsig(PsiBuilder builder_, int level_) {\n   // \"\\\\case\" altslist\n   //                | \u0027\\\u0027 apat+ \"-\u003e\" exp\n   //                | \"let\" decls \"in\" exp\n-  //                | \"if\" exp \"then\" exp \"else\" exp\n+  //                | \"if\" exp [semi] \"then\" exp [semi] \"else\" exp\n   //                | \"case\" exp \"of\" altslist\n   //                | \"do\" open stmts close\n   //                | \"mdo\" open stmts close\n@@ -3768,7 +3768,7 @@ private static boolean lexp_2(PsiBuilder builder_, int level_) {\n     return result_ || pinned_;\n   }\n \n-  // \"if\" exp \"then\" exp \"else\" exp\n+  // \"if\" exp [semi] \"then\" exp [semi] \"else\" exp\n   private static boolean lexp_3(PsiBuilder builder_, int level_) {\n     if (!recursion_guard_(builder_, level_, \"lexp_3\")) return false;\n     boolean result_;\n@@ -3777,14 +3777,30 @@ private static boolean lexp_3(PsiBuilder builder_, int level_) {\n     result_ \u003d consumeToken(builder_, IF);\n     result_ \u003d result_ \u0026\u0026 exp(builder_, level_ + 1);\n     pinned_ \u003d result_; // pin \u003d 2\n-    result_ \u003d result_ \u0026\u0026 report_error_(builder_, consumeToken(builder_, THEN));\n+    result_ \u003d result_ \u0026\u0026 report_error_(builder_, lexp_3_2(builder_, level_ + 1));\n+    result_ \u003d pinned_ \u0026\u0026 report_error_(builder_, consumeToken(builder_, THEN)) \u0026\u0026 result_;\n     result_ \u003d pinned_ \u0026\u0026 report_error_(builder_, exp(builder_, level_ + 1)) \u0026\u0026 result_;\n+    result_ \u003d pinned_ \u0026\u0026 report_error_(builder_, lexp_3_5(builder_, level_ + 1)) \u0026\u0026 result_;\n     result_ \u003d pinned_ \u0026\u0026 report_error_(builder_, consumeToken(builder_, ELSE)) \u0026\u0026 result_;\n     result_ \u003d pinned_ \u0026\u0026 exp(builder_, level_ + 1) \u0026\u0026 result_;\n     exit_section_(builder_, level_, marker_, null, result_, pinned_, null);\n     return result_ || pinned_;\n   }\n \n+  // [semi]\n+  private static boolean lexp_3_2(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"lexp_3_2\")) return false;\n+    semi(builder_, level_ + 1);\n+    return true;\n+  }\n+\n+  // [semi]\n+  private static boolean lexp_3_5(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"lexp_3_5\")) return false;\n+    semi(builder_, level_ + 1);\n+    return true;\n+  }\n+\n   // \"case\" exp \"of\" altslist\n   private static boolean lexp_4(PsiBuilder builder_, int level_) {\n     if (!recursion_guard_(builder_, level_, \"lexp_4\")) return false;"
        },
        {
          "file_name": "gen/com/haskforce/psi/HaskellDatadecl.java",
          "patch": "@@ -28,8 +28,8 @@\n   @Nullable\n   HaskellOqtycon getOqtycon();\n \n-  @NotNull\n-  List\u003cHaskellQtycls\u003e getQtyclsList();\n+  @Nullable\n+  HaskellQtycls getQtycls();\n \n   @NotNull\n   List\u003cHaskellTypee\u003e getTypeeList();"
        },
        {
          "file_name": "gen/com/haskforce/psi/HaskellDefaultdecl.java",
          "patch": "@@ -7,8 +7,8 @@\n \n public interface HaskellDefaultdecl extends PsiElement {\n \n-  @NotNull\n-  List\u003cHaskellTypee\u003e getTypeeList();\n+  @Nullable\n+  HaskellTypee getTypee();\n \n   @Nullable\n   PsiElement getLparen();"
        },
        {
          "file_name": "gen/com/haskforce/psi/HaskellIdecl.java",
          "patch": "@@ -28,8 +28,8 @@\n   @Nullable\n   HaskellOqtycon getOqtycon();\n \n-  @NotNull\n-  List\u003cHaskellQtycls\u003e getQtyclsList();\n+  @Nullable\n+  HaskellQtycls getQtycls();\n \n   @Nullable\n   HaskellTypee getTypee();"
        },
        {
          "file_name": "gen/com/haskforce/psi/HaskellNewtypedecl.java",
          "patch": "@@ -13,8 +13,8 @@\n   @Nullable\n   HaskellNewconstr getNewconstr();\n \n-  @NotNull\n-  List\u003cHaskellQtycls\u003e getQtyclsList();\n+  @Nullable\n+  HaskellQtycls getQtycls();\n \n   @Nullable\n   HaskellTycon getTycon();"
        },
        {
          "file_name": "gen/com/haskforce/psi/impl/HaskellDatadeclImpl.java",
          "patch": "@@ -65,9 +65,9 @@ public HaskellOqtycon getOqtycon() {\n   }\n \n   @Override\n-  @NotNull\n-  public List\u003cHaskellQtycls\u003e getQtyclsList() {\n-    return PsiTreeUtil.getChildrenOfTypeAsList(this, HaskellQtycls.class);\n+  @Nullable\n+  public HaskellQtycls getQtycls() {\n+    return findChildByClass(HaskellQtycls.class);\n   }\n \n   @Override"
        },
        {
          "file_name": "gen/com/haskforce/psi/impl/HaskellDefaultdeclImpl.java",
          "patch": "@@ -23,9 +23,9 @@ public void accept(@NotNull PsiElementVisitor visitor) {\n   }\n \n   @Override\n-  @NotNull\n-  public List\u003cHaskellTypee\u003e getTypeeList() {\n-    return PsiTreeUtil.getChildrenOfTypeAsList(this, HaskellTypee.class);\n+  @Nullable\n+  public HaskellTypee getTypee() {\n+    return findChildByClass(HaskellTypee.class);\n   }\n \n   @Override"
        },
        {
          "file_name": "gen/com/haskforce/psi/impl/HaskellIdeclImpl.java",
          "patch": "@@ -65,9 +65,9 @@ public HaskellOqtycon getOqtycon() {\n   }\n \n   @Override\n-  @NotNull\n-  public List\u003cHaskellQtycls\u003e getQtyclsList() {\n-    return PsiTreeUtil.getChildrenOfTypeAsList(this, HaskellQtycls.class);\n+  @Nullable\n+  public HaskellQtycls getQtycls() {\n+    return findChildByClass(HaskellQtycls.class);\n   }\n \n   @Override"
        },
        {
          "file_name": "gen/com/haskforce/psi/impl/HaskellNewtypedeclImpl.java",
          "patch": "@@ -35,9 +35,9 @@ public HaskellNewconstr getNewconstr() {\n   }\n \n   @Override\n-  @NotNull\n-  public List\u003cHaskellQtycls\u003e getQtyclsList() {\n-    return PsiTreeUtil.getChildrenOfTypeAsList(this, HaskellQtycls.class);\n+  @Nullable\n+  public HaskellQtycls getQtycls() {\n+    return findChildByClass(HaskellQtycls.class);\n   }\n \n   @Override"
        },
        {
          "file_name": "src/com/haskforce/Haskell.bnf",
          "patch": "@@ -371,7 +371,7 @@ private infixexp ::\u003d \u0027-\u0027* lexp [qop infixexp]\n private lexp ::\u003d \"\\\\case\" altslist\n                | \u0027\\\u0027 apat+ \"-\u003e\" exp\n                | \"let\" decls \"in\" exp\n-               | \"if\" exp \"then\" exp \"else\" exp\n+               | \"if\" exp [semi] \"then\" exp [semi] \"else\" exp\n                | \"case\" exp \"of\" altslist\n                | \"do\" open stmts close\n                | \"mdo\" open stmts close"
        },
        {
          "file_name": "tests/com/haskforce/highlighting/HaskellLexerTest.java",
          "patch": "@@ -49,6 +49,7 @@ public HaskellLexerTest() {\n     public void testLayout00014()       { doTest(true, true); }\n     public void testLayout00015()       { doTest(true, true); }\n     public void testLayout00016()       { doTest(true, true); }\n+    public void testLayout00017()       { doTest(true, true); }\n     public void testComment00001()      { doTest(true, true); }\n     public void testComment00002()      { doTest(true, true); }\n     public void testComment00003()      { doTest(true, true); }"
        },
        {
          "file_name": "tests/com/haskforce/parser/HaskellParserTest.java",
          "patch": "@@ -75,6 +75,7 @@ public HaskellParserTest() {\n     public void testLayout00014()       { doTest(true, true); }\n     public void testLayout00015()       { doTest(true, true); }\n     public void testLayout00016()       { doTest(true, true); }\n+    public void testLayout00017()       { doTest(true, true); }\n     public void testComment00001()      { doTest(true, true); }\n     public void testComment00002()      { doTest(true, true); }\n     public void testComment00003()      { doTest(true, true); }"
        },
        {
          "file_name": "tests/com/haskforce/parser/HaskellParsingLexerTest.java",
          "patch": "@@ -69,6 +69,7 @@ protected Lexer createLexer() {\n     public void testLayout00014()       { doTest(true, true); }\n     public void testLayout00015()       { doTest(true, true); }\n     public void testLayout00016()       { doTest(true, true); }\n+    public void testLayout00017()       { doTest(true, true); }\n     public void testComment00001()      { doTest(true, true); }\n     public void testComment00002()      { doTest(true, true); }\n     public void testComment00003()      { doTest(true, true); }"
        },
        {
          "file_name": "tests/gold/lexer/expected/Layout00017.txt",
          "patch": "@@ -0,0 +1,31 @@\n+HaskellTokenType.module (\u0027module\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.conidRegexp (\u0027Layout00017\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.where (\u0027where\u0027)\n+WHITE_SPACE (\u0027\\n\\n\u0027)\n+HaskellTokenType.varidRegexp (\u0027foo\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\u003d (\u0027\u003d\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.do (\u0027do\u0027)\n+WHITE_SPACE (\u0027\\n    \u0027)\n+HaskellTokenType.if (\u0027if\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.conidRegexp (\u0027True\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.then (\u0027then\u0027)\n+WHITE_SPACE (\u0027\\n        \u0027)\n+HaskellTokenType.varidRegexp (\u0027putStrLn\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+HaskellTokenType.STRINGTOKEN (\u0027yep\u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+WHITE_SPACE (\u0027\\n    \u0027)\n+HaskellTokenType.else (\u0027else\u0027)\n+WHITE_SPACE (\u0027\\n        \u0027)\n+HaskellTokenType.varidRegexp (\u0027putStrLn\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+HaskellTokenType.STRINGTOKEN (\u0027nope\u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/gold/parser/Layout00017.hs",
          "patch": "@@ -0,0 +1,7 @@\n+module Layout00017 where\n+\n+foo \u003d do\n+    if True then\n+        putStrLn \"yep\"\n+    else\n+        putStrLn \"nope\""
        },
        {
          "file_name": "tests/gold/parser/expected/Layout00017.txt",
          "patch": "@@ -0,0 +1,44 @@\n+Haskell File\n+  HaskellModuledeclImpl(MODULEDECL)\n+    PsiElement(HaskellTokenType.module)(\u0027module\u0027)\n+    HaskellQconidImpl(QCONID)\n+      HaskellConidImpl(CONID)\n+        PsiElement(HaskellTokenType.conidRegexp)(\u0027Layout00017\u0027)\n+    PsiElement(HaskellTokenType.where)(\u0027where\u0027)\n+  HaskellBodyImpl(BODY)\n+    HaskellFunorpatdeclImpl(FUNORPATDECL)\n+      HaskellPatImpl(PAT)\n+        HaskellVaridImpl(VARID)\n+          PsiElement(HaskellTokenType.varidRegexp)(\u0027foo\u0027)\n+      HaskellRhsImpl(RHS)\n+        PsiElement(HaskellTokenType.\u003d)(\u0027\u003d\u0027)\n+        HaskellExpImpl(EXP)\n+          PsiElement(HaskellTokenType.do)(\u0027do\u0027)\n+          HaskellStmtsImpl(STMTS)\n+            HaskellExpImpl(EXP)\n+              PsiElement(HaskellTokenType.if)(\u0027if\u0027)\n+              HaskellExpImpl(EXP)\n+                HaskellQconImpl(QCON)\n+                  HaskellQconidImpl(QCONID)\n+                    HaskellConidImpl(CONID)\n+                      PsiElement(HaskellTokenType.conidRegexp)(\u0027True\u0027)\n+              PsiElement(HaskellTokenType.then)(\u0027then\u0027)\n+              HaskellExpImpl(EXP)\n+                HaskellQvarImpl(QVAR)\n+                  HaskellQvaridImpl(QVARID)\n+                    HaskellVaridImpl(VARID)\n+                      PsiElement(HaskellTokenType.varidRegexp)(\u0027putStrLn\u0027)\n+                HaskellPstringtokenImpl(PSTRINGTOKEN)\n+                  PsiElement(HaskellTokenType.\")(\u0027\"\u0027)\n+                  PsiElement(HaskellTokenType.STRINGTOKEN)(\u0027yep\u0027)\n+                  PsiElement(HaskellTokenType.\")(\u0027\"\u0027)\n+              PsiElement(HaskellTokenType.else)(\u0027else\u0027)\n+              HaskellExpImpl(EXP)\n+                HaskellQvarImpl(QVAR)\n+                  HaskellQvaridImpl(QVARID)\n+                    HaskellVaridImpl(VARID)\n+                      PsiElement(HaskellTokenType.varidRegexp)(\u0027putStrLn\u0027)\n+                HaskellPstringtokenImpl(PSTRINGTOKEN)\n+                  PsiElement(HaskellTokenType.\")(\u0027\"\u0027)\n+                  PsiElement(HaskellTokenType.STRINGTOKEN)(\u0027nope\u0027)\n+                  PsiElement(HaskellTokenType.\")(\u0027\"\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/gold/parser/expectedJson/Layout00017.txt",
          "patch": "@@ -0,0 +1 @@\n+[{\"Module\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":1,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":1},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":1},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":1},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":3,\"srcSpanEndLine\":3,\"srcSpanStartColumn\":1},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":8,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":1},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":1,\"srcSpanStartLine\":8,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":1}]},{\"ModuleHead\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":25,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":1},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":7,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":1},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":25,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":20}]},{\"ModuleName\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":19,\"srcSpanStartLine\":1,\"srcSpanEndLine\":1,\"srcSpanStartColumn\":8},\"srcInfoPoints\":[]},\"Layout00017\"]},null,null]},[],[],[{\"PatBind\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":0,\"srcSpanStartLine\":3,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":1},\"srcInfoPoints\":[]},{\"PVar\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":4,\"srcSpanStartLine\":3,\"srcSpanEndLine\":3,\"srcSpanStartColumn\":1},\"srcInfoPoints\":[]},{\"Ident\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":4,\"srcSpanStartLine\":3,\"srcSpanEndLine\":3,\"srcSpanStartColumn\":1},\"srcInfoPoints\":[]},\"foo\"]}]},null,{\"UnGuardedRhs\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":0,\"srcSpanStartLine\":3,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":5},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":6,\"srcSpanStartLine\":3,\"srcSpanEndLine\":3,\"srcSpanStartColumn\":5}]},{\"Do\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":0,\"srcSpanStartLine\":3,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":7},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":9,\"srcSpanStartLine\":3,\"srcSpanEndLine\":3,\"srcSpanStartColumn\":7},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":5,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":5},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":0,\"srcSpanStartLine\":8,\"srcSpanEndLine\":8,\"srcSpanStartColumn\":1}]},[{\"Qualifier\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":24,\"srcSpanStartLine\":4,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":5},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":7,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":5},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":13},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":5,\"srcSpanStartLine\":6,\"srcSpanEndLine\":6,\"srcSpanStartColumn\":5},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":9,\"srcSpanStartLine\":6,\"srcSpanEndLine\":6,\"srcSpanStartColumn\":5}]},{\"If\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":24,\"srcSpanStartLine\":4,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":5},\"srcInfoPoints\":[{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":7,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":5},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":13},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":5,\"srcSpanStartLine\":6,\"srcSpanEndLine\":6,\"srcSpanStartColumn\":5},{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":9,\"srcSpanStartLine\":6,\"srcSpanEndLine\":6,\"srcSpanStartColumn\":5}]},{\"Con\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":12,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":8},\"srcInfoPoints\":[]},{\"UnQual\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":12,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":8},\"srcInfoPoints\":[]},{\"Ident\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":12,\"srcSpanStartLine\":4,\"srcSpanEndLine\":4,\"srcSpanStartColumn\":8},\"srcInfoPoints\":[]},\"True\"]}]}]},{\"App\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":23,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"Var\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"UnQual\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"Ident\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},\"putStrLn\"]}]}]},{\"Lit\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":23,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":18},\"srcInfoPoints\":[]},{\"String\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":23,\"srcSpanStartLine\":5,\"srcSpanEndLine\":5,\"srcSpanStartColumn\":18},\"srcInfoPoints\":[]},\"yep\",\"yep\"]}]}]},{\"App\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":24,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"Var\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"UnQual\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},{\"Ident\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":17,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":9},\"srcInfoPoints\":[]},\"putStrLn\"]}]}]},{\"Lit\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":24,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":18},\"srcInfoPoints\":[]},{\"String\":[{\"srcInfoSpan\":{\"srcSpanFilename\":\"A.hs\",\"srcSpanEndColumn\":24,\"srcSpanStartLine\":7,\"srcSpanEndLine\":7,\"srcSpanStartColumn\":18},\"srcInfoPoints\":[]},\"nope\",\"nope\"]}]}]}]}]}]]}]},null]}]]},[]]\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/gold/parsingLexer/expected/Layout00017.txt",
          "patch": "@@ -0,0 +1,61 @@\n+HaskellTokenType.module (\u0027module\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.conidRegexp (\u0027Layout00017\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.where (\u0027where\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+HaskellTokenType.Synthetic leftbrace (\u0027\u0027)\n+HaskellTokenType.varidRegexp (\u0027foo\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\u003d (\u0027\u003d\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.do (\u0027do\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.Synthetic leftbrace (\u0027\u0027)\n+HaskellTokenType.if (\u0027if\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.conidRegexp (\u0027True\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.then (\u0027then\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.varidRegexp (\u0027putStrLn\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+HaskellTokenType.STRINGTOKEN (\u0027yep\u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.Synthetic semicolon (\u0027\u0027)\n+HaskellTokenType.else (\u0027else\u0027)\n+WHITE_SPACE (\u0027\\n\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.varidRegexp (\u0027putStrLn\u0027)\n+WHITE_SPACE (\u0027 \u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+HaskellTokenType.STRINGTOKEN (\u0027nope\u0027)\n+HaskellTokenType.\" (\u0027\"\u0027)\n+HaskellTokenType.Synthetic rightbrace (\u0027\u0027)\n+HaskellTokenType.Synthetic rightbrace (\u0027\u0027)\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Command parse error",
    "url": "https://github.com/DSH105/EchoPet/issues/28",
    "description": "EchoPet Version: 2.0.6\nBukkit Version: CraftBukkit version git-Spigot-1037 (MC: 1.6.2)\n\nIf a space between the pet type and the data type will produce the error like below, e.g \"/pet hosrse: zombie\"\n\n```\n2013-07-31 13:18:44 [INFO] AsakuraTaka issued server command: /pet horse: zombie\n2013-07-31 13:18:44 [SEVERE] null\norg.bukkit.command.CommandException: Unhandled exception executing \u0027pet horse: zombie\u0027 in com.github.dsh105.echopet.commands.CustomCommand(pet)\n    at org.bukkit.command.SimpleCommandMap.dispatch(SimpleCommandMap.java:194)\n    at org.bukkit.craftbukkit.v1_6_R2.CraftServer.dispatchCommand(CraftServer.java:527)\n    at net.minecraft.server.v1_6_R2.PlayerConnection.handleCommand(PlayerConnection.java:981)\n    at net.minecraft.server.v1_6_R2.PlayerConnection.chat(PlayerConnection.java:892)\n    at net.minecraft.server.v1_6_R2.PlayerConnection.a(PlayerConnection.java:839)\n    at net.minecraft.server.v1_6_R2.Packet3Chat.handle(SourceFile:49)\n    at org.spigotmc.netty.NettyNetworkManager.b(NettyNetworkManager.java:230)\n    at net.minecraft.server.v1_6_R2.PlayerConnection.e(PlayerConnection.java:118)\n    at net.minecraft.server.v1_6_R2.ServerConnection.b(SourceFile:37)\n    at org.spigotmc.netty.NettyServerConnection.b(NettyServerConnection.java:125)\n    at net.minecraft.server.v1_6_R2.MinecraftServer.t(MinecraftServer.java:592)\n    at net.minecraft.server.v1_6_R2.DedicatedServer.t(DedicatedServer.java:239)\n    at net.minecraft.server.v1_6_R2.MinecraftServer.s(MinecraftServer.java:481)\n    at net.minecraft.server.v1_6_R2.MinecraftServer.run(MinecraftServer.java:413)\n    at net.minecraft.server.v1_6_R2.ThreadServerApplication.run(SourceFile:582)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 1\n    at com.github.dsh105.echopet.util.PetUtil.formPetFromArgs(PetUtil.java:101)\n    at com.github.dsh105.echopet.commands.PetCommand.onCommand(PetCommand.java:381)\n    at com.github.dsh105.echopet.commands.CustomCommand.execute(CustomCommand.java:18)\n    at org.bukkit.command.SimpleCommandMap.dispatch(SimpleCommandMap.java:190)\n    ... 14 more\n```\n",
    "keywords": [
      "com",
      "minecraft",
      "server",
      "b",
      "github",
      "bukkit",
      "org",
      "echopet",
      "net minecraft",
      "customcommand",
      "version",
      "command",
      "github dsh105",
      "server v1_6_r2",
      "simplecommandmap",
      "dsh105",
      "playerconnection",
      "minecraftserver",
      "minecraft server",
      "net",
      "v1_6_r2",
      "commands"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/DSH105/EchoPet/commit/46476927b58fefe8c01442851e51d7ec4cceda26",
      "files": [
        {
          "file_name": "src/main/java/com/github/dsh105/echopet/util/Lang.java",
          "patch": "@@ -10,6 +10,7 @@\n \tADMIN_COMMAND_ERROR(\"admin_cmd_error\", \"\u0026eError for input string: \u00266%cmd%\u0026e. Use /\" + EchoPet.getPluginInstance().adminCmdString + \" for help\"),\n \tCOMMAND_ERROR(\"cmd_error\", \"\u0026eError for input string: \u00266%cmd%\u0026e. Use /\" + EchoPet.getPluginInstance().cmdString + \" for help.\"),\n \tIN_GAME_ONLY(\"in_game_only\", \"\u00266%cmd% \u0026ecan only be used in-game.\"),\n+\tSTRING_ERROR(\"string_error\", \"\u0026eError parsing String: [\u00266%string%\u0026e]. Please revise command arguments.\"),\n \t\n \tDIMENSION_CHANGE(\"dimension_change\", \"\u0026eDimension change initiated. Warping space and time to retrieve your Pet...\"),\n \tAUTOSAVE_PET_LOAD(\"autosave_pet_load\", \"\u0026eYour last active pet (\u00266%petname%\u0026e) now follows close behind you.\"),"
        },
        {
          "file_name": "src/main/java/com/github/dsh105/echopet/util/PetUtil.java",
          "patch": "@@ -44,6 +44,10 @@ public static UnorganisedPetData formPetFromArgs(EchoPet ec, CommandSender sende\n \t\t\tString[] split \u003d s.split(\";\");\n \t\t\tif (split[0].contains(\":\")) {\n \t\t\t\tString[] splitt \u003d split[0].split(\":\");\n+\t\t\t\tif (splitt.length \u003c\u003d 1) {\n+\t\t\t\t\tsender.sendMessage(Lang.STRING_ERROR.toString().replace(\"%string%\", split[0]));\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n \t\t\t\tpetString \u003d splitt[0].toLowerCase();\n \t\t\t\tdataString \u003d splitt[1];\n \t\t\t\tname \u003d split[1];\n@@ -68,6 +72,10 @@ public static UnorganisedPetData formPetFromArgs(EchoPet ec, CommandSender sende\n \t\t\t}\n \t\t\telse if (split[1].contains(\":\")) {\n \t\t\t\tString[] splitt \u003d split[1].split(\":\");\n+\t\t\t\tif (splitt.length \u003c\u003d 1) {\n+\t\t\t\t\tsender.sendMessage(Lang.STRING_ERROR.toString().replace(\"%string%\", split[1]));\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n \t\t\t\tpetString \u003d split[0].toLowerCase();\n \t\t\t\tname \u003d splitt[0];\n \t\t\t\tdataString \u003d splitt[1];\n@@ -97,6 +105,10 @@ else if (split[1].contains(\":\")) {\n \t\t}\n \t\telse if (s.contains(\":\")) {\n \t\t\tString[] split \u003d s.split(\":\");\n+\t\t\tif (split.length \u003c\u003d 1) {\n+\t\t\t\tsender.sendMessage(Lang.STRING_ERROR.toString().replace(\"%string%\", s));\n+\t\t\t\treturn null;\n+\t\t\t}\n \t\t\tpetString \u003d split[0].toLowerCase();\n \t\t\tdataString \u003d split[1];\n \t\t\tif (!dataString.contains(\",\")) {"
        }
      ]
    }
  },
  {
    "name": "route param parse error",
    "url": "https://github.com/biezhi/blade/issues/84",
    "description": "e.g\r\n\r\n```java\r\npublic void sayHi(@QueryParam long age)\r\n```\r\n\r\nhttp://xxx:9000/sayHi",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/biezhi/blade/commit/d713bb100c9b77da6490f8db24bbe57fe367e10a",
      "files": [
        {
          "file_name": "LAST_VERSION.md",
          "patch": "@@ -25,7 +25,7 @@\n \u003cdependency\u003e\r\n     \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n     \u003cartifactId\u003eblade-kit\u003c/artifactId\u003e\r\n-    \u003cversion\u003e1.4.0-alpha\u003c/version\u003e\r\n+    \u003cversion\u003e1.4.0\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n \r\n@@ -34,7 +34,7 @@\n \u003cdependency\u003e\r\n     \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n     \u003cartifactId\u003eblade-core\u003c/artifactId\u003e\r\n-    \u003cversion\u003e1.7.0-beta\u003c/version\u003e\r\n+    \u003cversion\u003e1.7.0\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n \r\n@@ -43,7 +43,7 @@\n \u003cdependency\u003e\r\n     \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n     \u003cartifactId\u003eblade-embed-jetty\u003c/artifactId\u003e\r\n-    \u003cversion\u003e0.0.8\u003c/version\u003e\r\n+    \u003cversion\u003e0.0.9\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n \r\n@@ -52,7 +52,7 @@\n \u003cdependency\u003e\r\n     \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n     \u003cartifactId\u003eblade-template-jetbrick\u003c/artifactId\u003e\r\n-    \u003cversion\u003e0.0.7\u003c/version\u003e\r\n+    \u003cversion\u003e0.0.8\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n \r"
        },
        {
          "file_name": "README.md",
          "patch": "@@ -38,18 +38,18 @@ Grab via `Maven`：\n \u003cdependency\u003e\r\n \t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n \t\u003cartifactId\u003eblade-core\u003c/artifactId\u003e\r\n-\t\u003cversion\u003e1.7.0-beta\u003c/version\u003e\r\n+\t\u003cversion\u003e1.7.0\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n \u003cdependency\u003e\r\n \t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n \t\u003cartifactId\u003eblade-embed-jetty\u003c/artifactId\u003e\r\n-\t\u003cversion\u003e0.0.8\u003c/version\u003e\r\n+\t\u003cversion\u003e0.0.9\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n or `Gradle`:\r\n ```sh\r\n-compile \u0027com.bladejava:blade-core:1.7.0-beta\u0027\r\n-compile \u0027com.bladejava:blade-embed-jetty:0.0.8\u0027\r\n+compile \u0027com.bladejava:blade-core:1.7.0\u0027\r\n+compile \u0027com.bladejava:blade-embed-jetty:0.0.9\u0027\r\n ```\r\n \r\n Create `Main` method like this：\r"
        },
        {
          "file_name": "README_CN.md",
          "patch": "@@ -39,20 +39,20 @@ Blade 是一款轻量级的MVC框架, 重新定义JavaWeb开发,它拥有简洁\n \u003cdependency\u003e\r\n \t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n \t\u003cartifactId\u003eblade-core\u003c/artifactId\u003e\r\n-\t\u003cversion\u003e1.7.0-beta\u003c/version\u003e\r\n+\t\u003cversion\u003e1.7.0\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n \u003cdependency\u003e\r\n \t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n \t\u003cartifactId\u003eblade-embed-jetty\u003c/artifactId\u003e\r\n-\t\u003cversion\u003e0.0.8\u003c/version\u003e\r\n+\t\u003cversion\u003e0.0.9\u003c/version\u003e\r\n \u003c/dependency\u003e\r\n ```\r\n \r\n 或者  `Gradle`:\r\n \r\n ```sh\r\n-compile \u0027com.bladejava:blade-core:1.7.0-beta\u0027\r\n-compile \u0027com.bladejava:blade-embed-jetty:0.0.8\u0027\r\n+compile \u0027com.bladejava:blade-core:1.7.0\u0027\r\n+compile \u0027com.bladejava:blade-embed-jetty:0.0.9\u0027\r\n ```\r\n \r\n 编写 `Main`函数：\r"
        },
        {
          "file_name": "UPDATE_LOG.md",
          "patch": "@@ -1,5 +1,9 @@\n # Blade 更新日志\r\n \r\n+### v1.7.0\r\n+\t1. 修复jar下载不到\r\n+\t2. 优化路由结构和数据结构\r\n+\r\n ### v1.6.7\r\n \t1. 支持自定义filter, servlet\r\n \t2. 支持websocket\r"
        },
        {
          "file_name": "blade-core/pom.xml",
          "patch": "@@ -28,7 +28,7 @@\n \t\t\u003c/dependency\u003e\r\n \t\t\t\t\r\n \t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n+\t\t\t\u003cgroupId\u003e${project.groupId}\u003c/groupId\u003e\r\n \t\t\t\u003cartifactId\u003eblade-kit\u003c/artifactId\u003e\r\n \t\t\t\u003cversion\u003e${blade-kit.version}\u003c/version\u003e\r\n \t\t\u003c/dependency\u003e\r"
        },
        {
          "file_name": "blade-core/src/main/java/com/blade/Blade.java",
          "patch": "@@ -47,7 +47,7 @@\n  * Blade Core Class\r\n  *\r\n  * @author \u003ca href\u003d\"mailto:biezhi.me@gmail.com\" target\u003d\"_blank\"\u003ebiezhi\u003c/a\u003e\r\n- * @since 1.6.6\r\n+ * @since 1.7.0-beta\r\n  */\r\n public final class Blade {\r\n \r"
        },
        {
          "file_name": "blade-core/src/main/java/com/blade/mvc/http/wrapper/ServletResponse.java",
          "patch": "@@ -133,7 +133,7 @@ public Response cookie(Cookie cookie) {\n \r\n \t@Override\r\n \tpublic Response cookie(String name, String value) {\r\n-\t\treturn cookie(name, value);\r\n+\t\treturn cookie(name, value, -1);\r\n \t}\r\n \r\n \t@Override\r"
        },
        {
          "file_name": "blade-core/src/main/java/com/blade/mvc/view/resolve/RouteViewResolve.java",
          "patch": "@@ -68,7 +68,7 @@ public void handle(Request request, Response response, Route route) throws Excep\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e){\r\n-\t\t\tthrow new BladeException(e.getMessage());\r\n+\t\t\tthrow new BladeException(e.getCause());\r\n \t\t} catch (Exception e){\r\n \t\t\tthrow e;\r\n \t\t}\r"
        },
        {
          "file_name": "blade-embed-jetty/pom.xml",
          "patch": "@@ -1,49 +1,61 @@\n \u003c?xml version\u003d\"1.0\"?\u003e\r\n \u003cproject\r\n-\txsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n-\txmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\r\n-\t\u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\r\n-\t\u003cparent\u003e\r\n-\t\t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n-\t\t\u003cartifactId\u003eblade\u003c/artifactId\u003e\r\n-\t\t\u003cversion\u003e1.0\u003c/version\u003e\r\n-\t\u003c/parent\u003e\r\n-\t\r\n-\t\u003cartifactId\u003eblade-embed-jetty\u003c/artifactId\u003e\r\n-\t\u003cversion\u003e${blade-embed-jetty.version}\u003c/version\u003e\r\n-\t\u003cname\u003eblade-embed-jetty\u003c/name\u003e\r\n-\t\t\r\n-\t\u003cdependencies\u003e\r\n-\r\n-\t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\r\n-\t\t\t\u003cartifactId\u003eslf4j-api\u003c/artifactId\u003e\r\n-\t\t\u003c/dependency\u003e\r\n-\r\n-\t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n-\t\t\t\u003cartifactId\u003eblade-core\u003c/artifactId\u003e\r\n-\t\t\t\u003cversion\u003e${blade-core.version}\u003c/version\u003e\r\n-\t\t\u003c/dependency\u003e\r\n-\r\n-\t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e\r\n-\t\t\t\u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e\r\n-\t\t\t\u003cversion\u003e${servlet.version}\u003c/version\u003e\r\n-\t\t\t\u003cscope\u003eprovided\u003c/scope\u003e\r\n-\t\t\u003c/dependency\u003e\r\n-\r\n-\t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003eorg.eclipse.jetty\u003c/groupId\u003e\r\n-\t\t\t\u003cartifactId\u003ejetty-server\u003c/artifactId\u003e\r\n-\t\t\t\u003cversion\u003e${jetty.version}\u003c/version\u003e\r\n-\t\t\u003c/dependency\u003e\r\n-\t\t\u003cdependency\u003e\r\n-\t\t\t\u003cgroupId\u003eorg.eclipse.jetty\u003c/groupId\u003e\r\n-\t\t\t\u003cartifactId\u003ejetty-webapp\u003c/artifactId\u003e\r\n-\t\t\t\u003cversion\u003e${jetty.version}\u003c/version\u003e\r\n-\t\t\u003c/dependency\u003e\r\n-\r\n-\t\u003c/dependencies\u003e\r\n+        xsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n+        xmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\r\n+    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e\r\n+    \u003cparent\u003e\r\n+        \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n+        \u003cartifactId\u003eblade\u003c/artifactId\u003e\r\n+        \u003cversion\u003e1.0\u003c/version\u003e\r\n+    \u003c/parent\u003e\r\n+\r\n+    \u003cartifactId\u003eblade-embed-jetty\u003c/artifactId\u003e\r\n+    \u003cversion\u003e${blade-embed-jetty.version}\u003c/version\u003e\r\n+    \u003cname\u003eblade-embed-jetty\u003c/name\u003e\r\n+\r\n+    \u003cproperties\u003e\r\n+        \u003cjetty.version\u003e9.2.12.v20150709\u003c/jetty.version\u003e\r\n+    \u003c/properties\u003e\r\n+\r\n+    \u003cdependencies\u003e\r\n+\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\r\n+            \u003cartifactId\u003eslf4j-api\u003c/artifactId\u003e\r\n+        \u003c/dependency\u003e\r\n+\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003eorg.eclipse.jetty\u003c/groupId\u003e\r\n+            \u003cartifactId\u003ejetty-server\u003c/artifactId\u003e\r\n+            \u003cversion\u003e${jetty.version}\u003c/version\u003e\r\n+        \u003c/dependency\u003e\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003eorg.eclipse.jetty\u003c/groupId\u003e\r\n+            \u003cartifactId\u003ejetty-webapp\u003c/artifactId\u003e\r\n+            \u003cversion\u003e${jetty.version}\u003c/version\u003e\r\n+        \u003c/dependency\u003e\r\n+\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003ecom.bladejava\u003c/groupId\u003e\r\n+            \u003cartifactId\u003eblade-kit\u003c/artifactId\u003e\r\n+            \u003cversion\u003e${blade-kit.version}\u003c/version\u003e\r\n+            \u003cscope\u003ecompile\u003c/scope\u003e\r\n+        \u003c/dependency\u003e\r\n+\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003e${project.groupId}\u003c/groupId\u003e\r\n+            \u003cartifactId\u003eblade-core\u003c/artifactId\u003e\r\n+            \u003cversion\u003e${blade-core.version}\u003c/version\u003e\r\n+        \u003c/dependency\u003e\r\n+\r\n+        \u003cdependency\u003e\r\n+            \u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e\r\n+            \u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e\r\n+            \u003cversion\u003e${servlet.version}\u003c/version\u003e\r\n+            \u003cscope\u003eprovided\u003c/scope\u003e\r\n+        \u003c/dependency\u003e\r\n+\r\n+\r\n+    \u003c/dependencies\u003e\r\n \r\n \u003c/project\u003e\r"
        },
        {
          "file_name": "blade-embed-jetty/src/main/java/com/blade/embedd/EmbedJettyServer.java",
          "patch": "@@ -30,6 +30,12 @@\n \r\n import static com.blade.Blade.$;\r\n \r\n+/**\r\n+ * Blade Jetty Server\r\n+ *\r\n+ * @author \u003ca href\u003d\"mailto:biezhi.me@gmail.com\" target\u003d\"_blank\"\u003ebiezhi\u003c/a\u003e\r\n+ * @since 0.0.8\r\n+ */\r\n public class EmbedJettyServer implements EmbedServer {\r\n \r\n \tprivate static final Logger LOGGER \u003d LoggerFactory.getLogger(EmbedJettyServer.class);\r\n@@ -57,15 +63,6 @@ public EmbedJettyServer() {\n \t\tif(DynamicContext.isJarContext()){\r\n \t\t\tURL url \u003d EmbedJettyServer.class.getResource(\"/\");\r\n \t\t\tthis.classPath \u003d url.getPath();\r\n-//\t\t\tif(null \u003d\u003d url){\r\n-//\t\t\t\tString urlStr \u003d EmbedJettyServer.class.getResource(\"\").getPath();\r\n-//\t\t\t\tint pos \u003d urlStr.indexOf(\"jar!/\");\r\n-//\t\t\t\tif(pos !\u003d -1){\r\n-//\t\t\t\t\tString jarPath \u003d new File(urlStr.substring(5, pos + 2)).getParent();\r\n-//\t\t\t\t\tthis.classPath \u003d new File(jarPath).getParent() + File.separator + $().configuration().getClassPath();\r\n-//\r\n-//\t\t\t\t}\r\n-//\t\t\t}\r\n \t\t\tLOGGER.info(\"add classpath: {}\", classPath);\r\n \t\t}\r\n \r"
        },
        {
          "file_name": "blade-kit/src/main/java/com/blade/kit/base/Config.java",
          "patch": "@@ -11,6 +11,7 @@\n import java.io.*;\r\n import java.net.URL;\r\n import java.net.URLDecoder;\r\n+import java.util.Iterator;\r\n import java.util.Map;\r\n import java.util.Properties;\r\n \r\n@@ -25,7 +26,9 @@ public Config() {\n     \r\n \tpublic Config load(Properties props) {\r\n         Assert.notNull(props, \"properties not null\");\r\n-        for (String key : props.stringPropertyNames()) {\r\n+        Iterator\u003cObject\u003e it \u003d props.keySet().iterator();\r\n+        while (it.hasNext()){\r\n+            String key \u003d it.next().toString();\r\n             String value \u003d props.getProperty(key);\r\n             config.put(key, value);\r\n         }\r"
        },
        {
          "file_name": "pom.xml",
          "patch": "@@ -11,27 +11,7 @@\n \t\u003cname\u003eblade\u003c/name\u003e\n \t\u003curl\u003ehttps://github.com/biezhi/blade\u003c/url\u003e\n \n-\t\u003clicenses\u003e\n-        \u003clicense\u003e\n-            \u003cname\u003eThe Apache Software License, Version 2.0\u003c/name\u003e\n-            \u003curl\u003ehttp://www.apache.org/licenses/LICENSE-2.0.txt\u003c/url\u003e\n-        \u003c/license\u003e\n-    \u003c/licenses\u003e\n-\n-    \u003cdevelopers\u003e\n-        \u003cdeveloper\u003e\n-            \u003cname\u003ebiezhi\u003c/name\u003e\n-            \u003cemail\u003ebiezhi.me@gmail.com\u003c/email\u003e\n-        \u003c/developer\u003e\n-    \u003c/developers\u003e\n-\n-    \u003cscm\u003e\n-        \u003cconnection\u003escm:git@github.com:biezhi/blade.git\u003c/connection\u003e\n-        \u003cdeveloperConnection\u003escm:git@github.com:biezhi/blade.git\u003c/developerConnection\u003e\n-        \u003curl\u003egit@github.com:biezhi/blade.git\u003c/url\u003e\n-    \u003c/scm\u003e\n-\t\n-    \u003crepositories\u003e\n+\t\u003crepositories\u003e\n         \u003crepository\u003e\n             \u003cid\u003eoss-snapshots\u003c/id\u003e\n             \u003curl\u003ehttps://oss.sonatype.org/content/repositories/snapshots\u003c/url\u003e\n@@ -53,10 +33,10 @@\n \t\t\u003cmockito.version\u003e2.0.2-beta\u003c/mockito.version\u003e\n \t\t\u003cslf4j-api.version\u003e1.7.21\u003c/slf4j-api.version\u003e\n \t\t\u003cslf4j-log4j12.version\u003e1.7.21\u003c/slf4j-log4j12.version\u003e\n-\t\t\u003cblade-core.version\u003e1.7.0-beta\u003c/blade-core.version\u003e\n-\t\t\u003cblade-kit.version\u003e1.4.0-beta\u003c/blade-kit.version\u003e\n+\t\t\u003cblade-core.version\u003e1.7.0\u003c/blade-core.version\u003e\n+\t\t\u003cblade-kit.version\u003e1.4.0\u003c/blade-kit.version\u003e\n \t\t\u003cblade-aop.version\u003e1.0.0\u003c/blade-aop.version\u003e\n-\t\t\u003cblade-embed-jetty.version\u003e0.0.7\u003c/blade-embed-jetty.version\u003e\n+\t\t\u003cblade-embed-jetty.version\u003e0.0.9\u003c/blade-embed-jetty.version\u003e\n \t\t\u003cjetty.version\u003e9.2.12.v20150709\u003c/jetty.version\u003e\n \t\u003c/properties\u003e\n \n@@ -123,77 +103,4 @@\n         \u003c/plugins\u003e\n     \u003c/build\u003e\n \n-    \u003cprofiles\u003e\n-        \u003cprofile\u003e\n-            \u003cid\u003erelease\u003c/id\u003e\n-            \u003cdistributionManagement\u003e\n-                \u003csnapshotRepository\u003e\n-                    \u003cid\u003eoss\u003c/id\u003e\n-                    \u003curl\u003ehttps://oss.sonatype.org/content/repositories/snapshots/\u003c/url\u003e\n-                \u003c/snapshotRepository\u003e\n-                \u003crepository\u003e\n-                    \u003cid\u003eoss\u003c/id\u003e\n-                    \u003curl\u003ehttps://oss.sonatype.org/service/local/staging/deploy/maven2/\u003c/url\u003e\n-                \u003c/repository\u003e\n-            \u003c/distributionManagement\u003e\n-            \u003cbuild\u003e\n-                \u003cplugins\u003e\n-                    \u003c!--  Source  --\u003e\n-                    \u003cplugin\u003e\n-                        \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n-                        \u003cartifactId\u003emaven-source-plugin\u003c/artifactId\u003e\n-                        \u003cversion\u003e2.4\u003c/version\u003e\n-                        \u003cexecutions\u003e\n-                            \u003cexecution\u003e\n-                                \u003cphase\u003epackage\u003c/phase\u003e\n-                                \u003cgoals\u003e\n-                                    \u003cgoal\u003ejar-no-fork\u003c/goal\u003e\n-                                \u003c/goals\u003e\n-                            \u003c/execution\u003e\n-                        \u003c/executions\u003e\n-                        \u003cconfiguration\u003e\n-                            \u003ctestFailureIgnore\u003etrue\u003c/testFailureIgnore\u003e\n-                        \u003c/configuration\u003e\n-                    \u003c/plugin\u003e\n-                    \u003c!--  Javadoc  --\u003e\n-                    \u003cplugin\u003e\n-                        \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n-                        \u003cartifactId\u003emaven-javadoc-plugin\u003c/artifactId\u003e\n-                        \u003cversion\u003e2.10.2\u003c/version\u003e\n-                        \u003cconfiguration\u003e\n-                            \u003ccharset\u003eUTF-8\u003c/charset\u003e\n-                            \u003cdocencoding\u003eUTF-8\u003c/docencoding\u003e\n-                        \u003c/configuration\u003e\n-                        \u003cexecutions\u003e\n-                            \u003cexecution\u003e\n-                                \u003cphase\u003epackage\u003c/phase\u003e\n-                                \u003cgoals\u003e\n-                                    \u003cgoal\u003ejar\u003c/goal\u003e\n-                                \u003c/goals\u003e\n-                                \u003cconfiguration\u003e\n-                                    \u003cadditionalparam\u003e-Xdoclint:none\u003c/additionalparam\u003e\n-                                \u003c/configuration\u003e\n-                            \u003c/execution\u003e\n-                        \u003c/executions\u003e\n-                    \u003c/plugin\u003e\n-                    \u003c!--  Gpg Signature  --\u003e\n-                    \u003cplugin\u003e\n-                        \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e\n-                        \u003cartifactId\u003emaven-gpg-plugin\u003c/artifactId\u003e\n-                        \u003cversion\u003e1.6\u003c/version\u003e\n-                        \u003cexecutions\u003e\n-                            \u003cexecution\u003e\n-                                \u003cid\u003esign-artifacts\u003c/id\u003e\n-                                \u003cphase\u003everify\u003c/phase\u003e\n-                                \u003cgoals\u003e\n-                                    \u003cgoal\u003esign\u003c/goal\u003e\n-                                \u003c/goals\u003e\n-                            \u003c/execution\u003e\n-                        \u003c/executions\u003e\n-                    \u003c/plugin\u003e\n-                \u003c/plugins\u003e\n-            \u003c/build\u003e\n-        \u003c/profile\u003e\n-    \u003c/profiles\u003e\n-\n \u003c/project\u003e\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Trivial errors on parsing of casting",
    "url": "https://github.com/DOREMUS-ANR/marc2rdf/issues/45",
    "description": "See this [query](http://data.doremus.org/sparql?default-graph-uri\u003d\u0026query\u003dSELECT+DISTINCT+*%0D%0AWHERE+%7B%0D%0A++%3Fperformance+ecrm%3AP9_consists_of+%3Fpart+.%0D%0A++%3Fpart+mus%3AU1_used_medium_of_performance+%3Fmop%0D%0A%7D\u0026format\u003dtext%2Fhtml\u0026timeout\u003d0\u0026debug\u003don) for further information\r\n\r\n```sparql\r\nSELECT DISTINCT *\r\nWHERE {\r\n  ?performance ecrm:P9_consists_of ?part .\r\n  ?part mus:U1_used_medium_of_performance ?mop\r\n}\r\n```",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/DOREMUS-ANR/marc2rdf/commit/7fd403b81d3e3fa1cfcd1a9fba632fa9d2f3f0ab",
      "files": [
        {
          "file_name": "src/main/java/org/doremus/marc2rdf/bnfconverter/M42_PerformedExpressionCreation.java",
          "patch": "@@ -8,6 +8,7 @@\n import org.doremus.ontology.CIDOC;\n import org.doremus.ontology.FRBROO;\n import org.doremus.ontology.MUS;\n+import org.doremus.vocabulary.VocabularyManager;\n \n import java.net.URISyntaxException;\n import java.util.ArrayList;\n@@ -65,6 +66,9 @@ public M42_PerformedExpressionCreation(String note, Record record, F28_Expressio\n   }\n \n   private void parseNote(String note) {\n+    // to complex case: 1re exécution : Festival de Bordeaux, 8 juin 1969, par Jean Guillou, puis Zwolle (Pays-Bas), 18 juin 1969, par Charles de Wolff\n+    note \u003d note.split(\", puis\")[0];\n+\n     Pattern p1 \u003d Pattern.compile(noteRegex1);\n     Matcher m1 \u003d p1.matcher(note);\n \n@@ -108,7 +112,7 @@ private void parseNote(String note) {\n         if (parts.length \u003e 0) place \u003d parts[0].trim();\n         String post \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";\n \n-        Pattern pC \u003d Pattern.compile(\"sous la direction d[\u0027eu] ?(.+)\");\n+        Pattern pC \u003d Pattern.compile(\"sous la dir(?:\\\\.|ection) d[\u0027eu] ?([^)]+)\");\n         Matcher mC \u003d pC.matcher(post);\n         if (mC.find()) {\n           conductor \u003d mC.group(1);\n@@ -122,8 +126,12 @@ private void parseNote(String note) {\n           while (mI.find()) {\n             String interpreter \u003d mI.group(1),\n               role \u003d mI.group(2);\n-            for (String intpt : interpreter.split(\"(,| et) \"))\n-              addRole(intpt, role);\n+            for (String intpt : interpreter.split(\"(,| et) \")) {\n+              System.out.println(intpt);\n+              // groups starts normally with lowercase, i.e. les Wiener Sängerknaben\n+              if (intpt.matches(\"^[a-z].+\")) addRole(intpt, null);\n+              else addRole(intpt, role);\n+            }\n           }\n         }\n \n@@ -141,7 +149,7 @@ private void parseNote(String note) {\n \n   private void addRole(String actor, String role) {\n     actor \u003d actor.trim();\n-    if(actor.isEmpty()) return;\n+    if (actor.isEmpty()) return;\n \n     RDFNode actorRes;\n     if (actor.equals(\"compositeur\") || actor.equals(\"le compositeur\")) {\n@@ -160,10 +168,24 @@ private void addRole(String actor, String role) {\n     }\n \n     role \u003d role.trim();\n-    if (role.equals(\"conducteur\"))\n-      M28.addProperty(MUS.U35_foresees_function_of_type, model.createLiteral(\"conducteur\", \"fr\"));\n-    else M28.addProperty(MUS.U1_used_medium_of_performance, slem.lemmatize(role).get(0), \"fr\");\n+    for (String r : role.split(\" et \")) {\n+      if (r.equals(\"conducteur\") || r.equals(\"direction\"))\n+        M28.addProperty(MUS.U35_foresees_function_of_type, model.createLiteral(\"conducteur\", \"fr\"));\n+      else {\n+        Resource mopMatch \u003d VocabularyManager.searchInCategory(instrumentToSingular(r), \"fr\", \"mop\");\n+        if (mopMatch !\u003d null) M28.addProperty(MUS.U1_used_medium_of_performance, mopMatch);\n+      }\n+    }\n+\n+  }\n+\n+  private String instrumentToSingular(String r) {\n+    String[] parts \u003d r.split(\" \");\n+    if (parts.length \u003d\u003d 1) return slem.lemmatize(parts[0]).get(0);\n \n+    // cornets à pistons --\u003e cornet à pistons\n+    parts[0] \u003d slem.lemmatize(parts[0]).get(0);\n+    return String.join(\" \", parts);\n   }\n \n   public Resource getExpression() {"
        },
        {
          "file_name": "src/main/java/org/doremus/marc2rdf/ppconverter/PF22_SelfContainedExpression.java",
          "patch": "@@ -37,7 +37,7 @@ public PF22_SelfContainedExpression(Record record, String identifier, PF28_Expre\n     super(record, identifier);\n     this.resource.addProperty(RDF.type, FRBROO.F22_Self_Contained_Expression);\n     this.resource.addProperty(DCTerms.identifier, identifier);\n-    this.resource.addProperty(OWL.sameAs, model.createResource(\"http://digital.philharmoniedeparis.fr/doc/CIMU/\"+identifier));\n+    this.resource.addProperty(OWL.sameAs, model.createResource(\"http://digital.philharmoniedeparis.fr/doc/CIMU/\" + identifier));\n \n     this.f28 \u003d f28;\n     this.slem \u003d Converter.stanfordLemmatizer;\n@@ -55,7 +55,7 @@ public PF22_SelfContainedExpression(Record record, String identifier, PF28_Expre\n         parseOpus(catalog);\n         continue;\n       }\n-      for(String c : catalog.split(\" ; \"))\n+      for (String c : catalog.split(\" ; \"))\n         parseCatalog(c);\n     }\n \n@@ -248,7 +248,7 @@ private void parseCatalog(String catalog) {\n     if (catalogParts.length \u003e 1) {\n       catalogName \u003d catalogParts[0].trim();\n       catalogNum \u003d catalogParts[1].trim();\n-    } else if(catalog.matches(\"^([a-zA-Z]+)(\\\\d+.*)$\")){\n+    } else if (catalog.matches(\"^([a-zA-Z]+)(\\\\d+.*)$\")) {\n       Matcher m \u003d Pattern.compile(\"^([a-zA-Z]+)(\\\\d+.*)$\").matcher(catalog);\n       m.find();\n       catalogName \u003d m.group(1).trim();\n@@ -377,7 +377,7 @@ public Resource makeCastingDetail(String name, int quantity, boolean solo, Strin\n     if (name.equals(\"contrebasses\")) name \u003d \"contrebasse\";\n //    System.out.println(name + \" --\u003e \" + slem.lemmatize(name));\n     // singularize\n-    name \u003d String.join(\" \", slem.lemmatize(name));\n+    name \u003d instrumentToSingular(name);\n \n \n     Resource M23CastingDetail \u003d model.createResource(uri)\n@@ -548,4 +548,14 @@ public PF22_SelfContainedExpression addPremiere(PM42_PerformedExpressionCreation\n     return this;\n   }\n \n+  private String instrumentToSingular(String r) {\n+    String[] parts \u003d r.split(\" \");\n+    if (parts.length \u003d\u003d 1) return slem.lemmatize(parts[0]).get(0);\n+\n+    // cornets à pistons --\u003e cornet à pistons\n+    parts[0] \u003d slem.lemmatize(parts[0]).get(0);\n+    return String.join(\" \", parts);\n+  }\n+\n+\n }"
        },
        {
          "file_name": "src/main/java/org/doremus/marc2rdf/ppconverter/PM42_PerformedExpressionCreation.java",
          "patch": "@@ -209,6 +209,16 @@ private void parseNote(String note) {\n \n   }\n \n+  private String instrumentToSingular(String r) {\n+    String[] parts \u003d r.split(\" \");\n+    if (parts.length \u003d\u003d 1) return slem.lemmatize(parts[0]).get(0);\n+\n+    // cornets à pistons --\u003e cornet à pistons\n+    parts[0] \u003d slem.lemmatize(parts[0]).get(0);\n+    return String.join(\" \", parts);\n+  }\n+\n+\n   private static String cleanString(String note, String group) {\n     if (note \u003d\u003d null) return null;\n     if (group \u003d\u003d null || group.isEmpty()) return note;\n@@ -228,7 +238,7 @@ private Role makeRole(String actor, String role) {\n     if (role \u003d\u003d null) return makeRole(actor, (String) null);\n     role \u003d role.trim();\n \n-    if (!role.equals(\"conducteur\")) role \u003d slem.lemmatize(role).toString();\n+    if (!role.equals(\"conducteur\")) role \u003d instrumentToSingular(role);\n     return new Role(actor, role, this.model);\n   }\n "
        }
      ]
    }
  },
  {
    "name": "Error parsing query: ?- X \u003d (!).",
    "url": "https://github.com/s-webber/projog/issues/84",
    "description": "An error occurs when trying to parse `?- X \u003d (!).`.\n\nCurrent (incorrect) behaviour:\n\n```\n?- X \u003d (!).\n\nError parsing query:\nExpected ) but got: . after !)\nX \u003d (!).\n```\n\nExpected (correct) behaviour:\n\n```\n?- X \u003d (!).\n\nX \u003d !\nyes\n```\n",
    "keywords": [
      "x",
      "error"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/s-webber/projog/commit/9ef51cc32b291c6978a199be4be2b035419ebd70",
      "files": [
        {
          "file_name": "src/core/org/projog/core/parser/Delimiters.java",
          "patch": "@@ -1,5 +1,7 @@\n package org.projog.core.parser;\n \n+import static org.projog.core.parser.WordType.SYMBOL;\n+\n class Delimiters {\n    private static final char ARGUMENT_SEPARATOR \u003d \u0027,\u0027;\n    private static final char PREDICATE_OPENING_BRACKET \u003d \u0027(\u0027;\n@@ -28,39 +30,39 @@ static boolean isDelimiter(int c) {\n       }\n    }\n \n-   static boolean isPredicateOpenBracket(String value) {\n-      return isMatch(value, PREDICATE_OPENING_BRACKET);\n+   static boolean isListOpenBracket(int c) {\n+      return c \u003d\u003d LIST_OPENING_BRACKET;\n    }\n \n-   static boolean isPredicateCloseBracket(String value) {\n-      return isMatch(value, PREDICATE_CLOSING_BRACKET);\n+   static boolean isPredicateOpenBracket(Word word) {\n+      return isMatch(word, PREDICATE_OPENING_BRACKET);\n    }\n \n-   static boolean isListOpenBracket(String value) {\n-      return isMatch(value, LIST_OPENING_BRACKET);\n+   static boolean isPredicateCloseBracket(Word word) {\n+      return isMatch(word, PREDICATE_CLOSING_BRACKET);\n    }\n \n-   static boolean isListOpenBracket(int c) {\n-      return c \u003d\u003d LIST_OPENING_BRACKET;\n+   static boolean isListOpenBracket(Word word) {\n+      return isMatch(word, LIST_OPENING_BRACKET);\n    }\n \n-   static boolean isListCloseBracket(String value) {\n-      return isMatch(value, LIST_CLOSING_BRACKET);\n+   static boolean isListCloseBracket(Word word) {\n+      return isMatch(word, LIST_CLOSING_BRACKET);\n    }\n \n-   static boolean isListTail(String value) {\n-      return isMatch(value, LIST_TAIL);\n+   static boolean isListTail(Word word) {\n+      return isMatch(word, LIST_TAIL);\n    }\n \n-   static boolean isArgumentSeperator(String value) {\n-      return isMatch(value, ARGUMENT_SEPARATOR);\n+   static boolean isArgumentSeperator(Word word) {\n+      return isMatch(word, ARGUMENT_SEPARATOR);\n    }\n \n-   static boolean isSentenceTerminator(String value) {\n-      return isMatch(value, PERIOD);\n+   static boolean isSentenceTerminator(Word word) {\n+      return isMatch(word, PERIOD);\n    }\n \n-   private static boolean isMatch(String input, char expected) {\n-      return input !\u003d null \u0026\u0026 input.length() \u003d\u003d 1 \u0026\u0026 input.charAt(0) \u003d\u003d expected;\n+   private static boolean isMatch(Word word, char expected) {\n+      return word !\u003d null \u0026\u0026 word.type \u003d\u003d SYMBOL \u0026\u0026 word.value !\u003d null \u0026\u0026 word.value.length() \u003d\u003d 1 \u0026\u0026 word.value.charAt(0) \u003d\u003d expected;\n    }\n }"
        },
        {
          "file_name": "src/core/org/projog/core/parser/SentenceParser.java",
          "patch": "@@ -91,9 +91,9 @@ public Term parseSentence() {\n          return null;\n       }\n \n-      String trailingText \u003d popValue();\n-      if (!isSentenceTerminator(trailingText)) {\n-         throw newParserException(\"Expected . after: \" + t + \" but got: \" + trailingText);\n+      Word trailingWord \u003d popValue();\n+      if (!isSentenceTerminator(trailingWord)) {\n+         throw newParserException(\"Expected . after: \" + t + \" but got: \" + trailingWord);\n       }\n \n       return t;\n@@ -160,24 +160,26 @@ private Term getTerm(int maxLevel) {\n     * @param maxLevel the maximum priority/precedence/level of operands to parse - if an operand represented by the next\n     * term retrieved by this method has a higher priority then it is ignored for now ({@code currentTerm} is returned\n     * \"as-is\"}.\n-    * @param {@code true} if this method is being called by another method, {@code false} if it is being called recursively by itself.\n+    * @param {@code true} if this method is being called by another method, {@code false} if it is being called\n+    * recursively by itself.\n     */\n    private Term getTerm(final Term currentTerm, final int currentLevel, final int maxLevel, final boolean isFirst) {\n-      final String next \u003d popValue();\n+      final Word nextWord \u003d popValue();\n+      final String next \u003d nextWord.value;\n       if (operands.postfix(next) \u0026\u0026 operands.getPostfixPriority(next) \u003c\u003d currentLevel) {\n          Term postfixTerm \u003d addPostfixOperand(next, currentTerm);\n          return getTerm(postfixTerm, currentLevel, maxLevel, false);\n       } else if (!operands.infix(next)) {\n          // could be \u0027.\u0027 if end of sentence \n          // or \u0027,\u0027, \u0027|\u0027, \u0027]\u0027 or \u0027)\u0027 if parsing list or predicate\n          // or could be an error\n-         parser.rewind(next);\n+         parser.rewind(nextWord);\n          return currentTerm;\n       }\n \n       final int level \u003d operands.getInfixPriority(next);\n       if (level \u003e maxLevel) {\n-         parser.rewind(next);\n+         parser.rewind(nextWord);\n          return currentTerm;\n       }\n \n@@ -220,7 +222,8 @@ private Term getTerm(final Term currentTerm, final int currentLevel, final int m\n     * be thrown if does).\n     */\n    private Term getPossiblePrefixArgument(int currentLevel) {\n-      final String value \u003d popValue();\n+      final Word word \u003d popValue();\n+      final String value \u003d word.value;\n       if (operands.prefix(value) \u0026\u0026 parser.isFollowedByTerm()) {\n          if (value.equals(MINUS_SIGN) \u0026\u0026 isFollowedByNumber()) {\n             return getNegativeNumber();\n@@ -242,14 +245,15 @@ private Term getPossiblePrefixArgument(int currentLevel) {\n          Term argument \u003d getTerm(prefixLevel);\n          return createPrefixTerm(value, argument);\n       } else {\n-         parser.rewind(value);\n+         parser.rewind(word);\n          return getDiscreteTerm();\n       }\n    }\n \n    private Term getNegativeNumber() {\n-      final String value \u003d \"-\" + popValue();\n-      if (parser.getType() \u003d\u003d WordType.INTEGER) {\n+      final Word word \u003d popValue();\n+      final String value \u003d \"-\" + word.value;\n+      if (word.type \u003d\u003d WordType.INTEGER) {\n          return toIntegerNumber(value);\n       } else {\n          return toDecimalFraction(value);\n@@ -301,23 +305,23 @@ private Term addPostfixOperand(String postfixOperand, Term original) {\n    }\n \n    private Term getDiscreteTerm() {\n-      final String value \u003d popValue();\n-      if (isListOpenBracket(value)) {\n+      final Word word \u003d popValue();\n+      if (isListOpenBracket(word)) {\n          return parseList();\n-      } else if (isPredicateOpenBracket(value)) {\n+      } else if (isPredicateOpenBracket(word)) {\n          return getTermInBrackets();\n       } else {\n-         switch (parser.getType()) {\n+         switch (word.type) {\n             case ATOM:\n             case QUOTED_ATOM:\n             case SYMBOL:\n-               return getAtomOrStructure(value);\n+               return getAtomOrStructure(word.value);\n             case INTEGER:\n-               return toIntegerNumber(value);\n+               return toIntegerNumber(word.value);\n             case FLOAT:\n-               return toDecimalFraction(value);\n+               return toDecimalFraction(word.value);\n             case VARIABLE:\n-               return getVariable(value);\n+               return getVariable(word.value);\n             case ANONYMOUS_VARIABLE:\n                return AnonymousVariable.ANONYMOUS_VARIABLE;\n             default:\n@@ -341,8 +345,8 @@ private DecimalFraction toDecimalFraction(final String value) {\n     * a newly created {@code Atom} is returned.\n     */\n    private Term getAtomOrStructure(String name) {\n-      String value \u003d parser.isEndOfStream() ? null : peekValue();\n-      if (isPredicateOpenBracket(value)) {\n+      Word word \u003d parser.isEndOfStream() ? null : peekValue();\n+      if (isPredicateOpenBracket(word)) {\n          popValue(); //skip opening bracket\n          if (isPredicateCloseBracket(peekValue())) {\n             throw newParserException(\"No arguments specified for structure: \" + name);\n@@ -354,13 +358,13 @@ private Term getAtomOrStructure(String name) {\n          args.add(t);\n \n          do {\n-            value \u003d popValue();\n-            if (isPredicateCloseBracket(value)) {\n+            word \u003d popValue();\n+            if (isPredicateCloseBracket(word)) {\n                return Structure.createStructure(name, toArray(args));\n-            } else if (isArgumentSeperator(value)) {\n+            } else if (isArgumentSeperator(word)) {\n                args.add(getCommaSeparatedArgument());\n             } else {\n-               throw newParserException(\"While parsing arguments of \" + name + \" expected ) or , but got: \" + value);\n+               throw newParserException(\"While parsing arguments of \" + name + \" expected ) or , but got: \" + word);\n             }\n          } while (true);\n       } else {\n@@ -389,26 +393,26 @@ private Term parseList() {\n       Term tail \u003d EmptyList.EMPTY_LIST;\n \n       while (true) {\n-         String value \u003d popValue();\n-         if (isListCloseBracket(value)) {\n+         Word word \u003d popValue();\n+         if (isListCloseBracket(word)) {\n             break;\n          }\n-         parser.rewind(parser.getValue());\n+         parser.rewind(word);\n          Term arg \u003d getCommaSeparatedArgument();\n          args.add(arg);\n \n-         value \u003d popValue(); // | ] or ,\n-         if (isListCloseBracket(value)) {\n+         word \u003d popValue(); // | ] or ,\n+         if (isListCloseBracket(word)) {\n             break;\n-         } else if (isListTail(value)) {\n+         } else if (isListTail(word)) {\n             tail \u003d getCommaSeparatedArgument();\n-            value \u003d popValue();\n-            if (!isListCloseBracket(value)) {\n-               throw newParserException(\"Expected ] to mark end of list after tail but got: \" + value);\n+            word \u003d popValue();\n+            if (!isListCloseBracket(word)) {\n+               throw newParserException(\"Expected ] to mark end of list after tail but got: \" + word);\n             }\n             break;\n-         } else if (!isArgumentSeperator(value)) {\n-            throw newParserException(\"While parsing list expected ] | or , but got: \" + value);\n+         } else if (!isArgumentSeperator(word)) {\n+            throw newParserException(\"While parsing list expected ] | or , but got: \" + word);\n          }\n       }\n       return ListFactory.createList(toArray(args), tail);\n@@ -439,28 +443,28 @@ private Term getTermInBrackets() {\n       // considering the priority of any surrounding terms outside the brackets)\n       // we call getArgument with the highest possible priority.\n       Term t \u003d getTerm(Integer.MAX_VALUE);\n-      final String next \u003d popValue();\n-      if (!isPredicateCloseBracket(next)) {\n-         throw newParserException(\"Expected ) but got: \" + next);\n+      final Word word \u003d popValue();\n+      if (!isPredicateCloseBracket(word)) {\n+         throw newParserException(\"Expected ) but got: \" + word + \" after \" + t);\n       }\n       return t;\n    }\n \n-   private String popValue() {\n+   private Word popValue() {\n       parser.next();\n-      return parser.getValue();\n+      return parser.getWord();\n    }\n \n-   private String peekValue() {\n-      String value \u003d popValue();\n-      parser.rewind(value);\n-      return value;\n+   private Word peekValue() {\n+      Word word \u003d popValue();\n+      parser.rewind(word);\n+      return word;\n    }\n \n    private boolean isFollowedByNumber() {\n-      String value \u003d popValue();\n-      WordType et \u003d parser.getType();\n-      parser.rewind(value);\n+      Word word \u003d popValue();\n+      WordType et \u003d word.type;\n+      parser.rewind(word);\n       return et \u003d\u003d WordType.INTEGER || et \u003d\u003d WordType.FLOAT;\n    }\n "
        },
        {
          "file_name": "src/core/org/projog/core/parser/Word.java",
          "patch": "@@ -0,0 +1,17 @@\n+package org.projog.core.parser;\n+\n+/** @see WordParser#getWord() */\n+class Word {\n+   final String value;\n+   final WordType type;\n+\n+   Word(String value, WordType type) {\n+      this.value \u003d value;\n+      this.type \u003d type;\n+   }\n+\n+   @Override\n+   public String toString() {\n+      return value;\n+   }\n+}"
        },
        {
          "file_name": "src/core/org/projog/core/parser/WordParser.java",
          "patch": "@@ -20,16 +20,15 @@\n \n import org.projog.core.Operands;\n \n-/** \n+/**\n  * Parses an input stream into discrete \u0027words\u0027 that are used to represent Prolog queries and rules.\n  * \n  * @see SentenceParser\n  */\n class WordParser {\n    private final CharacterParser parser;\n    private final Operands operands;\n-   private String value;\n-   private WordType type;\n+   private Word word;\n    private boolean rewound;\n \n    WordParser(Reader reader, Operands operands) {\n@@ -41,7 +40,8 @@\n    /**\n     * Move the parser forward one word.\n     * \n-    * @throws ParserException if there are no more words to parse (i.e. parser has reached the end of the underlying input stream)\n+    * @throws ParserException if there are no more words to parse (i.e. parser has reached the end of the underlying\n+    * input stream)\n     */\n    void next() {\n       if (rewound) {\n@@ -70,14 +70,9 @@ void next() {\n       }\n    }\n \n-   /** The value that was parsed as a result of the last call to {@link #next()} */\n-   String getValue() {\n-      return value;\n-   }\n-\n-   /** The type of the value parsed as a result of the last call to {@link #next()} */\n-   WordType getType() {\n-      return type;\n+   /** The word that was parsed as a result of the last call to {@link #next()} */\n+   Word getWord() {\n+      return word;\n    }\n \n    /** Does the next value to be parsed represent a term (rather than a delimiter) */\n@@ -94,16 +89,18 @@ boolean isEndOfStream() {\n    }\n \n    /**\n-    * Rewinds the parser (i.e. \"pushes-back\" the last parsed word). \n+    * Rewinds the parser (i.e. \"pushes-back\" the last parsed word).\n     * \u003cp\u003e\n     * The last parsed value will remain after the next call to {@link #next()}\n     * \n     * @param value the value to rewind\n-    * @throws IllegalArgumentException if already in a rewound state (i.e. have already called {@link WordParser#rewind(String)} since the last call to {@link #next()}), or {@code value} is not equal to {@link #getValue()} \n+    * @throws IllegalArgumentException if already in a rewound state (i.e. have already called\n+    * {@link WordParser#rewind(String)} since the last call to {@link #next()}), or {@code value} is not equal to\n+    * {@link #getValue()}\n     */\n-   void rewind(String value) {\n-      if (rewound || value \u003d\u003d null || !value.equals(this.value)) {\n-         throw new IllegalArgumentException(\"Rewound \u003d \" + rewound + \" this.value \u003d \" + this.value + \" value \u003d \" + value);\n+   void rewind(Word value) {\n+      if (word !\u003d value) {\n+         throw new IllegalArgumentException();\n       }\n       rewound \u003d true;\n    }\n@@ -244,12 +241,16 @@ private void setSymbol(int c) {\n          }\n       }\n \n-      if (length \u003e 1 \u0026\u0026 isDelimiter(sb.charAt(length - 1))) {\n-         parser.rewind();\n-         setValue(sb.toString().substring(0, length - 1), SYMBOL);\n-      } else {\n-         setValue(sb, SYMBOL);\n+      for (int i \u003d 1; i \u003c length; i++) {\n+         final String substring \u003d sb.substring(i);\n+         if (isValidParseableElement(substring) || isDelimiter(sb.charAt(i))) {\n+            parser.rewind(length - i);\n+            setValue(sb.substring(0, i), SYMBOL);\n+            return;\n+         }\n       }\n+\n+      setValue(sb, SYMBOL);\n    }\n \n    private void skipWhitespace() {\n@@ -310,7 +311,6 @@ private void setValue(StringBuilder value, WordType type) {\n    }\n \n    private void setValue(String value, WordType type) {\n-      this.value \u003d value;\n-      this.type \u003d type;\n+      this.word \u003d new Word(value, type);\n    }\n }"
        },
        {
          "file_name": "src/core/org/projog/core/parser/WordType.java",
          "patch": "@@ -1,6 +1,12 @@\n package org.projog.core.parser;\n \n-/** @see WordParser#getType() */\n+/** @see WordParser */\n enum WordType {\n-   ATOM, QUOTED_ATOM, INTEGER, FLOAT, SYMBOL, VARIABLE, ANONYMOUS_VARIABLE\n+   ATOM,\n+   QUOTED_ATOM,\n+   INTEGER,\n+   FLOAT,\n+   SYMBOL,\n+   VARIABLE,\n+   ANONYMOUS_VARIABLE\n }"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/DelimitersTest.java",
          "patch": "@@ -9,58 +9,65 @@\n public class DelimitersTest {\n    @Test\n    public void testArgumentSeperator() {\n-      assertTrue(Delimiters.isArgumentSeperator(\",\"));\n-      assertFalse(Delimiters.isArgumentSeperator(\";\"));\n-      assertFalse(Delimiters.isArgumentSeperator(\" \"));\n+      assertTrue(Delimiters.isArgumentSeperator(symbol(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(atom(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(\";\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(\" \")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListOpenBracket() {\n-      assertTrue(Delimiters.isListOpenBracket(\"[\"));\n-      assertFalse(Delimiters.isListOpenBracket(\"]\"));\n-      assertFalse(Delimiters.isListOpenBracket(\"(\"));\n+      assertTrue(Delimiters.isListOpenBracket(symbol(\"[\")));\n+      assertFalse(Delimiters.isListOpenBracket(atom(\"[\")));\n+      assertFalse(Delimiters.isListOpenBracket(symbol(\"]\")));\n+      assertFalse(Delimiters.isListOpenBracket(symbol(\"(\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListCloseBracket() {\n-      assertTrue(Delimiters.isListCloseBracket(\"]\"));\n-      assertFalse(Delimiters.isListCloseBracket(\"[\"));\n-      assertFalse(Delimiters.isListCloseBracket(\")\"));\n+      assertTrue(Delimiters.isListCloseBracket(symbol(\"]\")));\n+      assertFalse(Delimiters.isListCloseBracket(atom(\"]\")));\n+      assertFalse(Delimiters.isListCloseBracket(symbol(\"[\")));\n+      assertFalse(Delimiters.isListCloseBracket(symbol(\")\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testPredicateOpenBracket() {\n-      assertTrue(Delimiters.isPredicateOpenBracket(\"(\"));\n-      assertFalse(Delimiters.isPredicateOpenBracket(\")\"));\n-      assertFalse(Delimiters.isPredicateOpenBracket(\"[\"));\n+      assertTrue(Delimiters.isPredicateOpenBracket(symbol(\"(\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(atom(\"(\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(symbol(\")\")));\n+      assertFalse(Delimiters.isPredicateOpenBracket(symbol(\"[\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testPredicateCloseBracket() {\n-      assertTrue(Delimiters.isPredicateCloseBracket(\")\"));\n-      assertFalse(Delimiters.isPredicateCloseBracket(\"(\"));\n-      assertFalse(Delimiters.isPredicateCloseBracket(\"]\"));\n+      assertTrue(Delimiters.isPredicateCloseBracket(symbol(\")\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(atom(\")\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(symbol(\"(\")));\n+      assertFalse(Delimiters.isPredicateCloseBracket(symbol(\"]\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testListTail() {\n-      assertTrue(Delimiters.isListTail(\"|\"));\n-      assertFalse(Delimiters.isListTail(\"[\"));\n-      assertFalse(Delimiters.isListTail(\"]\"));\n+      assertTrue(Delimiters.isListTail(symbol(\"|\")));\n+      assertFalse(Delimiters.isListTail(atom(\"|\")));\n+      assertFalse(Delimiters.isListTail(symbol(\"[\")));\n+      assertFalse(Delimiters.isListTail(symbol(\"]\")));\n       assertFalse(Delimiters.isArgumentSeperator(null));\n    }\n \n    @Test\n    public void testSentenceTerminator() {\n-      assertTrue(Delimiters.isSentenceTerminator(\".\"));\n-      assertFalse(Delimiters.isSentenceTerminator(\"..\u003d\"));\n-      assertFalse(Delimiters.isSentenceTerminator(\",\"));\n-      assertFalse(Delimiters.isArgumentSeperator(null));\n+      assertTrue(Delimiters.isSentenceTerminator(symbol(\".\")));\n+      assertFalse(Delimiters.isSentenceTerminator(atom(\".\")));\n+      assertFalse(Delimiters.isSentenceTerminator(symbol(\"..\u003d\")));\n+      assertFalse(Delimiters.isSentenceTerminator(symbol(\",\")));\n+      assertFalse(Delimiters.isArgumentSeperator(symbol(null)));\n    }\n \n    @Test\n@@ -77,4 +84,12 @@ private void assertDelimiter(boolean expectedResult, char... chars) {\n          assertEquals(expectedResult, Delimiters.isDelimiter(Character.toString(c)));\n       }\n    }\n+\n+   private Word symbol(String value) {\n+      return new Word(value, WordType.SYMBOL);\n+   }\n+\n+   private Word atom(String value) {\n+      return new Word(value, WordType.ATOM);\n+   }\n }"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/SentenceParserTest.java",
          "patch": "@@ -139,6 +139,26 @@ public void testBrackets6() {\n    }\n \n    @Test\n+   public void testParsingBrackets7() {\n+      assertParse(\"X \u003d (!).\", \"X \u003d !\", \"\u003d(X, !)\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets8() {\n+      assertParse(\"X \u003d (a, !).\", \"X \u003d (a , !)\", \"\u003d(X, ,(a, !))\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets9() {\n+      assertParse(\"X \u003d (a, !; b).\", \"X \u003d (a , ! ; b)\", \"\u003d(X, ;(,(a, !), b))\");\n+   }\n+\n+   @Test\n+   public void testParsingBrackets10() {\n+      assertParse(\"X \u003d [a,\u0027(\u0027|Y].\", \"X \u003d [a,(|Y]\", \"\u003d(X, .(a, .((, Y)))\");\n+   }\n+\n+   @Test\n    public void testExtraTextAfterFullStop() {\n       SentenceParser sp \u003d getSentenceParser(\"?- consult(\\\u0027bench.pl\\\u0027). jkhkj\");\n       Term t \u003d sp.parseSentence();"
        },
        {
          "file_name": "src/tests/org/projog/core/parser/WordParserTest.java",
          "patch": "@@ -100,6 +100,18 @@ public void testNonAlphanumericCharacterFollowedByPeriod() {\n       assertParse(\"!.\", \"!\", \".\");\n    }\n \n+   /** Test that \"!\" and \";\" get parsed separately, rather than as single combined \"!;\" element. */\n+   @Test\n+   public void testCutFollowedByDisjunction() {\n+      assertParse(\"!;true\", \"!\", \";\", \"true\");\n+   }\n+\n+   /** Test that \"(\", \"!\", \")\" and \".\" get parsed separately, rather than as single combined \"(!).\" element. */\n+   @Test\n+   public void testCutInBrackets() {\n+      assertParse(\"(!).\", \"(\", \"!\", \")\", \".\");\n+   }\n+\n    @Test\n    public void testWhitespaceAndComments() {\n       WordParser p \u003d create(\"/* comment */\\t % comment\\n % comment\\r\\n\\n\");\n@@ -130,42 +142,42 @@ public void testRewindException() {\n       WordParser wp \u003d create(\"a b c\");\n       wp.next();\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n-      wp.rewind(\"b\");\n+      assertEquals(\"b\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n-      wp.rewind(\"b\");\n+      assertEquals(\"b\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n \n       // check that can only rewind one word\n       assertRewindException(wp, \"b\");\n       assertRewindException(wp, \"a\");\n \n-      assertEquals(\"b\", wp.getValue());\n+      assertEquals(\"b\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"b\", wp.getValue());\n+      assertEquals(\"b\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"c\", wp.getValue());\n+      assertEquals(\"c\", wp.getWord().value);\n \n       // check that the value specified in call to rewind has to be the last value parsed\n       assertRewindException(wp, \"b\");\n       assertRewindException(wp, null);\n       assertRewindException(wp, \"z\");\n \n-      wp.rewind(\"c\");\n-      assertEquals(\"c\", wp.getValue());\n+      wp.rewind(wp.getWord());\n+      assertEquals(\"c\", wp.getWord().value);\n       wp.next();\n-      assertEquals(\"c\", wp.getValue());\n+      assertEquals(\"c\", wp.getWord().value);\n       assertTrue(wp.isEndOfStream());\n-      assertEquals(\"c\", wp.getValue());\n-      wp.rewind(\"c\");\n+      assertEquals(\"c\", wp.getWord().value);\n+      wp.rewind(wp.getWord());\n \n       // check that can only rewind one word\n       assertRewindException(wp, \"c\");\n    }\n \n    private void assertRewindException(WordParser wp, String value) {\n       try {\n-         wp.rewind(value);\n+         wp.rewind(new Word(value, WordType.ATOM));\n          fail();\n       } catch (IllegalArgumentException e) {\n          // expected\n@@ -180,19 +192,19 @@ private void assertWordType(String syntax, String value, WordType type) {\n       WordParser p \u003d create(syntax);\n       assertFalse(p.isEndOfStream());\n       p.next();\n-      assertEquals(value, p.getValue());\n-      assertSame(type, p.getType());\n+      assertEquals(value, p.getWord().value);\n+      assertSame(type, p.getWord().type);\n       assertTrue(p.isEndOfStream());\n    }\n \n    private void assertParse(String sentence, String... words) {\n       WordParser p \u003d create(sentence);\n       for (String w : words) {\n          p.next();\n-         assertEquals(w, p.getValue());\n-         p.rewind(w);\n+         assertEquals(w, p.getWord().value);\n+         p.rewind(p.getWord());\n          p.next();\n-         assertEquals(w, p.getValue());\n+         assertEquals(w, p.getWord().value);\n       }\n       assertTrue(p.isEndOfStream());\n       try {"
        }
      ]
    }
  },
  {
    "name": "Parsing error since Cyclops patch",
    "url": "https://github.com/EmilyBjoerk/lsml/issues/621",
    "description": "As there was no mentioning of the parsing error (\"LSML was unable to parse the game data files\") that comes up since the Cyclops patch, I was beginning to wonder if that is an issue specifically on my machine?\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/EmilyBjoerk/lsml/commit/86dde8b31ff617668d3dad53a084d1a6f1c58e03",
      "files": [
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/datacache/DataCache.java",
          "patch": "@@ -678,6 +678,7 @@ else if (moduleID \u003d\u003d 4048) { // ENHANCED NARC - LTD (Clan Only)\n                 case \"CTargetInfoGatherStats\":\n                 case \"CStealthDecayStats\":\n                 case \"CCrippledPerformanceStats\":\n+                case \"CStrategicStrikeUpgrade\":\n                 case \"CImpulseElectricFieldStats\":\n                 case \"CUAVStats\": {\n                     final String name;"
        },
        {
          "file_name": "src/main/java/org/lisoft/lsml/model/datacache/gamedata/helpers/ItemStatsModule.java",
          "patch": "@@ -62,28 +62,32 @@ public Item asItem() {\n                         HeatSinkStats.engineCooling, -HeatSinkStats.heatbase);\n             case \"CJumpJetStats\":\n                 // Two values, first is heat for one JJ\n-                double heat \u003d Double.parseDouble(JumpJetStats.heat.split(\",\")[0]);\n+                final double heat \u003d Double.parseDouble(JumpJetStats.heat.split(\",\")[0]);\n                 return new JumpJet(getUiName(), getUiDesc(), getMwoKey(), getMwoId(), ModuleStats.slots,\n                         ModuleStats.tons, HardPointType.NONE, ModuleStats.health, getFaction(),\n                         ModuleStats.getLocations(), ModuleStats.getMechClasses(), JumpJetStats.minTons,\n                         JumpJetStats.maxTons, JumpJetStats.boost, JumpJetStats.duration, heat);\n             case \"CGECMStats\":\n                 return new ECM(getUiName(), getUiDesc(), getMwoKey(), getMwoId(), ModuleStats.slots, ModuleStats.tons,\n                         ModuleStats.health, getFaction());\n+            case \"CTargetingComputerStats\":\n+                return TargetingComputerStats.asTargetingComputer(this);\n+            case \"CMASCStats\":\n+                return MASCStats.asMasc(this);\n+            // Miscellaneous modules for which we do not care about their specific abilities\n             case \"CBAPStats\":\n             case \"CClanBAPStats\":\n             case \"CCASEStats\":\n                 return new Module(getUiName(), getUiDesc(), getMwoKey(), getMwoId(), ModuleStats.slots,\n                         ModuleStats.tons, HardPointType.NONE, ModuleStats.health, getFaction(),\n                         ModuleStats.getLocations(), ModuleStats.getMechClasses());\n+\n+            // Miscellaneous Internals:\n+            case \"CAdvancedSensorsStats\":\n             case \"CLowerArmActuatorStats\":\n             case \"CInternalStats\":\n                 return new Internal(getUiName(), getUiDesc(), getMwoKey(), getMwoId(), ModuleStats.slots,\n                         ModuleStats.tons, HardPointType.NONE, ModuleStats.health, getFaction());\n-            case \"CTargetingComputerStats\":\n-                return TargetingComputerStats.asTargetingComputer(this);\n-            case \"CMASCStats\":\n-                return MASCStats.asMasc(this);\n             default:\n                 return null;\n         }"
        },
        {
          "file_name": "src/main/resources/Quirks.def.xml",
          "patch": "@@ -109,6 +109,9 @@\n \t\t\u003cQuirk name\u003d\"XPBonus\" loc\u003d\"XP BONUS\"\u003e\n \t\t\t\u003cModify operation\u003d\"Multiplier\" context\u003d\"PositiveGood\" /\u003e\n \t\t\u003c/Quirk\u003e\n+\t\t\u003cQuirk name\u003d\"SensorRange\" loc\u003d\"SENSOR RANGE\"\u003e\n+\t\t\t\u003cModify operation\u003d\"Additive\" context\u003d\"PositiveGood\" /\u003e\n+\t\t\u003c/Quirk\u003e\n \t\u003c/Category\u003e\n \t\n \t\u003c!-- Critical --\u003e"
        }
      ]
    }
  },
  {
    "name": "about page parsing error",
    "url": "https://github.com/ngageoint/disconnected-content-explorer-android/pull/27",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ngageoint/disconnected-content-explorer-android/commit/50938106e55a701b591f93e04419911e96191566",
      "files": [
        {
          "file_name": "app/build.gradle",
          "patch": "@@ -17,7 +17,7 @@ android {\n     defaultConfig {\n         minSdkVersion 16\n         targetSdkVersion 18\n-        versionCode 4\n+        versionCode 5\n         versionName \"1.0\"\n         applicationId \u0027mil.nga.giat.dice\u0027\n         testApplicationId \u0027mil.nga.giat.dice.test\u0027"
        },
        {
          "file_name": "app/src/main/assets/legal/legal.html",
          "patch": "@@ -144,7 +144,7 @@\n var params \u003d (function() {\n   var match,\n     pl     \u003d /\\+/g,  // Regex for replacing addition symbol with a space\n-    search \u003d /([^\u0026\u003d]+)\u003d?([^\u0026]*)/g,\n+    search \u003d /([^\u0026amp;\u003d]+)\u003d?([^\u0026amp;]*)/g,\n     decode \u003d function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\n     query  \u003d window.location.search.substring(1);\n   var params \u003d {};"
        },
        {
          "file_name": "app/src/main/java/mil/nga/dice/about/DisclaimerDialogFragment.java",
          "patch": "@@ -126,7 +126,7 @@ private String loadDisclaimer() {\n             return disclaimer;\n         }\n         catch (Exception e) {\n-            throw new Error(\"error loading legal disclaimer\");\n+            throw new Error(\"error loading legal disclaimer\", e);\n         }\n     }\n }"
        }
      ]
    }
  },
  {
    "name": "Parsing, rest namespace: No Error Message",
    "url": "https://github.com/BaseXdb/basex/issues/1217",
    "description": "``` xquery\ndeclare function local:x() { rest:x() };\n()\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/BaseXdb/basex/commit/a0c68ec31799549b7e1a28676380b91639da2a86",
      "files": [
        {
          "file_name": "basex-core/src/main/java/org/basex/query/func/JavaMapping.java",
          "patch": "@@ -171,7 +171,7 @@ public static Value toValue(final Object obj, final QueryContext qc, final Stati\n    * @return method if found, {@code null} otherwise\n    * @throws QueryException query exception\n    */\n-  private static Method getModMethod(final Object mod, final String path, final String name,\n+  private static Method moduleMethod(final Object mod, final String path, final String name,\n       final long arity, final QueryContext qc, final InputInfo ii) throws QueryException {\n \n     // find method with identical name and arity\n@@ -201,63 +201,71 @@ private static Method getModMethod(final Object mod, final String path, final St\n   }\n \n   /**\n-   * Converts a module URI to a Java path.\n-   * @param uri module URI\n-   * @return module path\n-   */\n-  private static String toPath(final String uri) {\n-    final String p \u003d ModuleLoader.uri2path(uri);\n-    return p \u003d\u003d null ? uri : ModuleLoader.capitalize(p).replace(\"/\", \".\").substring(1);\n-  }\n-\n-  /**\n    * Returns a new Java function instance.\n-   * @param name function name\n+   * @param qname function name\n    * @param args arguments\n    * @param qc query context\n    * @param sc static context\n    * @param ii input info\n    * @return Java function or {@code null}\n    * @throws QueryException query exception\n    */\n-  static JavaMapping get(final QNm name, final Expr[] args, final QueryContext qc,\n+  static JavaMapping get(final QNm qname, final Expr[] args, final QueryContext qc,\n       final StaticContext sc, final InputInfo ii) throws QueryException {\n \n-    final String uri \u003d string(name.uri());\n+    // rewrite function name\n+    final String name \u003d Strings.camelCase(string(qname.local()));\n+    final String uri \u003d string(qname.uri());\n     // check if URI starts with \"java:\" prefix (if yes, module must be Java code)\n-    final boolean java \u003d uri.startsWith(JAVAPREF);\n-\n-    // rewrite function name: convert dashes to upper-case initials\n-    final String local \u003d Strings.camelCase(string(name.local()));\n+    final boolean prefix \u003d uri.startsWith(JAVAPREF);\n+    // rewrite function path\n+    final String pth \u003d prefix ? uri.substring(JAVAPREF.length()) : uri;\n+    final String dirp \u003d ModuleLoader.uri2path(pth);\n+    final String path \u003d dirp \u003d\u003d null ? pth :\n+      ModuleLoader.capitalize(dirp).replace(\u0027/\u0027, \u0027.\u0027).substring(1);\n \n     // check imported Java modules\n-    final String path \u003d Strings.camelCase(toPath(java ? uri.substring(JAVAPREF.length()) : uri));\n-\n     final ModuleLoader modules \u003d qc.resources.modules();\n     final Object jm  \u003d modules.findImport(path);\n     if(jm !\u003d null) {\n-      final Method meth \u003d getModMethod(jm, path, local, args.length, qc, ii);\n-      if(meth !\u003d null) return new JavaModuleFunc(sc, ii, jm, meth, args);\n+      final Method mth \u003d moduleMethod(jm, path, name, args.length, qc, ii);\n+      if(mth !\u003d null) return new JavaModuleFunc(sc, ii, jm, mth, args);\n     }\n \n-    // only allowed with administrator permissions\n+    // arbitrary Java code can only be called with administrator permissions\n     if(!qc.context.user().has(Perm.ADMIN)) return null;\n \n-    // check addressed class\n+    // try to find matching Java variable or method\n     try {\n-      return new JavaFunc(sc, ii, modules.findClass(path), local, args);\n+      final Class\u003c?\u003e clazz \u003d modules.findClass(path);\n+      if(name.equals(NEW) || exists(clazz, name)) return new JavaFunc(sc, ii, clazz, name, args);\n     } catch(final ClassNotFoundException ex) {\n-      // only throw exception if \"java:\" prefix was explicitly specified\n-      if(java) throw FUNCJAVA_X.get(ii, path);\n     } catch(final Throwable th) {\n       throw JAVAINIT_X.get(ii, th);\n     }\n \n-    // no function found\n+    // no function found: raise error only if \"java:\" prefix was specified\n+    if(prefix) throw FUNCJAVA_X.get(ii, path);\n     return null;\n   }\n \n   /**\n+   * Checks if a method or variable with the specified name exists.\n+   * @param clazz clazz\n+   * @param name method/variable name\n+   * @return result of check\n+   */\n+  private static boolean exists(final Class\u003c?\u003e clazz, final String name) {\n+    for(final Field f : clazz.getFields()) {\n+      if(f.getName().equals(name)) return true;\n+    }\n+    for(final Method m : clazz.getMethods()) {\n+      if(m.getName().equals(name)) return true;\n+    }\n+    return false;\n+  }\n+\n+  /**\n    * Returns an appropriate XQuery type for the specified Java object.\n    * @param o object\n    * @return item type or {@code null} if no appropriate type was found"
        },
        {
          "file_name": "basex-core/src/main/java/org/basex/query/func/StaticFuncs.java",
          "patch": "@@ -20,7 +20,7 @@\n import org.basex.util.similarity.*;\n \n /**\n- * Container for a user-defined function.\n+ * Container for user-defined functions.\n  *\n  * @author BaseX Team 2005-15, BSD License\n  * @author Christian Gruen\n@@ -61,12 +61,12 @@ public StaticFunc declare(final AnnList anns, final QNm nm, final Var[] args, fi\n     if(uri.length \u003d\u003d 0) throw FUNNONS_X.get(ii, nm.string());\n     if(NSGlobal.reserved(uri)) throw NAMERES_X.get(ii, nm.string());\n \n-    final StaticFunc fn \u003d new StaticFunc(anns, nm, args, type, expr, sc, scope, doc, ii);\n-    final byte[] sig \u003d fn.id();\n+    final StaticFunc sf \u003d new StaticFunc(anns, nm, args, type, expr, sc, scope, doc, ii);\n+    final byte[] sig \u003d sf.id();\n     final FuncCache fc \u003d funcs.get(sig);\n-    if(fc !\u003d null) fc.setFunc(fn);\n-    else funcs.put(sig, new FuncCache(fn));\n-    return fn;\n+    if(fc !\u003d null) fc.setFunc(sf);\n+    else funcs.put(sig, new FuncCache(sf));\n+    return sf;\n   }\n \n   /**\n@@ -284,22 +284,22 @@ public String toString() {\n \n     /**\n      * Constructor.\n-     * @param sf function\n+     * @param func function\n      */\n-    FuncCache(final StaticFunc sf) {\n-      func \u003d sf;\n+    FuncCache(final StaticFunc func) {\n+      this.func \u003d func;\n     }\n \n     /**\n      * Assigns the given function to all of its references and checks their visibility.\n-     * @param fn function to assign\n+     * @param sf function to assign\n      * @throws QueryException query exception\n      */\n-    public void setFunc(final StaticFunc fn) throws QueryException {\n-      if(func !\u003d null) throw FUNCDEFINED_X.get(fn.info, fn.name.string());\n-      func \u003d fn;\n-      for(final StaticFuncCall call : calls) call.init(fn);\n-      final FuncType ft \u003d fn.funcType();\n+    public void setFunc(final StaticFunc sf) throws QueryException {\n+      if(func !\u003d null) throw FUNCDEFINED_X.get(sf.info, sf.name.string());\n+      func \u003d sf;\n+      for(final StaticFuncCall call : calls) call.init(sf);\n+      final FuncType ft \u003d sf.funcType();\n       for(final Closure lit : lits) lit.adoptSignature(ft);\n     }\n "
        },
        {
          "file_name": "basex-core/src/test/java/org/basex/query/func/JavaFunctionTest.java",
          "patch": "@@ -107,6 +107,14 @@ public void javaCast() {\n     error(\"\u0027x\u0027 cast as java\", TYPE30_X);\n   }\n \n+  /** Static check for Java method/variable names. */\n+  @Test\n+  public void javaNameTest() {\n+    error(\"rest:XYZ()\", FUNCUNKNOWN_X);\n+    error(\"Q{java.lang.String}XYZ()\", FUNCUNKNOWN_X);\n+    error(\"Q{java:java.lang.String}XYZ()\", FUNCJAVA_X);\n+  }\n+\n   /** Pass on Java items to functions. */\n   @Test\n   public void funcItem() {"
        }
      ]
    }
  },
  {
    "name": "The csv parser should give more detailed errors",
    "url": "https://github.com/HPI-Information-Systems/Metanome/issues/70",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/HPI-Information-Systems/Metanome/commit/bd945f8d95adc65dbc8e65ffce105cf25fbb7456",
      "files": [
        {
          "file_name": "backend/src/main/java/de/uni_potsdam/hpi/metanome/input/csv/CsvFile.java",
          "patch": "@@ -43,6 +43,8 @@\n     protected ImmutableList\u003cString\u003e nextLine;\n     protected String relationName;\n     protected int numberOfColumns \u003d 0;\n+    // Initialized to -1 because of lookahead\n+    protected int currentLineNumber \u003d -1;\n \n     public CsvFile(String relationName, Reader reader, char separator, char quotechar) throws InputIterationException {\n         this(relationName, reader, separator, quotechar, CSVReader.DEFAULT_SKIP_LINES);\n@@ -106,7 +108,7 @@ public boolean hasNext() {\n \n     protected void failDifferingLine(ImmutableList\u003cString\u003e currentLine) throws InputIterationException {\n         if (currentLine.size() !\u003d this.numberOfColumns()) {\n-            throw new InputIterationException(\"Csv line length did not match.\");\n+            throw new InputIterationException(\"Csv line length did not match on line \" + currentLineNumber);\n         }\n     }\n \n@@ -135,6 +137,7 @@ protected void readToNextValidLine() throws InputIterationException {\n         String[] lineArray;\n         try {\n             lineArray \u003d this.csvReader.readNext();\n+            currentLineNumber++;\n         } catch (IOException e) {\n             throw new InputIterationException(\"Could not read next line in csv file.\");\n         }"
        },
        {
          "file_name": "backend/src/test/java/de/uni_potsdam/hpi/metanome/input/csv/CsvFileTest.java",
          "patch": "@@ -128,7 +128,7 @@ public void testShortWithHeader() throws InputIterationException {\n             csvFileShortWithHeader.next();\n             fail(\"Expected an InputIterationException to be thrown.\");\n         } catch (InputIterationException e) {\n-            // Intentionally left blank\n+            assertTrue(e.getMessage().contains(\"2\"));\n         }\n     }\n \n@@ -170,8 +170,8 @@ public void testShort() throws InputIterationException, InputGenerationException\n             shortCsvFile.next();\n             shortCsvFile.next();\n             fail(\"Expected an InputIterationException to be thrown.\");\n-        } catch (InputIterationException actualException) {\n-            // Intentionally left blank\n+        } catch (InputIterationException e) {\n+            assertTrue(e.getMessage().contains(\"2\"));\n         }\n     }\n "
        }
      ]
    }
  },
  {
    "name": "trying to parse errors without content: applciation/json as JSON",
    "url": "https://github.com/medic/medic-gateway/issues/101",
    "description": "\u003cimg width\u003d\"312\" alt\u003d\"screen shot 2017-05-04 at 18 43 51\" src\u003d\"https://cloud.githubusercontent.com/assets/191496/25700345/f8062dca-30f9-11e7-823d-705abcafb9a6.png\"\u003e\r\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/medic/medic-gateway/commit/b50f1a6633f368b54df2a91c1e16d12d6492fde1",
      "files": [
        {
          "file_name": "src/main/java/medic/gateway/alert/SimpleJsonClient2.java",
          "patch": "@@ -4,6 +4,8 @@\n import android.util.Base64;\n import android.util.Log;\n \n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n import java.nio.charset.Charset;\n import java.io.BufferedReader;\n import java.io.Closeable;\n@@ -52,23 +54,14 @@ public SimpleResponse get(String url) throws MalformedURLException {\n \tpublic SimpleResponse get(URL url) {\n \t\tif(DEBUG) traceMethod(\"get\", \"url\", redactUrl(url));\n \t\tHttpURLConnection conn \u003d null;\n-\t\tInputStream inputStream \u003d null;\n \t\ttry {\n \t\t\tconn \u003d openConnection(url);\n \t\t\tconn.setRequestProperty(\"Content-Type\", \"application/json\");\n \n-\t\t\tif(conn.getResponseCode() \u003c 400) {\n-\t\t\t\tinputStream \u003d conn.getInputStream();\n-\t\t\t} else {\n-\t\t\t\tinputStream \u003d conn.getErrorStream();\n-\t\t\t}\n-\n-\t\t\treturn new JsonResponse(conn.getResponseCode(),\n-\t\t\t\t\tjsonResponseFrom(\"get\", inputStream));\n+\t\t\treturn responseFrom(\"get\", conn);\n \t\t} catch(IOException | JSONException ex) {\n \t\t\treturn exceptionResponseFor(conn, ex);\n \t\t} finally {\n-\t\t\tcloseSafely(\"get\", inputStream);\n \t\t\tcloseSafely(\"get\", conn);\n \t\t}\n \t}\n@@ -82,7 +75,6 @@ public SimpleResponse post(URL url, JSONObject content) {\n \t\tif(DEBUG) traceMethod(\"post\", \"url\", redactUrl(url));\n \t\tHttpURLConnection conn \u003d null;\n \t\tOutputStream outputStream \u003d null;\n-\t\tInputStream inputStream \u003d null;\n \t\ttry {\n \t\t\tconn \u003d openConnection(url);\n \t\t\tconn.setDoOutput(true);\n@@ -95,19 +87,11 @@ public SimpleResponse post(URL url, JSONObject content) {\n \t\t\toutputStream \u003d conn.getOutputStream();\n \t\t\toutputStream.write(content.toString().getBytes(\"UTF-8\"));\n \n-\t\t\tif(conn.getResponseCode() \u003c 400) {\n-\t\t\t\tinputStream \u003d conn.getInputStream();\n-\t\t\t} else {\n-\t\t\t\tinputStream \u003d conn.getErrorStream();\n-\t\t\t}\n-\n-\t\t\treturn new JsonResponse(conn.getResponseCode(),\n-\t\t\t\t\tjsonResponseFrom(\"post\", inputStream));\n+\t\t\treturn responseFrom(\"post\", conn);\n \t\t} catch(IOException | JSONException ex) {\n \t\t\treturn exceptionResponseFor(conn, ex);\n \t\t} finally {\n \t\t\tcloseSafely(\"post\", outputStream);\n-\t\t\tcloseSafely(\"post\", inputStream);\n \t\t\tcloseSafely(\"post\", conn);\n \t\t}\n \t}\n@@ -143,7 +127,33 @@ public static boolean basicAuth_isValidPassword(String password) {\n \t}\n \n //\u003e INSTANCE HELPERS\n-\tprivate JSONObject jsonResponseFrom(String method, InputStream in) throws IOException, JSONException {\n+\t@SuppressFBWarnings(\"NP_LOAD_OF_KNOWN_NULL_VALUE\") // for closeSafely()\n+\tprivate SimpleResponse responseFrom(String method, HttpURLConnection conn) throws IOException, JSONException {\n+\t\tint status \u003d conn.getResponseCode();\n+\n+\t\tInputStream inputStream \u003d null;\n+\t\ttry {\n+\t\t\tif(status \u003c 400) {\n+\t\t\t\tinputStream \u003d conn.getInputStream();\n+\t\t\t\treturn new JsonResponse(status, readStream(method, inputStream));\n+\t\t\t} else {\n+\t\t\t\tinputStream \u003d conn.getErrorStream();\n+\n+\t\t\t\tif(inputStream \u003d\u003d null) return new EmptyResponse(status);\n+\n+\t\t\t\tCharSequence responseBody \u003d readStream(method, inputStream);\n+\t\t\t\ttry {\n+\t\t\t\t\treturn new JsonResponse(status, responseBody);\n+\t\t\t\t} catch(JSONException ex) {\n+\t\t\t\t\treturn new TextResponse(status, responseBody);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} finally {\n+\t\t\tcloseSafely(method, inputStream);\n+\t\t}\n+\t}\n+\n+\tprivate CharSequence readStream(String method, InputStream in) throws IOException {\n \t\tBufferedReader reader \u003d null;\n \t\ttry {\n \t\t\treader \u003d new BufferedReader(new InputStreamReader(in, \"UTF-8\"), 8);\n@@ -153,9 +163,10 @@ private JSONObject jsonResponseFrom(String method, InputStream in) throws IOExce\n \t\t\twhile((line \u003d reader.readLine()) !\u003d null) {\n \t\t\t\tbob.append(line).append(\u0027\\n\u0027);\n \t\t\t}\n-\t\t\tString jsonString \u003d bob.toString();\n-\t\t\tif(DEBUG) log(method, \"Retrieved JSON: %s\", jsonString);\n-\t\t\treturn new JSONObject(jsonString);\n+\n+\t\t\tif(DEBUG) log(method, \"Retrieved text: %s\", bob);\n+\n+\t\t\treturn bob;\n \t\t} finally {\n \t\t\tcloseSafely(method, reader);\n \t\t}\n@@ -244,7 +255,22 @@ private static void log(Exception ex, String message, Object... extras) {\n \t\tthis.status \u003d status;\n \t}\n \n-\tabstract boolean isError();\n+\tboolean isError() {\n+\t\treturn this.status \u003c 200 || this.status \u003e\u003d 300;\n+\t}\n+}\n+\n+class EmptyResponse extends SimpleResponse {\n+\tEmptyResponse(int status) { super(status); }\n+}\n+\n+class TextResponse extends SimpleResponse {\n+\tfinal CharSequence text;\n+\n+\tTextResponse(int status, CharSequence text) {\n+\t\tsuper(status);\n+\t\tthis.text \u003d text;\n+\t}\n }\n \n class ExceptionResponse extends SimpleResponse {\n@@ -255,7 +281,7 @@ private static void log(Exception ex, String message, Object... extras) {\n \t\tthis.ex \u003d ex;\n \t}\n \n-\tboolean isError() { return true; }\n+\t@Override boolean isError() { return true; }\n \n \tpublic String toString() {\n \t\treturn new StringBuilder()\n@@ -271,13 +297,9 @@ public String toString() {\n class JsonResponse extends SimpleResponse {\n \tfinal JSONObject json;\n \n-\tJsonResponse(int status, JSONObject json) {\n+\tJsonResponse(int status, CharSequence json) throws JSONException {\n \t\tsuper(status);\n-\t\tthis.json \u003d json;\n-\t}\n-\n-\tboolean isError() {\n-\t\treturn this.status \u003c 200 || this.status \u003e\u003d 300;\n+\t\tthis.json \u003d new JSONObject(json.toString());\n \t}\n \n \tpublic String toString() {"
        },
        {
          "file_name": "src/main/java/medic/gateway/alert/WebappPoller.java",
          "patch": "@@ -94,16 +94,18 @@ private void handleOkResponse(GatewayRequest request, JSONObject response) throw\n \t}\n \n \tprivate void handleError(SimpleResponse response) throws JSONException {\n-\t\tString description \u003d \"unknown\";\n+\t\tCharSequence description \u003d \"unknown\";\n \n \t\tif(response instanceof JsonResponse) {\n \t\t\tJsonResponse jsonResponse \u003d (JsonResponse) response;\n \t\t\tif(jsonResponse.json.has(\"message\")) description \u003d jsonResponse.json.getString(\"message\");\n-\t\t} else {\n-\t\t\tExceptionResponse errorResponse \u003d (ExceptionResponse) response;\n-\t\t\tdescription \u003d errorResponse.ex.toString();\n+\t\t} else if(response instanceof ExceptionResponse) {\n+\t\t\tdescription \u003d ((ExceptionResponse) response).ex.toString();\n+\t\t} else if(response instanceof TextResponse) {\n+\t\t\tdescription \u003d ((TextResponse) response).text;\n \t\t}\n \n+\n \t\tlogEvent(ctx, \"Received error from server: %s: %s\", response.status, description);\n \t}\n "
        }
      ]
    }
  },
  {
    "name": "IMAP FETCH command parse error",
    "url": "https://github.com/greenmail-mail-test/greenmail/issues/126",
    "description": "(from #44 , reported by @buildscientist)\n\nApple Mail v7.3 on OS X 10.9.5 connecting to IMAP on 3143 (non SSL) using greenmail-standalone v1.5.0 causes the following exception/warning to be logged:\n\nThis might be fixed by the Alfresco patch for FetchCommand in #37.\n\n`\n159694  WARN      commands.FetchCommand| Error processing command: Unexpected end of line. Command should be \u0027\u003ctag\u003e FETCH \u003cmessage-set\u003e \u003cfetch-profile\u003e\u0027\ncom.icegreen.greenmail.imap.ProtocolException: Unexpected end of line.\n    at com.icegreen.greenmail.imap.commands.FetchCommand$FetchCommandParser.nextCharInLine(FetchCommand.java:451)\n    at com.icegreen.greenmail.imap.commands.FetchCommand$FetchCommandParser.addNextElement(FetchCommand.java:363)\n    at com.icegreen.greenmail.imap.commands.FetchCommand$FetchCommandParser.fetchRequest(FetchCommand.java:350)\n    at com.icegreen.greenmail.imap.commands.FetchCommand.doProcess(FetchCommand.java:58)\n    at com.icegreen.greenmail.imap.commands.FetchCommand.doProcess(FetchCommand.java:48)\n    at com.icegreen.greenmail.imap.commands.CommandTemplate.process(CommandTemplate.java:57)\n    at com.icegreen.greenmail.imap.ImapRequestHandler.doProcessRequest(ImapRequestHandler.java:98)\n    at com.icegreen.greenmail.imap.ImapRequestHandler.handleRequest(ImapRequestHandler.java:51)\n    at com.icegreen.greenmail.imap.ImapHandler.run(ImapHandler.java:69)\n    at com.icegreen.greenmail.server.AbstractServer$1.run(AbstractServer.java:158)\n    at java.lang.Thread.run(Thread.java:745)\n`\n",
    "keywords": [
      "com",
      "fetchcommand",
      "fetchcommand$fetchcommandparser",
      "imap",
      "imaprequesthandler",
      "greenmail",
      "icegreen",
      "run",
      "icegreen greenmail",
      "imap commands",
      "commands",
      "command"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/greenmail-mail-test/greenmail/commit/ee098062764542e6047c4eb52c096d2a95280ebd",
      "files": [
        {
          "file_name": "greenmail-core/src/main/java/com/icegreen/greenmail/imap/commands/CommandParser.java",
          "patch": "@@ -337,6 +337,16 @@ private boolean isQuotedSpecial(char chr) {\n     }\n \n     /**\n+     * Checks if character is either CR or LF.\n+     *\n+     * @param chr the character\n+     * @return true, if either CR or LF.\n+     */\n+    public static boolean isCrOrLf(final char chr) {\n+        return \u0027\\r\u0027 \u003d\u003d chr || \u0027\\n\u0027 \u003d\u003d chr;\n+    }\n+\n+    /**\n      * Consumes the request up to and including the eno-of-line.\n      *\n      * @param request The request"
        },
        {
          "file_name": "greenmail-core/src/main/java/com/icegreen/greenmail/imap/commands/FetchCommand.java",
          "patch": "@@ -357,14 +357,14 @@ private void addNextElement(ImapRequestLineReader command, FetchRequest fetch)\n                 throws ProtocolException {\r\n             char next \u003d nextCharInLine(command);\r\n             StringBuilder element \u003d new StringBuilder();\r\n-            while (next !\u003d \u0027 \u0027 \u0026\u0026 next !\u003d \u0027[\u0027 \u0026\u0026 next !\u003d \u0027)\u0027) {\r\n+            while (next !\u003d \u0027 \u0027 \u0026\u0026 next !\u003d \u0027[\u0027 \u0026\u0026 next !\u003d \u0027)\u0027 \u0026\u0026 !isCrOrLf(next)) {\r\n                 element.append(next);\r\n                 command.consume();\r\n-                next \u003d nextCharInLine(command);\r\n+                next \u003d command.nextChar();\r\n             }\r\n             String name \u003d element.toString();\r\n             // Simple elements with no \u0027[]\u0027 parameters.\r\n-            if (next \u003d\u003d \u0027 \u0027 || next \u003d\u003d \u0027)\u0027) {\r\n+            if (next \u003d\u003d \u0027 \u0027 || next \u003d\u003d \u0027)\u0027 || isCrOrLf(next)) {\r\n                 if (\"FAST\".equalsIgnoreCase(name)) {\r\n                     fetch.flags \u003d true;\r\n                     fetch.internalDate \u003d true;\r\n@@ -447,8 +447,9 @@ private void addNextElement(ImapRequestLineReader command, FetchRequest fetch)\n         private char nextCharInLine(ImapRequestLineReader request)\r\n                 throws ProtocolException {\r\n             char next \u003d request.nextChar();\r\n-            if (next \u003d\u003d \u0027\\r\u0027 || next \u003d\u003d \u0027\\n\u0027) {\r\n-                throw new ProtocolException(\"Unexpected end of line.\");\r\n+            if (isCrOrLf(next)) {\r\n+                request.dumpLine();\r\n+                throw new ProtocolException(\"Unexpected end of line (CR or LF).\");\r\n             }\r\n             return next;\r\n         }\r"
        },
        {
          "file_name": "greenmail-core/src/test/java/com/icegreen/greenmail/imap/commands/CommandParserTest.java",
          "patch": "@@ -0,0 +1,15 @@\n+package com.icegreen.greenmail.imap.commands;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CommandParserTest {\n+    @Test\n+    public void test() {\n+        assertTrue(CommandParser.isCrOrLf(\u0027\\n\u0027));\n+        assertTrue(CommandParser.isCrOrLf(\u0027\\r\u0027));\n+        assertFalse(CommandParser.isCrOrLf(\u0027\\t\u0027));\n+    }\n+}"
        },
        {
          "file_name": "greenmail-core/src/test/java/com/icegreen/greenmail/imap/commands/ImapProtocolTest.java",
          "patch": "@@ -0,0 +1,52 @@\n+package com.icegreen.greenmail.imap.commands;\n+\n+import com.icegreen.greenmail.junit.GreenMailRule;\n+import com.icegreen.greenmail.util.GreenMailUtil;\n+import com.icegreen.greenmail.util.ServerSetupTest;\n+import com.sun.mail.iap.ProtocolException;\n+import com.sun.mail.iap.Response;\n+import com.sun.mail.imap.IMAPFolder;\n+import com.sun.mail.imap.IMAPStore;\n+import com.sun.mail.imap.protocol.FetchResponse;\n+import com.sun.mail.imap.protocol.IMAPProtocol;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import javax.mail.Folder;\n+import javax.mail.MessagingException;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Low level IMAP protocol test cases.\n+ */\n+public class ImapProtocolTest {\n+    @Rule\n+    public final GreenMailRule greenMail \u003d new GreenMailRule(ServerSetupTest.SMTP_IMAP);\n+\n+    @Test\n+    public void testFetchUidsAndSize() throws MessagingException {\n+        greenMail.setUser(\"foo@localhost\", \"pwd\");\n+        GreenMailUtil.sendTextEmail(\"foo@localhost\", \"bar@localhost\", \"Test UIDFolder\",\n+                \"Test message\", ServerSetupTest.SMTP);\n+\n+        final IMAPStore store \u003d greenMail.getImap().createStore();\n+        store.connect(\"foo@localhost\", \"pwd\");\n+        try {\n+            IMAPFolder folder \u003d (IMAPFolder) store.getFolder(\"INBOX\");\n+            folder.open(Folder.READ_WRITE);\n+            Response[] ret \u003d (Response[]) folder.doCommand(new IMAPFolder.ProtocolCommand() {\n+                @Override\n+                public Object doCommand(IMAPProtocol protocol) throws ProtocolException {\n+                    return protocol.command(\"UID FETCH 1:* RFC822.SIZE\", null);\n+                }\n+            });\n+            FetchResponse fetchResponse \u003d (FetchResponse) ret[0];\n+            assertFalse(fetchResponse.isBAD());\n+            assertTrue(fetchResponse.getItemCount() \u003e 0); // At least UID and SIZE\n+        } finally {\n+            store.close();\n+        }\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "RSS Parser: error: java.lang.NullPointerException \\tat com.jaeksoft.searchlib.parser.RssParser.parseContent(RssParser.java:98)",
    "url": "https://github.com/jaeksoft/opensearchserver/issues/1087",
    "description": "Full stack:\n\n```\n14:41:47,097 WARN: root - Error while working on URL: .............. : null\njava.lang.NullPointerException\n\\tat com.jaeksoft.searchlib.parser.RssParser.parseContent(RssParser.java:98)\n\\tat com.jaeksoft.searchlib.parser.Parser.doParserContent(Parser.java:172)\n\\tat com.jaeksoft.searchlib.parser.ParserSelector.parserLoop(ParserSelector.java:517)\n\\tat com.jaeksoft.searchlib.parser.ParserSelector.parseStream(ParserSelector.java:550)\n\\tat com.jaeksoft.searchlib.crawler.web.spider.Crawl.parseContent(Crawl.java:155)\n\\tat com.jaeksoft.searchlib.crawler.web.spider.Crawl.download(Crawl.java:318)\n\\tat com.jaeksoft.searchlib.crawler.web.process.WebCrawlThread.crawl(WebCrawlThread.java:175)\n\\tat com.jaeksoft.searchlib.crawler.web.process.WebCrawlThread.runner(WebCrawlThread.java:117)\n\\tat com.jaeksoft.searchlib.process.ThreadAbstract.run(ThreadAbstract.java:263)\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\\tat java.lang.Thread.run(Unknown Source)\n```\n",
    "keywords": [
      "com",
      "\\tat",
      "searchlib",
      "parserselector",
      "process",
      "parsecontent",
      "jaeksoft searchlib",
      "rssparser",
      "run",
      "source",
      "jaeksoft",
      "crawl",
      "unknown",
      "webcrawlthread",
      "java",
      "parser",
      "crawler",
      "web",
      "\\tat com",
      "lang",
      "com jaeksoft"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/jaeksoft/opensearchserver/commit/5909a811d4ef05d5bfcd6aabbb1e89ec10c61f2b",
      "files": [
        {
          "file_name": "src/main/java/com/jaeksoft/searchlib/parser/RssParser.java",
          "patch": "@@ -33,6 +33,7 @@\n import com.jaeksoft.searchlib.analysis.LanguageEnum;\n import com.jaeksoft.searchlib.streamlimiter.StreamLimiter;\n import com.jaeksoft.searchlib.util.IOUtils;\n+import com.sun.syndication.feed.synd.SyndContent;\n import com.sun.syndication.feed.synd.SyndEntry;\n import com.sun.syndication.feed.synd.SyndFeed;\n import com.sun.syndication.io.FeedException;\n@@ -95,8 +96,10 @@ protected void parseContent(StreamLimiter streamLimiter, LanguageEnum lang)\n \t\t\t\t\t\tentry.getPublishedDate());\n \t\t\t\tresultItem.addField(ParserFieldEnum.title, entry.getTitle());\n \t\t\t\tresultItem.addField(ParserFieldEnum.link, entry.getLink());\n-\t\t\t\tresultItem.addField(ParserFieldEnum.description, entry\n-\t\t\t\t\t\t.getDescription().getValue());\n+\t\t\t\tSyndContent syndContent \u003d entry.getDescription();\n+\t\t\t\tif (syndContent !\u003d null)\n+\t\t\t\t\tresultItem.addField(ParserFieldEnum.description,\n+\t\t\t\t\t\t\tsyndContent.getValue());\n \t\t\t\taddDetectedLink(entry.getLink());\n \t\t\t}\n \t\t} catch (IllegalArgumentException e) {"
        }
      ]
    }
  },
  {
    "name": "Fixing Uuid Parse Error",
    "url": "https://github.com/google/codeu_project_2017/pull/66",
    "description": "In Uuid, ids are 32 bit unsigned integers. As Java does not supported\r\nunsigned integers, when converting to a string, the 32 bit integer is\r\nconverted to a long so that it can be written to a string as a\r\npositive integer (using all 32 bits).\r\n\r\nWhen converting from a string to a Uuid, the integer value is not\r\nhandled correctly as values that would be acceptable as a 32 bit\r\nunsigned integer fail to be parsed as a 32 bit signed integer.\r\n\r\nIf the id value of a Uuid is 0xFFFFFFFF and is converted to the string\r\n4294967295. When 4294967295 is parsed, it will fail as it is not\r\nexpressible as a 32 bit signed integer.\r\n\r\nParsing needs to parse the unsigned integer and convert and store the\r\nbit pattern correctly in a signed integer.\r\n\r\nCloses #62",
    "keywords": [
      "not",
      "string",
      "unsigned",
      "signed",
      "integer",
      "bit",
      "uuid",
      "32"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/google/codeu_project_2017/commit/98e7d23a185e4f2a2f390d38cd403991bd4169f3",
      "files": [
        {
          "file_name": "src/codeu/chat/RelayMain.java",
          "patch": "@@ -137,7 +137,7 @@ private static void loadTeamInfo(Server relay, String file) {\n             // this line that it is not worth trying to handle ahead of time.\n             // So instead just try to parse it and catch any exception.\n \n-            final Uuid id \u003d Uuid.fromString(tokens[0].trim());\n+            final Uuid id \u003d Uuid.parse(tokens[0].trim());\n             final byte[] secret \u003d Secret.parse(tokens[1].trim());\n \n             relay.addTeam(id, secret);"
        },
        {
          "file_name": "src/codeu/chat/ServerMain.java",
          "patch": "@@ -46,10 +46,16 @@ public static void main(String[] args) {\n \n     LOG.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d START OF LOG \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n \n-    final Uuid id \u003d Uuid.fromString(args[0]);\n+    final int myPort \u003d Integer.parseInt(args[2]);\n     final byte[] secret \u003d Secret.parse(args[1]);\n \n-    final int myPort \u003d Integer.parseInt(args[2]);\n+    Uuid id \u003d null;\n+    try {\n+      id \u003d Uuid.parse(args[0]);\n+    } catch (IOException ex) {\n+      System.out.println(\"Invalid id - shutting down server\");\n+      System.exit(1);\n+    }\n \n     // This is the directory where it is safe to store data accross runs\n     // of the server."
        },
        {
          "file_name": "src/codeu/chat/util/Uuid.java",
          "patch": "@@ -179,23 +179,29 @@ private static void buildString(Uuid current, StringBuilder build) {\n     }\n   }\n \n-  // FROM STRING\n+  // Parse\n   //\n   // Create a uuid from a sting.\n-  public static Uuid fromString(String string) {\n-    return fromString(null, string.split(\"\\\\.\"), 0);\n+  public static Uuid parse(String string) throws IOException {\n+    return parse(null, string.split(\"\\\\.\"), 0);\n   }\n \n-  private static Uuid fromString(final Uuid root, String[] tokens, int index) {\n+  private static Uuid parse(final Uuid root, String[] tokens, int index) throws IOException {\n \n-    final int id \u003d Integer.parseInt(tokens[index]);\n+    final long id \u003d Long.parseLong(tokens[index]);\n \n-    final Uuid link \u003d new Uuid(root, id);\n+    if ((id \u003e\u003e 32) !\u003d 0) {\n+      throw new IOException(String.format(\n+          \"ID value \u0027%s\u0027 is too large to be an unsigned 32 bit integer\",\n+          tokens[index]));\n+    }\n+\n+    final Uuid link \u003d new Uuid(root, (int)(id \u0026 0xFFFFFFFF));\n \n     final int nextIndex \u003d index + 1;\n \n     return nextIndex \u003c tokens.length ?\n-        fromString(link, tokens, nextIndex) :\n+        parse(link, tokens, nextIndex) :\n         link;\n   }\n }"
        },
        {
          "file_name": "test/codeu/chat/util/UuidTest.java",
          "patch": "@@ -14,6 +14,7 @@\n \n package codeu.chat.util;\n \n+import java.io.IOException;\n import static org.junit.Assert.*;\n import org.junit.Test;\n \n@@ -103,21 +104,21 @@ public void testRootEqualNot() {\n   }\n \n   @Test\n-  public void testValidSingleLink() {\n+  public void testValidSingleLink() throws IOException {\n \n     final String string \u003d \"100\";\n-    final Uuid id \u003d Uuid.fromString(string);\n+    final Uuid id \u003d Uuid.parse(string);\n \n     assertNotNull(id);\n     assertNull(id.root());\n     assertEquals(id.id(), 100);\n   }\n \n   @Test\n-  public void testValidMultiLink() {\n+  public void testValidMultiLink() throws IOException {\n \n     final String string \u003d \"100.200\";\n-    final Uuid id \u003d Uuid.fromString(string);\n+    final Uuid id \u003d Uuid.parse(string);\n \n     assertNotNull(id);\n     assertNotNull(id.root());\n@@ -126,4 +127,16 @@ public void testValidMultiLink() {\n     assertEquals(id.id(), 200);\n     assertEquals(id.root().id(), 100);\n   }\n+\n+  @Test\n+  public void testLargeId() throws IOException {\n+\n+    // Use a id value that would be too large for Integer.parseInt to handle\n+    // but would still parse if we could use unsigned integers.\n+    final String string \u003d Long.toString(0xFFFFFFFFL);\n+    final Uuid id \u003d Uuid.parse(string);\n+\n+    assertNotNull(id);\n+    assertEquals(id.id(), 0xFFFFFFFF);\n+  }\n }"
        }
      ]
    }
  },
  {
    "name": "Error parsing startedAt field from executor",
    "url": "https://github.com/mesos/elasticsearch/pull/367",
    "description": "I\u0027m testing mesos-elasticsearch without docker.\nI have a mesos cluster with 3 nodes up and running, and I\u0027m testing 0.5.0 version.\n\nThe scheduler crash with the message \"java.time.format.DateTimeParseException: Text \u00272015-10-21T16:40:34.180+02:00[Europe/...\u0027 could not be parsed, unparsed text found at index 29\" when receive TaskInfo from the executors.\n\nFor testing purpose I have changed:\n\n./scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/Task.java:70\n-- ZonedDateTime startedAt \u003d ZonedDateTime.parse(data.getProperty(\"startedAt\", ZonedDateTime.now().toString()));\n++ ZonedDateTime startedAt \u003d ZonedDateTime.now();\n\nWith this change it works.\nApparently there is a problem parsing date format.\n",
    "keywords": [
      "testing",
      "zoneddatetime",
      "startedat"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/mesos/elasticsearch/commit/81c11da635935723a688179b1fc1398242ecf878",
      "files": [
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/Clock.java",
          "patch": "@@ -1,5 +1,6 @@\n package org.apache.mesos.elasticsearch.scheduler;\n \n+import java.time.ZoneOffset;\n import java.time.ZonedDateTime;\n import java.util.Date;\n \n@@ -15,4 +16,8 @@ public Date now() {\n     public ZonedDateTime zonedNow() {\n         return ZonedDateTime.now();\n     }\n+\n+    public ZonedDateTime nowUTC() {\n+        return ZonedDateTime.now(ZoneOffset.UTC);\n+    }\n }"
        },
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/Main.java",
          "patch": "@@ -47,14 +47,15 @@ public void run(String[] args) {\n                 configuration.getZookeeperCLI().getZookeeperMesosTimeout(),\n                 TimeUnit.MILLISECONDS,\n                 \"/\" + configuration.getFrameworkName() + \"/\" + configuration.getElasticsearchCLI().getElasticsearchClusterName()));\n-        final FrameworkState frameworkState \u003d new FrameworkState(zookeeperStateDriver);\n-        final ClusterState clusterState \u003d new ClusterState(zookeeperStateDriver, frameworkState);\n+        final TaskInfoFactory taskInfoFactory \u003d new TaskInfoFactory();\n+        final FrameworkState frameworkState \u003d new FrameworkState(zookeeperStateDriver, taskInfoFactory);\n+        final ClusterState clusterState \u003d new ClusterState(zookeeperStateDriver, frameworkState, taskInfoFactory);\n \n         final ElasticsearchScheduler scheduler \u003d new ElasticsearchScheduler(\n                 configuration,\n                 frameworkState,\n                 clusterState,\n-                new TaskInfoFactory(),\n+                taskInfoFactory,\n                 new OfferStrategy(configuration, clusterState),\n                 zookeeperStateDriver\n         );"
        },
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/Task.java",
          "patch": "@@ -1,12 +1,9 @@\n package org.apache.mesos.elasticsearch.scheduler;\n \n import org.apache.mesos.Protos;\n-import org.apache.mesos.elasticsearch.common.Discovery;\n \n-import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.time.ZonedDateTime;\n-import java.util.Properties;\n \n /**\n  * Task on a host.\n@@ -21,6 +18,7 @@\n     private ZonedDateTime startedAt;\n     private InetSocketAddress clientAddress;\n     private InetSocketAddress transportAddress;\n+\n     public Task(String hostname, String taskId, Protos.TaskState state, ZonedDateTime startedAt, InetSocketAddress clientInterface, InetSocketAddress transportAddress) {\n         this.hostname \u003d hostname;\n         this.taskId \u003d taskId;\n@@ -57,30 +55,4 @@ public InetSocketAddress getClientAddress() {\n     public InetSocketAddress getTransportAddress() {\n         return transportAddress;\n     }\n-\n-    public static Task from(Protos.TaskInfo taskInfo, Protos.TaskStatus taskStatus) {\n-        Properties data \u003d new Properties();\n-        try {\n-            data.load(taskInfo.getData().newInput());\n-        } catch (IOException e) {\n-            throw new RuntimeException(\"Failed to parse properties\", e);\n-        }\n-        String hostName \u003d data.getProperty(\"hostname\", \"UNKNOWN\");\n-        String ipAddress \u003d data.getProperty(\"ipAddress\", hostName);\n-        ZonedDateTime startedAt \u003d ZonedDateTime.parse(data.getProperty(\"startedAt\", ZonedDateTime.now().toString()));\n-        Protos.TaskState taskState \u003d null;\n-        if (taskStatus \u003d\u003d null) {\n-            taskState \u003d Protos.TaskState.TASK_STAGING;\n-        } else {\n-            taskState \u003d taskStatus.getState();\n-        }\n-        return new Task(\n-                hostName,\n-                taskInfo.getTaskId().getValue(),\n-                taskState,\n-                startedAt,\n-                new InetSocketAddress(ipAddress, taskInfo.getDiscovery().getPorts().getPorts(Discovery.CLIENT_PORT_INDEX).getNumber()),\n-                new InetSocketAddress(ipAddress, taskInfo.getDiscovery().getPorts().getPorts(Discovery.TRANSPORT_PORT_INDEX).getNumber())\n-        );\n-    }\n }"
        },
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/TaskInfoFactory.java",
          "patch": "@@ -9,15 +9,14 @@\n import org.apache.mesos.elasticsearch.scheduler.configuration.ExecutorEnvironmentalVariables;\n import org.apache.mesos.elasticsearch.scheduler.state.FrameworkState;\n \n+import java.io.IOException;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.net.InetSocketAddress;\n import java.text.SimpleDateFormat;\n+import java.time.ZoneOffset;\n import java.time.ZonedDateTime;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Properties;\n-import java.util.UUID;\n+import java.util.*;\n \n import static java.util.Arrays.asList;\n \n@@ -64,7 +63,7 @@\n \n         return Protos.TaskInfo.newBuilder()\n                 .setName(configuration.getTaskName())\n-                .setData(toData(offer.getHostname(), \"UNKNOWN\", clock.zonedNow()))\n+                .setData(toData(offer.getHostname(), \"UNKNOWN\", clock.nowUTC()))\n                 .setTaskId(Protos.TaskID.newBuilder().setValue(taskId(offer)))\n                 .setSlaveId(offer.getSlaveId())\n                 .addAllResources(acceptedResources)\n@@ -79,7 +78,11 @@ public ByteString toData(String hostname, String ipAddress, ZonedDateTime zonedD\n         data.put(\"startedAt\", zonedDateTime.toString());\n \n         StringWriter writer \u003d new StringWriter();\n-        data.list(new PrintWriter(writer));\n+        try {\n+            data.store(new PrintWriter(writer), \"Task metadata\");\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Failed to write task metadata\", e);\n+        }\n         return ByteString.copyFromUtf8(writer.getBuffer().toString());\n     }\n \n@@ -150,4 +153,29 @@ private String taskId(Protos.Offer offer) {\n         return String.format(\"elasticsearch_%s_%s\", offer.getHostname(), date);\n     }\n \n+    public Task parse(Protos.TaskInfo taskInfo, Protos.TaskStatus taskStatus) {\n+        Properties data \u003d new Properties();\n+        try {\n+            data.load(taskInfo.getData().newInput());\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Failed to parse properties\", e);\n+        }\n+        String hostName \u003d data.getProperty(\"hostname\", \"UNKNOWN\");\n+        String ipAddress \u003d data.getProperty(\"ipAddress\", hostName);\n+\n+        final ZonedDateTime startedAt \u003d Optional.ofNullable(data.getProperty(\"startedAt\"))\n+                .map(s -\u003e s.endsWith(\"...\") ? s.substring(0, 29) : s) //We\u0027re convert dates that was capped with Properties.list() method, see https://github.com/mesos/elasticsearch/pull/367\n+                .map(ZonedDateTime::parse)\n+                .orElseGet(clock::nowUTC)\n+                .withZoneSameInstant(ZoneOffset.UTC);\n+\n+        return new Task(\n+                hostName,\n+                taskInfo.getTaskId().getValue(),\n+                taskStatus \u003d\u003d null ? Protos.TaskState.TASK_STAGING : taskStatus.getState(),\n+                startedAt,\n+                new InetSocketAddress(ipAddress, taskInfo.getDiscovery().getPorts().getPorts(Discovery.CLIENT_PORT_INDEX).getNumber()),\n+                new InetSocketAddress(ipAddress, taskInfo.getDiscovery().getPorts().getPorts(Discovery.TRANSPORT_PORT_INDEX).getNumber())\n+        );\n+    }\n }"
        },
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/state/ClusterState.java",
          "patch": "@@ -4,6 +4,7 @@\n import org.apache.mesos.Protos;\n import org.apache.mesos.Protos.TaskInfo;\n import org.apache.mesos.elasticsearch.scheduler.Task;\n+import org.apache.mesos.elasticsearch.scheduler.TaskInfoFactory;\n \n import javax.validation.constraints.NotNull;\n import java.io.IOException;\n@@ -21,13 +22,15 @@\n     public static final String STATE_LIST \u003d \"stateList\";\n     private SerializableState zooKeeperStateDriver;\n     private FrameworkState frameworkState;\n+    private TaskInfoFactory taskInfoFactory;\n \n-    public ClusterState(@NotNull SerializableState zooKeeperStateDriver, @NotNull FrameworkState frameworkState) {\n+    public ClusterState(@NotNull SerializableState zooKeeperStateDriver, @NotNull FrameworkState frameworkState, @NotNull TaskInfoFactory taskInfoFactory) {\n         if (zooKeeperStateDriver \u003d\u003d null || frameworkState \u003d\u003d null) {\n             throw new NullPointerException();\n         }\n         this.zooKeeperStateDriver \u003d zooKeeperStateDriver;\n         this.frameworkState \u003d frameworkState;\n+        this.taskInfoFactory \u003d taskInfoFactory;\n         frameworkState.onStatusUpdate(this::updateTask);\n     }\n \n@@ -51,7 +54,7 @@ public ClusterState(@NotNull SerializableState zooKeeperStateDriver, @NotNull Fr\n      */\n     public Map\u003cString, Task\u003e getGuiTaskList() {\n         Map\u003cString, Task\u003e tasks \u003d new HashMap\u003c\u003e();\n-        getTaskList().forEach(taskInfo -\u003e tasks.put(taskInfo.getTaskId().getValue(), Task.from(taskInfo, getStatus(taskInfo.getTaskId()).getStatus())));\n+        getTaskList().forEach(taskInfo -\u003e tasks.put(taskInfo.getTaskId().getValue(), taskInfoFactory.parse(taskInfo, getStatus(taskInfo.getTaskId()).getStatus())));\n         return tasks;\n     }\n "
        },
        {
          "file_name": "scheduler/src/main/java/org/apache/mesos/elasticsearch/scheduler/state/FrameworkState.java",
          "patch": "@@ -3,6 +3,7 @@\n import org.apache.log4j.Logger;\n import org.apache.mesos.Protos;\n import org.apache.mesos.SchedulerDriver;\n+import org.apache.mesos.elasticsearch.scheduler.TaskInfoFactory;\n \n import java.io.IOException;\n import java.util.List;\n@@ -25,9 +26,11 @@\n     private final SerializableState zookeeperStateDriver;\n     private final StatePath statePath;\n     private SchedulerDriver driver;\n+    private TaskInfoFactory taskInfoFactory;\n \n-    public FrameworkState(SerializableState zookeeperStateDriver) {\n+    public FrameworkState(SerializableState zookeeperStateDriver, TaskInfoFactory taskInfoFactory) {\n         this.zookeeperStateDriver \u003d zookeeperStateDriver;\n+        this.taskInfoFactory \u003d taskInfoFactory;\n         statePath \u003d new StatePath(zookeeperStateDriver);\n     }\n \n@@ -56,7 +59,8 @@ public void markRegistered(Protos.FrameworkID frameworkId, SchedulerDriver drive\n             LOGGER.error(\"Unable to store framework ID in zookeeper\", e);\n         }\n         this.driver \u003d driver;\n-        final ClusterState clusterState \u003d new ClusterState(zookeeperStateDriver, this);\n+\n+        final ClusterState clusterState \u003d new ClusterState(zookeeperStateDriver, this, taskInfoFactory);\n         registeredListeners.forEach(listener -\u003e listener.accept(clusterState));\n     }\n "
        },
        {
          "file_name": "scheduler/src/test/java/org/apache/mesos/elasticsearch/scheduler/TaskInfoFactoryTest.java",
          "patch": "@@ -1,28 +1,47 @@\n package org.apache.mesos.elasticsearch.scheduler;\n \n+import com.google.protobuf.ByteString;\n import org.apache.mesos.Protos;\n+import org.apache.mesos.elasticsearch.common.Discovery;\n import org.apache.mesos.elasticsearch.scheduler.state.FrameworkState;\n import org.joda.time.DateTime;\n import org.junit.Before;\n import org.junit.Test;\n-\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.time.ZoneId;\n+import java.time.ZoneOffset;\n import java.time.ZonedDateTime;\n import java.util.Date;\n+import java.util.Optional;\n+import java.util.Properties;\n import java.util.UUID;\n \n import static java.util.Arrays.asList;\n import static org.junit.Assert.*;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;\n \n /**\n  * Tests TaskInfoFactory\n  */\n+@RunWith(MockitoJUnitRunner.class)\n public class TaskInfoFactoryTest {\n \n     private static final double EPSILON \u003d 0.0001;\n-    private FrameworkState frameworkState \u003d mock(FrameworkState.class);\n-    private Configuration configuration \u003d mock(Configuration.class);\n+\n+    @Mock\n+    private FrameworkState frameworkState;\n+\n+    @Mock\n+    private Configuration configuration;\n+\n+    @Mock\n+    private Clock clock;\n \n     @Before\n     public void before() {\n@@ -42,14 +61,12 @@ public void before() {\n \n     @Test\n     public void testCreateTaskInfo() {\n-        Clock clock \u003d mock(Clock.class);\n-\n         TaskInfoFactory factory \u003d new TaskInfoFactory();\n         factory.clock \u003d clock;\n \n         Date now \u003d new DateTime().withDayOfMonth(1).withDayOfYear(1).withYear(1970).withHourOfDay(1).withMinuteOfHour(2).withSecondOfMinute(3).withMillisOfSecond(400).toDate();\n         when(clock.now()).thenReturn(now);\n-        when(clock.zonedNow()).thenReturn(ZonedDateTime.now());\n+        when(clock.nowUTC()).thenReturn(ZonedDateTime.now(ZoneOffset.UTC));\n \n \n         Protos.Offer offer \u003d getOffer(frameworkState.getFrameworkID());\n@@ -121,4 +138,111 @@ public void shouldAddJarInfoAndRemoveContainerInfo() {\n         assertEquals(1, taskInfo.getExecutor().getCommand().getUrisCount());\n         assertTrue(taskInfo.getExecutor().getCommand().getUris(0).getValue().contains(address));\n     }\n+\n+    @Test\n+    public void canParseTask() throws Exception {\n+        final ZonedDateTime nowUTC \u003d ZonedDateTime.now(ZoneOffset.UTC);\n+        when(clock.nowUTC()).thenReturn(nowUTC.minusYears(100));\n+\n+        TaskInfoFactory factory \u003d new TaskInfoFactory();\n+        factory.clock \u003d clock;\n+\n+        final Protos.TaskID taskId \u003d Protos.TaskID.newBuilder().setValue(\"TaskID\").build();\n+\n+        final Protos.TaskInfo taskInfo \u003d createTaskInfo(taskId, createData(Optional.of(nowUTC)));\n+\n+        final Protos.TaskStatus taskStatus \u003d Protos.TaskStatus.newBuilder()\n+                .setTaskId(taskId)\n+                .setState(Protos.TaskState.TASK_STAGING)\n+                .build();\n+\n+        final Task task \u003d factory.parse(taskInfo, taskStatus);\n+        assertEquals(nowUTC, task.getStartedAt());\n+        verify(clock, never()).nowUTC();\n+    }\n+\n+    @Test\n+    public void canParseTaskWithoutTimestamp() throws Exception {\n+        final ZonedDateTime nowUTC \u003d ZonedDateTime.now(ZoneOffset.UTC);\n+        when(clock.nowUTC()).thenReturn(nowUTC);\n+\n+        TaskInfoFactory factory \u003d new TaskInfoFactory();\n+        factory.clock \u003d clock;\n+\n+        final Protos.TaskID taskId \u003d Protos.TaskID.newBuilder().setValue(\"TaskID\").build();\n+\n+        final Protos.TaskInfo taskInfo \u003d createTaskInfo(taskId, createData(Optional.\u003cZonedDateTime\u003eempty()));\n+\n+        final Protos.TaskStatus taskStatus \u003d Protos.TaskStatus.newBuilder()\n+                .setTaskId(taskId)\n+                .setState(Protos.TaskState.TASK_STAGING)\n+                .build();\n+\n+        final Task task \u003d factory.parse(taskInfo, taskStatus);\n+        assertEquals(nowUTC, task.getStartedAt());\n+    }\n+\n+    @Test\n+    public void canParseTaskCappedTimestamp() throws Exception {\n+        final ZonedDateTime nowUTC \u003d ZonedDateTime.now(ZoneOffset.UTC);\n+        when(clock.nowUTC()).thenReturn(nowUTC);\n+\n+        TaskInfoFactory factory \u003d new TaskInfoFactory();\n+        factory.clock \u003d clock;\n+\n+        final Protos.TaskID taskId \u003d Protos.TaskID.newBuilder().setValue(\"TaskID\").build();\n+\n+        Properties data \u003d new Properties();\n+        data.put(\"hostname\", \"hostname\");\n+        data.put(\"ipAddress\", \"ip address\");\n+        data.put(\"startedAt\", nowUTC.withZoneSameInstant(ZoneId.of(\"Europe/Paris\")).toString());\n+\n+        StringWriter writer \u003d new StringWriter();\n+        data.list(new PrintWriter(writer));\n+\n+        final Protos.TaskInfo taskInfo \u003d createTaskInfo(taskId, ByteString.copyFromUtf8(writer.getBuffer().toString()));\n+\n+        final Protos.TaskStatus taskStatus \u003d Protos.TaskStatus.newBuilder()\n+                .setTaskId(taskId)\n+                .setState(Protos.TaskState.TASK_STAGING)\n+                .build();\n+\n+        final Task task \u003d factory.parse(taskInfo, taskStatus);\n+        assertEquals(nowUTC, task.getStartedAt());\n+    }\n+\n+    private Protos.TaskInfo createTaskInfo(Protos.TaskID taskId, ByteString data) {\n+        Protos.DiscoveryInfo.Builder discovery \u003d Protos.DiscoveryInfo.newBuilder()\n+                .setPorts(Protos.Ports.newBuilder()\n+                        .addPorts(Discovery.CLIENT_PORT_INDEX, Protos.Port.newBuilder().setNumber(9001).setName(Discovery.CLIENT_PORT_NAME))\n+                        .addPorts(Discovery.TRANSPORT_PORT_INDEX, Protos.Port.newBuilder().setNumber(9002).setName(Discovery.TRANSPORT_PORT_NAME)))\n+                .setVisibility(Protos.DiscoveryInfo.Visibility.EXTERNAL);\n+\n+        return Protos.TaskInfo.newBuilder()\n+                .setName(\"Name\")\n+                .setTaskId(taskId)\n+                .setSlaveId(Protos.SlaveID.newBuilder().setValue(\"SlaveID\").build())\n+                .setData(data)\n+                .setDiscovery(discovery)\n+                .build();\n+    }\n+\n+    private ByteString createData(Optional\u003cZonedDateTime\u003e startedAt) {\n+        Properties data \u003d new Properties();\n+        data.put(\"hostname\", \"hostname\");\n+        data.put(\"ipAddress\", \"ip address\");\n+        if (startedAt.isPresent()) {\n+            data.put(\"startedAt\", startedAt.get().toString());\n+        }\n+\n+        StringWriter writer \u003d new StringWriter();\n+        try {\n+            data.store(new PrintWriter(writer), \"Data\");\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        return ByteString.copyFromUtf8(writer.getBuffer().toString());\n+    }\n+\n }"
        },
        {
          "file_name": "scheduler/src/test/java/org/apache/mesos/elasticsearch/scheduler/TaskTest.java",
          "patch": "@@ -0,0 +1,21 @@\n+package org.apache.mesos.elasticsearch.scheduler;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.mesos.Protos;\n+import org.apache.mesos.elasticsearch.common.Discovery;\n+import org.junit.Test;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.time.ZonedDateTime;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Test for Task\n+ */\n+public class TaskTest {\n+\n+\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "scheduler/src/test/java/org/apache/mesos/elasticsearch/scheduler/state/ClusterStateTest.java",
          "patch": "@@ -1,6 +1,7 @@\n package org.apache.mesos.elasticsearch.scheduler.state;\n \n import org.apache.mesos.Protos;\n+import org.apache.mesos.elasticsearch.scheduler.TaskInfoFactory;\n import org.apache.mesos.elasticsearch.scheduler.util.ProtoTestUtil;\n import org.junit.Before;\n import org.junit.Test;\n@@ -23,7 +24,7 @@\n \n     private FrameworkState frameworkState \u003d mock(FrameworkState.class);\n \n-    private ClusterState clusterState \u003d new ClusterState(state, frameworkState);\n+    private ClusterState clusterState \u003d new ClusterState(state, frameworkState, mock(TaskInfoFactory.class));\n \n     @Before\n     public void before() throws IOException {"
        },
        {
          "file_name": "scheduler/src/test/java/org/apache/mesos/elasticsearch/scheduler/state/FrameworkStateTest.java",
          "patch": "@@ -2,6 +2,7 @@\n \n import org.apache.mesos.Protos;\n import org.apache.mesos.SchedulerDriver;\n+import org.apache.mesos.elasticsearch.scheduler.TaskInfoFactory;\n import org.junit.Test;\n \n import java.io.IOException;\n@@ -18,7 +19,7 @@\n \n     public static final Protos.FrameworkID FRAMEWORK_ID \u003d Protos.FrameworkID.newBuilder().setValue(\"FrameworkID\").build();\n     public final SerializableState state \u003d mock(SerializableState.class);\n-    private final FrameworkState frameworkState \u003d new FrameworkState(state);\n+    private final FrameworkState frameworkState \u003d new FrameworkState(state, mock(TaskInfoFactory.class));\n     private SchedulerDriver driver \u003d mock(SchedulerDriver.class);\n \n     @Test"
        }
      ]
    }
  },
  {
    "name": "Memory mesh producer: Parse errors do not trigger the right kind of failure",
    "url": "https://github.com/io7m/smf/issues/44",
    "description": "The memory mesh producer tries to complete the mesh in the `onFinish()` method. Unfortunately, this method is called regardless of whether or not parsing actually succeeded.\r\n\r\n```\r\n  @Override\r\n  public void onFinish()\r\n  {\r\n    this.mesh \u003d\r\n      SMFMemoryMesh.builder()\r\n        .setArrays(this.arrays)\r\n        .setHeader(this.header)\r\n        .setTriangles(this.triangles)\r\n        .setMetadata(this.metadata)\r\n        .build();\r\n\r\n    this.finished \u003d true;\r\n  }\r\n```\r\n\r\nThe above will trigger a null pointer exception because the `header` field is not assigned...",
    "keywords": [
      "not",
      "mesh"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/io7m/smf/commit/d2930220c22815cfe430b30299a0c40bfc4316a8",
      "files": [
        {
          "file_name": "README-CHANGES.xml",
          "patch": "@@ -28,6 +28,12 @@\n       \u003cc:ticket\u003e43\u003c/c:ticket\u003e\n       \u003cc:summary\u003eMake parsers use URIs instead of Paths for diagnostic messages.\u003c/c:summary\u003e\n     \u003c/c:item\u003e\n+    \u003cc:item\u003e\n+      \u003cc:date\u003e2017-04-28\u003c/c:date\u003e\n+      \u003cc:type-code-fix/\u003e\n+      \u003cc:ticket\u003e44\u003c/c:ticket\u003e\n+      \u003cc:summary\u003eFail in the correct way when failing to parse files during mesh processing.\u003c/c:summary\u003e\n+    \u003c/c:item\u003e\n   \u003c/c:release\u003e\n \n   \u003cc:release c:ticket-system\u003d\"com.github.io7m.smf\"\u003e"
        },
        {
          "file_name": "com.io7m.smfj.processing.api/src/main/java/com/io7m/smfj/processing/api/SMFMemoryMeshProducer.java",
          "patch": "@@ -96,13 +96,15 @@ public void onVersionReceived(\n   @Override\n   public void onFinish()\n   {\n-    this.mesh \u003d\n-      SMFMemoryMesh.builder()\n-        .setArrays(this.arrays)\n-        .setHeader(this.header)\n-        .setTriangles(this.triangles)\n-        .setMetadata(this.metadata)\n-        .build();\n+    if (this.errors.isEmpty()) {\n+      this.mesh \u003d\n+        SMFMemoryMesh.builder()\n+          .setArrays(this.arrays)\n+          .setHeader(this.header)\n+          .setTriangles(this.triangles)\n+          .setMetadata(this.metadata)\n+          .build();\n+    }\n \n     this.finished \u003d true;\n   }"
        }
      ]
    }
  },
  {
    "name": "Error parsing Averages",
    "url": "https://github.com/shymmq/librus-client/issues/87",
    "description": "Version: 39bbe93\r\nDevice: Samsung Galaxy S4 Mini\r\nOS: LineageOS 14.1 (Android 7.1.1)\r\n\r\n`02-17 21:30:01.763 32741-374/pl.librus.client E/librus-client-log: Error parsing Averages\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err: com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of pl.librus.client.datamodel.Average[] out of NOT_AVAILABLE token\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err:  at [Source: N/A; line: -1, column: -1]\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(DeserializationContext.java:1234)\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1122)\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1075)\r\n02-17 21:30:01.763 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.handleNonArray(ObjectArrayDeserializer.java:275)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:179)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:20)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:3770)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2099)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at com.fasterxml.jackson.databind.ObjectMapper.treeToValue(ObjectMapper.java:2596)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at pl.librus.client.api.APIClient.parseList(APIClient.java:66)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at pl.librus.client.api.APIClient.lambda$getList$4(APIClient.java:219)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at pl.librus.client.api.APIClient.access$lambda$5(APIClient.java)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at pl.librus.client.api.APIClient$$Lambda$6.apply(Unknown Source)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at java8.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:630)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at java8.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:468)\r\n02-17 21:30:01.764 32741-374/pl.librus.client W/System.err:     at java.lang.Thread.run(Thread.java:761)`",
    "keywords": [
      "com",
      "32741-374/pl librus",
      "32741-374/pl",
      "w/system err",
      "w/system",
      "librus client",
      "databind",
      "deser",
      "21:30:01 764",
      "jackson",
      "objectarraydeserializer",
      "apiclient",
      "fasterxml",
      "deserializationcontext",
      "client",
      "jackson databind",
      "client w/system",
      "api",
      "21:30:01 763",
      "02-17 21:30:01",
      "deserialize",
      "std",
      "err",
      "21:30:01",
      "librus",
      "02-17",
      "objectmapper",
      "fasterxml jackson",
      "1",
      "763",
      "com fasterxml",
      "764",
      "763 32741-374/pl",
      "pl",
      "764 32741-374/pl"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/shymmq/librus-client/commit/f58a79775d4e8ab78ba1af200d6e44c10f03b39e",
      "files": [
        {
          "file_name": "app/src/main/java/pl/librus/client/LibrusConstants.java",
          "patch": "@@ -6,8 +6,6 @@\n  */\n \n public class LibrusConstants {\n-    //shared preferences\n-    public static final String PREFS_DEFAULT_VIEW \u003d \"default_view\";\n     //debug\n     static final String TAG \u003d \"librus-client-log\";\n     static final boolean DBG \u003d true;"
        },
        {
          "file_name": "app/src/main/java/pl/librus/client/api/DefaultAPIClient.java",
          "patch": "@@ -3,7 +3,7 @@\n import android.content.Context;\n import android.preference.PreferenceManager;\n \n-import com.google.common.collect.Lists;\n+import com.google.common.collect.Iterables;\n import com.loopj.android.http.AsyncHttpClient;\n import com.loopj.android.http.RequestParams;\n \n@@ -139,24 +139,16 @@ private void saveTokens(String response) {\n \n         String endpoint \u003d \"/Timetables?weekStart\u003d\" + weekStart.toString(\"yyyy-MM-dd\");\n \n-        return getObject(endpoint, \"Timetable\", Timetable.class);\n+        return getList(endpoint, \"Timetable\", Timetable.class)\n+                .thenApply(Iterables::getOnlyElement);\n     }\n \n     public \u003cT extends Persistable\u003e CompletableFuture\u003cList\u003cT\u003e\u003e getAll(Class\u003cT\u003e clazz) {\n         EntityInfo info \u003d EntityInfos.infoFor(clazz);\n-        if(info.single()) {\n-            return getObject(info.endpoint(), info.topLevelName(), clazz)\n-                    .thenApply(Lists::newArrayList);\n-        } else {\n-            return getList(info.endpoint(), info.topLevelName(), clazz);\n-        }\n-    }\n-\n-    public \u003cT\u003e CompletableFuture\u003cT\u003e getObject(String endpoint, final String topLevelName, final Class\u003cT\u003e clazz) {\n-        return APIRequest(endpoint).thenApplyAsync(s -\u003e EntityParser.parseObject(s, topLevelName, clazz));\n+        return getList(info.endpoint(), info.topLevelName(), clazz);\n     }\n \n     public \u003cT\u003e CompletableFuture\u003cList\u003cT\u003e\u003e getList(String endpoint, final String topLevelName, final Class\u003cT\u003e clazz) {\n-        return APIRequest(endpoint).thenApplyAsync(s -\u003e EntityParser.parseList(s, topLevelName, clazz));\n+        return APIRequest(endpoint).thenApplyAsync(s -\u003e EntityParser.parse(s, topLevelName, clazz));\n     }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "app/src/main/java/pl/librus/client/api/EntityParser.java",
          "patch": "@@ -11,44 +11,36 @@\n import java.io.IOException;\n import java.lang.reflect.Array;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n \n import pl.librus.client.LibrusUtils;\n \n public class EntityParser {\n \n-    public static \u003cT\u003e List\u003cT\u003e parseList(String input, String topLevelName, Class\u003cT\u003e clazz) {\n+    public static \u003cT\u003e List\u003cT\u003e parse(String input, String topLevelName, Class\u003cT\u003e clazz) {\n         ObjectMapper mapper \u003d createMapper();\n         try {\n             input \u003d input.replace(\"\\\\\\\\\\\\\", \"\\\\\");\n             JsonNode root \u003d mapper.readTree(input);\n             TreeNode node \u003d root.at(\"/\" + topLevelName);\n-            return Arrays.asList(mapper.treeToValue(node, getArrayClass(clazz)));\n-        } catch (IOException e) {\n-            LibrusUtils.logError(\"Error parsing \" + topLevelName);\n-            e.printStackTrace();\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    public static \u003cT\u003e T parseObject(String input, String topLevelName, Class\u003cT\u003e clazz) {\n-        ObjectMapper mapper \u003d createMapper();\n-        try {\n-            input \u003d input.replace(\"\\\\\\\\\\\\\", \"\\\\\");\n-            JsonNode root \u003d mapper.readTree(input);\n-            TreeNode node \u003d root.at(\"/\" + topLevelName);\n-            return mapper.treeToValue(node, clazz);\n-        } catch (IOException e) {\n-            LibrusUtils.logError(\"Error parsing \" + topLevelName);\n-            e.printStackTrace();\n-            throw new ParseException(e);\n+            if(!node.isMissingNode()) {\n+                return Arrays.asList(mapper.treeToValue(node, getArrayClass(clazz)));\n+            } else if(root.at(\"/Status\").textValue().equals(\"Disabled\")){\n+                return Collections.emptyList();\n+            } else {\n+                throw new RuntimeException(\"No root element, status not disabled\");\n+            }\n+        } catch (Exception e) {\n+            throw new ParseException(input, e);\n         }\n     }\n \n     private static ObjectMapper createMapper() {\n         return new ObjectMapper()\n                 .configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true)\n                 .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)\n+                .configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true)\n                 .registerModule(new JodaModule())\n                 .registerModule(new GuavaModule());\n     }"
        },
        {
          "file_name": "app/src/main/java/pl/librus/client/api/IAPIClient.java",
          "patch": "@@ -15,8 +15,6 @@\n \n     \u003cT extends Persistable\u003e CompletableFuture\u003cList\u003cT\u003e\u003e getAll(Class\u003cT\u003e clazz);\n \n-    \u003cT\u003e CompletableFuture\u003cT\u003e getObject(String endpoint, String topLevelName, Class\u003cT\u003e clazz);\n-\n     \u003cT\u003e CompletableFuture\u003cList\u003cT\u003e\u003e getList(String endpoint, String topLevelName, Class\u003cT\u003e clazz);\n \n }"
        },
        {
          "file_name": "app/src/main/java/pl/librus/client/api/ParseException.java",
          "patch": "@@ -1,12 +1,8 @@\n package pl.librus.client.api;\n \n-/**\n- * Created by robwys on 09/02/2017.\n- */\n-\n public class ParseException extends RuntimeException {\n \n-    public ParseException(Throwable cause) {\n-        super(cause);\n+    public ParseException(String input, Throwable cause) {\n+        super(\"input: \" + input, cause);\n     }\n }"
        },
        {
          "file_name": "app/src/test/java/pl/librus/client/EntityParserTest.java",
          "patch": "@@ -1,5 +1,6 @@\n package pl.librus.client;\n \n+import com.google.common.collect.Iterables;\n import com.google.common.io.Resources;\n \n import org.joda.time.LocalDate;\n@@ -14,6 +15,7 @@\n import io.requery.Persistable;\n import pl.librus.client.api.EntityInfos;\n import pl.librus.client.api.EntityParser;\n+import pl.librus.client.api.ParseException;\n import pl.librus.client.datamodel.Announcement;\n import pl.librus.client.datamodel.Attendance;\n import pl.librus.client.datamodel.AttendanceCategory;\n@@ -39,6 +41,7 @@\n import pl.librus.client.datamodel.Timetable;\n \n import static org.hamcrest.Matchers.hasItem;\n+import static org.hamcrest.Matchers.hasSize;\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertThat;\n@@ -49,7 +52,7 @@\n     @Test\n     public void shouldParseTeachers() throws IOException {\n         //when\n-        List\u003cTeacher\u003e res \u003d parseList(\"Teachers.json\", Teacher.class);\n+        List\u003cTeacher\u003e res \u003d parse(\"Teachers.json\", Teacher.class);\n \n         //then\n         assertThat(res, hasItem(new Teacher.Builder()\n@@ -62,7 +65,7 @@ public void shouldParseTeachers() throws IOException {\n     @Test\n     public void shouldParseMe() throws IOException {\n         //when\n-        Me res \u003d parseObject(\"Me.json\", Me.class);\n+        List\u003cMe\u003e res \u003d parse(\"Me.json\", Me.class);\n \n         //then\n         LibrusAccount expectedAccount \u003d new LibrusAccount.Builder()\n@@ -71,16 +74,16 @@ public void shouldParseMe() throws IOException {\n                 .lastName(\"Problem\")\n                 .login(\"12u\")\n                 .build();\n-        assertThat(res, is(ImmutableMe.of(expectedAccount)));\n+        assertThat(Iterables.getOnlyElement(res), is(ImmutableMe.of(expectedAccount)));\n     }\n \n     @Test\n     public void shouldParseTimetable() throws IOException {\n         //when\n-        Timetable res \u003d EntityParser.parseObject(readFile(\"Timetable.json\"), \"Timetable\", Timetable.class);\n+        List\u003cTimetable\u003e res \u003d EntityParser.parse(readFile(\"Timetable.json\"), \"Timetable\", Timetable.class);\n \n         //then\n-        JsonLesson actual \u003d res.get(LocalDate.parse(\"2017-01-30\"))\n+        JsonLesson actual \u003d Iterables.getOnlyElement(res).get(LocalDate.parse(\"2017-01-30\"))\n                 .get(1).get(0);\n         JsonLesson expected \u003d ImmutableJsonLesson.builder()\n                 .cancelled(false)\n@@ -112,7 +115,7 @@ public void shouldParseTimetable() throws IOException {\n     @Test\n     public void shouldParseGrades() throws IOException {\n         //when\n-        List\u003cGrade\u003e res \u003d parseList(\"Grades.json\", Grade.class);\n+        List\u003cGrade\u003e res \u003d parse(\"Grades.json\", Grade.class);\n \n         //then\n         assertThat(res, hasItem(new Grade.Builder()\n@@ -138,7 +141,7 @@ public void shouldParseGrades() throws IOException {\n     @Test\n     public void shouldParseCategories() throws IOException {\n         //when\n-        List\u003cGradeCategory\u003e res \u003d parseList(\"GradeCategories.json\", GradeCategory.class);\n+        List\u003cGradeCategory\u003e res \u003d parse(\"GradeCategories.json\", GradeCategory.class);\n \n         //then\n         assertThat(res, hasItem(new GradeCategory.Builder()\n@@ -152,7 +155,7 @@ public void shouldParseCategories() throws IOException {\n     @Test\n     public void shouldParseComment() throws IOException {\n         //when\n-        List\u003cGradeComment\u003e res \u003d parseList(\"GradeComments.json\", GradeComment.class);\n+        List\u003cGradeComment\u003e res \u003d parse(\"GradeComments.json\", GradeComment.class);\n \n         //then\n         assertThat(res, hasItem(new GradeComment.Builder()\n@@ -165,7 +168,7 @@ public void shouldParseComment() throws IOException {\n     @Test\n     public void shouldParseLessons() throws IOException {\n         //when\n-        List\u003cPlainLesson\u003e res \u003d parseList(\"Lessons.json\", PlainLesson.class);\n+        List\u003cPlainLesson\u003e res \u003d parse(\"Lessons.json\", PlainLesson.class);\n \n         //then\n         assertThat(res, hasItem(new PlainLesson.Builder()\n@@ -178,7 +181,7 @@ public void shouldParseLessons() throws IOException {\n     @Test\n     public void shouldParseHomeWorks() throws IOException {\n         //when\n-        List\u003cEvent\u003e res \u003d parseList(\"HomeWorks.json\", Event.class);\n+        List\u003cEvent\u003e res \u003d parse(\"HomeWorks.json\", Event.class);\n \n         //then\n         assertThat(res, hasItem(new Event.Builder()\n@@ -194,7 +197,7 @@ public void shouldParseHomeWorks() throws IOException {\n     @Test\n     public void shouldParseHomeWorkCategories() throws IOException {\n         //when\n-        List\u003cEventCategory\u003e res \u003d parseList(\"HomeWorkCategories.json\", EventCategory.class);\n+        List\u003cEventCategory\u003e res \u003d parse(\"HomeWorkCategories.json\", EventCategory.class);\n \n         //then\n         assertThat(res, hasItem(new EventCategory.Builder()\n@@ -206,7 +209,7 @@ public void shouldParseHomeWorkCategories() throws IOException {\n     @Test\n     public void shouldParseAttendances() throws IOException {\n         //when\n-        List\u003cAttendance\u003e res \u003d parseList(\"Attendances.json\", Attendance.class);\n+        List\u003cAttendance\u003e res \u003d parse(\"Attendances.json\", Attendance.class);\n \n         //then\n         assertThat(res, hasItem(new Attendance.Builder()\n@@ -224,7 +227,7 @@ public void shouldParseAttendances() throws IOException {\n     @Test\n     public void shouldParseAttendanceTypes() throws IOException {\n         //when\n-        List\u003cAttendanceCategory\u003e res \u003d parseList(\"AttendanceTypes.json\", AttendanceCategory.class);\n+        List\u003cAttendanceCategory\u003e res \u003d parse(\"AttendanceTypes.json\", AttendanceCategory.class);\n \n         //then\n         assertThat(res, hasItem(new AttendanceCategory.Builder()\n@@ -240,7 +243,7 @@ public void shouldParseAttendanceTypes() throws IOException {\n     @Test\n     public void shouldParseSubject() throws IOException {\n         //when\n-        List\u003cSubject\u003e res \u003d parseList(\"Subjects.json\", Subject.class);\n+        List\u003cSubject\u003e res \u003d parse(\"Subjects.json\", Subject.class);\n         \n         //then\n         assertThat(res, hasItem(new Subject.Builder()\n@@ -252,10 +255,10 @@ public void shouldParseSubject() throws IOException {\n     @Test\n     public void shouldParseLuckyNumbers() throws IOException {\n         //when\n-        LuckyNumber luckyNumber \u003d parseObject(\"LuckyNumbers.json\", LuckyNumber.class);\n+        List\u003cLuckyNumber\u003e luckyNumbers \u003d parse(\"LuckyNumbers.json\", LuckyNumber.class);\n \n         //then\n-        assertThat(luckyNumber, is(ImmutableLuckyNumber.of(\n+        assertThat(Iterables.getOnlyElement(luckyNumbers), is(ImmutableLuckyNumber.of(\n                 LocalDate.parse(\"2017-02-03\"),\n                 13\n         )));\n@@ -264,7 +267,7 @@ public void shouldParseLuckyNumbers() throws IOException {\n     @Test\n     public void shouldParseAverages() {\n         //when\n-        List\u003cAverage\u003e averages \u003d parseList(\"Averages.json\", Average.class);\n+        List\u003cAverage\u003e averages \u003d parse(\"Averages.json\", Average.class);\n \n         //then\n         assertThat(averages, hasItem(new Average.Builder()\n@@ -278,7 +281,7 @@ public void shouldParseAverages() {\n     @Test\n     public void shouldParseColors() {\n         //when\n-        List\u003cLibrusColor\u003e colors \u003d parseList(\"Colors.json\", LibrusColor.class);\n+        List\u003cLibrusColor\u003e colors \u003d parse(\"Colors.json\", LibrusColor.class);\n         //then\n         LibrusColor goldenrod \u003d new LibrusColor.Builder()\n                 .id(\"13\")\n@@ -291,7 +294,7 @@ public void shouldParseColors() {\n     @Test\n     public void shouldParseAnnouncements() {\n         //when\n-        List\u003cAnnouncement\u003e res \u003d parseList(\"SchoolNotices.json\", Announcement.class);\n+        List\u003cAnnouncement\u003e res \u003d parse(\"SchoolNotices.json\", Announcement.class);\n \n         //then\n         assertThat(res, hasItem(new Announcement.Builder()\n@@ -304,6 +307,21 @@ public void shouldParseAnnouncements() {\n             .build()));\n     }\n \n+    @Test\n+    public void shouldNotFailOnDisabled() {\n+        //when\n+        List\u003cAverage\u003e res \u003d parse(\"Disabled.json\", Average.class);\n+\n+        //then\n+        assertThat(res, hasSize(0));\n+    }\n+\n+    @Test(expected \u003d ParseException.class)\n+    public void shouldFailOnMalformed() {\n+        //when\n+        parse(\"Malformed.json\", Average.class);\n+    }\n+\n     private static String readFile(String fileName) {\n         try {\n             return Resources.toString(Resources.getResource(fileName), Charset.defaultCharset());\n@@ -312,11 +330,8 @@ private static String readFile(String fileName) {\n         }\n     }\n \n-    private \u003cT extends Persistable\u003e List\u003cT\u003e parseList(String filename, Class\u003cT\u003e clazz) {\n-        return EntityParser.parseList(readFile(filename), EntityInfos.infoFor(clazz).topLevelName(), clazz);\n+    private \u003cT extends Persistable\u003e List\u003cT\u003e parse(String filename, Class\u003cT\u003e clazz) {\n+        return EntityParser.parse(readFile(filename), EntityInfos.infoFor(clazz).topLevelName(), clazz);\n     }\n \n-    private \u003cT extends Persistable\u003e T parseObject(String filename, Class\u003cT\u003e clazz) {\n-        return EntityParser.parseObject(readFile(filename), EntityInfos.infoFor(clazz).topLevelName(), clazz);\n-    }\n }"
        },
        {
          "file_name": "app/src/test/resources/Disabled.json",
          "patch": "@@ -0,0 +1,9 @@\n+{\n+  \"Status\":\"Disabled\",\n+  \"Resources\":{\n+    \"..\":{\n+      \"Url\":\"https:\\/\\/api.librus.pl\\/2.0\\/Grades\"\n+    }\n+  },\n+  \"Url\":\"https://api.librus.pl/2.0Grades/Averages\"\n+}"
        },
        {
          "file_name": "app/src/test/resources/Malformed.json",
          "patch": "@@ -0,0 +1 @@\n+Lorem ipsum"
        }
      ]
    }
  },
  {
    "name": "Parse errors during sync attempts to update UI from non-UI thread",
    "url": "https://github.com/cims-bioko/cims-tablet/issues/168",
    "description": "Because the asynchronous ParseTask:\n- delegates its error handling to a callback to a listener\n- runs on a background thread\n- calls a listener method that attempts to update the SyncDatabaseFragment\u0027s UI\n\nWhen there is an error during parsing errors are logged to logcat and the UI renders improperly.\n",
    "keywords": [
      "ui"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/cims-bioko/cims-tablet/commit/bf5590258eecfbe53f52a6bf02eca8e2656f2ee0",
      "files": [
        {
          "file_name": "src/main/java/org/openhds/mobile/fragment/SyncDatabaseFragment.java",
          "patch": "@@ -16,8 +16,8 @@\n import org.openhds.mobile.repository.GatewayRegistry;\n import org.openhds.mobile.repository.gateway.Gateway;\n import org.openhds.mobile.task.parsing.DataPage;\n-import org.openhds.mobile.task.parsing.ParseTask;\n import org.openhds.mobile.task.parsing.ParseRequest;\n+import org.openhds.mobile.task.parsing.ParseTask;\n import org.openhds.mobile.task.parsing.entities.EntityParser;\n import org.openhds.mobile.task.parsing.entities.FieldWorkerParser;\n import org.openhds.mobile.task.parsing.entities.IndividualParser;\n@@ -500,8 +500,13 @@ public void onProgress(String progress) {\n         }\n \n         @Override\n-        public void onError(DataPage dataPage, Exception e) {\n-            entityError(e);\n+        public void onError(DataPage dataPage, final Exception e) {\n+            getActivity().runOnUiThread(new Runnable() {\n+                @Override\n+                public void run() {\n+                    entityError(e);\n+                }\n+            });\n         }\n \n         @Override"
        }
      ]
    }
  },
  {
    "name": "Unclear error messages displayed when unable to parse a PageYAML document ",
    "url": "https://github.com/paypal/SeLion/issues/71",
    "description": "If you have a syntax error in your PageYAML document, you could see the following error displayed by the code generator, which does not indicate a corrective action to take.\n\n```\n[ERROR] -\u003e [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal com.paypal.selion:SeLion-Code-Generator:1.0.0-SNAPS\nHOT:generate (default) on project Sample:\n SeLion code generator failed when generating code for publisher.yaml\nRoot Cause :\njava.lang.IllegalArgumentException: Missing or incorrect platform in Data file:C:\\projects\\selion-qa\\Sample\\src\\main\\resources\\GUI\nData\\publisher.yaml\n```\n\nTo reproduce this, use the following PageYAML file which is missing the locale definition for the locator;\n\n``` yaml\nbaseClass: \"com.paypal.selion.testcomponents.BasicPageImpl\"\npageTitle:\n  US: \"API Page\"\nelements:\n  loginTextField:\n    locators:\n       \"@id\u003d\u0027txtUsername\u0027\"\ndefaultLocale: \"US\"\npageValidators: []\n```\n\nThe error message displayed is misleading. It suggests that the user needs to specify \u0027platform\u0027. However, by design \u0027platform\u0027 should default to \u0027web\u0027 and is only required if the PageYAML is not for \u0027web\u0027.  Instead it should simply say, \"the document could not be parsed\" or something similar.\n\nFurthermore, if you run `mvn --X generate-sources` you get the following, which is also not very helpful. It only slightly suggests a parsing error -- in a cryptic way. :)\n\n```\n[INFO] Generating java file for YAML file [publisher.yaml] in domain []\n[DEBUG] Unable to process src\\main\\resources\\GUIData\\publisher.yaml as PageYaml V2.\n         null; Can\u0027t construct a java object for tag:yaml.org,2002:com.paypal.selion.plugins.Page; exception\u003dCannot crea\nte property\u003delements for JavaBean\u003dpageTitle: API Page\nbaseClass: com.paypal.selion.testcomponents.BasicPageImpl\nelements: 0\npageValidators: 0\ndefaultLocale: US\n; Cannot create property\u003dlocators for JavaBean\u003dcom.paypal.selion.plugins.GUIElement@502f1f4c; No single argument constru\nctor found for interface java.util.Map;  in \u0027reader\u0027, line 1, column 1:\n    baseClass: \"com.paypal.selion.te ...\n    ^\n[DEBUG] ++ Processing src\\main\\resources\\GUIData\\publisher.yaml as PageYaml V1\n[DEBUG] Reading keys from data file [src\\main\\resources\\GUIData\\publisher.yaml]\n[DEBUG] Specified platform in data file [src\\main\\resources\\GUIData\\publisher.yaml] : [null]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n```\n",
    "keywords": [
      "com",
      "yaml]",
      "displayed",
      "code",
      "data",
      "document",
      "paypal selion",
      "error",
      "[info]",
      "0",
      "selion",
      "not",
      "file",
      "java",
      "following",
      "baseclass",
      "com paypal",
      "[debug]",
      "pageyaml",
      "paypal",
      "us",
      "yaml"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/paypal/SeLion/commit/f7c2ede7a6afc93ea61638018998706bf8e6a117",
      "files": [
        {
          "file_name": "client/src/main/java/com/paypal/selion/platform/grid/BrowserFlavors.java",
          "patch": "@@ -24,31 +24,33 @@\n  * An enum class that represents the browser flavors supported by SeLion\n  */\n public enum BrowserFlavors {\n-    GENERIC(\"*generic\"), \n-    FIREFOX(\"*firefox\"), \n-    INTERNET_EXPLORER(\"*iexplore\"), \n-    HTMLUNIT(\"*htmlunit\"), \n-    CHROME(\"*chrome\"),\n+    GENERIC(\"*generic\", true),\n+    FIREFOX(\"*firefox\", false),\n+    INTERNET_EXPLORER(\"*iexplore\", false),\n+    HTMLUNIT(\"*htmlunit\", false),\n+    CHROME(\"*chrome\", false),\n     /**\n      * @deprecated SeLion is moving away from IPhoneDriver and now starting to use IOS-Driver. In order to be able to\n      *             run tests on an iPad simulator (or) device using the Safari browser, please use\n      *             {@link MobileTest#device()} equal to \"iphone\" and {@link MobileTest#appName()} equal to \"Safari\"\n      */\n-    IPHONE(\"*iphone\"),\n+    IPHONE(\"*iphone\", true),\n     /**\n      * @deprecated SeLion is moving away from IPhoneDriver and now starting to use IOS-Driver. In order to be able to\n      *             run tests on an iPad simulator (or) device using the Safari browser, please use\n      *             {@link MobileTest#device()} equal to \"ipad\" and {@link MobileTest#appName()} equal to \"Safari\"\n      */\n-    IPAD(\"*ipad\"), \n-    SAFARI(\"*safari\"), \n-    OPERA(\"*opera\"), \n-    PHANTOMJS(\"*phantomjs\");\n+    IPAD(\"*ipad\", true),\n+    SAFARI(\"*safari\", false),\n+    OPERA(\"*opera\", false),\n+    PHANTOMJS(\"*phantomjs\", false);\n \n     private String browser;\n+    private boolean internalOnly;\n \n-    private BrowserFlavors(String browser) {\n+    private BrowserFlavors(String browser, boolean internalOnly) {\n         this.browser \u003d browser;\n+        this.internalOnly \u003d internalOnly;\n     }\n \n     /**\n@@ -61,6 +63,15 @@ public String getBrowser() {\n     }\n \n     /**\n+     * Return whether the browser flavor is internal to SeLion\n+     *\n+     * @return A boolean value \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e\n+     */\n+    public boolean isInternalOnly() {\n+        return this.internalOnly;\n+    }\n+\n+    /**\n      * This method returns all the browser flavors that are supported by the SeLion framework as a String with each\n      * value delimited by a comma.\n      * \n@@ -70,7 +81,9 @@ public static String getSupportedBrowsersAsCSV() {\n         StringBuilder buffer \u003d new StringBuilder();\n         String delimiter \u003d \",\";\n         for (BrowserFlavors flavor : BrowserFlavors.values()) {\n-            buffer.append(flavor.getBrowser()).append(delimiter);\n+            if (!flavor.isInternalOnly()) {\n+                buffer.append(flavor.getBrowser()).append(delimiter);\n+            }\n         }\n         buffer.deleteCharAt(buffer.length() - 1);\n         return buffer.toString();\n@@ -91,7 +104,7 @@ public static BrowserFlavors getBrowser(String browser) {\n         StringBuilder errorMsg \u003d new StringBuilder();\n         errorMsg.append(\"Browser name \\\u0027\");\n         errorMsg.append(browser).append(\"\\\u0027 did not match any browser flavors supported by SeLion.\\n\");\n-        errorMsg.append(\"Current Supported Browser flavors are : [\").append(BrowserFlavors.getSupportedBrowsersAsCSV())\n+        errorMsg.append(\"Supported Browser flavors are : [\").append(BrowserFlavors.getSupportedBrowsersAsCSV())\n                 .append(\"].\");\n \n         IllegalArgumentException e \u003d new IllegalArgumentException(errorMsg.toString());"
        },
        {
          "file_name": "client/src/main/java/com/paypal/selion/platform/grid/MobileTestSession.java",
          "patch": "@@ -60,7 +60,7 @@ public String getAppName() {\n         logger.entering();\n         if (StringUtils.isBlank(appName)) {\n             throw new IllegalArgumentException(\n-                    \"Please specify the application name either via the @AppTest annotation or via the SeLion configuration parameter\");\n+                    \"Please specify the application name either via the @MobileTest annotation or via the SeLion configuration parameter\");\n         }\n         logger.exiting(appName);\n         return appName;"
        },
        {
          "file_name": "client/src/main/java/com/paypal/selion/platform/grid/WebTestSession.java",
          "patch": "@@ -133,7 +133,7 @@ private final void setSessionName(Map\u003cString, SeLionSession\u003e sessionMap, Invoked\n \n         // for un-named sessions that may want to stay open or connect to an\n         // existing session default to this session name in most cases\n-        this.sessionNameToUse \u003d \"unamed-sesssion-on-thread\" + Thread.currentThread().getId();\n+        this.sessionNameToUse \u003d \"unnamed-session-on-thread\" + Thread.currentThread().getId();\n \n         // dynamically generate a session name, if the user wants a new\n         // session and wants to keep it open. session name will be \"pacakge.class.method\" name\n@@ -145,7 +145,7 @@ private final void setSessionName(Map\u003cString, SeLionSession\u003e sessionMap, Invoked\n \n         // catch openNewSession\u003dfalse when there are no dependent methods specified\n         if ((!this.openNewSession) \u0026\u0026 (!hasDependentMethods())) {\n-            throw new IllegalArgumentException(\"Can not have an unamed session without dependent methods and use\"\n+            throw new IllegalArgumentException(\"Can not have an unnamed session without dependent methods and use\"\n                     + \" an existing session. Error in \" + SESSION_PREFIX + this.methodName);\n         }\n \n@@ -176,7 +176,7 @@ private final void setSessionName(Map\u003cString, SeLionSession\u003e sessionMap, Invoked\n             // multiple in-flight sessions and dependent methods specified\n             // that matched...\n             if (foundSessions.size() \u003e 1) {\n-                throw new IllegalStateException(\"Ambiguos match. Found more than one session that \"\n+                throw new IllegalStateException(\"Ambiguous match. Found more than one session that \"\n                         + \"matched selection criteria \" + foundSessions.toString());\n             }\n \n@@ -204,6 +204,10 @@ public final String getBrowser() {\n         if (StringUtils.isBlank(this.browser)) {\n             this.browser \u003d Config.getConfigProperty(ConfigProperty.BROWSER);\n         }\n+        // All of our browser values need to start with the magic char \"*\"\n+        if (!StringUtils.startsWith(this.browser, \"*\")) {\n+            this.browser \u003d \"*\".concat(this.browser);\n+        }\n         logger.exiting(this.browser);\n         return this.browser;\n     }\n@@ -334,7 +338,7 @@ private void closeCurrentSessionAndRemoveFromMap(Map\u003cString, SeLionSession\u003e sess\n         try {\n             closeSession();\n         } catch (RuntimeException e) {\n-            logger.log(Level.FINER, \"An exception occured while closing the web session\", e);\n+            logger.log(Level.FINER, \"An exception occurred while closing the web session\", e);\n         }\n         logger.exiting();\n     }\n@@ -403,22 +407,17 @@ public void closeCurrentSession(Map\u003cString, SeLionSession\u003e sessionMap, InvokedMe\n             return;\n         }\n         try {\n-            // lets attempt to capture a screenshot if there was a failure.\n+            // let\u0027s attempt to capture a screenshot if there was a failure.\n             // That way a user can see the how the page looked like\n             // when a test failed.\n             if (!method.isTestResultSuccess()) {\n                 warnUserOfTestFailures(method);\n             }\n-        } catch (WebSessionException e) {\n-            logger.warning(e.getMessage() + \" gobbling the WebSessionException as it is not due to test case failure\");\n-            // do nothing\n-        } catch (UnsupportedOperationException e) {\n-            logger.warning(e.getMessage()\n-                    + \" gobbling the UnsupportedOperationException as it is not due to test case failure\");\n         } catch (Exception e) {\n-            String warning \u003d \"An exception occured after the test method invocation. \"\n+            String warning \u003d \"An exception occurred after the test method invocation. \"\n                     + \"Gobbling it as the test case itself did not fail\";\n-            logger.log(Level.WARNING, warning, e);\n+            logger.log(Level.FINEST, warning, e);\n+            // do nothing, the failure contains the details that we need displayed to the end-user\n         } finally {\n             closeCurrentSessionAndRemoveFromMap(sessionMap);\n         }"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/elements/AbstractSeLionElement.java",
          "patch": "@@ -89,7 +89,6 @@ static boolean isValid(AbstractSeLionElement[] validSet, String element) {\n             }\n         }\n         return false;\n-\n     }\n \n     /**"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/elements/HtmlSeLionElement.java",
          "patch": "@@ -44,9 +44,9 @@\n     //consider a field in the yaml file which looks like this : fxBankRadioButton\n     //if we have Button ahead of RadioButton, then our code would end up matching this above key with\n     //Button instead of matching it against RadioButton. This is the ONLY case wherein the order is very important\n-    \n-    private static HtmlSeLionElement[] values \u003d {TEXT_FIELD, TABLE, SELECT_LIST, RADIO_BUTTON,BUTTON,LINK,LABEL,IMAGE,FORM,\n-        DATE_PICKER,CHECK_BOX,CONTAINER,BASE_CLASS,PAGE_TITLE\n+\n+    private static HtmlSeLionElement[] values \u003d {TEXT_FIELD, TABLE, SELECT_LIST, RADIO_BUTTON, BUTTON, LINK, LABEL,\n+            IMAGE, FORM, DATE_PICKER, CHECK_BOX, CONTAINER, BASE_CLASS, PAGE_TITLE\n     };\n \n     @Override\n@@ -73,7 +73,7 @@ public static boolean isValid(String element) {\n \n     /**\n      * @param element - The element that needs to be tested for being a valid {@link HtmlSeLionElement} and whose\n-     * {@link HtmlSeLionElement#isHtmlElement()} returns true.\n+     * {@link HtmlSeLionElement#isUIElement()} returns true.\n      * @return - \u003ccode\u003etrue\u003c/code\u003e if there was a match and \u003ccode\u003efalse\u003c/code\u003e otherwise.\n      */\n     public static boolean isValidHtmlElement(String element) {\n@@ -117,29 +117,29 @@ public boolean looksLike(String key) {\n      *            -keys for which {@link GUIObjectDetails} is to be created.\n      * @return\n      */\n-    public static List\u003cGUIObjectDetails\u003e getGUIObjectList(List\u003cString\u003e keys){\n+    public static List\u003cGUIObjectDetails\u003e getGUIObjectList(List\u003cString\u003e keys) {\n         String DELIMITER \u003d \"#\";\n         List\u003cGUIObjectDetails\u003e htmlObjectDetailsList \u003d new ArrayList\u003cGUIObjectDetails\u003e();\n \n         for (String key : keys) {\n-               String parent \u003d null;\n-               // If the key contains a delimiter, then html object has a parent\n-               if (key.contains(DELIMITER)) {\n-                   parent \u003d key.split(DELIMITER)[0];\n-                   key \u003d key.split(DELIMITER)[1];\n-               }\n-\n-               HtmlSeLionElement element \u003d HtmlSeLionElement.findMatch(key);\n-               if (element !\u003d null \u0026\u0026 element.isUIElement()) {\n-                   GUIObjectDetails htmlObjectDetails \u003d null;\n-                   if (element.canHaveParent()) {\n-                       htmlObjectDetails \u003d new GUIObjectDetails(element.stringify(), key, parent);\n-                   } else {\n-                       htmlObjectDetails \u003d new GUIObjectDetails(element.stringify(), key);\n-                   }\n-                   htmlObjectDetailsList.add(htmlObjectDetails);\n-               }\n-           }\n+            String parent \u003d null;\n+            // If the key contains a delimiter, then html object has a parent\n+            if (key.contains(DELIMITER)) {\n+                parent \u003d key.split(DELIMITER)[0];\n+                key \u003d key.split(DELIMITER)[1];\n+            }\n+\n+            HtmlSeLionElement element \u003d HtmlSeLionElement.findMatch(key);\n+            if (element !\u003d null \u0026\u0026 element.isUIElement()) {\n+                GUIObjectDetails htmlObjectDetails \u003d null;\n+                if (element.canHaveParent()) {\n+                    htmlObjectDetails \u003d new GUIObjectDetails(element.stringify(), key, parent);\n+                } else {\n+                    htmlObjectDetails \u003d new GUIObjectDetails(element.stringify(), key);\n+                }\n+                htmlObjectDetailsList.add(htmlObjectDetails);\n+            }\n+        }\n         return htmlObjectDetailsList;\n     }\n "
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/elements/IOSSeLionElement.java",
          "patch": "@@ -93,7 +93,7 @@ public static boolean isValid(String element) {\n     /**\n      * @param element\n      *            - The element that needs to be tested for being a valid {@link IOSSeLionElement} and whose\n-     *            {@link IOSSeLionElement#isHtmlElement()} returns true.\n+     *            {@link IOSSeLionElement#isUIElement()} returns true.\n      * @return - \u003ccode\u003etrue\u003c/code\u003e if there was a match and \u003ccode\u003efalse\u003c/code\u003e otherwise.\n      */\n     public static boolean isValidUIElement(String element) {"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/plugins/CodeGenerator.java",
          "patch": "@@ -31,8 +31,7 @@\n \n /**\n  * This class houses the core logic which is responsible for transforming a yaml file that houses locators into\n- * corresponding .java files.\n- * It leverages Velocity templates under the hoods to get this done.\n+ * corresponding .java files. It leverages Velocity templates under the hoods to get this done.\n  * \n  */\n public class CodeGenerator {\n@@ -42,7 +41,7 @@\n     public CodeGenerator(String baseDirectory) {\n         this.baseDirectory \u003d baseDirectory;\n     }\n-    \n+\n     /**\n      * \n      * This method will generate .java file based on the a yaml file contents.\n@@ -56,7 +55,8 @@ public CodeGenerator(String baseDirectory) {\n      * \n      * @throws IOException\n      */\n-    public void generateNewCode(File dataFile, String filePath, String packageName, String domain) throws IOException {\n+    public void generateNewCode(File dataFile, String filePath, String packageName, String domain) throws IOException,\n+            CodeGeneratorException {\n         BufferedReader br \u003d null;\n         String newFilePath \u003d baseDirectory + filePath;\n         File newFile \u003d new File(newFilePath);\n@@ -65,18 +65,18 @@ public void generateNewCode(File dataFile, String filePath, String packageName,\n         DataReader dataReader \u003d new DataReader(dataFile.getAbsolutePath());\n         try {\n             List\u003cString\u003e keys \u003d dataReader.getKeys();\n-            \n+\n             TestPlatform currentPlatform \u003d dataReader.platform();\n-            \n+\n             String baseClass \u003d dataReader.getBaseClassName();\n-            \n+\n             String baseClassName \u003d baseClass.substring(baseClass.lastIndexOf(\".\") + 1);\n-            \n-            //Validating the keys in data file before proceeding with the code generation\n+\n+            // Validating the keys in data file before proceeding with the code generation\n             GUIObjectDetails.validateKeysInDataFile(keys, dataFile.getName(), currentPlatform);\n-            \n-            List\u003cGUIObjectDetails\u003e htmlObjectDetailsList \u003d GUIObjectDetails.transformKeys(keys,currentPlatform);\n-            \n+\n+            List\u003cGUIObjectDetails\u003e htmlObjectDetailsList \u003d GUIObjectDetails.transformKeys(keys, currentPlatform);\n+\n             Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e();\n             for (GUIObjectDetails htmlObjectDetails : htmlObjectDetailsList) {\n                 set.add(htmlObjectDetails.getMemberType());\n@@ -98,13 +98,13 @@ public void generateNewCode(File dataFile, String filePath, String packageName,\n             context.put(\"package\", packageName);\n             context.put(\"baseclasspackage\", baseClass);\n             context.put(\"domain\", domain);\n-            \n+\n             context.put(\"baseclass\", baseClassName);\n-            \n+\n             String resourceToLoad \u003d currentPlatform.getVelocityTemplateToUse();\n-            InputStream is \u003d getClass().getResourceAsStream(\"/\"+resourceToLoad);\n+            InputStream is \u003d getClass().getResourceAsStream(\"/\" + resourceToLoad);\n             br \u003d new BufferedReader(new InputStreamReader(is));\n-            \n+\n             BufferedWriter writer \u003d new BufferedWriter(new FileWriter(newFilePath + \"/\" + className + \".java\"));\n             Velocity.evaluate(context, writer, \"code generator\", br);\n             writer.flush();"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/plugins/CodeGeneratorException.java",
          "patch": "@@ -0,0 +1,32 @@\n+/*-------------------------------------------------------------------------------------------------------------------*\\\n+|  Copyright (C) 2015 eBay Software Foundation                                                                        |\n+|                                                                                                                     |\n+|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n+|  with the License.                                                                                                  |\n+|                                                                                                                     |\n+|  You may obtain a copy of the License at                                                                            |\n+|                                                                                                                     |\n+|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n+|                                                                                                                     |\n+|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n+|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n+|  the specific language governing permissions and limitations under the License.                                     |\n+\\*-------------------------------------------------------------------------------------------------------------------*/\n+\n+package com.paypal.selion.plugins;\n+\n+public class CodeGeneratorException extends RuntimeException {\n+    private static final long serialVersionUID \u003d -2887053135314509648L;\n+\n+    public CodeGeneratorException() {\n+        super();\n+    }\n+\n+    public CodeGeneratorException(String message) {\n+        super(message);\n+    }\n+\n+    public CodeGeneratorException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/plugins/CodeGeneratorMojo.java",
          "patch": "@@ -40,36 +40,36 @@\n     /**\n      * Project the plugin is called from.\n      * \n-     * @parameter expression\u003d\"${project}\"\n+     * @parameter property\u003d\"project\"\n      */\n     private MavenProject project;\n \n     /**\n      * Represents the base package used for generated java classes.\n      * \n-     * @parameter expression\u003d\"${selion-code-generator.basePackage}\" default-value\u003d\"com.paypal.selion.testcomponents\"\n+     * @parameter property\u003d\"selion-code-generator.basePackage\" default-value\u003d\"com.paypal.selion.testcomponents\"\n      */\n     private String basePackage;\n \n     /**\n      * Represents the base folder used for reading page asset files such as PageYaml.\n      * \n-     * @parameter expression\u003d\"${selion-code-generator.baseFolder}\" default-value\u003d\"GUIData\"\n+     * @parameter property\u003d\"selion-code-generator.baseFolder\" default-value\u003d\"GUIData\"\n      */\n     private String baseFolder;\n \n     /**\n      * List of \"domains\" to exclude during code generation.\n      * \n-     * @parameter expression\u003d\"${selion-code-generator.excludeDomains}\"\n+     * @parameter property\u003d\"selion-code-generator.excludeDomains\"\n      */\n     private List\u003cString\u003e excludeDomains;\n \n     /**\n      * Represents the location for the code generator plug-in to create a \u003ccode\u003eSeLionPageDetails.txt\u003c/code\u003e text file. \\\n      * This text file will contain the file path of every resource file processed.\n      * \n-     * @parameter expression\u003d\"${selion-code-generator.detailedTextOutputLocation}\" default-value\u003d\"${project.build.directory}\";\n+     * @parameter property\u003d\"selion-code-generator.detailedTextOutputLocation\" default-value\u003d\"${project.build.directory}\";\n      */\n     private File detailedTextOutputLocation;\n \n@@ -139,33 +139,31 @@ public void execute() throws MojoExecutionException {\n         createSeLionPageDetailsFile(allDataFiles);\n         CodeGenerator helper \u003d new CodeGenerator(generatedSourceDir);\n \n-        for (File eachDataFile : allDataFiles) {\n+        for (File dataFile : allDataFiles) {\n             try {\n-                String folder \u003d pathToFolder(eachDataFile);\n+                String folder \u003d pathToFolder(dataFile);\n                 String domain \u003d folder.replace(File.separator, \"/\");\n                 folder \u003d folder.replace(File.separator, \".\");\n \n                 if (excludeDomains.contains(domain)) {\n-                    logger.info(\"Excluded code generation for YAML file [\" + eachDataFile.getName()\n+                    logger.info(\"Excluded code generation for YAML file [\" + dataFile.getName()\n                             + \"] as the corresponding domain [\" + domain + \"] is available in excludeDomains list\");\n                     continue;\n                 }\n \n                 String relativePath \u003d relativePath(folder);\n \n-                File extendedFile \u003d extendedFileLoc(sourceDir, relativePath, eachDataFile);\n-                File baseFile \u003d baseFileLoc(generatedSourceDir, relativePath, eachDataFile);\n-                if (generateJavaCode(baseFile, eachDataFile, extendedFile)) {\n-\n-                    logger.info(\"Generating java file for YAML file [\" + eachDataFile.getName() + \"] in domain [\"\n+                File extendedFile \u003d extendedFileLoc(sourceDir, relativePath, dataFile);\n+                File baseFile \u003d baseFileLoc(generatedSourceDir, relativePath, dataFile);\n+                if (generateJavaCode(baseFile, dataFile, extendedFile)) {\n+                    logger.info(\"Generating java file for YAML file [\" + dataFile.getName() + \"] in domain [\"\n                             + domain + \"]\");\n                     String tempPackage \u003d basePackage + \".\" + folder;\n-                    helper.generateNewCode(eachDataFile, relativePath, tempPackage, domain);\n-\n+                    helper.generateNewCode(dataFile, relativePath, tempPackage, domain);\n                 }\n \n             } catch (Exception e) {\n-                String errorMsg \u003d \" \\n SeLion code generator failed when generating code for \" + eachDataFile.getName()\n+                String errorMsg \u003d \" \\n SeLion code generator failed when generating code for \" + dataFile.getAbsolutePath()\n                         + \"\\n\" + \"Root Cause : \\n\" + e.toString();\n                 throw new MojoExecutionException(errorMsg, e);\n             }"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/plugins/DataReader.java",
          "patch": "@@ -26,7 +26,7 @@\n import com.paypal.selion.reader.YamlReaderFactory;\n \n /**\n- * This class provides basic methods the read the data from the yaml file.\n+ * This class provides basic methods the read the data from the YAML file.\n  * \n  */\n public class DataReader {"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/plugins/GUIObjectDetails.java",
          "patch": "@@ -54,7 +54,7 @@ public String getParent() {\n     }\n     \n     //This method is used by the velocity template and has reference in Class.vm\n-    //DONOT tamper with this method\n+    //DO NOT tamper with this method\n     public String returnArg(String key) {\n         HtmlSeLionElement element \u003d HtmlSeLionElement.findMatch(key);\n         if (element \u003d\u003d null) {\n@@ -67,7 +67,7 @@ public String returnArg(String key) {\n     }\n \n     //This method is used by the velocity template and has reference in Class.vm\n-    //DONOT tamper with this method\n+    //DO NOT tamper with this method\n     public String firstToUpperCase(String str) {\n         return str.substring(0, 1).toUpperCase() + str.substring(1);\n     }\n@@ -91,7 +91,6 @@ public String firstToUpperCase(String str) {\n             htmlObjectDetailsList \u003d HtmlSeLionElement.getGUIObjectList(keys);\n             break;\n         }\n-\n         case IOS: {\n             htmlObjectDetailsList \u003d IOSSeLionElement.getGUIObjectList(keys);\n             break;\n@@ -102,14 +101,13 @@ public String firstToUpperCase(String str) {\n     \n \n     /**\n-     * A overloaded version of transformKeys method which internally specifies {@link TestPlatform.WEB} as the {@link TestPlatform}\n+     * A overloaded version of transformKeys method which internally specifies {@link TestPlatform#WEB} as the {@link TestPlatform}\n      * @param keys\n-     * \t\t\t- keys for which {@link GUIObjectDetails} is to be created.\n+     *            - keys for which {@link GUIObjectDetails} is to be created.\n      * @return\n      */\n     public static List\u003cGUIObjectDetails\u003e transformKeys(List\u003cString\u003e keys){\n-    \treturn transformKeys(keys,TestPlatform.WEB);\n-    \t\n+        return transformKeys(keys,TestPlatform.WEB);\n     }\n     \n     /**\n@@ -141,9 +139,9 @@ public static void validateKeysInDataFile(List\u003cString\u003e keysToValidate, String da\n                 /*\n                  * For Yaml V1 the non-html elements are added to the List of keys(EG: pageTitle) whereas for V2 it does\n                  * not. As a result, if a user specifies wrong name for pageTitle we first check it to be valid name and\n-                 * then proceed with the usual check of validating if its a html element TODO: This is a hack to be\n-                 * removed when V1 is fully deprecated\n+                 * then proceed with the usual check of validating if its a html element\n                  */\n+                 // TODO: This is a hack to be removed when V1 is fully deprecated.\n                 if (!(HtmlSeLionElement.isValid(currentKey))) {\n                     throw new IllegalArgumentException(String.format(\n                             \"Detected an invalid key [%s] in data file %s for Platform: WEB\", currentKey, dataFileName));"
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/reader/YamlReaderFactory.java",
          "patch": "@@ -15,11 +15,13 @@\n \n package com.paypal.selion.reader;\n \n+import com.paypal.selion.plugins.CodeGeneratorException;\n+\n import java.io.IOException;\n \n /**\n  * A Factory that is internally responsible for producing {@link AbstractYamlReader} instances which can either\n- * process Yaml v1 format (or) v2 format.\n+ * process YAML V1 format (or) V2 format.\n  * \n  */\n public final class YamlReaderFactory {\n@@ -28,13 +30,16 @@ private YamlReaderFactory() {\n     }\n \n     public static AbstractYamlReader createInstance(String fileName) throws IOException {\n-        if (! fileName.endsWith(\"yaml\")) {\n+        if (!fileName.endsWith(\"yaml\")) {\n             throw new IllegalArgumentException(\"Data file not supported : \" + fileName);\n         }\n         AbstractYamlReader provider \u003d new YamlV2Reader(fileName);\n         if (!provider.processed()) {\n             provider \u003d new YamlV1Reader(fileName);\n         }\n+        if (!provider.processed()) {\n+            throw new CodeGeneratorException(\"Error parsing document. Please check file contents for syntax errors.\");\n+        }\n         return provider;\n     }\n "
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/reader/YamlV1Reader.java",
          "patch": "@@ -36,7 +36,7 @@\n     private static final String ELEMENTS \u003d \"Elements\";\n \n     /**\n-     * This is a public constructor to create an input stream \u0026 Yaml instance for the input file.\n+     * This is a public constructor to create an input stream and YAML instance for the input file.\n      * \n      * @param fileName\n      *            the name of the YAML data file.\n@@ -50,12 +50,13 @@ public YamlV1Reader(String fileName) throws IOException {\n     }\n \n     @Override\n+    // TODO PageYAML V1 only needs to support platform \u003d \"web\". As a result, this method needs re-factoring.\n     public void processPage(FileSystemResource resource) throws IOException {\n         boolean platformDefined \u003d false;\n         String fileName \u003d resource.getFileName();\n         InputStream is \u003d resource.getInputStream();\n-        // Try to load PageYaml v1\n-        Logger.getLogger().debug(String.format(\"++ Processing %s as PageYaml V1\", fileName));\n+        // Try to load PageYAML v1\n+        Logger.getLogger().debug(String.format(\"++ Attempting to process %s as PageYAML V1\", fileName));\n \n         Iterable\u003cObject\u003e allObjects \u003d getYaml().loadAll(new BufferedReader(new InputStreamReader(is, \"UTF-8\")));\n         try {\n@@ -70,7 +71,7 @@ public void processPage(FileSystemResource resource) throws IOException {\n \n                 if (\"baseClass\".equals(map.get(KEY))) {\n                     Logger.getLogger().debug(\n-                            String.format(\"++ Retrieved [%s] as the base class in [%s] PageYaml V1.\", map.get(\"Value\"),\n+                            String.format(\"++ Retrieved [%s] as the base class in [%s] PageYAML V1.\", map.get(\"Value\"),\n                                     fileName));\n                     setBaseClassName((String) map.get(\"Value\"));\n                 }\n@@ -114,7 +115,7 @@ public void processPage(FileSystemResource resource) throws IOException {\n \n                 appendKey(key);\n \n-                // TODO: Container support for IOS element still needs to analyzed\n+                // TODO Container support for IOS element still needs to analyzed\n                 if (canHaveContainers(currentPlatform, key, map)) {\n                     @SuppressWarnings(\"unchecked\")\n                     ArrayList\u003cObject\u003e allElements \u003d (ArrayList\u003cObject\u003e) map.get(ELEMENTS);\n@@ -125,8 +126,12 @@ public void processPage(FileSystemResource resource) throws IOException {\n                     }\n                 }\n             }\n-        } catch (NullPointerException e) {// NOSONAR\n-            // Gobbling the exception but doing nothing with it.\n+            setProcessed(true);\n+        } catch (Exception e) {// NOSONAR\n+            // Just log a debug message. The input is probably not a V1 PageYAML\n+            Logger.getLogger().debug(\n+                    String.format(\"Unable to process %s as PageYAML V1.\\n\\t %s\", resource.getFileName(),\n+                            e.getLocalizedMessage()));\n         }\n     }\n     "
        },
        {
          "file_name": "codegen/src/main/java/com/paypal/selion/reader/YamlV2Reader.java",
          "patch": "@@ -30,12 +30,12 @@\n import com.paypal.selion.plugins.TestPlatform;\n \n /**\n- * Concrete Yaml reader that is capable of reading Yaml v2 format file.\n+ * Concrete YAML reader that is capable of reading YAML V2 format file.\n  */\n class YamlV2Reader extends AbstractYamlReader {\n \n     /**\n-     * This is a public constructor to create an input stream \u0026 Yaml instance for the input file.\n+     * This is a public constructor to create an input stream and YAML instance for the input file.\n      * \n      * @param fileName\n      *            the name of the YAML data file.\n@@ -53,16 +53,15 @@ public void processPage(FileSystemResource resource) throws IOException {\n             String fileName \u003d resource.getFileName();\n             Page page \u003d PageFactory.getPage(is);\n             setBaseClassName(page.getBaseClass());\n-            Logger.getLogger().debug(String.format(\"++ Processing %s as PageYaml V2\", fileName));\n-            \n-            TestPlatform currentPlatform \u003d TestPlatform.identifyPlatform(page.getPlatform());\n+            Logger.getLogger().debug(String.format(\"++ Attempting to process %s as PageYAML V2\", fileName));\n \n+            TestPlatform currentPlatform \u003d TestPlatform.identifyPlatform(page.getPlatform());\n             if (currentPlatform \u003d\u003d null) {\n                 throw new IllegalArgumentException(\"Missing or invalid platform specified in \" + fileName);\n             }\n \n             setPlatform(currentPlatform);\n-            \n+\n             for (Entry\u003cString, GUIElement\u003e eachElement : page.getElements().entrySet()) {\n                 if (!eachElement.getKey().isEmpty()) {\n \n@@ -82,11 +81,11 @@ public void processPage(FileSystemResource resource) throws IOException {\n                 }\n             }\n             setProcessed(true);\n-        } catch (Exception ex) { // NOSONAR\n-            // Just log a debug message. The input is probably not a V2 PageYaml\n+        } catch (Exception e) { // NOSONAR\n+            // Just log an debug message. The input is probably not a V2 PageYAML\n             Logger.getLogger().debug(\n-                    String.format(\"Unable to process %s as PageYaml V2.\\n\\t %s\", resource.getFileName(),\n-                            ex.getLocalizedMessage()));\n+                    String.format(\"Unable to process %s as PageYAML V2.\\n\\t %s\", resource.getFileName(),\n+                            e.getLocalizedMessage()));\n         }\n     }\n }"
        },
        {
          "file_name": "codegen/src/test/java/com/paypal/selion/plugins/DataReaderTest.java",
          "patch": "@@ -18,7 +18,6 @@\n import static org.testng.Assert.assertEquals;\n import static org.testng.Assert.assertTrue;\n \n-import java.io.IOException;\n import java.util.List;\n \n import org.apache.maven.plugin.AbstractMojo;\n@@ -28,17 +27,12 @@\n import org.testng.annotations.Test;\n \n import com.paypal.selion.elements.HtmlSeLionElement;\n-import com.paypal.selion.plugins.DataReader;\n-import com.paypal.selion.plugins.GUIObjectDetails;\n-import com.paypal.selion.plugins.Logger;\n \n public class DataReaderTest {\n     class DummyMojo extends AbstractMojo {\n-\n         @Override\n         public void execute() throws MojoExecutionException, MojoFailureException {\n         }\n-\n     }\n \n     @BeforeClass\n@@ -47,28 +41,28 @@ public void before() {\n     }\n \n     @Test\n-    public void getKeys_v1() throws IOException {\n+    public void getKeys_v1() throws Exception {\n         DataReader r \u003d new DataReader(\"src/test/resources/PayPalAbstractPage.yaml\");\n         List\u003cString\u003e keys \u003d r.getKeys();\n         assertTrue(keys.contains(\"messageBoxConfirmationLabel\"));\n     }\n \n     @Test\n-    public void getKeys_v2() throws IOException {\n+    public void getKeys_v2() throws Exception {\n         DataReader r \u003d new DataReader(\"src/test/resources/SampleV2YamlPage.yaml\");\n         List\u003cString\u003e keys \u003d r.getKeys();\n         assertTrue(keys.contains(\"requestAPICredentialsLink\"));\n     }\n \n     @Test\n-    public void getBaseClass_v2() throws IOException {\n+    public void getBaseClass_v2() throws Exception {\n         DataReader r \u003d new DataReader(\"src/test/resources/SampleV2YamlPage.yaml\");\n         String baseClass \u003d r.getBaseClassName();\n         assertEquals(baseClass, \"com.paypal.selion.testcomponents.BasicPageImpl\");\n     }\n \n     @Test\n-    public void getHtmlObjectDetails() throws IOException {\n+    public void getHtmlObjectDetails() throws Exception {\n         DataReader r \u003d new DataReader(\"src/test/resources/SampleV2YamlPage.yaml\");\n         List\u003cString\u003e keys \u003d r.getKeys();\n         List\u003cGUIObjectDetails\u003e objects \u003d GUIObjectDetails.transformKeys(keys);"
        },
        {
          "file_name": "codegen/src/test/java/com/paypal/selion/plugins/GUIObjectDetailsTest.java",
          "patch": "@@ -15,7 +15,6 @@\n \n package com.paypal.selion.plugins;\n \n-import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -27,11 +26,9 @@\n \n public class GUIObjectDetailsTest {\n     class DummyMojo extends AbstractMojo {\n-\n         @Override\n         public void execute() throws MojoExecutionException, MojoFailureException {\n         }\n-\n     }\n \n     @BeforeClass\n@@ -40,23 +37,23 @@ public void before() {\n     }\n \n     @Test\n-    public void validateWebElements() throws IOException {\n+    public void validateWebElements() throws Exception {\n         String dataFile \u003d \"src/test/resources/SampleV2YamlPage.yaml\";\n         DataReader reader \u003d new DataReader(dataFile);\n         TestPlatform currentPlatform \u003d reader.platform();\n         GUIObjectDetails.validateKeysInDataFile(reader.getKeys(), dataFile, currentPlatform);\n     }\n \n     @Test\n-    public void validateIOSElements() throws IOException {\n+    public void validateIOSElements() throws Exception {\n         String dataFile \u003d \"src/test/resources/IOSInteractionPage.yaml\";\n         DataReader reader \u003d new DataReader(dataFile);\n         TestPlatform currentPlatform \u003d reader.platform();\n         GUIObjectDetails.validateKeysInDataFile(reader.getKeys(), dataFile, currentPlatform);\n     }\n \n     @Test(expectedExceptions \u003d { IllegalArgumentException.class })\n-    public void testInvalidElement() throws IOException {\n+    public void testInvalidElement() throws Exception {\n         String dataFile \u003d \"src/test/resources/SampleV2YamlPage.yaml\";\n         DataReader reader \u003d new DataReader(dataFile);\n         // Note: forcing to load a WEaB platform YAML using IOS platform"
        },
        {
          "file_name": "codegen/src/test/java/com/paypal/selion/plugins/PlatformTest.java",
          "patch": "@@ -17,8 +17,6 @@\n \n import static org.testng.Assert.assertTrue;\n \n-import java.io.IOException;\n-\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.plugin.MojoFailureException;\n@@ -28,11 +26,9 @@\n public class PlatformTest {\n \n     class DummyMojo extends AbstractMojo {\n-\n         @Override\n         public void execute() throws MojoExecutionException, MojoFailureException {\n         }\n-\n     }\n \n     @BeforeClass\n@@ -41,28 +37,26 @@ public void before() {\n     }\n \n     @Test\n-    public void testWebPlatform() throws IOException {\n+    public void testWebPlatform() throws Exception {\n         // When no platform is specified the default should be WEB\n         TestPlatform currentPlatform \u003d getPlatformToTest(\"src/test/resources/PayPalAbstractPage.yaml\");\n         assertTrue(currentPlatform \u003d\u003d TestPlatform.WEB);\n     }\n \n     @Test\n-    public void testIOSPlatform() throws IOException {\n+    public void testIOSPlatform() throws Exception {\n         // For IOS platform, the value must be specified\n         TestPlatform currentPlatform \u003d getPlatformToTest(\"src/test/resources/IOSInteractionPage.yaml\");\n         assertTrue(currentPlatform \u003d\u003d TestPlatform.IOS);\n-\n     }\n \n-    @Test(expectedExceptions \u003d { IllegalArgumentException.class })\n-    public void testInvalidPlatform() throws IOException {\n+    @Test(expectedExceptions \u003d { CodeGeneratorException.class })\n+    public void testInvalidPlatform() throws Exception {\n         // Testing the datareader for a negative condition with a invalid platform name\n         getPlatformToTest(\"src/test/resources/InvalidBasePage.yaml\");\n-\n     }\n \n-    private TestPlatform getPlatformToTest(String resourceFile) throws IOException {\n+    private TestPlatform getPlatformToTest(String resourceFile) throws Exception {\n         DataReader reader \u003d new DataReader(resourceFile);\n         return reader.platform();\n     }"
        }
      ]
    }
  },
  {
    "name": "[flowexpr.parse.error] cannot parse the expression",
    "url": "https://github.com/typetools/checker-framework/issues/1406",
    "description": "Consider the following code:\r\n\r\n```\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport org.checkerframework.checker.nullness.qual.EnsuresNonNull;\r\nimport org.checkerframework.dataflow.qual.Pure;\r\n\r\npublic class TestENN {\r\n\r\n  public static void main(String[] args) {}\r\n\r\n  @Pure\r\n  @EnsuresNonNull(\"myMethod(#1).get(0)\")\r\n  List\u003cString\u003e myMethod(int arg) {\r\n    List\u003cString\u003e result \u003d new ArrayList\u003cString\u003e();\r\n    result.add(\"non-null value\");\r\n    return result;\r\n  }\r\n\r\n  String client(int arg) {\r\n    return myMethod(arg).get(0);\r\n  }\r\n\r\n  @Pure\r\n  @EnsuresNonNull(\"myMethod2().get(0)\")\r\n  List\u003cString\u003e myMethod2() {\r\n    List\u003cString\u003e result \u003d new ArrayList\u003cString\u003e();\r\n    result.add(\"non-null value\");\r\n    return result;\r\n  }\r\n\r\n  String client2() {\r\n    return myMethod2().get(0);\r\n  }\r\n\r\n}\r\n```\r\n\r\nType-checking it leads to failures in the flow expression parser:\r\n\r\n```\r\n$ch/bin/javac -g TestENN.java -processor nullness\r\nTestENN.java:12: error: [flowexpr.parse.error] cannot parse the expression \u0027#1).get(0: callLevel\u003d\u003d0\u0027\r\n  List\u003cString\u003e myMethod(int arg) {\r\n               ^\r\nTestENN.java:19: error: [flowexpr.parse.error] cannot parse the expression \u0027#1).get(0: callLevel\u003d\u003d0\u0027\r\n    return myMethod(arg).get(0);\r\n                   ^\r\nTestENN.java:24: error: [flowexpr.parse.error] cannot parse the expression \u0027).get(0: callLevel\u003d\u003d0\u0027\r\n  List\u003cString\u003e myMethod2() {\r\n               ^\r\nTestENN.java:31: error: [flowexpr.parse.error] cannot parse the expression \u0027).get(0: callLevel\u003d\u003d0\u0027\r\n    return myMethod2().get(0);\r\n                    ^\r\n4 errors\r\n```",
    "keywords": [
      "error]",
      "mymethod2",
      "expression",
      "import",
      "testenn",
      "parse",
      "0 ;",
      "error",
      "[flowexpr",
      "int",
      "result",
      "0",
      "calllevel\u003d\u003d0\u0027",
      "list\u003cstring\u003e",
      "java",
      "[flowexpr parse",
      "arg",
      "get",
      "mymethod",
      ";",
      "mymethod2 get",
      "get 0",
      "^",
      "return"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/typetools/checker-framework/commit/3fa3c03ed1bd53124a4389f28b7a18f56533e700",
      "files": [
        {
          "file_name": "checker/tests/lock/Issue753.java",
          "patch": "@@ -1,25 +1,127 @@\n-// @skip-test\n-\n // Test case for Issue 753:\n // https://github.com/typetools/checker-framework/issues/753\n \n import java.util.concurrent.locks.ReentrantLock;\n import org.checkerframework.checker.lock.qual.*;\n-import org.checkerframework.dataflow.qual.Pure;\n+import org.checkerframework.dataflow.qual.*;\n \n+@SuppressWarnings({\n+    \"purity\",\n+    \"contracts.precondition.not.satisfied\",\n+    \"lock.expression.possibly.not.final\"\n+}) // Only test parsing\n public class Issue753 extends ReentrantLock {\n     final Issue753 field \u003d new Issue753();\n+    final Issue753[] fields \u003d {this, field};\n+    final Issue753[][] fieldsArray \u003d {fields};\n+    final int zero \u003d 0;\n+    final int[] zeros \u003d {0};\n \n     @Pure\n     Issue753 getField(Object param) {\n         return field;\n     }\n \n+    @Pure\n+    Issue753 getField2() {\n+        return field;\n+    }\n+\n+    @Pure\n+    Issue753 getField3(String str) {\n+        return field;\n+    }\n+\n+    @Pure\n+    Issue753[] getFields() {\n+        return fields;\n+    }\n+\n+    @Pure\n+    Issue753[][] getFieldsArray() {\n+        return fieldsArray;\n+    }\n+\n+    @Pure\n+    int length(String str) {\n+        return str.length();\n+    }\n+\n+    @Pure\n+    int[] zeros() {\n+        return zeros;\n+    }\n+\n     void method() {\n         getField(field.field).field.lock();\n         method2();\n+        getField(field.field).getField(field.field).field.lock();\n+        method3();\n+        getField(field.field).getField2().field.lock();\n+        method4();\n+        getField2().getField2().field.lock();\n+        method5();\n+        getField2().getField2().lock();\n+        method6();\n+        getField(getField(getField2()).field).field.lock();\n+        method7();\n+        this.getField3(\")(in string.;))\\\")(still so.)\\\"\").field.lock();\n+        method8();\n+        this.fieldsArray[zeros()[0]][zeros()[0]].fields[zeros()[0]].lock();\n+        method9();\n+        this.fieldsArray[length(\"[\")][length(\"[\")].fields[length(\"[\")].field.lock();\n+        method10();\n+        this.fieldsArray[\"[\".length()][\"[\".length()].fields[\"[\".length()].field.lock();\n+        method11();\n+        this.getFields()[this.zero].field.lock();\n+        method12();\n+        this.getFieldsArray()[this.getField2().zero][this.zero].field.lock();\n+        method13();\n+        this.getFields()[\"][in string.;)]\\\"][still so.]\\\"\".length()].field.lock();\n+        method14();\n+        this.fields[((\"][in string.;)]\\\"][still so.]\\\"\").length())].field.lock();\n+        method15();\n     }\n \n     @Holding(\"this.getField(this.field.field).field\")\n     void method2() {}\n+\n+    @Holding(\"this.getField(this.field.field).getField(this.field.field).field\")\n+    void method3() {}\n+\n+    @Holding(\"this.getField(this.field.field).getField2().field\")\n+    void method4() {}\n+\n+    @Holding(\"this.getField2().getField2().field\")\n+    void method5() {}\n+\n+    @Holding(\"this.getField2().getField2()\")\n+    void method6() {}\n+\n+    @Holding(\"this.getField(this.getField(this.getField2()).field).field\")\n+    void method7() {}\n+\n+    @Holding(\"this.getField3(\\\")(in string.;))\\\\\\\")(still so.)\\\\\\\"\\\").field\")\n+    void method8() {}\n+\n+    @Holding(\"this.fieldsArray[zeros()[0]][zeros()[0]].fields[zeros()[0]]\")\n+    void method9() {}\n+\n+    @Holding(\"this.fieldsArray[length(\\\"[\\\")][length(\\\"[\\\")].fields[length(\\\"[\\\")].field\")\n+    void method10() {}\n+\n+    @Holding(\"this.fieldsArray[\\\"[\\\".length()][\\\"[\\\".length()].fields[\\\"[\\\".length()].field\")\n+    void method11() {}\n+\n+    @Holding(\"this.getFields()[this.zero].field\")\n+    void method12() {}\n+\n+    @Holding(\"this.getFieldsArray()[this.getField2().zero][this.zero].field\")\n+    void method13() {}\n+\n+    @Holding(\"this.getFields()[\\\"][in string.;)]\\\\\\\"][still so.]\\\\\\\"\\\".length()].field\")\n+    void method14() {}\n+\n+    @Holding(\"this.fields[((\\\"][in string.;)]\\\\\\\"][still so.]\\\\\\\"\\\").length())].field\")\n+    void method15() {}\n }"
        },
        {
          "file_name": "checker/tests/lock/LockExpressionIsFinal.java",
          "patch": "@@ -198,54 +198,49 @@ void testGuardedByExpressionIsFinal() {\n         @GuardedBy(\"c1.getFieldPure(b ? c1 : o1, c1)\")\n         Object guarded5;\n \n-        // TODO: Fix the flow expression parser so it can handle\n-        // @GuardedBy(\"c1.field.field.field.getFieldPure(c1.field, c1.getFieldDeterministic().getFieldPure(c1, c1.field)).field\") Object guarded6;\n-        // Currently it fails because the memberselect incorrectly splits the \"getFieldPure(...).field\" field access into:\n-        // \"getFieldPure(c1\"\n-        // and\n-        // \"field, c1.getFieldDeterministic().getFieldPure(c1, c1.field)).field\"\n-        // However, as soon as one fixes the flow expression parser to parse a longer expression, one must consider\n-        // whether the CFAbstractStore can (or should) store data for the resulting flow expression.\n+        @GuardedBy(\n+                \"c1.field.field.field.getFieldPure(c1.field, c1.getFieldDeterministic().getFieldPure(c1, c1.field)).field\")\n+        Object guarded6;\n \n         @GuardedBy(\"c1.field.field.field.getFieldPure2().getFieldDeterministic().field\")\n-        Object guarded6;\n+        Object guarded7;\n \n         // The following negative test cases are the same as the one above but with one modification in each.\n \n         //:: error: (lock.expression.not.final)\n         @GuardedBy(\"c1.field.field2.field.getFieldPure2().getFieldDeterministic().field\")\n-        Object guarded7;\n+        Object guarded8;\n         //:: error: (lock.expression.not.final)\n         @GuardedBy(\"c1.field.field.field.getField().getFieldDeterministic().field\")\n-        Object guarded8;\n+        Object guarded9;\n \n         // Additional test cases to test that method parameters (in this case the parameters to getFieldPure) are parsed.\n         @GuardedBy(\"c1.field.field.field.getFieldPure(c1, c1).getFieldDeterministic().field\")\n-        Object guarded9;\n-        @GuardedBy(\"c1.field.field.field.getFieldPure(c1, o1).getFieldDeterministic().field\")\n         Object guarded10;\n+        @GuardedBy(\"c1.field.field.field.getFieldPure(c1, o1).getFieldDeterministic().field\")\n+        Object guarded11;\n         //:: error: (lock.expression.not.final)\n         @GuardedBy(\"c1.field.field.field.getFieldPure(c1, o2).getFieldDeterministic().field\")\n-        Object guarded11;\n+        Object guarded12;\n \n         // Test that @GuardedBy annotations on various tree kinds inside a method are visited\n \n-        Object guarded12 \u003d (@GuardedBy(\"o1\") Object) guarded2;\n+        Object guarded13 \u003d (@GuardedBy(\"o1\") Object) guarded2;\n         //:: error: (lock.expression.not.final)\n-        Object guarded13 \u003d (@GuardedBy(\"o2\") Object) guarded3;\n+        Object guarded14 \u003d (@GuardedBy(\"o2\") Object) guarded3;\n \n-        Object guarded14[] \u003d new @GuardedBy(\"o1\") MyClass[3];\n+        Object guarded15[] \u003d new @GuardedBy(\"o1\") MyClass[3];\n         //:: error: (lock.expression.not.final)\n-        Object guarded15[] \u003d new @GuardedBy(\"o2\") MyClass[3];\n+        Object guarded16[] \u003d new @GuardedBy(\"o2\") MyClass[3];\n \n         // Tests that the location of the @GB annotation inside a VariableTree does not matter (i.e. it does not need to be the leftmost subtree).\n-        Object guarded16 @GuardedBy(\"o1\") [];\n+        Object guarded17 @GuardedBy(\"o1\") [];\n         //:: error: (lock.expression.not.final)\n-        Object guarded17 @GuardedBy(\"o2\") [];\n+        Object guarded18 @GuardedBy(\"o2\") [];\n \n-        @GuardedBy(\"o1\") Object guarded18[];\n+        @GuardedBy(\"o1\") Object guarded19[];\n         //:: error: (lock.expression.not.final)\n-        @GuardedBy(\"o2\") Object guarded19[];\n+        @GuardedBy(\"o2\") Object guarded20[];\n \n         MyParameterizedClass1\u003c@GuardedBy(\"o1\") Object\u003e m1;\n         //:: error: (lock.expression.not.final)"
        },
        {
          "file_name": "checker/tests/nullness/Issue1406.java",
          "patch": "@@ -0,0 +1,37 @@\n+// Test case for Issue 1406\n+// https://github.com/typetools/checker-framework/issues/1406\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.checkerframework.checker.nullness.qual.EnsuresNonNull;\n+import org.checkerframework.dataflow.qual.Pure;\n+\n+@SuppressWarnings({\"purity\", \"contracts.postcondition.not.satisfied\"}) // Only test parsing\n+public class Issue1406 {\n+\n+    public static void main(String[] args) {}\n+\n+    @Pure\n+    @EnsuresNonNull(\"myMethod(#1).get(0)\")\n+    List\u003cString\u003e myMethod(int arg) {\n+        List\u003cString\u003e result \u003d new ArrayList\u003cString\u003e();\n+        result.add(\"non-null value\");\n+        return result;\n+    }\n+\n+    String client(int arg) {\n+        return myMethod(arg).get(0);\n+    }\n+\n+    @Pure\n+    @EnsuresNonNull(\"myMethod2().get(0)\")\n+    List\u003cString\u003e myMethod2() {\n+        List\u003cString\u003e result \u003d new ArrayList\u003cString\u003e();\n+        result.add(\"non-null value\");\n+        return result;\n+    }\n+\n+    String client2() {\n+        return myMethod2().get(0);\n+    }\n+}"
        },
        {
          "file_name": "framework/src/org/checkerframework/framework/util/FlowExpressionParseUtil.java",
          "patch": "@@ -74,6 +74,10 @@\n     /** Regular expression for a formal parameter use. */\n     protected static final String parameterRegex \u003d \"#([1-9][0-9]*)\";\n \n+    /** Regular expression for a string literal. */\n+    // Regex can be found at, for example, http://stackoverflow.com/a/481587/173852\n+    protected static final String stringRegex \u003d \"\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"\";\n+\n     /** Unanchored; can be used to find all formal parameter uses. */\n     protected static final Pattern unanchoredParameterPattern \u003d Pattern.compile(parameterRegex);\n \n@@ -94,19 +98,12 @@ private static Pattern anchored(String regex) {\n     protected static final Pattern superPattern \u003d anchored(\"super\");\n     /** Matches an identifier */\n     protected static final Pattern identifierPattern \u003d anchored(identifierRegex);\n-    /** Matches a method call. Capturing groups 1 and 2 are the method and arguments. */\n-    protected static final Pattern methodPattern \u003d anchored(\"(\" + identifierRegex + \")\\\\((.*)\\\\)\");\n-    /** Matches an array access. Capturing groups 1 and 2 are the array and index. */\n-    protected static final Pattern arrayPattern \u003d anchored(\"(.*)\\\\[(.*)\\\\]\");\n-    /** Matches a field access. Capturing groups 1 and 2 are the object and field. */\n-    protected static final Pattern memberselect \u003d anchored(\"([^.]+)\\\\.(.+)\");\n     /** Matches integer literals */\n     protected static final Pattern intPattern \u003d anchored(\"[-+]?[0-9]+\");\n     /** Matches long literals */\n     protected static final Pattern longPattern \u003d anchored(\"[-+]?[0-9]+[Ll]\");\n     /** Matches string literals */\n-    // Regex can be found at, for example, http://stackoverflow.com/a/481587/173852\n-    protected static final Pattern stringPattern \u003d anchored(\"\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"\");\n+    protected static final Pattern stringPattern \u003d anchored(stringRegex);\n     /** Matches the null literal */\n     protected static final Pattern nullPattern \u003d anchored(\"null\");\n     /** Matches an expression contained in matching start and end parentheses */\n@@ -174,17 +171,63 @@ private static Pattern anchored(String regex) {\n     }\n \n     private static boolean isMemberSelect(String s, FlowExpressionContext context) {\n-        Matcher dotMatcher \u003d memberselect.matcher(s);\n-        return dotMatcher.matches();\n+        return parseMemberSelect(s) !\u003d null;\n+    }\n+\n+    /**\n+     * Matches a field access. First of returned pair is object and second is field.\n+     *\n+     * @param s expression string\n+     * @return pair of object and field\n+     */\n+    private static Pair\u003cString, String\u003e parseMemberSelect(String s) {\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e method \u003d parseMethod(s);\n+        if (method !\u003d null \u0026\u0026 method.second.startsWith(\".\")) {\n+            return Pair.of(\n+                    method.first.first + \"(\" + method.first.second + \")\",\n+                    method.second.substring(1));\n+        }\n+\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e array \u003d parseArray(s);\n+        if (array !\u003d null \u0026\u0026 array.second.startsWith(\".\")) {\n+            return Pair.of(\n+                    array.first.first + \"[\" + array.first.second + \"]\", array.second.substring(1));\n+        }\n+\n+        Pattern memberSelectOfStringPattern \u003d anchored(\"(\" + stringRegex + \")\" + \"\\\\.(.*)\");\n+        Matcher m \u003d memberSelectOfStringPattern.matcher(s);\n+        if (m.matches()) {\n+            return Pair.of(m.group(1), m.group(2));\n+        }\n+\n+        int nextRParenPos \u003d nextClosedParen(s, 0, \u0027(\u0027, \u0027)\u0027);\n+        if (nextRParenPos !\u003d -1) {\n+            if (nextRParenPos + 1 \u003c s.length() \u0026\u0026 s.charAt(nextRParenPos + 1) \u003d\u003d \u0027.\u0027) {\n+                String reciever \u003d s.substring(0, nextRParenPos + 1);\n+                String remaining \u003d s.substring(nextRParenPos + 2);\n+                return Pair.of(reciever, remaining);\n+            } else {\n+                return null;\n+            }\n+        }\n+\n+        int i \u003d s.indexOf(\".\");\n+        if (i \u003d\u003d -1) {\n+            return null;\n+        }\n+\n+        String reciever \u003d s.substring(0, i);\n+        String remaining \u003d s.substring(i + 1);\n+\n+        return Pair.of(reciever, remaining);\n     }\n \n     private static Receiver parseMemberSelect(\n             String s, ProcessingEnvironment env, FlowExpressionContext context, TreePath path)\n             throws FlowExpressionParseException {\n-        Matcher dotMatcher \u003d memberselect.matcher(s);\n-        if (!dotMatcher.matches()) {\n-            assert false : \"isMemberSelect must be called first\";\n-        }\n+        Pair\u003cString, String\u003e select \u003d parseMemberSelect(s);\n+        assert select !\u003d null : \"isMemberSelect must be called first\";\n+\n         Receiver receiver;\n         String memberSelected;\n \n@@ -201,8 +244,8 @@ private static Receiver parseMemberSelect(\n                         s, \"a class cannot terminate a flow expression string\");\n             }\n         } else {\n-            String receiverString \u003d dotMatcher.group(1);\n-            memberSelected \u003d dotMatcher.group(2);\n+            String receiverString \u003d select.first;\n+            memberSelected \u003d select.second;\n             receiver \u003d parseHelper(receiverString, context, path);\n         }\n \n@@ -441,23 +484,50 @@ private static Receiver parseParameter(String s, FlowExpressionContext context)\n         return context.arguments.get(idx - 1);\n     }\n \n+    /**\n+     * Parse a method call. First of returned pair is a pair of method name and arguments. Second of\n+     * returned pair is a remaining string.\n+     *\n+     * @param s expression string\n+     * @return pair of pair of method name and arguments and remaining.\n+     */\n+    private static Pair\u003cPair\u003cString, String\u003e, String\u003e parseMethod(String s) {\n+        // Parse Identifier\n+        Pattern identParser \u003d Pattern.compile(\"^(\" + identifierRegex + \").*$\");\n+        Matcher m \u003d identParser.matcher(s);\n+        if (!m.matches()) {\n+            return null;\n+        }\n+        String ident \u003d m.group(1);\n+        int i \u003d ident.length();\n+\n+        int rparenPos \u003d nextClosedParen(s, i, \u0027(\u0027, \u0027)\u0027);\n+        if (rparenPos \u003d\u003d -1) {\n+            return null;\n+        }\n+\n+        String arguments \u003d s.substring(i + 1, rparenPos);\n+        String remaining \u003d s.substring(rparenPos + 1);\n+        return Pair.of(Pair.of(ident, arguments), remaining);\n+    }\n+\n     private static boolean isMethod(String s, FlowExpressionContext contex) {\n-        Matcher methodMatcher \u003d methodPattern.matcher(s);\n-        return methodMatcher.matches();\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e result \u003d parseMethod(s);\n+        return result !\u003d null \u0026\u0026 result.second.isEmpty();\n     }\n \n     private static Receiver parseMethod(\n             String s, FlowExpressionContext context, TreePath path, ProcessingEnvironment env)\n             throws FlowExpressionParseException {\n-        Matcher methodMatcher \u003d methodPattern.matcher(s);\n-\n-        if (!methodMatcher.matches()) {\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e method \u003d parseMethod(s);\n+        if (method \u003d\u003d null) {\n             return null;\n         }\n-        String methodName \u003d methodMatcher.group(1);\n+\n+        String methodName \u003d method.first.first;\n \n         // parse parameter list\n-        String parameterList \u003d methodMatcher.group(2);\n+        String parameterList \u003d method.first.second;\n         List\u003cReceiver\u003e parameters \u003d\n                 ParameterListParser.parseParameterList(\n                         parameterList, true, context.copyAndUseOuterReceiver(), path);\n@@ -544,20 +614,85 @@ private static Receiver parseMethod(\n         }\n     }\n \n+    /**\n+     * Parse a array access. First of returned pair is a pair of an array to be accessed and an\n+     * index. Second of returned pair is a remaining string.\n+     *\n+     * @param s expression string\n+     * @return pair of pair of an array to be accessed and an index. and remaining.\n+     */\n+    private static Pair\u003cPair\u003cString, String\u003e, String\u003e parseArray(String s) {\n+        int i \u003d 0;\n+        while (i \u003c s.length() \u0026\u0026 s.charAt(i) !\u003d \u0027[\u0027) i++;\n+\n+        if (i \u003e\u003d s.length()) {\n+            return null;\n+        }\n+\n+        while (true) {\n+            int nextRBracketPos \u003d nextClosedParen(s, i, \u0027[\u0027, \u0027]\u0027);\n+            if (nextRBracketPos \u003d\u003d -1) {\n+                return null;\n+            }\n+\n+            int nextLBracketPos \u003d nextRBracketPos + 1;\n+            if (nextLBracketPos \u003c s.length() \u0026\u0026 s.charAt(nextLBracketPos) \u003d\u003d \u0027[\u0027) {\n+                i \u003d nextLBracketPos;\n+                continue;\n+            }\n+\n+            return Pair.of(\n+                    Pair.of(s.substring(0, i), s.substring(i + 1, nextRBracketPos)),\n+                    s.substring(nextLBracketPos));\n+        }\n+    }\n+\n+    private static int nextClosedParen(String s, int openPos, char open, char close) {\n+        // expect `open` at `openPos` in `s`\n+        if (s.length() \u003c\u003d openPos || s.charAt(openPos) !\u003d open) {\n+            return -1;\n+        }\n+\n+        int i \u003d openPos + 1;\n+        int depth \u003d 1;\n+        while (i \u003c s.length()) {\n+            char ch \u003d s.charAt(i++);\n+            if (ch \u003d\u003d \u0027\"\u0027) {\n+                i--;\n+                Pattern stringPattern \u003d anchored(\"(\" + stringRegex + \").*\");\n+                Matcher m \u003d stringPattern.matcher(s.substring(i));\n+                if (!m.matches()) {\n+                    break;\n+                }\n+                i +\u003d m.group(1).length();\n+            } else if (ch \u003d\u003d open) {\n+                depth++;\n+            } else if (ch \u003d\u003d close) {\n+                depth--;\n+                if (depth \u003c 0) {\n+                    break;\n+                } else if (depth \u003d\u003d 0) {\n+                    return i - 1;\n+                }\n+            }\n+        }\n+        return -1;\n+    }\n+\n     private static boolean isArray(String s, FlowExpressionContext context) {\n-        Matcher arraymatcher \u003d arrayPattern.matcher(s);\n-        return arraymatcher.matches();\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e result \u003d parseArray(s);\n+        return result !\u003d null \u0026\u0026 result.second.isEmpty();\n     }\n \n     private static Receiver parseArray(String s, FlowExpressionContext context, TreePath path)\n             throws FlowExpressionParseException {\n-        Matcher arraymatcher \u003d arrayPattern.matcher(s);\n-        if (!arraymatcher.matches()) {\n+        Pair\u003cPair\u003cString, String\u003e, String\u003e array \u003d parseArray(s);\n+        if (array \u003d\u003d null) {\n             return null;\n         }\n \n-        String receiverStr \u003d arraymatcher.group(1);\n-        String indexStr \u003d arraymatcher.group(2);\n+        String receiverStr \u003d array.first.first;\n+        String indexStr \u003d array.first.second;\n         Receiver receiver \u003d parseHelper(receiverStr, context, path);\n         FlowExpressionContext contextForIndex \u003d context.copyAndUseOuterReceiver();\n         Receiver index \u003d parseHelper(indexStr, contextForIndex, path);\n@@ -615,12 +750,12 @@ private static Receiver parseParentheses(String s, FlowExpressionContext context\n         PackageSymbol packageSymbol \u003d packageSymbolAndRemainingString.first;\n         String packageRemainingString \u003d packageSymbolAndRemainingString.second;\n \n-        Matcher dotMatcher \u003d memberselect.matcher(packageRemainingString);\n+        Pair\u003cString, String\u003e select \u003d parseMemberSelect(packageRemainingString);\n         String classNameString;\n         String remainingString;\n-        if (dotMatcher.matches()) {\n-            classNameString \u003d dotMatcher.group(1);\n-            remainingString \u003d dotMatcher.group(2);\n+        if (select !\u003d null) {\n+            classNameString \u003d select.first;\n+            remainingString \u003d select.second;\n         } else {\n             classNameString \u003d packageRemainingString;\n             remainingString \u003d null;\n@@ -668,17 +803,16 @@ private static Receiver parseParentheses(String s, FlowExpressionContext context\n     private static Pair\u003cPackageSymbol, String\u003e matchPackageNameWithinExpression(\n             String expression, Resolver resolver, TreePath path)\n             throws FlowExpressionParseException {\n-        Matcher dotMatcher \u003d memberselect.matcher(expression);\n+        Pair\u003cString, String\u003e select \u003d parseMemberSelect(expression);\n \n         // To proceed past this point, at the minimum the expression must be composed of packageName.className .\n         // Do not remove the call to matches(), otherwise the dotMatcher groups will not be filled in.\n-        if (!dotMatcher.matches()) {\n+        if (select \u003d\u003d null) {\n             return null;\n         }\n \n-        String packageName \u003d dotMatcher.group(1);\n-        String remainingString \u003d dotMatcher.group(2),\n-                remainingStringIfPackageMatched \u003d remainingString;\n+        String packageName \u003d select.first;\n+        String remainingString \u003d select.second, remainingStringIfPackageMatched \u003d remainingString;\n \n         PackageSymbol result \u003d null; // the result of this method call\n \n@@ -702,10 +836,10 @@ private static Receiver parseParentheses(String s, FlowExpressionContext context\n             }\n             result \u003d longerResult;\n             remainingString \u003d remainingStringIfPackageMatched;\n-            dotMatcher \u003d memberselect.matcher(remainingString);\n-            if (dotMatcher.matches()) {\n-                packageName +\u003d \".\" + dotMatcher.group(1);\n-                remainingStringIfPackageMatched \u003d dotMatcher.group(2);\n+            select \u003d parseMemberSelect(remainingString);\n+            if (select !\u003d null) {\n+                packageName +\u003d \".\" + select.first;\n+                remainingStringIfPackageMatched \u003d select.second;\n             } else {\n                 // There are no dots in remainingString, so we are done.\n                 // Fail if the whole string represents a package, otherwise return.\n@@ -838,6 +972,9 @@ private static Receiver parseParentheses(String s, FlowExpressionContext context\n                             }\n                         }\n                         break;\n+                    case \u0027\\\\\u0027:\n+                        idx++;\n+                        break;\n                     default:\n                         // stay in same state and consume the character\n                         break;"
        }
      ]
    }
  },
  {
    "name": "XP in testfile leads to parsing error",
    "url": "https://github.com/meysholdt/Xpect/issues/51",
    "description": "If e.g. an identifier in the DSL is TestXP, the XP leads to a parsing error. TestX_P works for example.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/meysholdt/Xpect/commit/4c2ec764860fd7e7eff12fab10564b996aa02816",
      "files": [
        {
          "file_name": "org.xpect.tests/src/org/xpect/tests/LexerTest.xtend",
          "patch": "@@ -0,0 +1,104 @@\n+package org.xpect.tests\n+\n+import java.io.FileReader\n+\n+import java.util.Map\n+import org.antlr.runtime.ANTLRStringStream\n+import org.antlr.runtime.Token\n+import org.junit.Test\n+import org.xpect.lexer.XpectRT\n+\n+import static extension com.google.common.io.CharStreams.*\n+import org.junit.Assert\n+\n+class LexerTest {\n+\n+\t@Test def testSimple() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027// XPECT_SETUP foo END_SETUP\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tRULE_ANY_OTHER \u0027/\u0027\n+\t\t\tRULE_ANY_OTHER \u0027/\u0027\n+\t\t\tRULE_ANY_OTHER \u0027 \u0027\n+\t\t\tKEYWORD \u0027XPECT_SETUP\u0027\n+\t\t\tRULE_WS \u0027 \u0027\n+\t\t\tRULE_ID \u0027foo\u0027\n+\t\t\tRULE_WS \u0027 \u0027\n+\t\t\tKEYWORD \u0027END_SETUP\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\t@Test def testX() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027X\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tRULE_ANY_OTHER \u0027X\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\t@Test def testXP() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027XP\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tRULE_ANY_OTHER \u0027X\u0027\n+\t\t\tRULE_ANY_OTHER \u0027P\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\t@Test def testXPE() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027XPE\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tRULE_ANY_OTHER \u0027X\u0027\n+\t\t\tRULE_ANY_OTHER \u0027P\u0027\n+\t\t\tRULE_ANY_OTHER \u0027E\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\t@Test def testXPEC() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027XPEC\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tRULE_ANY_OTHER \u0027X\u0027\n+\t\t\tRULE_ANY_OTHER \u0027P\u0027\n+\t\t\tRULE_ANY_OTHER \u0027E\u0027\n+\t\t\tRULE_ANY_OTHER \u0027C\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\t@Test def testXPECT() {\n+\t\tval actual \u003d lex(\u0027\u0027\u0027XPECT\u0027\u0027\u0027)\n+\t\tval expected \u003d \u0027\u0027\u0027\n+\t\t\tKEYWORD \u0027XPECT\u0027\n+\t\t\u0027\u0027\u0027\n+\t\tassertEquals(expected, actual)\n+\t}\n+\n+\tdef private String lex(CharSequence text) {\n+\t\tval names \u003d tokenNames()\n+\t\tval lexer \u003d new XpectRT(new ANTLRStringStream(text.toString))\n+\t\tval result \u003d newArrayList\n+\t\twhile (true) {\n+\t\t\tval token \u003d lexer.nextToken\n+\t\t\tif (token \u003d\u003d Token::EOF_TOKEN)\n+\t\t\t\treturn result.join(\"\\n\")\n+\t\t\tresult +\u003d (names.get(token.type) ?: token.type) + \" \u0027\" + token.text + \"\u0027\"\n+\t\t}\n+\t}\n+\n+\tdef private Map\u003cInteger, String\u003e tokenNames() {\n+\t\tval file \u003d \"../org.xpect/src-gen/org/xpect/lexer/XpectRT.tokens\"\n+\t\tval result \u003d \u003cInteger, String\u003enewLinkedHashMap\n+\t\tfor (line : new FileReader(file).readLines) {\n+\t\t\tval s \u003d line.split(\"\u003d\")\n+\t\t\tval name \u003d s.get(0)\n+\t\t\tresult.put(Integer::parseInt(s.get(1)), if(name.startsWith(\"KEYWORD\")) \"KEYWORD\" else name)\n+\t\t}\n+\t\tresult\n+\t}\n+\n+\tdef private assertEquals(CharSequence expt, CharSequence act) {\n+\t\tAssert::assertEquals(expt.toString.trim, act.toString.trim)\n+\t}\n+\n+}"
        },
        {
          "file_name": "org.xpect/META-INF/MANIFEST.MF",
          "patch": "@@ -27,6 +27,7 @@ Bundle-RequiredExecutionEnvironment: J2SE-1.5\n Export-Package: org.xpect,\r\n  org.xpect.expectation,\r\n  org.xpect.formatting,\r\n+ org.xpect.lexer;x-friends:\u003d\"org.xpect.tests\",\r\n  org.xpect.parameter,\r\n  org.xpect.parser.antlr,\r\n  org.xpect.parser.antlr.internal,\r"
        },
        {
          "file_name": "org.xpect/src/org/xpect/GenerateXpect.mwe2",
          "patch": "@@ -69,6 +69,7 @@ Workflow {\n                 \n                 fragment \u003d de.itemis.statefullexer.StatefulLexerFragment {\n                 \truntime \u003d true\n+                \tlexerBaseClass \u003d \"org.xpect.services.Lexer\"\n                 \tantlrParam \u003d \"-lib\"\n                 \tantlrParam \u003d \"${runtimeProject}/src-gen/org/xpect/parser/antlr/lexer\"\n                 }\n@@ -107,16 +108,16 @@ Workflow {\n                 // generates a more lightweight Antlr parser and lexer tailored for content assist\n                 fragment \u003d parser.antlr.ex.ca.ContentAssistParserGeneratorFragment {}\n                 \n-                fragment \u003d de.itemis.statefullexer.StatefulLexerFragment {\n-//                \tlexerGrammar \u003d \"org.xpect.ui.highlighting.CradleHighlightingLexer\" \n-                \thighlighting \u003d true\n-                \tantlrParam \u003d \"-lib\"\n-                \tantlrParam \u003d \"${runtimeProject}.ui/src-gen/org/xpect/ui/contentassist/antlr/lexer\"\n-                }\n+//                fragment \u003d de.itemis.statefullexer.StatefulLexerFragment {\n+////                \tlexerGrammar \u003d \"org.xpect.ui.highlighting.CradleHighlightingLexer\" \n+//                \thighlighting \u003d true\n+//                \tantlrParam \u003d \"-lib\"\n+//                \tantlrParam \u003d \"${runtimeProject}.ui/src-gen/org/xpect/ui/contentassist/antlr/lexer\"\n+//                }\n     \n                 \n                 fragment \u003d de.itemis.statefullexer.StatefulLexerFragment {\n-//                \tlexerGrammar \u003d \"org.xpect.ui.contentassist.XpectContentAssistLexer\" \n+//                \tlexerGrammar \u003d \"org.xpect.ui.contentassist.XpectContentAssistLexer\"\n                 \tcontentAssist \u003d true\n                 \tantlrParam \u003d \"-lib\"\n                 \tantlrParam \u003d \"${runtimeProject}.ui/src-gen/org/xpect/ui/contentassist/antlr/lexer\""
        },
        {
          "file_name": "org.xpect/src/org/xpect/services/Lexer.java",
          "patch": "@@ -0,0 +1,35 @@\n+package org.xpect.services;\n+\n+import org.antlr.runtime.CharStream;\n+import org.antlr.runtime.RecognitionException;\n+import org.antlr.runtime.RecognizerSharedState;\n+\n+public abstract class Lexer extends org.eclipse.xtext.parser.antlr.Lexer {\n+\n+\tpublic Lexer() {\n+\t\tsuper();\n+\t}\n+\n+\tpublic Lexer(CharStream input) {\n+\t\tsuper(input);\n+\t}\n+\n+\tpublic Lexer(CharStream input, RecognizerSharedState state) {\n+\t\tsuper(input, state);\n+\t}\n+\n+\tpublic boolean matches(String foo) {\n+\t\tstate.backtracking++;\n+\t\tint start \u003d input.mark();\n+\t\ttry {\n+\t\t\tmatch(foo);\n+\t\t} catch (RecognitionException re) {\n+\t\t\tSystem.err.println(\"impossible: \" + re);\n+\t\t}\n+\t\tboolean success \u003d !state.failed;\n+\t\tinput.rewind(start);\n+\t\tstate.backtracking--;\n+\t\tstate.failed \u003d false;\n+\t\treturn success;\n+\t}\n+}"
        }
      ]
    }
  },
  {
    "name": "There are parsing error on some devices and html tags are still visible in ListView.",
    "url": "https://github.com/hera91/TymyReader/issues/17",
    "description": "There are parsing error on some devices and html tags are still visible in ListView, observed on And4.2.1\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/hera91/TymyReader/commit/a1fd5ce9263debd8776cc72c1038a89959ab0930",
      "files": [
        {
          "file_name": "src/com/ph/tymyreader/TymyParser.java",
          "patch": "@@ -156,7 +156,13 @@ public DsItem getDsItem () {\n \tpublic ArrayList\u003cString\u003e getDsArray(String mainPage) {\n \t\tArrayList\u003cString\u003e ds \u003d new ArrayList\u003cString\u003e();\n \t\t\n-\t\tPattern MY_PATTERN \u003d Pattern.compile(\"\u003ca .*?page\u003ddiscussion\u0026amp;id\u003d(.*?)\u0026amp;level\u003d101\\\"\u003e(.*?)\u003c/a\u003e\");\t\t\n+\t\tPattern MY_PATTERN;\n+\t\tif (mainPage.indexOf(\"menu_item\") \u003d\u003d -1) {\n+\t\t\tMY_PATTERN \u003d Pattern.compile(\"\u003ca .*?page\u003ddiscussion\u0026amp;id\u003d(.*?)\u0026amp;level\u003d101\\\"\u003e(.*?)\u003c/a\u003e \u003cspan\");\t\t\t\n+\t\t} else {\n+\t\t\t//Complete menu version\n+\t\t\tMY_PATTERN \u003d Pattern.compile(\"\u003ca href\u003d\\\"/index.php\\\\?page\u003ddiscussion\u0026amp;id\u003d(.*?)\u0026amp;level\u003d101\\\"\u003e\u003cimg alt\u003d\\\"(.*?)\\\".*?\u003c/span\u003e\");\t\t\t\n+\t\t}\n \t\tMatcher m \u003d MY_PATTERN.matcher(mainPage);\n \t\twhile (m.find()) {\n \t\t    ds.add(m.group(1) + \":\" + m.group(2));"
        }
      ]
    }
  },
  {
    "name": "Less Parser error: \u0027not\u0027 only supported for first mixin guard condition",
    "url": "https://github.com/racodond/sonar-css-plugin/issues/32",
    "description": "Hello we encountered this failure in less parser however lessc compile this normally\r\n\r\n`// Set the background opacity with no opaque on content`\r\n`.background-opacity(@c, @alpha) when (iscolor(@c)) and not (@c\u003d~\"transparent\") {`\r\n`    background: hsla(hue(@c), saturation(@c), lightness(@c), @alpha);`\r\n`}`\r\n\r\nParse error at line 11 column 63:\r\n10: // Set the background opacity with no opaque on content\r\n11: .background-opacity(@c, @alpha) when (iscolor(@c)) and not (@c\u003d~\"transparent\") { ^ \r\n12: background: hsla(hue(@c), saturation(@c), lightness(@c), @alpha); \r\n13: }\r\n\r\nWe don\u0027t see anything wrong with it. We are using version 4.5. Can you advice?",
    "keywords": [
      "@alpha",
      "@c",
      "background"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/racodond/sonar-css-plugin/commit/67645d2942ee60882b72190b9aedb68099fafd5f",
      "files": [
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/LexicalGrammar.java",
          "patch": "@@ -320,6 +320,7 @@\n   LESS_MIXIN_CALL,\n   LESS_PARENT_SELECTOR_COMBINATOR,\n   LESS_MIXIN_GUARD,\n+  LESS_MIXIN_GUARD_CONDITION,\n   LESS_MIXIN_GUARD_WHEN,\n   LESS_MIXIN_GUARD_NOT,\n   LESS_MIXIN_GUARD_AND,"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/TreeFactory.java",
          "patch": "@@ -689,16 +689,16 @@ public LessMixinCallTree lessMixinCall(Optional\u003cSelectorCombinatorTree\u003e parentCo\n     return new LessMixinCallTreeImpl(parentCombinator.orNull(), selector, important.orNull(), semicolon.orNull());\n   }\n \n-  public LessMixinGuardTree lessMixinGuard(SyntaxToken when, Optional\u003cSyntaxToken\u003e not, SeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e conditions) {\n-    return new LessMixinGuardTreeImpl(when, not.orNull(), conditions);\n+  public LessMixinGuardTree lessMixinGuard(SyntaxToken when, SeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e conditions) {\n+    return new LessMixinGuardTreeImpl(when, conditions);\n   }\n \n-  public SeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e lessMixinGuardConditionList(ParenthesisBlockTree condition, Optional\u003cList\u003cTuple\u003cSyntaxToken, ParenthesisBlockTree\u003e\u003e\u003e subsequentConditions) {\n-    List\u003cParenthesisBlockTree\u003e conditions \u003d Lists.newArrayList(condition);\n+  public SeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e lessMixinGuardConditionList(LessMixinGuardConditionTree condition, Optional\u003cList\u003cTuple\u003cSyntaxToken, LessMixinGuardConditionTree\u003e\u003e\u003e subsequentConditions) {\n+    List\u003cLessMixinGuardConditionTree\u003e conditions \u003d Lists.newArrayList(condition);\n     List\u003cSyntaxToken\u003e separators \u003d Lists.newArrayList();\n \n     if (subsequentConditions.isPresent()) {\n-      for (Tuple\u003cSyntaxToken, ParenthesisBlockTree\u003e t : subsequentConditions.get()) {\n+      for (Tuple\u003cSyntaxToken, LessMixinGuardConditionTree\u003e t : subsequentConditions.get()) {\n         separators.add(t.first());\n         conditions.add(t.second());\n       }\n@@ -707,6 +707,10 @@ public LessMixinGuardTree lessMixinGuard(SyntaxToken when, Optional\u003cSyntaxToken\u003e\n     return new SeparatedList\u003c\u003e(conditions, separators);\n   }\n \n+  public LessMixinGuardConditionTree lessMixinGuardCondition(Optional\u003cSyntaxToken\u003e not, ParenthesisBlockTree block) {\n+    return new LessMixinGuardConditionTreeImpl(not.orNull(), block);\n+  }\n+\n   public LessMixinParametersTree lessMixinParameters(SyntaxToken openParenthesis, Optional\u003cSeparatedList\u003cLessMixinParameterTree, DelimiterTree\u003e\u003e parameters, SyntaxToken closeParenthesis) {\n     return new LessMixinParametersTreeImpl(openParenthesis, parameters.orNull(), closeParenthesis);\n   }"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/parser/less/LessGrammar.java",
          "patch": "@@ -303,20 +303,26 @@ public LessMixinGuardTree LESS_MIXIN_GUARD() {\n     return b.\u003cLessMixinGuardTree\u003enonterminal(LexicalGrammar.LESS_MIXIN_GUARD).is(\n       f.lessMixinGuard(\n         b.token(LexicalGrammar.LESS_MIXIN_GUARD_WHEN),\n-        b.optional(b.token(LexicalGrammar.LESS_MIXIN_GUARD_NOT)),\n         LESS_MIXIN_GUARD_CONDITION_LIST()));\n   }\n \n-  public SeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e LESS_MIXIN_GUARD_CONDITION_LIST() {\n-    return b.\u003cSeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e\u003enonterminal().is(\n+  public SeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e LESS_MIXIN_GUARD_CONDITION_LIST() {\n+    return b.\u003cSeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e\u003enonterminal().is(\n       f.lessMixinGuardConditionList(\n-        PARENTHESIS_BLOCK(),\n+        LESS_MIXIN_GUARD_CONDITION(),\n         b.zeroOrMore(\n           f.newTuple2(\n             b.firstOf(\n               b.token(LexicalGrammar.LESS_MIXIN_GUARD_AND),\n               b.token(LexicalGrammar.LESS_MIXIN_GUARD_OR)),\n-            PARENTHESIS_BLOCK()))));\n+            LESS_MIXIN_GUARD_CONDITION()))));\n+  }\n+\n+  public LessMixinGuardConditionTree LESS_MIXIN_GUARD_CONDITION() {\n+    return b.\u003cLessMixinGuardConditionTree\u003enonterminal(LexicalGrammar.LESS_MIXIN_GUARD_CONDITION).is(\n+      f.lessMixinGuardCondition(\n+        b.optional(b.token(LexicalGrammar.LESS_MIXIN_GUARD_NOT)),\n+        PARENTHESIS_BLOCK()));\n   }\n \n   public LessMixinParametersTree LESS_MIXIN_PARAMETERS() {"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/impl/less/LessMixinGuardConditionTreeImpl.java",
          "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * SonarQube CSS / SCSS / Less Analyzer\n+ * Copyright (C) 2013-2017 David RACODON\n+ * mailto: david.racodon@gmail.com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.css.tree.impl.less;\n+\n+import com.google.common.collect.Iterators;\n+import org.sonar.css.tree.impl.TreeImpl;\n+import org.sonar.plugins.css.api.tree.Tree;\n+import org.sonar.plugins.css.api.tree.css.ParenthesisBlockTree;\n+import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n+import org.sonar.plugins.css.api.tree.less.LessMixinGuardConditionTree;\n+import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n+\n+import javax.annotation.Nullable;\n+import java.util.Iterator;\n+\n+public class LessMixinGuardConditionTreeImpl extends TreeImpl implements LessMixinGuardConditionTree {\n+\n+  private final ParenthesisBlockTree block;\n+  private final SyntaxToken not;\n+\n+  public LessMixinGuardConditionTreeImpl(@Nullable SyntaxToken not, ParenthesisBlockTree block) {\n+    this.not \u003d not;\n+    this.block \u003d block;\n+  }\n+\n+  @Override\n+  public Kind getKind() {\n+    return Kind.LESS_MIXIN_GUARD_CONDITION;\n+  }\n+\n+  @Override\n+  public Iterator\u003cTree\u003e childrenIterator() {\n+    return Iterators.forArray(not, block);\n+  }\n+\n+  @Override\n+  public void accept(DoubleDispatchVisitor visitor) {\n+    visitor.visitLessMixinGuardCondition(this);\n+  }\n+\n+  @Override\n+  @Nullable\n+  public SyntaxToken not() {\n+    return not;\n+  }\n+\n+  @Override\n+  public ParenthesisBlockTree block() {\n+    return block;\n+  }\n+\n+}"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/css/tree/impl/less/LessMixinGuardTreeImpl.java",
          "patch": "@@ -23,25 +23,22 @@\n import org.sonar.css.tree.impl.SeparatedList;\n import org.sonar.css.tree.impl.TreeImpl;\n import org.sonar.plugins.css.api.tree.Tree;\n-import org.sonar.plugins.css.api.tree.css.ParenthesisBlockTree;\n import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n+import org.sonar.plugins.css.api.tree.less.LessMixinGuardConditionTree;\n import org.sonar.plugins.css.api.tree.less.LessMixinGuardTree;\n import org.sonar.plugins.css.api.visitors.DoubleDispatchVisitor;\n \n-import javax.annotation.Nullable;\n import java.util.Iterator;\n import java.util.List;\n import java.util.function.Function;\n \n public class LessMixinGuardTreeImpl extends TreeImpl implements LessMixinGuardTree {\n \n   private final SyntaxToken when;\n-  private final SyntaxToken not;\n-  private final SeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e conditions;\n+  private final SeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e conditions;\n \n-  public LessMixinGuardTreeImpl(SyntaxToken when, @Nullable SyntaxToken not, SeparatedList\u003cParenthesisBlockTree, SyntaxToken\u003e conditions) {\n+  public LessMixinGuardTreeImpl(SyntaxToken when, SeparatedList\u003cLessMixinGuardConditionTree, SyntaxToken\u003e conditions) {\n     this.when \u003d when;\n-    this.not \u003d not;\n     this.conditions \u003d conditions;\n   }\n \n@@ -53,7 +50,7 @@ public Kind getKind() {\n   @Override\n   public Iterator\u003cTree\u003e childrenIterator() {\n     return Iterators.concat(\n-      Iterators.forArray(when, not),\n+      Iterators.singletonIterator(when),\n       conditions.elementsAndSeparators(Function.identity(), Function.identity()));\n   }\n \n@@ -68,13 +65,7 @@ public SyntaxToken when() {\n   }\n \n   @Override\n-  @Nullable\n-  public SyntaxToken not() {\n-    return not;\n-  }\n-\n-  @Override\n-  public List\u003cParenthesisBlockTree\u003e conditions() {\n+  public List\u003cLessMixinGuardConditionTree\u003e conditions() {\n     return conditions;\n   }\n "
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/Tree.java",
          "patch": "@@ -152,6 +152,7 @@\n     LESS_PARENT_REFERENCING_SELECTOR(LessParentReferencingSelectorTree.class),\n     LESS_MIXIN_CALL(LessMixinCallTree.class),\n     LESS_MIXIN_GUARD(LessMixinGuardTree.class),\n+    LESS_MIXIN_GUARD_CONDITION(LessMixinGuardConditionTree.class),\n     LESS_MIXIN_PARAMETERS(LessMixinParametersTree.class),\n     LESS_MIXIN_PARAMETER(LessMixinParameterTree.class),\n     LESS_MIXIN_PARAMETER_DEFAULT_VALUE(LessMixinParameterDefaultValueTree.class),"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/less/LessMixinGuardConditionTree.java",
          "patch": "@@ -0,0 +1,35 @@\n+/*\n+ * SonarQube CSS / SCSS / Less Analyzer\n+ * Copyright (C) 2013-2017 David RACODON\n+ * mailto: david.racodon@gmail.com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.plugins.css.api.tree.less;\n+\n+import org.sonar.plugins.css.api.tree.Tree;\n+import org.sonar.plugins.css.api.tree.css.ParenthesisBlockTree;\n+import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n+\n+import javax.annotation.Nullable;\n+\n+public interface LessMixinGuardConditionTree extends Tree {\n+\n+  @Nullable\n+  SyntaxToken not();\n+\n+  ParenthesisBlockTree block();\n+\n+}"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/tree/less/LessMixinGuardTree.java",
          "patch": "@@ -19,20 +19,15 @@\n  */\n package org.sonar.plugins.css.api.tree.less;\n \n-import java.util.List;\n-import javax.annotation.Nullable;\n-\n-import org.sonar.plugins.css.api.tree.css.ParenthesisBlockTree;\n-import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n import org.sonar.plugins.css.api.tree.Tree;\n+import org.sonar.plugins.css.api.tree.css.SyntaxToken;\n+\n+import java.util.List;\n \n public interface LessMixinGuardTree extends Tree {\n \n   SyntaxToken when();\n \n-  @Nullable\n-  SyntaxToken not();\n-\n-  List\u003cParenthesisBlockTree\u003e conditions();\n+  List\u003cLessMixinGuardConditionTree\u003e conditions();\n \n }"
        },
        {
          "file_name": "css-frontend/src/main/java/org/sonar/plugins/css/api/visitors/DoubleDispatchVisitor.java",
          "patch": "@@ -449,6 +449,10 @@ public void visitLessMixinGuard(LessMixinGuardTree tree) {\n     scanChildren(tree);\n   }\n \n+  public void visitLessMixinGuardCondition(LessMixinGuardConditionTree tree) {\n+    scanChildren(tree);\n+  }\n+\n   public void visitLessMixinParameters(LessMixinParametersTree tree) {\n     scanChildren(tree);\n   }"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinGuardConditionTreeTest.java",
          "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * SonarQube CSS / SCSS / Less Analyzer\n+ * Copyright (C) 2013-2017 David RACODON\n+ * mailto: david.racodon@gmail.com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.css.parser.less;\n+\n+import org.junit.Test;\n+import org.sonar.css.parser.LexicalGrammar;\n+import org.sonar.plugins.css.api.tree.less.LessMixinGuardConditionTree;\n+\n+import static org.fest.assertions.Assertions.assertThat;\n+\n+public class LessMixinGuardConditionTreeTest extends LessTreeTest {\n+\n+  public LessMixinGuardConditionTreeTest() {\n+    super(LexicalGrammar.LESS_MIXIN_GUARD_CONDITION);\n+  }\n+\n+  @Test\n+  public void lessMixinGuardCondition() {\n+    LessMixinGuardConditionTree tree;\n+\n+    tree \u003d checkParsed(\"(@a \u003e 2)\");\n+    assertThat(tree.not()).isNull();\n+\n+    tree \u003d checkParsed(\" (@a \u003e 2) \");\n+    assertThat(tree.not()).isNull();\n+\n+    tree \u003d checkParsed(\"not (@a \u003e 2)\");\n+    assertThat(tree.not()).isNotNull();\n+\n+    tree \u003d checkParsed(\" not (@a \u003e 2) \");\n+    assertThat(tree.not()).isNotNull();\n+  }\n+\n+  @Test\n+  public void notLessMixinGuardCondition() {\n+    checkNotParsed(\"not\");\n+  }\n+\n+  private LessMixinGuardConditionTree checkParsed(String toParse) {\n+    LessMixinGuardConditionTree tree \u003d (LessMixinGuardConditionTree) parser().parse(toParse);\n+    assertThat(tree.block()).isNotNull();\n+    return tree;\n+  }\n+\n+}"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/LessMixinGuardTreeTest.java",
          "patch": "@@ -42,7 +42,6 @@ public void lessMixinGuard() {\n     assertThat(tree.conditions()).hasSize(1);\n \n     tree \u003d checkParsed(\" when not (@a \u003e 2) \");\n-    assertThat(tree.not()).isNotNull();\n     assertThat(tree.conditions()).hasSize(1);\n \n     tree \u003d checkParsed(\" when (@a \u003e 2), (@a \u003d \\\"blue\\\"), (@b) \");\n@@ -53,6 +52,12 @@ public void lessMixinGuard() {\n \n     tree \u003d checkParsed(\"when (@type \u003d width) and (@index \u003e 0),(@index \u003e 1)\");\n     assertThat(tree.conditions()).hasSize(3);\n+\n+    tree \u003d checkParsed(\"when (@type \u003d width) and not (@index \u003e 0),(@index \u003e 1)\");\n+    assertThat(tree.conditions()).hasSize(3);\n+\n+    tree \u003d checkParsed(\"when not (@type \u003d width) and not (@index \u003e 0),(@index \u003e 1)\");\n+    assertThat(tree.conditions()).hasSize(3);\n   }\n \n   @Test"
        },
        {
          "file_name": "css-frontend/src/test/java/org/sonar/css/parser/less/StyleSheetTreeTest.java",
          "patch": "@@ -142,6 +142,10 @@ public void stylesheet() throws Exception {\n     assertThat(tree.all()).hasSize(1);\n \n     checkParsed(\".nav-top__icons { display: inline-block; margin-left: 10px; \u0026-item { cursor: pointer; display: inline-block; padding: 10px 9px; } }\");\n+\n+    checkParsed(\".background-opacity(@c, @alpha) when (iscolor(@c)) and not (@c\u003d~\\\"transparent\\\") {\\n\" +\n+      \"background: hsla(hue(@c), saturation(@c), lightness(@c), @alpha);\\n\" +\n+      \"}\");\n   }\n \n   private StyleSheetTree checkParsed(String toParse) {"
        }
      ]
    }
  },
  {
    "name": "EGradle Editor: Parse errors not shown when no outline active",
    "url": "https://github.com/de-jcup/egradle/issues/147",
    "description": "when outline view is not visible, and editor content has got parse failures, the failures are not appearing in editor or in error view.",
    "keywords": [
      "editor",
      "not"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/de-jcup/egradle/commit/0b8432c72d39070da8e2b263c6f130be84391e3e",
      "files": [
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/GradleEditor.java",
          "patch": "@@ -91,12 +91,6 @@ public GradleEditor() {\n \t\tsetSourceViewerConfiguration(new GradleSourceViewerConfiguration(this));\n \t\tsetDocumentProvider(new GradleDocumentProvider());\n \n-\t\t/*\n-\t\t * TODO ATR, 25.11.2016 - even when same content provider, the model\n-\t\t * itself will always be new created by outlines. Is this really\n-\t\t * necessary are should we have reuse of model and a dedicated trigger\n-\t\t * to rebuild model ?!\n-\t\t */\n \t\tcontentProvider \u003d new GradleEditorOutlineContentProvider(this);\n \t\toutlinePage \u003d new GradleEditorContentOutlinePage(this);\n \t\tdocumentListener \u003d new DelayedDocumentListener();\n@@ -122,8 +116,10 @@ public void createPartControl(Composite parent) {\n \t\t}\n \n \t\tactivateGradleEditorContext();\n-\n+\t\t\n+\t\tcontentProvider.clearModelCache();\n \t}\n+\t\n \n \t@Override\n \tpublic void dispose() {\n@@ -269,7 +265,7 @@ protected void doSetInput(IEditorInput input) throws CoreException {\n \t\toutlinePage.inputChanged(document);\n \t}\n \n-\tprotected IDocument getDocument() {\n+\tpublic IDocument getDocument() {\n \t\treturn getDocumentProvider().getDocument(getEditorInput());\n \t}\n "
        },
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/GradleEditorHover.java",
          "patch": "@@ -31,7 +31,6 @@ public String getHoverInfo(ITextViewer textViewer, IRegion hoverRegion) {\n \n \t@Override\n \tpublic IRegion getHoverRegion(ITextViewer textViewer, int offset) {\n-\t\t// TODO Auto-generated method stub\n \t\treturn null;\n \t}\n "
        },
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/GradleFileHyperlinkDetector.java",
          "patch": "@@ -36,8 +36,7 @@\n import de.jcup.egradle.core.api.GradleStringTransformer;\n import de.jcup.egradle.eclipse.api.EclipseResourceHelper;\n \n-/* FIXME ATR: implement correct!*/\n-/* FIXME ATR: The xml definition in plugin.xml makes no sense, because Source config returns fixed array of hyperlink detectors and this one was added extra to work!*/\n+/* TODO ATR: The xml definition in plugin.xml makes no sense, because Source config returns fixed array of hyperlink detectors and this one was added extra to work!*/\n public class GradleFileHyperlinkDetector extends AbstractHyperlinkDetector {\n \tprivate GradleStringTransformer transformer;\n \tprivate File editorFile;"
        },
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/outline/GradleEditorContentOutlinePage.java",
          "patch": "@@ -155,6 +155,9 @@ public void selectionChanged(SelectionChangedEvent event) {\n \n \tpublic void inputChanged(Object input){\n \t\tthis.input\u003dinput;\n+\t\tif (contentProvider instanceof GradleEditorOutlineContentProvider){\n+\t\t\t((GradleEditorOutlineContentProvider)contentProvider).clearModelCache();\n+\t\t}\n \t\tTreeViewer treeViewer \u003d getTreeViewer();\n \t\tif (treeViewer\u003d\u003dnull){\n \t\t\treturn;\n@@ -174,6 +177,7 @@ public void run() {\n \t\t\tif (contentProvider instanceof GradleEditorOutlineContentProvider){\n \t\t\t\tGradleEditorOutlineContentProvider gcp \u003d (GradleEditorOutlineContentProvider) contentProvider;\n \t\t\t\tgcp.setModelType(changeTo());\n+\t\t\t\tgcp.clearModelCache();\n \t\t\t\tgetTreeViewer().refresh();\n \t\t\t}\n \t\t}\n@@ -234,10 +238,6 @@ private ToggleLinkingAction() {\n \t\tpublic void run() {\n \t\t\tlinkingWithEditorEnabled \u003d !linkingWithEditorEnabled;\n \t\t\t\n-\t\t\t/*\n-\t\t\t * TODO ATR, 10.11.2016: what about updating - when now linked the\n-\t\t\t * outline view selection should be updated...\n-\t\t\t */\n \t\t\tinitText();\n \t\t\tinitImage();\n \t\t}"
        },
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/outline/GradleEditorOutlineContentProvider.java",
          "patch": "@@ -81,7 +81,19 @@ public ModelType getModelType() {\n \tpublic void setModelType(ModelType modelType) {\n \t\tthis.modelType \u003d modelType;\n \t}\n+\t\n+\t/**\n+\t * Clears model cache, so a model rebuild is tried\n+\t */\n+\tpublic void clearModelCache(){\n+\t\tuseCachedModel\u003dfalse;\n+\t\tif (gradleEditor!\u003dnull){\n+\t\t\tgetElements(gradleEditor.getDocument());\n+\t\t}\n+\t}\n \n+\tprivate boolean useCachedModel;\n+\t\n \t@Override\n \tpublic Object[] getElements(Object inputElement) {\n \t\tString dataAsString \u003d null;\n@@ -91,6 +103,10 @@ public void setModelType(ModelType modelType) {\n \t\t\tif (gradleEditor\u003d\u003dnull){\n \t\t\t\treturn NO_OBJECTS;\n \t\t\t}\n+\t\t\tif (useCachedModel \u0026\u0026 model!\u003dnull){\n+\t\t\t\treturn getRootChildren();\n+\t\t\t}\n+\t\t\tuseCachedModel\u003dtrue;\n \t\t\tIDocument document \u003d (IDocument) inputElement;\n \t\t\tdataAsString \u003d document.get();\n "
        },
        {
          "file_name": "egradle-plugin-gradle-editor/src/main/java-eclipse/de/jcup/egradle/eclipse/gradleeditor/outline/QuickOutlineDialog.java",
          "patch": "@@ -322,6 +322,11 @@ public void keyPressed(KeyEvent event) {\n \t\t\tif (treeViewer \u003d\u003d null) {\n \t\t\t\treturn;\n \t\t\t}\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t@Override\n+\t\tpublic void keyReleased(KeyEvent e) {\n \t\t\tString filterText \u003d text.getText();\n \t\t\tif (filterText !\u003d null) {\n \t\t\t\tif (filterText.equals(currentUsedFilterText)) {\n@@ -368,8 +373,6 @@ public IStatus runInUIThread(IProgressMonitor monitor) {\n \t\t}\n \n \t\tprotected void selectFirstMaching() {\n-\t\t\t// /* select the first part where the matcher matches - so return\n-\t\t\t// will use this*/\n \t\t\tselectfirstMatching(getTreeContentProvider().getElements(null));\n \t\t}\n \n@@ -382,7 +385,6 @@ private boolean selectfirstMatching(Object[] elements) {\n \t\t\t\tif (Boolean.TRUE.equals(textFilter.isMatching(element))) {\n \t\t\t\t\tStructuredSelection selection \u003d new StructuredSelection(element);\n \t\t\t\t\ttreeViewer.setSelection(selection, true);\n-\t\t\t\t\tSystem.out.println(\"selection done:\" + element);\n \t\t\t\t\treturn true;\n \t\t\t\t}\n \t\t\t\tITreeContentProvider contentProvider \u003d getTreeContentProvider();\n@@ -410,7 +412,7 @@ public boolean matches(String itemText) {\n \t\t\t}\n \n \t\t\tif (filterPattern \u003d\u003d null) {\n-\t\t\t\t/* simple fall back ... */\n+\t\t\t\t/* fall back ... */\n \t\t\t\tString filterText \u003d text.getText();\n \t\t\t\tif (filterText \u003d\u003d null) {\n \t\t\t\t\treturn true;"
        },
        {
          "file_name": "egradle-plugin-junit-contribution/src/main/java/de/jcup/egradle/junit/JUnitResultFilesFinder.java",
          "patch": "@@ -70,7 +70,6 @@ public boolean accept(File file) {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t\tif (file.isDirectory()){\n-\t\t\t\t/* TODO Albert, 20.09.2016 - Directory performance filtering could be improved - the ... name.equals looks ugly */\n \t\t\t\t/* optimize performance*/\n \t\t\t\tif (name.equals(\"src\")){ // we ignore all content in src\n \t\t\t\t\treturn false;"
        },
        {
          "file_name": "egradle-plugin-main/src/main/java/de/jcup/egradle/core/api/Matcher.java",
          "patch": "@@ -2,6 +2,11 @@\n \n public interface Matcher\u003cT\u003e {\n \n+\t/**\n+\t * Returns true when matcher matches\n+\t * @param toMatch\n+\t * @return \u003ccode\u003etrue\u003c/code\u003e when matching\n+\t */\n \tpublic boolean matches(T toMatch) ;\n \n }"
        }
      ]
    }
  },
  {
    "name": "Should not show error message for failing to parse VERSION_CODE",
    "url": "https://github.com/couchbase/couchbase-lite-java-core/issues/434",
    "description": "https://forums.couchbase.com/t/couchbase-lite-framework-version/2944\n\nCustomer see error message: \n`02-13 17:32:55.450 1620-1620/couchbase.examples.com.couchbasemobile E/CBLite﹕ Cannot parse version code:`\n\nCurrent code: We display error message if failed to parse VERSION_CODE\n\n```\nprivate static final String VERSION_CODE\u003d\"${VERSION_CODE}\";  // replaced during build process\n...\n...\ntry {\n   Integer.parseInt(VERSION_CODE);\n} catch (NumberFormatException e) {\n   Log.e(Log.TAG, \"Cannot parse version code: %s\", VERSION_CODE);\n}\n```\n\nAccording to build engineer:\nVERSION_CODE is not set for release build\n\nCode changes following way:\nIn case VERSION_CODE is null or empty, set 0.\nAlso, if failed to parse VERSION_CODE, set 0\n",
    "keywords": [
      "code",
      "set",
      "build",
      "version_code",
      "parse",
      ";",
      "error",
      "message"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/couchbase/couchbase-lite-java-core/commit/c85296faf163f053b0ad31519c2340ec93565edd",
      "files": [
        {
          "file_name": "src/main/java/com/couchbase/lite/support/Version.java",
          "patch": "@@ -3,15 +3,14 @@\n import com.couchbase.lite.util.Log;\n \n public class Version {\n-\n     public static final String VERSION;\n \n     private static final String VERSION_NAME\u003d\"${VERSION_NAME}\";  // replaced during build process\n     private static final String VERSION_CODE\u003d\"${VERSION_CODE}\";  // replaced during build process\n \n     static {\n-        int versCode\u003dgetVersionCode();\n-        if (versCode\u003d\u003d-1) {\n+        int versCode \u003d getVersionCode();\n+        if (versCode \u003d\u003d -1) {\n             VERSION \u003d String.format(\"%s-%s\", getVersionName(), getVersionCode());\n         } else{\n             VERSION \u003d String.format(\"%s\", getVersionName());\n@@ -29,18 +28,22 @@ public static int getVersionCode() {\n         if (VERSION_CODE \u003d\u003d \"${VERSION_CODE}\") {\n             return 0;\n         }\n+\n+        // VERSION_CODE should be empty string if it is release build\n+        if(VERSION_CODE \u003d\u003d null || VERSION_CODE.isEmpty()) {\n+            return 0;\n+        }\n+\n         try {\n             Integer.parseInt(VERSION_CODE);\n         } catch (NumberFormatException e) {\n-            Log.e(Log.TAG, \"Cannot parse version code: %s\", VERSION_CODE);\n+            Log.w(Log.TAG, \"Cannot parse version code: %s\", VERSION_CODE);\n+            return 0;\n         }\n         return -1;\n     }\n \n-\n     public static String getVersion() {\n-        return String.format(\"%s-%s\", getVersionName(), getVersionCode());\n+        return VERSION;\n     }\n-\n-\n }"
        }
      ]
    }
  },
  {
    "name": "Large numbers in game title result in parsing error",
    "url": "https://github.com/FAForever/downlords-faf-client/issues/339",
    "description": "```\njava.lang.NumberFormatException: For input string: \"14000000000000000\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_101]\n    at java.lang.Integer.parseInt(Integer.java:583) ~[na:1.8.0_101]\n    at java.lang.Integer.parseInt(Integer.java:615) ~[na:1.8.0_101]\n    at com.faforever.client.game.GameInfoBean.parseRating(GameInfoBean.java:149) ~[main/:na]\n    at com.faforever.client.game.GameInfoBean.updateFromGameInfo(GameInfoBean.java:126) ~[main/:na]\n    at com.faforever.client.game.GameInfoBean.\u003cinit\u003e(GameInfoBean.java:58) ~[main/:na]\n    at com.faforever.client.game.GameServiceImpl.onGameInfo(GameServiceImpl.java:491) ~[main/:na]\n    at java.util.ArrayList.forEach(ArrayList.java:1249) ~[na:1.8.0_101]\n    at com.faforever.client.game.GameServiceImpl.onGameInfo(GameServiceImpl.java:480) ~[main/:na]\n    at com.faforever.client.remote.FafServerAccessorImpl.lambda$parseServerObject$0(FafServerAccessorImpl.java:372) ~[main/:na]\n    at java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_101]\n    at com.faforever.client.remote.FafServerAccessorImpl.parseServerObject(FafServerAccessorImpl.java:372) ~[main/:na]\n    at com.faforever.client.remote.FafServerAccessorImpl.onServerMessage(FafServerAccessorImpl.java:349) ~[main/:na]\n    at com.faforever.client.remote.AbstractServerAccessor.blockingReadServer(AbstractServerAccessor.java:44) ~[main/:na]\n    at com.faforever.client.remote.FafServerAccessorImpl$1.call(FafServerAccessorImpl.java:201) [main/:na]\n    at com.faforever.client.remote.FafServerAccessorImpl$1.call(FafServerAccessorImpl.java:177) [main/:na]\n    at javafx.concurrent.Task$TaskCallable.call(Task.java:1423) [jfxrt.jar:na]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]\n    at javafx.concurrent.Service.lambda$null$492(Service.java:725) [jfxrt.jar:na]\n    at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_101]\n    at javafx.concurrent.Service.lambda$executeTask$493(Service.java:724) [jfxrt.jar:na]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_101]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_101]\n    at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]\n```\n",
    "keywords": [
      "com",
      "threadpoolexecutor",
      "8 0_101]",
      "game",
      "concurrent",
      "run",
      "integer",
      "game gameinfobean",
      "remote",
      "[jfxrt",
      "numberformatexception",
      "remote fafserveraccessorimpl",
      "java",
      "jar:na]",
      "gameinfobean",
      "client",
      "javafx",
      "lang",
      "faforever client",
      "~[main/:na]",
      "0_101]",
      "gameserviceimpl",
      "call",
      "util",
      "service",
      "fafserveraccessorimpl",
      "8",
      "faforever",
      "~[na:1"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/FAForever/downlords-faf-client/commit/99edb8ff2e2e51cb688c5b3212fea9a44ad25365",
      "files": [
        {
          "file_name": "src/main/java/com/faforever/client/game/GameInfoBean.java",
          "patch": "@@ -28,7 +28,6 @@\n   private static final Pattern MAX_RATING_PATTERN \u003d Pattern.compile(\"\u003c\\\\s*(\" + RATING_NUMBER + \")\");\n   private static final Pattern ABOUT_RATING_PATTERN \u003d Pattern.compile(\"~\\\\s*(\" + RATING_NUMBER + \")\");\n   private static final Pattern BETWEEN_RATING_PATTERN \u003d Pattern.compile(\"(\" + RATING_NUMBER + \")\\\\s*-\\\\s*(\" + RATING_NUMBER + \")\");\n-  private static final Pattern INTEGER_PATTERN_MATCHER \u003d Pattern.compile(\"\\\\d+\");\n \n   private final StringProperty host;\n   private final StringProperty title;\n@@ -144,10 +143,9 @@ public void updateFromGameInfo(GameInfoMessage gameInfoMessage) {\n   }\n \n   private int parseRating(String string) {\n-    Matcher matcher \u003d INTEGER_PATTERN_MATCHER.matcher(string);\n-    if (matcher.matches()) {\n+    try {\n       return Integer.parseInt(string);\n-    } else {\n+    } catch (NumberFormatException e) {\n       int rating;\n       String[] split \u003d string.replace(\"k\", \"\").split(\"\\\\.\");\n       rating \u003d Integer.parseInt(split[0]) * 1000;"
        }
      ]
    }
  },
  {
    "name": "Error when using Parse Tree View",
    "url": "https://github.com/antlr4ide/antlr4ide/issues/54",
    "description": "When I try to use the parse tree view: \n\nerror(7):  cannot find or open file: D:\\prog\\eclispe_workspace\\Prophecy\\src\\com heprophet31337\\prophecy\\parser\\antlrparser\\Prophecy.g4\nException in thread \"Thread-0\" java.lang.NullPointerException\n    at org.antlr.v4.Tool.createGrammar(Tool.java:553)\n    at org.antlr.v4.Tool.loadGrammar(Tool.java:585)\n    at com.github.jknack.antlr4ide.runtime.ParseTreeCommand.run(ParseTreeCommand.java:47)\n    at com.github.jknack.antlr4ide.runtime.Antlr4Server.run(Antlr4Server.java:54)\n\nThe path is missing a \"\\t\" where the space is.\nIt is supposed to be \"D:\\prog\\eclispe_workspace\\Prophecy\\src\\com\\theprophet31337\\prophecy\\parser\\antlrparser\\Prophecy.g4\"\n\ncould it be because the path is too long?\n\nEDIT: or maybe because the path seperators are not escaped and the \"\\t\" was considered as a tab instead of \\t.\n",
    "keywords": [
      "path",
      "\\t",
      "tool"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/antlr4ide/antlr4ide/commit/d81424dd343be465e569e1aa7463bce2e1821f20",
      "files": [
        {
          "file_name": "antlr4ide.core/src/main/java/com/github/jknack/antlr4ide/Activator.xtend",
          "patch": "@@ -22,28 +22,19 @@ class Activator extends Plugin {\n     super.start(context)\n \n     val bundle \u003d context.bundle\n-    // setup antlr4ide runtime.\n-    val rjar \u003d \"antlr4ide.runtime-\" + bundle.headers.get(\"Bundle-Version\")\n-      .replace(\".qualifier\", \"-SNAPSHOT\").replaceAll(\"\\\\.\\\\d{12}\", \"-SNAPSHOT\") + \".jar\";\n-\n-    System.setProperty(\"antlr4ide.runtime.jar\",\n-      new File(System.getProperty(\"java.io.tmpdir\"), rjar).absolutePath\n-    );\n \n     val jars \u003d #[\n       new File(Distributions.defaultDistribution.value),\n       ToolOptionsProvider.RUNTIME_JAR\n     ]\n \n     jars.forEach[\n-      if (!it.exists) {\n-        val fname \u003d \"lib/\" + it.name\n-        val toolUrl \u003d bundle.getResource(fname)\n-        if (toolUrl \u003d\u003d null) {\n-          throw new FileNotFoundException(fname)\n-        }\n-        copy(toolUrl.openStream, new BufferedOutputStream(new FileOutputStream(it)))\n+      val fname \u003d \"lib/\" + it.name\n+      val toolUrl \u003d bundle.getResource(fname)\n+      if (toolUrl \u003d\u003d null) {\n+        throw new FileNotFoundException(fname)\n       }\n+      copy(toolUrl.openStream, new BufferedOutputStream(new FileOutputStream(it)))\n     ]\n   }\n "
        },
        {
          "file_name": "antlr4ide.core/src/main/java/com/github/jknack/antlr4ide/parsetree/ParseTreeGenerator.xtend",
          "patch": "@@ -162,12 +162,16 @@ class ParseTreeGenerator {\n     val process \u003d entry.value\n \n     val escape \u003d [ String string |\n-      return string.replace(\" \", \"\\u00B7\").replace(\"\\t\", \"\\\\t\").replace(\"\\r\", \"\\\\r\").replace(\"\\n\", \"\\\\n\")\n+      return string\n+          .replace(\"\\r\", \"___creturn__\")\n+          .replace(\"\\n\", \"___nline__\")\n     ]\n \n     connect(process, port) [ socket, out, in |\n-      out.println(\n-        \"parsetree \" + escape.apply(file.location.toOSString) + \" \" + rule.name + \" \" + escape.apply(input))\n+      out.println(\"parsetree\")\n+      out.println(file.location.toOSString)\n+      out.println(rule.name)\n+      out.println(escape.apply(input))\n       var line \u003d \"\"\n       var sexpression \u003d \"( )\"\n       while ((line \u003d in.readLine) !\u003d null) {"
        },
        {
          "file_name": "antlr4ide.runtime/pom.xml",
          "patch": "@@ -23,11 +23,8 @@\n             \u003cphase\u003epackage\u003c/phase\u003e\n             \u003cconfiguration\u003e\n               \u003ctarget\u003e\n-                \u003cdelete failonerror\u003d\"false\"\u003e\n-                  \u003cfileset dir\u003d\"../antlr4ide.core/lib\" includes\u003d\"${project.artifactId}-*.jar\" /\u003e\n-                \u003c/delete\u003e\n                 \u003ccopy file\u003d\"target/${project.artifactId}-${project.version}.jar\"\n-                    tofile\u003d\"../antlr4ide.core/lib/${project.artifactId}-${project.version}.jar\" /\u003e\n+                    tofile\u003d\"../antlr4ide.core/lib/${project.artifactId}.jar\" /\u003e\n               \u003c/target\u003e\n             \u003c/configuration\u003e\n             \u003cgoals\u003e"
        },
        {
          "file_name": "antlr4ide.runtime/src/main/java/com/github/jknack/antlr4ide/runtime/Antlr4Server.java",
          "patch": "@@ -48,13 +48,15 @@ public void run() {\n       PrintWriter out \u003d new PrintWriter(clientSocket.getOutputStream(), true);\n       BufferedReader in \u003d new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\n \n-      String line \u003d in.readLine();\n-      String[] command \u003d line.split(\" \");\n-      if (\"parsetree\".equals(command[0])) {\n-        String sexpression \u003d new ParseTreeCommand(out).run(unespace(command[1]), command[2], unespace(command[3]));\n+      String command \u003d in.readLine();\n+      if (\"parsetree\".equals(command)) {\n+        String file \u003d in.readLine();\n+        String startRule \u003d in.readLine();\n+        String input \u003d unescape(in.readLine());\n+        String sexpression \u003d new ParseTreeCommand(out).run(file, startRule, input);\n         out.println(sexpression);\n       } else {\n-        System.err.println(\"error: unknown command \" + command[0]);\n+        System.err.println(\"error: unknown command \" + command);\n       }\n \n       out.close();\n@@ -66,8 +68,9 @@ public void run() {\n     }\n   }\n \n-  private String unespace(final String string) {\n-    return string.replace(\"\\u00B7\", \" \").replace(\"\\\\t\", \"\\t\").replace(\"\\\\r\", \"\\r\")\n-        .replace(\"\\\\n\", \"\\n\");\n+  private String unescape(final String string) {\n+    return string\n+        .replace(\"___creturn__\", \"\\r\")\n+        .replace(\"___nline__\", \"\\n\");\n   }\n }"
        },
        {
          "file_name": "antlr4ide.tests/src/main/java/com/github/jknack/antlr4ide/ActivatorTest.java",
          "patch": "@@ -7,9 +7,7 @@\n import static org.junit.Assert.assertTrue;\n \n import java.io.File;\n-import java.io.FilenameFilter;\n import java.net.MalformedURLException;\n-import java.util.Dictionary;\n \n import org.eclipse.core.runtime.Path;\n import org.junit.Test;\n@@ -24,21 +22,14 @@\n   @Test\n   public void start() throws MalformedURLException {\n     String path \u003d \"lib/\" + ToolOptionsProvider.DEFAULT_TOOL;\n-    String version \u003d version(Path.fromOSString(\"..\").append(\"antlr4ide.core\").append(\"lib\")\n-        .toFile());\n-    String runtime \u003d \"lib/antlr4ide.runtime-\" + version + \".jar\";\n+    String runtime \u003d \"lib/antlr4ide.runtime.jar\";\n     File[] jars \u003d {new File(Distributions.defaultDistribution().getValue()),\n-        new File(System.getProperty(\"java.io.tmpdir\"), \"antlr4ide.runtime-\" + version + \".jar\") };\n+        new File(System.getProperty(\"java.io.tmpdir\"), \"antlr4ide.runtime.jar\") };\n     for (File jar : jars) {\n       jar.delete();\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    Dictionary\u003cString, String\u003e headers \u003d createMock(Dictionary.class);\n-    expect(headers.get(\"Bundle-Version\")).andReturn(version);\n-\n     Bundle bundle \u003d createMock(Bundle.class);\n-    expect(bundle.getHeaders()).andReturn(headers);\n \n     BundleContext context \u003d createMock(BundleContext.class);\n     expect(context.getBundle()).andReturn(bundle).times(2);\n@@ -52,32 +43,21 @@ public void start() throws MalformedURLException {\n \n     expect(bundle.getResource(runtime)).andReturn(\n         Path.fromOSString(\"..\").append(\"antlr4ide.core\").append(\"lib\")\n-            .append(\"antlr4ide.runtime-\" + version + \".jar\").\n+            .append(\"antlr4ide.runtime.jar\").\n             toFile().toURI().toURL());\n \n-    Object[] mocks \u003d {context, bundle, headers };\n+    Object[] mocks \u003d {context, bundle };\n \n     replay(mocks);\n \n     new Activator().start(context);\n \n     // must be created again\n     for (File jar : jars) {\n-      System.out.println(jar );\n       assertTrue(jar.exists());\n     }\n \n     verify(mocks);\n   }\n \n-  private String version(final File lib) {\n-    String name \u003d lib.list(new FilenameFilter() {\n-      @Override\n-      public boolean accept(final File dir, final String name) {\n-        return name.startsWith(\"antlr4ide.runtime\");\n-      }\n-    })[0];\n-    return name.substring(name.indexOf(\"-\") + 1).replace(\".jar\", \"\");\n-  }\n-\n }"
        },
        {
          "file_name": "antlr4ide.tests/src/main/java/com/github/jknack/antlr4ide/parsetree/ParseTreeGeneratorTest.java",
          "patch": "@@ -72,7 +72,7 @@ public void build() throws Exception {\n     expect(options.getAntlrTool()).andReturn(toolPath);\n     expect(options.vmArguments()).andReturn(vmArgs);\n \n-    IPath location \u003d Path.fromPortableString(\"/home/edgar/ws/project/G4.g4\");\n+    IPath location \u003d Path.fromPortableString(\"/home/edgar/ws space/project/G4.g4\");\n \n     IWorkspaceRoot workspaceRoot \u003d createMock(IWorkspaceRoot.class);\n     IFile file \u003d createMock(IFile.class);\n@@ -116,7 +116,10 @@ public void build() throws Exception {\n     OutputStream out \u003d createMock(OutputStream.class);\n \n     PrintWriter writer \u003d PowerMock.createMockAndExpectNew(PrintWriter.class, out, true);\n-    writer.println(\"parsetree /home/edgar/ws/project/G4.g4 rule 3+4*5\");\n+    writer.println(\"parsetree\");\n+    writer.println(\"/home/edgar/ws space/project/G4.g4\");\n+    writer.println(\"rule\");\n+    writer.println(\"3+4*5\");\n     writer.close();\n \n     InputStream in \u003d createMock(InputStream.class);"
        }
      ]
    }
  },
  {
    "name": "Fix error message in 0.0.7 for partial parser",
    "url": "https://github.com/agentgt/jirm/issues/25",
    "description": "Unnecessary wrapped exceptions and incorrect message format:\n\n```\ncom.google.common.util.concurrent.UncheckedExecutionException: co.jirm.core.JirmIllegalStateException: For path: \u0027/com/snaphop/recruiting/service/select-immutable-recruiting.sql\u0027, Looks like a bad --0 at line: {}\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2234)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3965)\n    at com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4764)\n    at co.jirm.core.sql.SqlPartialParser.parseFromPath(SqlPartialParser.java:442)\n    at co.jirm.core.sql.SqlPartialParser.parseFromPath(SqlPartialParser.java:463)\n    at co.jirm.core.sql.MutableParameterizedSql.useResource(MutableParameterizedSql.java:47)\n    at co.jirm.orm.builder.select.SelectRootClauseBuilder.sqlFromResource(SelectRootClauseBuilder.java:84)\n    at co.jirm.orm.builder.select.SelectBuilderFactory.sqlFromResource(SelectBuilderFactory.java:120)\n    at com.snaphop.recruiting.service.RecruitingService.countRecruitingsForSite_aroundBody8(RecruitingService.java:74)\n    at com.snaphop.recruiting.service.RecruitingService$AjcClosure9.run(RecruitingService.java:1)\n    at com.snaphop.aop.AlertTimerAdvice.ajc$around$com_snaphop_aop_AlertTimerAdvice$1$5bf2cba5proceed(AlertTimerAdvice.aj:1)\n    at com.snaphop.aop.AlertTimerAdvice.ajc$around$com_snaphop_aop_AlertTimerAdvice$1$5bf2cba5(AlertTimerAdvice.aj:32)\n    at com.snaphop.recruiting.service.RecruitingService.countRecruitingsForSite(RecruitingService.java:72)\n    at com.snaphop.recruiting.service.RecruitingServiceTest.testCountRecruitingsForSite(RecruitingServiceTest.java:34)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:616)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: co.jirm.core.JirmIllegalStateException: For path: \u0027/com/snaphop/recruiting/service/select-immutable-recruiting.sql\u0027, Looks like a bad --0 at line: {}\n    at co.jirm.core.util.JirmPrecondition.stateException(JirmPrecondition.java:40)\n    at co.jirm.core.util.JirmPrecondition.stateException(JirmPrecondition.java:22)\n    at co.jirm.core.util.Precondition.stateInvalid(Precondition.java:70)\n    at co.jirm.core.sql.SqlPartialParser._processFile(SqlPartialParser.java:692)\n    at co.jirm.core.sql.SqlPartialParser.processFile(SqlPartialParser.java:592)\n    at co.jirm.core.sql.SqlPartialParser.loadFile(SqlPartialParser.java:587)\n    at co.jirm.core.sql.SqlPartialParser.access$200(SqlPartialParser.java:53)\n    at co.jirm.core.sql.SqlPartialParser$Parser._expand(SqlPartialParser.java:503)\n    at co.jirm.core.sql.SqlPartialParser$Parser.expand(SqlPartialParser.java:482)\n    at co.jirm.core.sql.SqlPartialParser._parseFromPath(SqlPartialParser.java:457)\n    at co.jirm.core.sql.SqlPartialParser.access$000(SqlPartialParser.java:53)\n    at co.jirm.core.sql.SqlPartialParser$1.call(SqlPartialParser.java:445)\n    at co.jirm.core.sql.SqlPartialParser$1.call(SqlPartialParser.java:442)\n    at com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4767)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3568)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2350)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2313)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2228)\n    ... 42 more\n\n```\n\nAnother one missing line number:\n\n```\ncom.google.common.util.concurrent.UncheckedExecutionException: co.jirm.core.JirmIllegalStateException: Reference \u0027\u003e search-recruiting.sql#join\u0027 in /com/snaphop/recruiting/service/select-immutable-recruiting.sql does NOT MATCH declaration /com/snaphop/recruiting/service/search-recruiting.sql#join\nREFERENCE:\n[-- { \u003e search-recruiting.sql#join same\u003dtrue }, c.id, c.name, c.company_name as \"companyName\", , c.tags, c.category, c.description, , c.division, c.experience_level as \"experienceLevel\", , c.locations, c.type, c.parent_id as \"parentId\", , g.latitude as \"latitude\", g.longitude as \"longitude\",, g.id as \"geoId\", parent.domain as \"siteDomain\",, c.keyword as \"keyword\",, c.updatets as \"updateTime\",, c.begints as \"beginTime\",, c.endts as \"endTime\",, c.reference_id as \"referenceId\",, c.active as \"active\",, c.vanity_uri as \"vanityUri\",, c.job_type as \"jobType\",, c.non_mobile_url as \"nonMobileUrl\", FROM campaign c, LEFT OUTER JOIN ,  (SELECT DISTINCT geo.id, cg.campaign, geo.latitude, geo.longitude from campaign_geo cg,     INNER JOIN geo geo on geo.id \u003d cg.geo ,     WHERE geo.latitude IS NOT NULL AND geo.longitude IS NOT NULL AND cg.createts \u003c now() -- {now},  ) g on g.campaign \u003d c.id, LEFT OUTER JOIN campaign parent ON c.parent_id \u003d parent.id, -- { \u003c }]\nDECLARATION:\n[-- {#join}, c.id, c.name, c.company_name as \"companyName\", , c.tags, c.category, c.description, , c.division, c.experience_level as \"experienceLevel\", , c.locations, c.type, c.parent_id as \"parentId\", , g.latitude as \"latitude\", g.longitude as \"longitude\",, g.id as \"geoId\", parent.domain as \"siteDomain\",, c.keyword as \"keyword\",, c.updatets as \"updateTime\",, c.begints as \"beginTime\",, c.endts as \"endTime\",, c.reference_id as \"referenceId\",, c.active as \"active\",, c.vanity_uri as \"vanityUri\",, c.job_type as \"jobType\",, c.non_mobile_url as \"nonMobileUrl\", FROM campaign c, LEFT OUTER JOIN ,     (SELECT DISTINCT geo.id, cg.campaign, geo.latitude, geo.longitude from campaign_geo cg,     INNER JOIN geo geo on geo.id \u003d cg.geo ,     WHERE geo.latitude IS NOT NULL AND geo.longitude IS NOT NULL AND cg.createts \u003c now() -- {now},  ) g on g.campaign \u003d c.id, LEFT OUTER JOIN campaign parent ON c.parent_id \u003d parent.id, -- {/join}]\n\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2234)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3965)\n    at com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4764)\n    at co.jirm.core.sql.SqlPartialParser.parseFromPath(SqlPartialParser.java:442)\n    at co.jirm.core.sql.SqlPartialParser.parseFromPath(SqlPartialParser.java:463)\n    at co.jirm.core.sql.MutableParameterizedSql.useResource(MutableParameterizedSql.java:47)\n    at co.jirm.orm.builder.select.SelectRootClauseBuilder.sqlFromResource(SelectRootClauseBuilder.java:84)\n    at co.jirm.orm.builder.select.SelectBuilderFactory.sqlFromResource(SelectBuilderFactory.java:120)\n    at com.snaphop.recruiting.service.RecruitingService.findInactiveImmutableRecruitings_aroundBody14(RecruitingService.java:102)\n    at com.snaphop.recruiting.service.RecruitingService$AjcClosure15.run(RecruitingService.java:1)\n    at com.snaphop.aop.AlertTimerAdvice.ajc$around$com_snaphop_aop_AlertTimerAdvice$1$5bf2cba5proceed(AlertTimerAdvice.aj:1)\n    at com.snaphop.aop.AlertTimerAdvice.ajc$around$com_snaphop_aop_AlertTimerAdvice$1$5bf2cba5(AlertTimerAdvice.aj:32)\n    at com.snaphop.recruiting.service.RecruitingService.findInactiveImmutableRecruitings(RecruitingService.java:100)\n    at com.snaphop.recruiting.service.RecruitingServiceTest.testFindInactiveImmutableRecruitings(RecruitingServiceTest.java:45)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:616)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: co.jirm.core.JirmIllegalStateException: Reference \u0027\u003e search-recruiting.sql#join\u0027 in /com/snaphop/recruiting/service/select-immutable-recruiting.sql does NOT MATCH declaration /com/snaphop/recruiting/service/search-recruiting.sql#join\nREFERENCE:\n[-- { \u003e search-recruiting.sql#join same\u003dtrue }, c.id, c.name, c.company_name as \"companyName\", , c.tags, c.category, c.description, , c.division, c.experience_level as \"experienceLevel\", , c.locations, c.type, c.parent_id as \"parentId\", , g.latitude as \"latitude\", g.longitude as \"longitude\",, g.id as \"geoId\", parent.domain as \"siteDomain\",, c.keyword as \"keyword\",, c.updatets as \"updateTime\",, c.begints as \"beginTime\",, c.endts as \"endTime\",, c.reference_id as \"referenceId\",, c.active as \"active\",, c.vanity_uri as \"vanityUri\",, c.job_type as \"jobType\",, c.non_mobile_url as \"nonMobileUrl\", FROM campaign c, LEFT OUTER JOIN ,  (SELECT DISTINCT geo.id, cg.campaign, geo.latitude, geo.longitude from campaign_geo cg,     INNER JOIN geo geo on geo.id \u003d cg.geo ,     WHERE geo.latitude IS NOT NULL AND geo.longitude IS NOT NULL AND cg.createts \u003c now() -- {now},  ) g on g.campaign \u003d c.id, LEFT OUTER JOIN campaign parent ON c.parent_id \u003d parent.id, -- { \u003c }]\nDECLARATION:\n[-- {#join}, c.id, c.name, c.company_name as \"companyName\", , c.tags, c.category, c.description, , c.division, c.experience_level as \"experienceLevel\", , c.locations, c.type, c.parent_id as \"parentId\", , g.latitude as \"latitude\", g.longitude as \"longitude\",, g.id as \"geoId\", parent.domain as \"siteDomain\",, c.keyword as \"keyword\",, c.updatets as \"updateTime\",, c.begints as \"beginTime\",, c.endts as \"endTime\",, c.reference_id as \"referenceId\",, c.active as \"active\",, c.vanity_uri as \"vanityUri\",, c.job_type as \"jobType\",, c.non_mobile_url as \"nonMobileUrl\", FROM campaign c, LEFT OUTER JOIN ,     (SELECT DISTINCT geo.id, cg.campaign, geo.latitude, geo.longitude from campaign_geo cg,     INNER JOIN geo geo on geo.id \u003d cg.geo ,     WHERE geo.latitude IS NOT NULL AND geo.longitude IS NOT NULL AND cg.createts \u003c now() -- {now},  ) g on g.campaign \u003d c.id, LEFT OUTER JOIN campaign parent ON c.parent_id \u003d parent.id, -- {/join}]\n\n    at co.jirm.core.util.JirmPrecondition.stateException(JirmPrecondition.java:40)\n    at co.jirm.core.util.JirmPrecondition.stateException(JirmPrecondition.java:22)\n    at co.jirm.core.util.Precondition.state(Precondition.java:60)\n    at co.jirm.core.sql.SqlPartialParser$Parser._expand(SqlPartialParser.java:549)\n    at co.jirm.core.sql.SqlPartialParser$Parser._expand(SqlPartialParser.java:509)\n    at co.jirm.core.sql.SqlPartialParser$Parser.expand(SqlPartialParser.java:482)\n    at co.jirm.core.sql.SqlPartialParser._parseFromPath(SqlPartialParser.java:457)\n    at co.jirm.core.sql.SqlPartialParser.access$000(SqlPartialParser.java:53)\n    at co.jirm.core.sql.SqlPartialParser$1.call(SqlPartialParser.java:445)\n    at co.jirm.core.sql.SqlPartialParser$1.call(SqlPartialParser.java:442)\n    at com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4767)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3568)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2350)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2313)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2228)\n    ... 42 more\n\n```\n",
    "keywords": [
      "junit internal",
      "parent",
      "aop",
      "select",
      "invoke",
      "reflectivecallable",
      "type",
      "alerttimeradvice",
      "parentrunner",
      "core util",
      "division",
      "reflect",
      "junit runner",
      "localcache",
      "internal runners",
      "recruiting",
      "context",
      "vanity_uri",
      "model",
      "jdt internal",
      "id",
      "join",
      "runner",
      "java:442",
      "common cache",
      "geo latitude",
      "_expand",
      "runners parentrunner",
      "cache",
      "method",
      "nonmobileurl",
      "access$000",
      "outer",
      "active",
      "google",
      "sitedomain",
      "runners",
      "jobtype",
      "tags",
      "selectrootclausebuilder",
      "sqlpartialparser",
      "util",
      "left",
      "companyname",
      "company_name",
      "domain",
      "invokemethod",
      "[--",
      "\u003c",
      "evaluate",
      "delegatingmethodaccessorimpl",
      "internal",
      "sqlpartialparser$parser",
      "junit4 statements",
      "latitude",
      "sun",
      "parentid",
      "mutableparameterizedsql",
      "geo",
      "eclipse jdt",
      "c parent_id",
      "get",
      "selectbuilderfactory",
      "builder",
      "endts",
      "java:47",
      "java:45",
      "sun reflect",
      "c",
      "remotetestrunner",
      "junit4testreference",
      "cg",
      "localcache$segment",
      "blockjunit4classrunner",
      "g",
      "endtime",
      "jirm core",
      "co",
      "declaration",
      "nativemethodaccessorimpl",
      "call",
      "java:53",
      "vanityuri",
      "com google",
      "java:50",
      "experiencelevel",
      "sql sqlpartialparser",
      "recruiting service",
      "context junit4",
      "jdt",
      "updatetime",
      "junit runners",
      "springframework test",
      "org eclipse",
      "sql sqlpartialparser$parser",
      "junit4",
      "com",
      "google common",
      "sqlfromresource",
      "reference_id",
      "co jirm",
      "org junit",
      "run",
      "springjunit4classrunner",
      "jirm",
      "sql#join",
      "reference",
      "snaphop recruiting",
      "snaphop",
      "java:60",
      "frameworkmethod",
      "runbeforetestclasscallbacks",
      "{now}",
      "keyword",
      "localcache$segment get",
      "com snaphop",
      "longitude",
      "--",
      "cache localcache$segment",
      "test",
      "runaftertestmethodcallbacks",
      "runbeforetestmethodcallbacks",
      "runchild",
      "inner",
      "referenceid",
      "eclipse",
      "runtests",
      "begints",
      "core",
      "java:74",
      "null",
      "java:72",
      "parent_id",
      "runner remotetestrunner",
      "test context",
      "jirmprecondition",
      "testexecution",
      "name",
      "springrepeat",
      "campaign",
      "springframework",
      "job_type",
      "recruitingservice",
      "line",
      "description",
      "distinct",
      "runaftertestclasscallbacks",
      "not null",
      "statements",
      "org springframework",
      "sql",
      "geo id",
      "not",
      "runners model",
      "common",
      "c id",
      "parsefrompath",
      "outer join",
      "left outer",
      "now",
      "updatets",
      "core sql",
      "jirmillegalstateexception",
      "junit",
      "runbefores",
      "stateexception",
      "org",
      "get localcache",
      "sqlpartialparser$1",
      "search-recruiting",
      "begintime",
      "orm",
      "precondition",
      "recruitingservicetest",
      "campaign_geo",
      "non_mobile_url",
      "geo longitude",
      "service",
      "geoid",
      "locations",
      "createts",
      "category",
      "experience_level",
      "java:231",
      "internal junit"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/agentgt/jirm/commit/c5ec3bb4470cd8880df990c61006b6bdb9c83fac",
      "files": [
        {
          "file_name": "jirm-core/src/main/java/co/jirm/core/sql/SqlPartialParser.java",
          "patch": "@@ -33,6 +33,8 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import co.jirm.core.JirmIllegalArgumentException;\n+import co.jirm.core.JirmIllegalStateException;\n import co.jirm.core.sql.SqlPartialParser.ResourceLoader.CachedResourceLoader;\n import co.jirm.core.util.JirmUrlEncodedUtils;\n import co.jirm.core.util.ResourceUtils;\n@@ -49,6 +51,7 @@\n import com.google.common.collect.Sets;\n import com.google.common.io.LineReader;\n import com.google.common.io.Resources;\n+import com.google.common.util.concurrent.UncheckedExecutionException;\n \n \n public class SqlPartialParser {\n@@ -463,9 +466,17 @@ public String call() throws Exception {\n \t\t\t\t\treturn _parseFromPath(path);\n \t\t\t\t}\n \t\t\t});\n-\t\t} catch (ExecutionException e) {\n+\t\t} \n+\t\tcatch (ExecutionException e) {\n \t\t\tthrow new RuntimeException(e);\n \t\t}\n+\t\tcatch (UncheckedExecutionException e) {\n+\t\t\tif (e.getCause() instanceof JirmIllegalStateException \n+\t\t\t\t\t|| e.getCause() instanceof JirmIllegalArgumentException) {\n+\t\t\t\tthrow (RuntimeException) e.getCause();\n+\t\t\t}\n+\t\t\tthrow e;\n+\t\t}\n \t}\n \t\n \tprivate static String _parseFromPath(final String path) {\n@@ -565,17 +576,20 @@ protected ExpandedSql _expand(DeclarationSql f, Set\u003cString\u003e seenPaths) {\n \t\t\t\tDeclarationSql ds \u003d e.getDeclaration();\n \t\t\t\tboolean validate \u003d ! r.isSame() || ds.getDeclaredSql().equals(r.getDeclaredSql());\n \t\t\t\tcheck.state(validate, \n-\t\t\t\t\t\t\"Reference \u0027\u003e {}\u0027 in {}\" +\n-\t\t\t\t\t\t\" does NOT MATCH declaration {}\" +\n+\t\t\t\t\t\t\"Reference \u0027\u003e {}\u0027 in {} at line: {}\" +\n+\t\t\t\t\t\t\" does\" +\n+\t\t\t\t\t\t\"\\nNOT MATCH declaration {} at line: {}\" +\n \t\t\t\t\t\t\"\\nREFERENCE:\" +\n \t\t\t\t\t\t\"\\n{}\\n\" +\n \t\t\t\t\t\t\"DECLARATION:\" +\n \t\t\t\t\t\t\"\\n{}\\n\",\n-\t\t\t\t\t\tr.getReferencePath().getFullPath(), \n-\t\t\t\t\t\tr.getCurrentPath().getFullPath(), \n+\t\t\t\t\t\tr.getReferencePath().getFullPath(),\n+\t\t\t\t\t\tr.getCurrentPath().getFullPath(),\n+\t\t\t\t\t\tr.getStartIndex(),\n \t\t\t\t\t\tds.getPath().getFullPath(),\n-\t\t\t\t\t\tr.getDeclaredSql(), \n-\t\t\t\t\t\tds.getDeclaredSql());\n+\t\t\t\t\t\tds.getStartIndex(),\n+\t\t\t\t\t\tr.join(), \n+\t\t\t\t\t\tds.join());\n \t\t\t\tbyLine.put(r.getStartIndex(), e);\n \t\t\t\treferenceSql.put(r.getStartIndex(), r);\n \t\t\t}\n@@ -667,23 +681,23 @@ private static FileDeclarationSql _processFile(String path, String sql) throws I\n \t\t\tString tag;\n \t\t\tif (m.matches() \u0026\u0026 (tag \u003d m.group(1)) !\u003d null \u0026\u0026 ! (tag \u003d tag.trim()).isEmpty()) {\n \t\t\t\tif (tag !\u003d null \u0026\u0026 tag.startsWith(\"#\")) {\n-\t\t\t\t\tcheck.state(state !\u003d PSTATE.HASH, PE + \"Cannot hash within hash at line {}.\", path, lineIndex);\n+\t\t\t\t\tcheck.state(state !\u003d PSTATE.HASH, PE + \"Cannot hash within hash at line: {}.\", path, lineIndex);\n \t\t\t\t\tstate \u003d PSTATE.HASH;\n \t\t\t\t\thashContent \u003d ImmutableList.builder();\n \t\t\t\t\thashReferences \u003d ImmutableList.builder();\n \t\t\t\t\tcurrentHash \u003d tag.substring(1).trim();\n \t\t\t\t\tHashDeclarationSql existing \u003d nameToHash.get(currentHash);\n \t\t\t\t\tif (existing !\u003d null) {\n \t\t\t\t\t\tthrow check.stateInvalid( \n-\t\t\t\t\t\t\t\tPE + \"Hash: \u0027#{}\u0027 already defined line: {}, new definition at line: {}\",\n+\t\t\t\t\t\t\t\tPE + \"Hash: \u0027#{}\u0027 already defined at line: {}, new definition at line: {}\",\n \t\t\t\t\t\t\t\tpath,\n \t\t\t\t\t\t\t\tcurrentHash, existing.getStartIndex(), lineIndex);\n \t\t\t\t\t}\n \t\t\t\t\thashContent.add(line);\n \t\t\t\t\thashStartIndex \u003d lineIndex;\n \t\t\t\t}\n \t\t\t\telse if (tag !\u003d null \u0026\u0026 tag.startsWith(\"\u003e\")) {\n-\t\t\t\t\tcheck.state(state !\u003d PSTATE.REFERENCE, PE + \"Cannot reference within reference line {}.\", path, lineIndex);\n+\t\t\t\t\tcheck.state(state !\u003d PSTATE.REFERENCE, PE + \"Cannot reference within reference at line: {}.\", path, lineIndex);\n \t\t\t\t\tpreviousState \u003d state;\n \t\t\t\t\tstate \u003d PSTATE.REFERENCE;\n \t\t\t\t\treferenceContent \u003d ImmutableList.builder();\n@@ -727,7 +741,7 @@ else if (tag !\u003d null \u0026\u0026 tag.startsWith(\"/\")) {\n \t\t\t\t\thashes.put(currentHash, hash);\n \t\t\t\t}\n \t\t\t\telse {\n-\t\t\t\t\tthrow check.stateInvalid(PE + \"Looks like a bad --{} at line: {}\", path, lineIndex);\n+\t\t\t\t\tthrow check.stateInvalid(PE + \"Malformed hash or reference: {} at line: {}\", path, tag, lineIndex);\n \t\t\t\t}\n \t\t\t}\n \t\t\telse {"
        },
        {
          "file_name": "jirm-core/src/test/java/co/jirm/core/sql/SqlPartialParserTest.java",
          "patch": "@@ -17,6 +17,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n \n import org.junit.Before;\n import org.junit.Test;\n@@ -88,23 +89,30 @@ public void testExpand() throws Exception {\n \t@Test(expected\u003dJirmIllegalStateException.class)\n \tpublic void testValidate() throws Exception {\n \t\tParser p \u003d SqlPartialParser.Parser.create();\n-\t\tExpandedSql e \u003d p.expand(\"/co/jirm/core/sql/partial-test-validate.sql#other\");\n-\t\tString actual \u003d e.join();\n-\t\tassertEquals(\"SELECT\\n\" + \n-\t\t\t\t\"c.id, c.name, c.tags, c.category, c.description, \\n\" + \n-\t\t\t\t\"c.division, c.experience_level as \\\"experienceLevel\\\", \\n\" + \n-\t\t\t\t\"c.locations, c.type, c.parent_id as \\\"parentId\\\", \\n\" + \n-\t\t\t\t\"g.latitude as \\\"latitude\\\", g.longitude as \\\"longitude\\\"\\n\" + \n-\t\t\t\t\"FROM campaign c\\n\" + \n-\t\t\t\t\"LEFT OUTER JOIN \\n\" + \n-\t\t\t\t\"\t(SELECT DISTINCT cg.campaign, geo.latitude, geo.longitude from campaign_geo cg\\n\" + \n-\t\t\t\t\"\tINNER JOIN geo geo on geo.id \u003d cg.geo \\n\" + \n-\t\t\t\t\"\tWHERE geo.latitude IS NOT NULL AND geo.longitude IS NOT NULL AND cg.createts \u003c now() -- {}\\n\" + \n-\t\t\t\t\"\t) g on g.campaign \u003d c.id\\n\" + \n-\t\t\t\t\"ORDER BY c.createts ASC, c.id, g.latitude, g.longitude\\n\" + \n-\t\t\t\t\"LIMIT 100 -- {}\\n\" + \n-\t\t\t\t\"OFFSET 1 -- {}\", actual);\n-\t\t\n+\t\tp.expand(\"/co/jirm/core/sql/partial-test-validate.sql#other\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testIssue25ValidateErrorMessage() throws Exception {\n+\t\ttry {\n+\t\t\tSqlPartialParser.parseFromPath(\"/co/jirm/core/sql/partial-test-validate.sql#other\");\n+\t\t\tfail(\"Should have thrown an exception\");\n+\t\t}\n+\t\tcatch (JirmIllegalStateException e) {\n+\t\t\tassertEquals(\"Reference \u0027\u003e #stuff\u0027 in /co/jirm/core/sql/partial-test-validate.sql at line: 44 does\" +\n+\t\t\t\t\t\"\\nNOT MATCH declaration /co/jirm/core/sql/partial-test-validate.sql#stuff at line: 1\\n\" + \n+\t\t\t\t\t\"REFERENCE:\\n\" + \n+\t\t\t\t\t\"c.id, c.name, c.tags, c.category, c.description\\n\" + \n+\t\t\t\t\t\"DECLARATION:\\n\" + \n+\t\t\t\t\t\"c.id, c.name, c.tags, c.category, c.description, \\n\" + \n+\t\t\t\t\t\"c.division, c.experience_level as \\\"experienceLevel\\\", \\n\" + \n+\t\t\t\t\t\"c.locations, c.type, c.parent_id as \\\"parentId\\\", \\n\" + \n+\t\t\t\t\t\"g.latitude as \\\"latitude\\\", g.longitude as \\\"longitude\\\"\\n\" + \n+\t\t\t\t\t\"\", e.getMessage());\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t\tfail(\"should have thrown the right exception\");\n+\t\t}\n \t}\n \t\n \t@Test"
        }
      ]
    }
  },
  {
    "name": "Fix issue #49: Parse error for multipart content with empty lines (ho…",
    "url": "https://github.com/RestComm/jain-sip/pull/50",
    "description": "Unfortunately I do not have the time to set up the environment needed to develop jain-sip. So I did simply did the proposed changes in parser and test code without testing them.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/RestComm/jain-sip/commit/2a27faa3b02793e935a938593ac1272ffe84c4d3",
      "files": [
        {
          "file_name": "src/gov/nist/javax/sip/message/MultipartMimeContentImpl.java",
          "patch": "@@ -134,7 +134,7 @@ public void createContentList(String body) throws ParseException {\n   }\n \n   private ContentImpl parseBodyPart(String bodyPart) throws ParseException {\n-    String[] nextPartSplit \u003d bodyPart.split(\"\\r?\\n\\r?\\n\");\n+    String[] nextPartSplit \u003d bodyPart.split(\"\\r?\\n\\r?\\n\", 2);\n \n     String headers[] \u003d null;\n     String bodyContent;"
        },
        {
          "file_name": "src/test/unit/gov/nist/javax/sip/multipartmime/MultipartMimeParserTest.java",
          "patch": "@@ -100,6 +100,7 @@\n \t\t  \t\t+ \"\u003c/gml:Point\u003e\\n\"\n \t\t  \t   + \"\u003c/gml:location\u003e\\n\"\n \t\t  \t+ \"\u003c/gp:location-info\u003e\\n\"\n+\t\t\t+ \"\\n\"\n \t\t  \t+ \"\u003cgp:usage-rules\u003e\\n\"\n \t\t  \t  + \"\u003cgp:retransmission-allowed\u003eno\u003c/gp:retransmission-allowed\u003e\\n\"\n \t\t  \t  + \"\u003cgp:retention-expiry\u003e2007-07-27T18:00:00Z\u003c/gp:retention-expiry\u003e\\n\""
        }
      ]
    }
  },
  {
    "name": "Parsing error, red code is green",
    "url": "https://github.com/ignatov/intellij-erlang/issues/183",
    "description": "``` erlang\n-module(name).\n\nfoo(0). % error\n```\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ignatov/intellij-erlang/commit/6decc5a7c9195ff2050aee6b429aecdae747db5c",
      "files": [
        {
          "file_name": "gen/org/intellij/erlang/parser/ErlangParser.java",
          "patch": "@@ -3733,20 +3733,76 @@ private static boolean macros_body_1_0_0(PsiBuilder builder_, int level_) {\n   }\n \n   /* ********************************************************** */\n-  // generic_function_call_expression\n+  // \u0026(\u0027?\u0027) generic_function_call_expression\n   public static boolean macros_call(PsiBuilder builder_, int level_) {\n     if (!recursion_guard_(builder_, level_, \"macros_call\")) return false;\n     boolean result_ \u003d false;\n     Marker marker_ \u003d builder_.mark();\n-    enterErrorRecordingSection(builder_, level_, _SECTION_GENERAL_, \"\u003cmacros call\u003e\");\n-    result_ \u003d generic_function_call_expression(builder_, level_ + 1);\n+    enterErrorRecordingSection(builder_, level_, _SECTION_RECOVER_, \"\u003cmacros call\u003e\");\n+    result_ \u003d macros_call_0(builder_, level_ + 1);\n+    result_ \u003d result_ \u0026\u0026 generic_function_call_expression(builder_, level_ + 1);\n     if (result_) {\n       marker_.done(ERL_MACROS_CALL);\n     }\n     else {\n       marker_.rollbackTo();\n     }\n-    result_ \u003d exitErrorRecordingSection(builder_, level_, result_, false, _SECTION_GENERAL_, null);\n+    result_ \u003d exitErrorRecordingSection(builder_, level_, result_, false, _SECTION_RECOVER_, macros_call_recover_parser_);\n+    return result_;\n+  }\n+\n+  // \u0026(\u0027?\u0027)\n+  private static boolean macros_call_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"macros_call_0\")) return false;\n+    boolean result_ \u003d false;\n+    Marker marker_ \u003d builder_.mark();\n+    enterErrorRecordingSection(builder_, level_, _SECTION_AND_, null);\n+    result_ \u003d macros_call_0_0(builder_, level_ + 1);\n+    marker_.rollbackTo();\n+    result_ \u003d exitErrorRecordingSection(builder_, level_, result_, false, _SECTION_AND_, null);\n+    return result_;\n+  }\n+\n+  // (\u0027?\u0027)\n+  private static boolean macros_call_0_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"macros_call_0_0\")) return false;\n+    boolean result_ \u003d false;\n+    Marker marker_ \u003d builder_.mark();\n+    result_ \u003d consumeToken(builder_, ERL_QMARK);\n+    if (!result_) {\n+      marker_.rollbackTo();\n+    }\n+    else {\n+      marker_.drop();\n+    }\n+    return result_;\n+  }\n+\n+  /* ********************************************************** */\n+  // !(\u0027.\u0027)\n+  static boolean macros_call_recover(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"macros_call_recover\")) return false;\n+    boolean result_ \u003d false;\n+    Marker marker_ \u003d builder_.mark();\n+    enterErrorRecordingSection(builder_, level_, _SECTION_NOT_, null);\n+    result_ \u003d !macros_call_recover_0(builder_, level_ + 1);\n+    marker_.rollbackTo();\n+    result_ \u003d exitErrorRecordingSection(builder_, level_, result_, false, _SECTION_NOT_, null);\n+    return result_;\n+  }\n+\n+  // (\u0027.\u0027)\n+  private static boolean macros_call_recover_0(PsiBuilder builder_, int level_) {\n+    if (!recursion_guard_(builder_, level_, \"macros_call_recover_0\")) return false;\n+    boolean result_ \u003d false;\n+    Marker marker_ \u003d builder_.mark();\n+    result_ \u003d consumeToken(builder_, ERL_DOT);\n+    if (!result_) {\n+      marker_.rollbackTo();\n+    }\n+    else {\n+      marker_.drop();\n+    }\n     return result_;\n   }\n \n@@ -6680,6 +6736,11 @@ public boolean parse(PsiBuilder builder_, int level_) {\n       return form_recover(builder_, level_ + 1);\n     }\n   };\n+  final static Parser macros_call_recover_parser_ \u003d new Parser() {\n+    public boolean parse(PsiBuilder builder_, int level_) {\n+      return macros_call_recover(builder_, level_ + 1);\n+    }\n+  };\n   final static Parser tuple_recoverer_parser_ \u003d new Parser() {\n     public boolean parse(PsiBuilder builder_, int level_) {\n       return tuple_recoverer(builder_, level_ + 1);"
        },
        {
          "file_name": "grammars/erlang.bnf",
          "patch": "@@ -420,7 +420,8 @@ function_call_expression ::\u003d q_atom argument_list {\n   pin\u003d0\n   methods \u003d [getReference getNameIdentifier getTextOffset]\n }\n-macros_call ::\u003d generic_function_call_expression\n+macros_call ::\u003d \u0026(\u0027?\u0027) generic_function_call_expression {recoverUntil\u003dmacros_call_recover}\n+private macros_call_recover ::\u003d !(\u0027.\u0027)\n generic_function_call_expression ::\u003d (q_atom_or_var \u0027:\u0027)? (q_atom_or_var | macros) argument_list {pin\u003d0}\n private q_atom_or_var ::\u003d q_atom | q_var\n "
        },
        {
          "file_name": "testData/parser/183.erl",
          "patch": "@@ -0,0 +1,5 @@\n+foo1(0).\n+\n+foo() -\u003e ok.\n+\n+xxx(1) -\u003e not_ok.\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/183.txt",
          "patch": "@@ -0,0 +1,38 @@\n+ERL_FILE\n+  PsiElement(atom)(\u0027foo1\u0027)\n+  PsiElement(()(\u0027(\u0027)\n+  PsiElement(integer)(\u00270\u0027)\n+  PsiElement())(\u0027)\u0027)\n+  PsiErrorElement:\u0027-\u003e\u0027, \u0027:-\u0027 or when expected, got \u0027.\u0027\n+    \u003cempty list\u003e\n+  PsiErrorElement:\u0027.\u0027 expected, got \u0027.\u0027\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027foo\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_MAX_EXPRESSION\n+          ERL_Q_ATOM\n+            PsiElement(atom)(\u0027ok\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027xxx\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        ERL_ARGUMENT_DEFINITION\n+          ERL_MAX_EXPRESSION\n+            PsiElement(integer)(\u00271\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_MAX_EXPRESSION\n+          ERL_Q_ATOM\n+            PsiElement(atom)(\u0027not_ok\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/30.txt",
          "patch": "@@ -83,180 +83,280 @@ ERL_FILE\n   PsiErrorElement:\u0027.\u0027 or \u0027;\u0027 expected, got \u0027-\u003e\u0027\n     PsiElement(-\u003e)(\u0027-\u003e\u0027)\n   PsiElement(atom)(\u0027ok\u0027)\n-  PsiErrorElement:\u0027(\u0027 or \u0027:\u0027 expected, got \u0027,\u0027\n+  PsiErrorElement:\u0027(\u0027 expected, got \u0027,\u0027\n     PsiElement(,)(\u0027,\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(+)(\u0027+\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(*)(\u0027*\u0027)\n-  PsiElement(integer)(\u0027109\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027foo\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement([)(\u0027[\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027a\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027b\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(])(\u0027]\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027blah\u0027)\n-  PsiElement(end)(\u0027end\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(var)(\u0027F\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(-)(\u0027-\u0027)\n-  PsiElement(atom)(\u0027export\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement([)(\u0027[\u0027)\n-  PsiElement(atom)(\u0027bar\u0027)\n-  PsiElement(/)(\u0027/\u0027)\n-  PsiElement(integer)(\u00270\u0027)\n-  PsiElement(])(\u0027]\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(-)(\u0027-\u0027)\n-  PsiElement(atom)(\u0027record\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement(atom)(\u0027rec\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(atom)(\u0027foo\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement(var)(\u0027Blah\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n-  PsiElement(var)(\u0027Blah\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(atom)(\u0027bar\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n-  PsiElement(var)(\u0027F\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(fun)(\u0027fun\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n-  PsiElement(atom)(\u0027ok\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(#)(\u0027#\u0027)\n+    PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+    PsiElement(atom)(\u0027something\u0027)\n+    PsiElement(\u003d)(\u0027\u003d\u0027)\n+    PsiElement(var)(\u0027Eep\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(\u003d)(\u0027\u003d\u0027)\n+    PsiElement(var)(\u0027Eep\u0027)\n+    PsiElement(#)(\u0027#\u0027)\n+    PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n   PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(+)(\u0027+\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(*)(\u0027*\u0027)\n-  PsiElement(integer)(\u0027109\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027foo\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement([)(\u0027[\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027a\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027b\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(])(\u0027]\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027blah\u0027)\n-  PsiElement(end)(\u0027end\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(var)(\u0027F\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n-  PsiElement(atom)(\u0027bar2\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n-  PsiElement(var)(\u0027F\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(fun)(\u0027fun\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+  PsiErrorElement:\u0027(\u0027 expected, got \u0027,\u0027\n+    PsiElement(,)(\u0027,\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(integer)(\u00271\u0027)\n+    PsiElement(+)(\u0027+\u0027)\n+    PsiElement(integer)(\u00271\u0027)\n+    PsiElement(*)(\u0027*\u0027)\n+    PsiElement(integer)(\u0027109\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(atom)(\u0027foo\u0027)\n+    PsiElement(()(\u0027(\u0027)\n+    PsiElement([)(\u0027[\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(atom)(\u0027a\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+    PsiElement(atom)(\u0027b\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(])(\u0027]\u0027)\n+    PsiElement())(\u0027)\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(atom)(\u0027blah\u0027)\n+    PsiElement(end)(\u0027end\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(var)(\u0027F\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_ATTRIBUTE\n+    PsiElement(-)(\u0027-\u0027)\n+    ERL_EXPORT\n+      PsiElement(atom)(\u0027export\u0027)\n+      PsiElement(()(\u0027(\u0027)\n+      ERL_EXPORT_FUNCTIONS\n+        PsiElement([)(\u0027[\u0027)\n+        ERL_EXPORT_FUNCTION\n+          ERL_Q_ATOM\n+            PsiElement(atom)(\u0027bar\u0027)\n+          PsiElement(/)(\u0027/\u0027)\n+          PsiElement(integer)(\u00270\u0027)\n+        PsiElement(])(\u0027]\u0027)\n+      PsiElement())(\u0027)\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_RECORD_DEFINITION\n+    PsiElement(-)(\u0027-\u0027)\n+    PsiElement(atom)(\u0027record\u0027)\n+    PsiElement(()(\u0027(\u0027)\n+    ERL_Q_ATOM\n+      PsiElement(atom)(\u0027rec\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    ERL_TYPED_RECORD_FIELDS\n+      PsiElement({)(\u0027{\u0027)\n+      ERL_TYPED_EXPR\n+        ERL_Q_ATOM\n+          PsiElement(atom)(\u0027something\u0027)\n+      PsiElement(})(\u0027}\u0027)\n+    PsiElement())(\u0027)\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027foo\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        ERL_ARGUMENT_DEFINITION\n+          ERL_MAX_EXPRESSION\n+            ERL_Q_VAR\n+              PsiElement(var)(\u0027Blah\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_MAX_EXPRESSION\n+          ERL_Q_VAR\n+            PsiElement(var)(\u0027Blah\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027bar\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_ASSIGNMENT_EXPRESSION\n+          ERL_MAX_EXPRESSION\n+            ERL_Q_VAR\n+              PsiElement(var)(\u0027F\u0027)\n+          PsiElement(\u003d)(\u0027\u003d\u0027)\n+          ERL_ANONYMOUS_CALL_EXPRESSION\n+            ERL_FUN_EXPRESSION\n+              PsiElement(fun)(\u0027fun\u0027)\n+            ERL_ARGUMENT_LIST\n+              PsiElement(()(\u0027(\u0027)\n+              ERL_TUPLE_EXPRESSION\n+                PsiElement({)(\u0027{\u0027)\n+                ERL_MAX_EXPRESSION\n+                  ERL_Q_VAR\n+                    PsiElement(var)(\u0027Eep\u0027)\n+                PsiElement(})(\u0027}\u0027)\n+              PsiElement())(\u0027)\u0027)\n+  PsiErrorElement:\u0027.\u0027 or \u0027;\u0027 expected, got \u0027-\u003e\u0027\n+    PsiElement(-\u003e)(\u0027-\u003e\u0027)\n   PsiElement(atom)(\u0027ok\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(\u003d)(\u0027\u003d\u0027)\n-  PsiElement(var)(\u0027Eep\u0027)\n-  PsiElement(#)(\u0027#\u0027)\n-  PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n+  PsiErrorElement:\u0027(\u0027 expected, got \u0027,\u0027\n+    PsiElement(,)(\u0027,\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(#)(\u0027#\u0027)\n+    PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+    PsiElement(atom)(\u0027something\u0027)\n+    PsiElement(\u003d)(\u0027\u003d\u0027)\n+    PsiElement(var)(\u0027Eep\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(\u003d)(\u0027\u003d\u0027)\n+    PsiElement(var)(\u0027Eep\u0027)\n+    PsiElement(#)(\u0027#\u0027)\n+    PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n   PsiElement(atom)(\u0027something\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(+)(\u0027+\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(*)(\u0027*\u0027)\n-  PsiElement(integer)(\u0027109\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027foo\u0027)\n-  PsiElement(()(\u0027(\u0027)\n-  PsiElement([)(\u0027[\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027a\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement({)(\u0027{\u0027)\n-  PsiElement(atom)(\u0027b\u0027)\n-  PsiElement(})(\u0027}\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(integer)(\u00271\u0027)\n-  PsiElement(])(\u0027]\u0027)\n-  PsiElement())(\u0027)\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(atom)(\u0027blah\u0027)\n-  PsiElement(end)(\u0027end\u0027)\n-  PsiElement(,)(\u0027,\u0027)\n-  PsiElement(var)(\u0027F\u0027)\n-  PsiElement(.)(\u0027.\u0027)\n\\ No newline at end of file\n+  PsiErrorElement:\u0027(\u0027 expected, got \u0027,\u0027\n+    PsiElement(,)(\u0027,\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(integer)(\u00271\u0027)\n+    PsiElement(+)(\u0027+\u0027)\n+    PsiElement(integer)(\u00271\u0027)\n+    PsiElement(*)(\u0027*\u0027)\n+    PsiElement(integer)(\u0027109\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(atom)(\u0027foo\u0027)\n+    PsiElement(()(\u0027(\u0027)\n+    PsiElement([)(\u0027[\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+  PsiElement(DUMMY_BLOCK)\n+    PsiElement(atom)(\u0027a\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement({)(\u0027{\u0027)\n+    PsiElement(atom)(\u0027b\u0027)\n+    PsiElement(})(\u0027}\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(])(\u0027]\u0027)\n+    PsiElement())(\u0027)\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(atom)(\u0027blah\u0027)\n+    PsiElement(end)(\u0027end\u0027)\n+    PsiElement(,)(\u0027,\u0027)\n+    PsiElement(var)(\u0027F\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n+  ERL_FUNCTION\n+    ERL_FUNCTION_CLAUSE\n+      ERL_Q_ATOM\n+        PsiElement(atom)(\u0027bar2\u0027)\n+      ERL_ARGUMENT_DEFINITION_LIST\n+        PsiElement(()(\u0027(\u0027)\n+        PsiElement())(\u0027)\u0027)\n+      ERL_CLAUSE_BODY\n+        PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+        ERL_ASSIGNMENT_EXPRESSION\n+          ERL_MAX_EXPRESSION\n+            ERL_Q_VAR\n+              PsiElement(var)(\u0027F\u0027)\n+          PsiElement(\u003d)(\u0027\u003d\u0027)\n+          ERL_FUN_EXPRESSION\n+            PsiElement(fun)(\u0027fun\u0027)\n+            ERL_FUN_CLAUSES\n+              ERL_FUN_CLAUSE\n+                ERL_ARGUMENT_DEFINITION_LIST\n+                  PsiElement(()(\u0027(\u0027)\n+                  ERL_ARGUMENT_DEFINITION\n+                    ERL_TUPLE_EXPRESSION\n+                      PsiElement({)(\u0027{\u0027)\n+                      ERL_MAX_EXPRESSION\n+                        ERL_Q_VAR\n+                          PsiElement(var)(\u0027Eep\u0027)\n+                      PsiElement(})(\u0027}\u0027)\n+                  PsiElement())(\u0027)\u0027)\n+                ERL_CLAUSE_BODY\n+                  PsiElement(-\u003e)(\u0027-\u003e\u0027)\n+                  ERL_MAX_EXPRESSION\n+                    ERL_Q_ATOM\n+                      PsiElement(atom)(\u0027ok\u0027)\n+                  PsiElement(,)(\u0027,\u0027)\n+                  ERL_ASSIGNMENT_EXPRESSION\n+                    ERL_RECORD_EXPRESSION\n+                      PsiElement(#)(\u0027#\u0027)\n+                      ERL_RECORD_REF\n+                        ERL_Q_ATOM\n+                          PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+                      ERL_RECORD_TUPLE\n+                        PsiElement({)(\u0027{\u0027)\n+                        ERL_RECORD_FIELDS\n+                          ERL_RECORD_FIELD\n+                            ERL_Q_ATOM\n+                              PsiElement(atom)(\u0027something\u0027)\n+                            PsiElement(\u003d)(\u0027\u003d\u0027)\n+                            ERL_MAX_EXPRESSION\n+                              ERL_Q_VAR\n+                                PsiElement(var)(\u0027Eep\u0027)\n+                        PsiElement(})(\u0027}\u0027)\n+                    PsiElement(\u003d)(\u0027\u003d\u0027)\n+                    ERL_RECORD_EXPRESSION\n+                      ERL_MAX_EXPRESSION\n+                        ERL_Q_VAR\n+                          PsiElement(var)(\u0027Eep\u0027)\n+                      PsiElement(#)(\u0027#\u0027)\n+                      ERL_RECORD_REF\n+                        ERL_Q_ATOM\n+                          PsiElement(atom)(\u0027\u0027rec\u0027\u0027)\n+                      ERL_RECORD_FIELD\n+                        PsiElement(.)(\u0027.\u0027)\n+                        ERL_Q_ATOM\n+                          PsiElement(atom)(\u0027something\u0027)\n+                  PsiElement(,)(\u0027,\u0027)\n+                  ERL_ADDITIVE_EXPRESSION\n+                    ERL_MAX_EXPRESSION\n+                      PsiElement(integer)(\u00271\u0027)\n+                    PsiElement(+)(\u0027+\u0027)\n+                    ERL_MULTIPLICATIVE_EXPRESSION\n+                      ERL_MAX_EXPRESSION\n+                        PsiElement(integer)(\u00271\u0027)\n+                      PsiElement(*)(\u0027*\u0027)\n+                      ERL_MAX_EXPRESSION\n+                        PsiElement(integer)(\u0027109\u0027)\n+                  PsiElement(,)(\u0027,\u0027)\n+                  ERL_FUNCTION_CALL_EXPRESSION\n+                    ERL_Q_ATOM\n+                      PsiElement(atom)(\u0027foo\u0027)\n+                    ERL_ARGUMENT_LIST\n+                      PsiElement(()(\u0027(\u0027)\n+                      ERL_LIST_EXPRESSION\n+                        PsiElement([)(\u0027[\u0027)\n+                        ERL_TUPLE_EXPRESSION\n+                          PsiElement({)(\u0027{\u0027)\n+                          ERL_MAX_EXPRESSION\n+                            ERL_Q_ATOM\n+                              PsiElement(atom)(\u0027a\u0027)\n+                          PsiElement(})(\u0027}\u0027)\n+                        PsiElement(,)(\u0027,\u0027)\n+                        ERL_TUPLE_EXPRESSION\n+                          PsiElement({)(\u0027{\u0027)\n+                          ERL_MAX_EXPRESSION\n+                            ERL_Q_ATOM\n+                              PsiElement(atom)(\u0027b\u0027)\n+                          PsiElement(})(\u0027}\u0027)\n+                        PsiElement(,)(\u0027,\u0027)\n+                        ERL_MAX_EXPRESSION\n+                          PsiElement(integer)(\u00271\u0027)\n+                        PsiElement(])(\u0027]\u0027)\n+                      PsiElement())(\u0027)\u0027)\n+                  PsiElement(,)(\u0027,\u0027)\n+                  ERL_MAX_EXPRESSION\n+                    ERL_Q_ATOM\n+                      PsiElement(atom)(\u0027blah\u0027)\n+            PsiElement(end)(\u0027end\u0027)\n+        PsiElement(,)(\u0027,\u0027)\n+        ERL_MAX_EXPRESSION\n+          ERL_Q_VAR\n+            PsiElement(var)(\u0027F\u0027)\n+    PsiElement(.)(\u0027.\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "testData/parser/Periods.txt",
          "patch": "@@ -1,5 +1,5 @@\n ERL_FILE\n-  PsiErrorElement:\u0027-\u0027, \u003cexpression\u003e, \u003cfunction\u003e or \u003crule\u003e expected, got \u0027.\u0027\n+  PsiErrorElement:\u0027-\u0027, \u003cfunction\u003e, \u003crule\u003e or \u0027?\u0027 expected, got \u0027.\u0027\n     PsiElement(.)(\u0027.\u0027)\n   PsiElement(.)(\u0027.\u0027)\n   PsiElement(.)(\u0027.\u0027)\n\\ No newline at end of file"
        },
        {
          "file_name": "tests/org/intellij/erlang/parser/ErlangParserTest.java",
          "patch": "@@ -63,8 +63,9 @@ public ErlangParserTest() {\n   public void testTest2()             { doTest(true, true);  }\n   public void testDebug()             { doTest(true, true);  }\n   public void testDebug2()            { doTest(true, true);  }\n-  public void test182()               { doTest(true, true);  }\n   public void test175()               { doTest(true, true);  }\n+  public void test182()               { doTest(true, true);  }\n+  public void test183()               { doTest(true, true);  }\n \n   protected void doTest(boolean checkResult, boolean suppressErrors) {\n //    OVERWRITE_TESTDATA \u003d true;"
        }
      ]
    }
  }
]