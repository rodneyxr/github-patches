[
  {
    "name": "Fix memory leaks",
    "url": "https://github.com/eXist-db/exist/pull/1477",
    "description": "Closes several memory leaks found by extensive stress testing. This affects nearly all applications using library modules, but because the leaked objects are small on average, the time it takes for the growing memory usage to become manifest depends on average load and complexity of the app (typically a server may run for several weeks until it becomes slow and eventually crashes).  Another leak applies to inline functions, which are quite common now in XQuery 3.1 code.\r\n\r\nThe fixes in detail:\r\n\r\n1. function and variable declarations in imported modules not cleared: resetState was only called on functions and variables actually referenced from the importing module. Make sure it is called on *all* functions and variable declarations\r\n2. inline function closure variables not cleared: a new function call is returned by every evaluation of the inline expression and closure variables need to freed on each call after query execution\r\n3. some internal modules like the http request, response and session modules may declare variables or otherwise keep state during query execution. Always clear state afterwards\r\n\r\nThe last issue above requires a minor API change to org.exist.xquery.Module and would thus break compatibility for some external packages. To preserve backwards compatibility, the PR only deprecates the old method (with one argument).",
    "keywords": [
      "variables",
      "memory",
      "inline",
      "functions",
      "function",
      "modules"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/eXist-db/exist/commit/cb1b42828e3d6bdc4031516bfab595c9a0a231ef",
      "files": [
        {
          "file_name": "extensions/modules/src/org/exist/xquery/modules/file/FileModule.java",
          "patch": "@@ -98,15 +98,4 @@ public String getDescription()\n     public String getReleaseVersion() {\n         return RELEASED_IN_VERSION;\n     }\n-\t\n-\t/**\n-\t * Resets the Module Context \n-\t * \n-\t * @param xqueryContext The XQueryContext\n-\t */\n-\t\n-\tpublic void reset( XQueryContext xqueryContext )\n-\t{\n-\t\tsuper.reset( xqueryContext );\n-\t}\n }"
        },
        {
          "file_name": "extensions/modules/src/org/exist/xquery/modules/ftpclient/FTPClientModule.java",
          "patch": "@@ -91,9 +91,9 @@ public static FTPClient retrieveConnection(XQueryContext context, long connectio\n      * @param  xqueryContext  The XQueryContext\n      */\n     @Override\n-    public void reset(XQueryContext xqueryContext) {\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n         // reset the module context\n-        super.reset(xqueryContext);\n+        super.reset(xqueryContext, keepGlobals);\n \n         // close any open Connections\n         closeAllConnections(xqueryContext);"
        },
        {
          "file_name": "extensions/modules/src/org/exist/xquery/modules/jndi/JNDIModule.java",
          "patch": "@@ -259,10 +259,10 @@ private static synchronized long getID()\n \t * @param xqueryContext\t\tThe XQueryContext\n \t */\n \t\n-\tpublic void reset( XQueryContext xqueryContext ) \n+\tpublic void reset( XQueryContext xqueryContext, boolean keepGlobals )\n \t{\n \t\t// reset the module context\n-\t\tsuper.reset( xqueryContext );\n+\t\tsuper.reset( xqueryContext, keepGlobals );\n \n \t\t// close any open JNDI Contexts\n \t\tcloseAllJNDIContexts( xqueryContext );"
        },
        {
          "file_name": "extensions/modules/src/org/exist/xquery/modules/mail/MailModule.java",
          "patch": "@@ -416,9 +416,9 @@ public void modify(Map\u003cLong, Message[]\u003e map) {\n      * @param context The XQueryContext\n      */\n     @Override\n-    public void reset( XQueryContext context ) {\n+    public void reset( XQueryContext context, boolean keepGlobals ) {\n         // reset the module context\n-        super.reset(context);\n+        super.reset(context, keepGlobals);\n \n         // close any open MessageLists\n         closeAllMessageLists(context);"
        },
        {
          "file_name": "extensions/modules/src/org/exist/xquery/modules/sql/SQLModule.java",
          "patch": "@@ -148,9 +148,9 @@ public static synchronized long storePreparedStatement(XQueryContext context, Pr\n      * @param  xqueryContext  The XQueryContext\n      */\n     @Override\n-    public void reset(XQueryContext xqueryContext) {\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n         // reset the module context\n-        super.reset(xqueryContext);\n+        super.reset(xqueryContext, keepGlobals);\n \n         // close any open PreparedStatements\n         closeAllPreparedStatements(xqueryContext);"
        },
        {
          "file_name": "src/org/exist/xquery/AbstractInternalModule.java",
          "patch": "@@ -203,7 +203,13 @@ public boolean isVarDeclared(QName qname) {\n     }\n \n     @Override\n-    public void reset(XQueryContext xqueryContext) {\n+    public void reset(XQueryContext context) {\n         //Nothing to do\n     }\n+\n+    @Override\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n+        // call deprecated method for backwards compatibility\n+        reset(xqueryContext);\n+    }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "src/org/exist/xquery/ClosureVariable.java",
          "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * eXist Open Source Native XML Database\n+ * Copyright (C) 2001-2017 The eXist Project\n+ * http://exist-db.org\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public License\n+ * as published by the Free Software Foundation; either version 2\n+ * of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package org.exist.xquery;\n+\n+import org.exist.dom.QName;\n+\n+/**\n+ * Represents a closure variable available to an inline function.\n+ *\n+ * @author Wolfgang\n+ */\n+public class ClosureVariable extends LocalVariable {\n+\n+    public ClosureVariable(LocalVariable other) {\n+        super(other);\n+    }\n+\n+    @Override\n+    public boolean isClosureVar() {\n+        return true;\n+    }\n+}"
        },
        {
          "file_name": "src/org/exist/xquery/DynamicFunctionCall.java",
          "patch": "@@ -91,7 +91,9 @@ public int returnsType() {\n     }\n \n     @Override\n-    public void resetState(boolean postOptimization) {\n+    public void resetState(final boolean postOptimization) {\n         super.resetState(postOptimization);\n+        functionExpr.resetState(postOptimization);\n+        arguments.forEach(arg -\u003e arg.resetState(postOptimization));\n     }\n }"
        },
        {
          "file_name": "src/org/exist/xquery/ExternalModuleImpl.java",
          "patch": "@@ -52,6 +52,8 @@\n \n     private XQueryContext mContext \u003d null;\n \n+    private boolean needsReset \u003d true;\n+\n     public ExternalModuleImpl(String namespaceURI, String prefix) {\n         mNamespaceURI \u003d namespaceURI;\n         mPrefix \u003d prefix;\n@@ -268,9 +270,25 @@ public boolean moduleIsValid(DBBroker broker) {\n         return mSource !\u003d null \u0026\u0026 mSource.isValid(broker) \u003d\u003d Source.VALID;\n     }\n \n-    public void reset(XQueryContext xqueryContext) {\n-        mContext.reset();\n-        mStaticVariables.clear();\n+    @Override\n+    public void reset(XQueryContext context) {\n+        // deprecated, ignore\n+    }\n+\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n+        // prevent recursive calls by checking needsReset\n+        if (needsReset) {\n+            needsReset \u003d false;\n+            mContext.reset(keepGlobals);\n+            if (!keepGlobals) {\n+                mStaticVariables.clear();\n+                // reset state of variable declarations\n+                mGlobalVariables.values().forEach(v -\u003e v.resetState(true));\n+            }\n+            // reset state of declared functions\n+            mFunctionMap.values().forEach(f -\u003e f.resetState(true));\n+            needsReset \u003d true;\n+        }\n     }\n \n     private Expression rootExpression \u003d null;"
        },
        {
          "file_name": "src/org/exist/xquery/FunctionCall.java",
          "patch": "@@ -136,8 +136,8 @@ private void updateFunction() throws XPathException {\n \t */\n \tpublic void analyze(AnalyzeContextInfo contextInfo) throws XPathException {\n \t\t//updateFunction();\n-\t\tcontextInfo.setParent(this);\n          final AnalyzeContextInfo newContextInfo \u003d new AnalyzeContextInfo(contextInfo);\n+         newContextInfo.setParent(this);\n          newContextInfo.removeFlag(IN_NODE_CONSTRUCTOR);\n          super.analyze(newContextInfo);\n \t\tif (context.tailRecursiveCall(functionDef.getSignature())) {\n@@ -342,7 +342,6 @@ public Sequence evalFunction(Sequence contextSequence, Item contextItem, Sequenc\n     @Override\n     public void resetState(boolean postOptimization) {\n         super.resetState(postOptimization);\n-        setRecursive(false);\n         if(expression.needsReset() || postOptimization) {\n             expression.resetState(postOptimization);\n         }"
        },
        {
          "file_name": "src/org/exist/xquery/InlineFunction.java",
          "patch": "@@ -21,7 +21,9 @@\n  */\n package org.exist.xquery;\n \n+import java.util.ArrayDeque;\n import java.util.List;\n+import java.util.Stack;\n \n import org.exist.dom.QName;\n import org.exist.xquery.util.ExpressionDumper;\n@@ -41,6 +43,7 @@\n \tpublic final static QName INLINE_FUNCTION_QNAME \u003d new QName(\"\", \"\");\n \t\n \tprivate UserDefinedFunction function;\n+\tprivate ArrayDeque\u003cFunctionCall\u003e calls \u003d new ArrayDeque\u003c\u003e();\n \t\n     private AnalyzeContextInfo cachedContextInfo;\n \n@@ -51,16 +54,10 @@ public InlineFunction(XQueryContext context, UserDefinedFunction function) {\n \n \t@Override\n \tpublic void analyze(AnalyzeContextInfo contextInfo) throws XPathException {\n-        cachedContextInfo \u003d new AnalyzeContextInfo(contextInfo);\n \n-        final AnalyzeContextInfo info \u003d new AnalyzeContextInfo(contextInfo);\n-\t\tinfo.addFlag(SINGLE_STEP_EXECUTION);\n-\t\t\n-\t\t// local variable context is known within inline function:\n-\t\tfinal List\u003cVariable\u003e closureVars \u003d context.getLocalStack();\n-\t\tfunction.setClosureVariables(closureVars);\n-\t\t\n-\t\tfunction.analyze(info);\n+        cachedContextInfo \u003d new AnalyzeContextInfo(contextInfo);\n+        cachedContextInfo.addFlag(SINGLE_STEP_EXECUTION);\n+        cachedContextInfo.setParent(this);\n \t}\n \n \t@Override\n@@ -77,13 +74,17 @@ public void dump(ExpressionDumper dumper) {\n \tpublic Sequence eval(Sequence contextSequence, Item contextItem)\n \t\t\tthrows XPathException {\n \t\t// local variable context is known within inline function\n-\t\tfinal List\u003cVariable\u003e closureVars \u003d context.getLocalStack();\n-\t\tfunction.setClosureVariables(closureVars);\n+\t\tfinal List\u003cClosureVariable\u003e closureVars \u003d context.getLocalStack();\n \t\t\n \t\tfinal FunctionCall call \u003d new FunctionCall(context, function);\n+\t\tcall.getFunction().setClosureVariables(closureVars);\n \t\tcall.setLocation(function.getLine(), function.getColumn());\n-\t\tfunction.setCaller(call);\n-\t\tfunction.analyze(cachedContextInfo);\n+\t\tcall.analyze(new AnalyzeContextInfo(cachedContextInfo));\n+\n+\t\t// push the created function call to the stack so we can clear\n+        // it after execution\n+\t\tcalls.push(call);\n+\n \t\treturn new FunctionReference(call);\n \t}\n \n@@ -96,6 +97,10 @@ public int returnsType() {\n     public void resetState(boolean postOptimization) {\n         super.resetState(postOptimization);\n         // clear closure variables set on inline function\n-        function.setClosureVariables(null);\n+\t\tif (!postOptimization) {\n+\t\t\tcalls.forEach(call -\u003e call.getFunction().setClosureVariables(null));\n+\t\t}\n+        calls.clear();\n+        function.resetState(postOptimization);\n     }\n-}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "src/org/exist/xquery/LocalVariable.java",
          "patch": "@@ -34,19 +34,13 @@\n \n \tprotected LocalVariable before \u003d null;\n \tprotected LocalVariable after \u003d null;\n-\tprotected boolean isClosureVar \u003d false;\n \n     public LocalVariable(QName qname) {\n         super(qname);\n     }\n \n-\tpublic LocalVariable(LocalVariable other, boolean isClosureVar) {\n-\t\tsuper(other);\n-        this.isClosureVar \u003d isClosureVar;\n-\t}\n-\n \tpublic LocalVariable(LocalVariable other) {\n-\t\tthis(other, false);\n+\t\tsuper(other);\n \t}\n \t\n \tpublic void addAfter(LocalVariable var) {\n@@ -55,6 +49,6 @@ public void addAfter(LocalVariable var) {\n \t}\n \n     public boolean isClosureVar() {\n-        return isClosureVar;\n+        return false;\n     }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "src/org/exist/xquery/Module.java",
          "patch": "@@ -110,12 +110,20 @@\n      * module implementation (internal modules).\n      */\n     public Iterator\u003cQName\u003e getGlobalVariables();\n-    \n+\n+\t/**\n+\t * Reset the module\u0027s internal state for being reused.\n+\t *\n+\t * @deprecated use {@link #reset(XQueryContext, boolean)} instead\n+\t */\n+\t@Deprecated\n+    void reset(XQueryContext context);\n+\n \t/**\n \t * Reset the module\u0027s internal state for being reused.\n \t *\n \t */\n-\tpublic void reset(XQueryContext xqueryContext);\n+\tpublic void reset(XQueryContext xqueryContext, boolean keepGlobals);\n \n     /**\n      * Check if this module has been fully loaded"
        },
        {
          "file_name": "src/org/exist/xquery/ModuleContext.java",
          "patch": "@@ -439,15 +439,15 @@ public Variable resolveVariable(QName qname) throws XPathException {\n     \treturn parentContext.getLocalVariables();\n     }\n \n-    public List\u003cVariable\u003e getLocalStack() {\n+    public List\u003cClosureVariable\u003e getLocalStack() {\n     \treturn parentContext.getLocalStack();\n     }\n     \n     public Map\u003cQName, Variable\u003e getGlobalVariables() {\n     \treturn parentContext.getGlobalVariables();\n     }\n \n-    public void restoreStack(List\u003cVariable\u003e stack) throws XPathException {\n+    public void restoreStack(List\u003cClosureVariable\u003e stack) throws XPathException {\n     \tparentContext.restoreStack(stack);\n     }\n     "
        },
        {
          "file_name": "src/org/exist/xquery/UserDefinedFunction.java",
          "patch": "@@ -52,7 +52,7 @@\n \n     private boolean visited \u003d false;\n \n-    private List\u003cVariable\u003e closureVariables \u003d null;\n+    private List\u003cClosureVariable\u003e closureVariables \u003d null;\n     \n \tpublic UserDefinedFunction(XQueryContext context, FunctionSignature signature) {\n \t\tsuper(context, signature);\n@@ -104,10 +104,11 @@ public void analyze(AnalyzeContextInfo contextInfo) throws XPathException {\n \t\t\t\t\tvar \u003d new LocalVariable(varName);\n \t\t\t\t\tcontext.declareVariableBinding(var);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tcontextInfo.setParent(this);\n+\n+\t\t\t\tfinal AnalyzeContextInfo newContextInfo \u003d new AnalyzeContextInfo(contextInfo);\n+\t\t\t\tnewContextInfo.setParent(this);\n \t\t\t\tif (!bodyAnalyzed) {\n-\t\t\t\t\tbody.analyze(contextInfo);\n+\t\t\t\t\tbody.analyze(newContextInfo);\n \t\t\t\t\tbodyAnalyzed \u003d true;\n \t\t\t\t}\n \t\t\t} finally {\n@@ -217,20 +218,15 @@ public void resetState(boolean postOptimization) {\n \t\tsuper.resetState(postOptimization);\n         // Question: understand this test. Why not reset even is not in recursion ?\n \t\t// Answer: would lead to an infinite loop if the function is recursive.\n-\t\tif(call !\u003d null \u0026\u0026 !call.isRecursive()) {\n-            bodyAnalyzed \u003d false;\n-\t\t\tbody.resetState(postOptimization);\n-\t\t}\n+        bodyAnalyzed \u003d false;\n+        body.resetState(postOptimization);\n+\n         if (!postOptimization) {\n             currentArguments \u003d null;\n             contextDocs \u003d null;\n         }\n     }\n \n-\tpublic boolean needsReset() {\n-\t\treturn currentArguments !\u003d null;\n-\t}\n-\t\n     public void accept(ExpressionVisitor visitor) {\n         if (visited)\n             {return;}\n@@ -272,10 +268,14 @@ public void setCaller(FunctionCall call){\n     \tthis.call \u003d call;\n     }\n     \n-    public void setClosureVariables(List\u003cVariable\u003e vars) {\n+    public void setClosureVariables(List\u003cClosureVariable\u003e vars) {\n     \tthis.closureVariables \u003d vars;\n     }\n-    \n+\n+    public List\u003cClosureVariable\u003e getClosureVariables() {\n+        return closureVariables;\n+    }\n+\n     protected Sequence[] getCurrentArguments() {\n         return currentArguments;\n     }"
        },
        {
          "file_name": "src/org/exist/xquery/XQueryContext.java",
          "patch": "@@ -27,19 +27,7 @@\n import java.net.URISyntaxException;\n import java.nio.file.Path;\n import java.text.Collator;\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.GregorianCalendar;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.Properties;\n-import java.util.SimpleTimeZone;\n-import java.util.Stack;\n-import java.util.TimeZone;\n-import java.util.TreeMap;\n+import java.util.*;\n \n import javax.xml.datatype.DatatypeConfigurationException;\n import javax.xml.datatype.DatatypeFactory;\n@@ -1408,11 +1396,8 @@ public void reset(final boolean keepGlobals) {\n             watchdog.reset();\n         }\n \n-        for( final Module module : modules.values() ) {\n-            if (module instanceof ExternalModule \u0026\u0026 ((ModuleContext)((ExternalModule)module).getContext()).getParentContext() !\u003d this) {\n-                continue;\n-            }\n-            module.reset( this );\n+        for( final Module module : allModules.values() ) {\n+            module.reset( this, keepGlobals );\n         }\n \n         if( !keepGlobals ) {\n@@ -2045,9 +2030,10 @@ public boolean isVarDeclared( QName qname )\n      * \n      * @return currently visible local variables as a stack\n      */\n-    public List\u003cVariable\u003e getLocalStack() {\n-    \tfinal List\u003cVariable\u003e variables \u003d new ArrayList\u003cVariable\u003e(10);\n-    \t\n+    public List\u003cClosureVariable\u003e getLocalStack() {\n+\n+        final List\u003cClosureVariable\u003e closure \u003d new ArrayList\u003c\u003e(6);\n+\n     \tfinal LocalVariable end \u003d contextStack.isEmpty() ? null : contextStack.peek();\n \n         for ( LocalVariable var \u003d lastVar; var !\u003d null; var \u003d var.before ) {\n@@ -2056,10 +2042,10 @@ public boolean isVarDeclared( QName qname )\n                 break;\n             }\n \n-            variables.add( new LocalVariable(var, true) );\n+            closure.add( new ClosureVariable(var) );\n         }\n \n-        return ( variables );\n+        return ( closure );\n     }\n     \n     public Map\u003cQName, Variable\u003e getGlobalVariables() {\n@@ -2076,9 +2062,9 @@ public boolean isVarDeclared( QName qname )\n      * @param stack\n      * @throws XPathException\n      */\n-    public void restoreStack(List\u003cVariable\u003e stack) throws XPathException {\n+    public void restoreStack(List\u003cClosureVariable\u003e stack) throws XPathException {\n         for (int i \u003d stack.size() - 1; i \u003e -1; i--) {\n-            declareVariableBinding((LocalVariable)stack.get(i));\n+            declareVariableBinding(new ClosureVariable(stack.get(i)));\n         }\n     }\n     "
        },
        {
          "file_name": "src/org/exist/xquery/functions/request/RequestModule.java",
          "patch": "@@ -26,9 +26,7 @@\n import java.util.Map;\n \n import org.exist.dom.QName;\n-import org.exist.xquery.AbstractInternalModule;\n-import org.exist.xquery.FunctionDef;\n-import org.exist.xquery.XPathException;\n+import org.exist.xquery.*;\n \n /**\n  * Module function definitions for transform module.\n@@ -81,10 +79,12 @@\n         Arrays.sort(functions, new FunctionComparator());\n     }\n \n+    private final Variable requestVar;\n+\n     public RequestModule(Map\u003cString, List\u003c? extends Object\u003e\u003e parameters) throws XPathException {\n         super(functions, parameters, true);\n         // predefined module global variables:\n-        declareVariable(REQUEST_VAR, null);\n+        this.requestVar \u003d declareVariable(REQUEST_VAR, null);\n     }\n \n     /* (non-Javadoc)\n@@ -111,4 +111,12 @@ public String getDefaultPrefix() {\n     public String getReleaseVersion() {\n         return RELEASED_IN_VERSION;\n     }\n+\n+    @Override\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n+        super.reset(xqueryContext, keepGlobals);\n+        if (!keepGlobals) {\n+            requestVar.setValue(null);\n+        }\n+    }\n }"
        },
        {
          "file_name": "src/org/exist/xquery/functions/response/ResponseModule.java",
          "patch": "@@ -24,9 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import org.exist.dom.QName;\n-import org.exist.xquery.AbstractInternalModule;\n-import org.exist.xquery.FunctionDef;\n-import org.exist.xquery.XPathException;\n+import org.exist.xquery.*;\n \n \n /**\n@@ -58,12 +56,14 @@\n         new FunctionDef( GetExists.signature, GetExists.class )\n     };\n \n+    private final Variable responseVar;\n+\n     public ResponseModule(Map\u003cString, List\u003c? extends Object\u003e\u003e parameters) throws XPathException\n     {\n         super(functions, parameters);\n \n         // predefined module global variables:\n-        declareVariable( RESPONSE_VAR, null );\n+        this.responseVar \u003d declareVariable( RESPONSE_VAR, null );\n     }\n \n     /* (non-Javadoc)\n@@ -98,4 +98,11 @@ public String getReleaseVersion()\n         return( RELEASED_IN_VERSION );\n     }\n \n+    @Override\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n+        super.reset(xqueryContext, keepGlobals);\n+        if (!keepGlobals) {\n+            responseVar.setValue(null);\n+        }\n+    }\n }"
        },
        {
          "file_name": "src/org/exist/xquery/functions/session/SessionModule.java",
          "patch": "@@ -65,12 +65,14 @@\n \t\tnew FunctionDef( SetCurrentUser.signature, SetCurrentUser.class ),\n \t\tnew FunctionDef( GetExists.signature, GetExists.class )\n \t};\n-\t\n+\n+\tprivate final Variable sessionVar;\n+\n \tpublic SessionModule(Map\u003cString, List\u003c? extends Object\u003e\u003e parameters) throws XPathException\n \t{\n \t\tsuper(functions,  parameters);\n \t\t// predefined module global variables:\n-\t\tdeclareVariable( SESSION_VAR, null );\n+\t\tthis.sessionVar \u003d declareVariable( SESSION_VAR, null );\n \t}\n \n \t/* (non-Javadoc)\n@@ -138,4 +140,11 @@ static JavaObjectValue createSession( XQueryContext context, Function fn ) throw\n \t\treturn( ret );\n \t}\n \n+    @Override\n+    public void reset(XQueryContext xqueryContext, boolean keepGlobals) {\n+        super.reset(xqueryContext, keepGlobals);\n+        if (!keepGlobals) {\n+            sessionVar.setValue(null);\n+        }\n+    }\n }"
        },
        {
          "file_name": "src/org/exist/xquery/parser/XQuery.g",
          "patch": "@@ -975,7 +975,7 @@ stringConcatExpr throws XPathException\n { boolean isConcat \u003d false; }\n :\n \tr1:rangeExpr (\n-\t\tCONCAT^ rangeExpr { isConcat \u003d true; }\n+\t\tCONCAT! rangeExpr { isConcat \u003d true; }\n \t)*\n \t{\n \t\tif (isConcat)"
        },
        {
          "file_name": "src/org/exist/xquery/parser/XQueryParser.java",
          "patch": "@@ -6637,9 +6637,6 @@ public final void stringConcatExpr() throws RecognitionException, TokenStreamExc\n \t\t_loop301:\n \t\tdo {\n \t\t\tif ((LA(1)\u003d\u003dCONCAT)) {\n-\t\t\t\torg.exist.xquery.parser.XQueryAST tmp299_AST \u003d null;\n-\t\t\t\ttmp299_AST \u003d (org.exist.xquery.parser.XQueryAST)astFactory.create(LT(1));\n-\t\t\t\tastFactory.makeASTRoot(currentAST, tmp299_AST);\n \t\t\t\tmatch(CONCAT);\n \t\t\t\trangeExpr();\n \t\t\t\tastFactory.addASTChild(currentAST, returnAST);"
        },
        {
          "file_name": "src/org/exist/xquery/parser/XQueryParser.smap"
        },
        {
          "file_name": "test/src/org/exist/xquery/AllXqueryTests.java",
          "patch": "@@ -54,7 +54,8 @@\n         UnionTest.class,\n         TestXPathOpOrSpecialCase.class,\n         MemtreeDescendantOrSelfNodeKindTest.class,\n-        PersistentDescendantOrSelfNodeKindTest.class\n+        PersistentDescendantOrSelfNodeKindTest.class,\n+        CleanupTest.class\n })\n public class AllXqueryTests {\n }"
        },
        {
          "file_name": "test/src/org/exist/xquery/CleanupTest.java",
          "patch": "@@ -0,0 +1,144 @@\n+/*\n+ * eXist Open Source Native XML Database\n+ * Copyright (C) 2001-2017 The eXist Project\n+ * http://exist-db.org\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public License\n+ * as published by the Free Software Foundation; either version 2\n+ * of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package org.exist.xquery;\n+\n+import org.exist.EXistException;\n+import org.exist.dom.QName;\n+import org.exist.dom.persistent.DocumentSet;\n+import org.exist.security.PermissionDeniedException;\n+import org.exist.storage.BrokerPool;\n+import org.exist.storage.DBBroker;\n+import org.exist.test.ExistXmldbEmbeddedServer;\n+import org.exist.xmldb.EXistResource;\n+import org.exist.xmldb.XQueryService;\n+import org.exist.xquery.value.FunctionReference;\n+import org.exist.xquery.value.Sequence;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.xmldb.api.base.*;\n+import org.xmldb.api.modules.CollectionManagementService;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static junit.framework.TestCase.assertEquals;\n+import static junit.framework.TestCase.assertNull;\n+\n+/**\n+ * Test if inline functions and functions defined in imported modules are properly reset.\n+ *\n+ * @author Wolfgang\n+ */\n+public class CleanupTest {\n+\n+    private final static String MODULE_NS \u003d \"http://exist-db.org/test\";\n+\n+    private final static String TEST_MODULE \u003d \"module namespace t\u003d\\\"\" + MODULE_NS + \"\\\";\" +\n+            \"declare variable $t:VAR :\u003d 123;\" +\n+            \"declare function t:test($a) { $a };\" +\n+            \"declare function t:unused($a) { $a };\" +\n+            \"declare function t:inline($a) { function() { $a } };\";\n+\n+    private final static String TEST_QUERY \u003d \"import module namespace t\u003d\\\"\" + MODULE_NS + \"\\\" at \" +\n+            \"\\\"xmldb:exist:///db/test/test-module.xql\\\";\" +\n+            \"t:test(\u0027Hello world\u0027)\";\n+\n+    private final static String TEST_INLINE \u003d \"let $a :\u003d \\\"a\\\"\\n\" +\n+            \"let $func :\u003d function() { $a }\\n\" +\n+            \"return\\n\" +\n+            \"   $func\";\n+\n+    private Collection collection;\n+\n+    @ClassRule\n+    public static final ExistXmldbEmbeddedServer existEmbeddedServer \u003d new ExistXmldbEmbeddedServer(false, true);\n+\n+    @Before\n+    public void setup() throws XMLDBException {\n+        final CollectionManagementService service \u003d\n+                (CollectionManagementService) existEmbeddedServer.getRoot().getService(\"CollectionManagementService\", \"1.0\");\n+        collection \u003d service.createCollection(\"test\");\n+        final Resource doc \u003d collection.createResource(\"test-module.xql\", \"BinaryResource\");\n+        doc.setContent(TEST_MODULE);\n+        ((EXistResource) doc).setMimeType(\"application/xquery\");\n+        collection.storeResource(doc);\n+    }\n+\n+    @After\n+    public void tearDown() throws XMLDBException {\n+        final CollectionManagementService service \u003d\n+                (CollectionManagementService) existEmbeddedServer.getRoot().getService(\"CollectionManagementService\", \"1.0\");\n+        service.removeCollection(\"test\");\n+    }\n+\n+    @Test\n+    public void resetStateOfUnusedModuleMembers() throws XMLDBException, XPathException {\n+        final XQueryService service \u003d (XQueryService)collection.getService(\"XQueryService\", \"1.0\");\n+        final CompiledExpression compiled \u003d service.compile(TEST_QUERY);\n+\n+        final Module module \u003d ((PathExpr) compiled).getContext().getModule(MODULE_NS);\n+        final UserDefinedFunction unusedFunc \u003d ((ExternalModule)module).getFunction(new QName(\"unused\", MODULE_NS, \"t\"), 1, ((ExternalModule) module).getContext());\n+        final java.util.Collection\u003cVariableDeclaration\u003e varDecls \u003d ((ExternalModule) module).getVariableDeclarations();\n+        final VariableDeclaration var \u003d varDecls.iterator().next();\n+        final Expression unusedBody \u003d unusedFunc.getFunctionBody();\n+        final FunctionCall root \u003d (FunctionCall) ((PathExpr) compiled).getFirst();\n+        final UserDefinedFunction calledFunc \u003d root.getFunction();\n+        final Expression calledBody \u003d calledFunc.getFunctionBody();\n+\n+        // set some property so we can test if it gets cleared\n+        calledFunc.setContextDocSet(DocumentSet.EMPTY_DOCUMENT_SET);\n+        calledBody.setContextDocSet(DocumentSet.EMPTY_DOCUMENT_SET);\n+        unusedBody.setContextDocSet(DocumentSet.EMPTY_DOCUMENT_SET);\n+        var.setContextDocSet(DocumentSet.EMPTY_DOCUMENT_SET);\n+\n+        // execute query and check result\n+        final ResourceSet result \u003d service.execute(compiled);\n+        assertEquals(result.getSize(), 1);\n+        assertEquals(result.getResource(0).getContent(), \"Hello world\");\n+\n+        Sequence[] args \u003d calledFunc.getCurrentArguments();\n+        assertNull(args);\n+        assertNull(calledFunc.getContextDocSet());\n+        assertNull(calledBody.getContextDocSet());\n+        args \u003d unusedFunc.getCurrentArguments();\n+        assertNull(args);\n+        assertNull(unusedBody.getContextDocSet());\n+        assertNull(unusedFunc.getContextDocSet());\n+        assertNull(var.getContextDocSet());\n+    }\n+\n+    @Test\n+    public void resetStateOfInlineFunc() throws XMLDBException, EXistException, PermissionDeniedException, XPathException {\n+        final BrokerPool pool \u003d BrokerPool.getInstance();\n+        final XQuery xquery \u003d pool.getXQueryService();\n+        try (final DBBroker broker \u003d pool.get(Optional.of(pool.getSecurityManager().getSystemSubject()))) {\n+            // execute query to get a function item\n+            final Sequence result \u003d xquery.execute(broker, TEST_INLINE, Sequence.EMPTY_SEQUENCE);\n+            assertEquals(result.getItemCount(), 1);\n+            final FunctionCall call \u003d ((FunctionReference)result.itemAt(0)).getCall();\n+            // closure variables are set when function item is created, but should be cleared after query\n+            final List\u003cClosureVariable\u003e closure \u003d call.getFunction().getClosureVariables();\n+            assertNull(closure);\n+        }\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "memory-leak in IconFactory for Baulast and Baulastblatt",
    "url": "https://github.com/cismet/cids-custom-wuppertal/issues/254",
    "description": "Both icon factories uses a list of object retrival workers. This list does increase with each create node, and seems to never decrease.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/cismet/cids-custom-wuppertal/commit/8b7876223c68d7845963969f0f9fc81f9647e7b7",
      "files": [
        {
          "file_name": "src/main/java/de/cismet/cids/custom/treeicons/wunda_blau/Alb_baulastIconFactory.java",
          "patch": "@@ -21,6 +21,7 @@\n \n import java.util.HashSet;\n import java.util.List;\n+import java.util.WeakHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n \n@@ -63,7 +64,8 @@\n     //~ Instance fields --------------------------------------------------------\n \n     volatile javax.swing.SwingWorker\u003cVoid, Void\u003e objectRetrievingWorker \u003d null;\n-    final HashSet\u003cObjectTreeNode\u003e listOfRetrievingObjectWorkers \u003d new HashSet\u003cObjectTreeNode\u003e();\n+    final WeakHashMap\u003cObjectTreeNode, ExecutorService\u003e listOfRetrievingObjectWorkers \u003d\n+        new WeakHashMap\u003cObjectTreeNode, ExecutorService\u003e();\n     private final ExecutorService objectRetrievalExecutor \u003d Executors.newFixedThreadPool(15);\n     private final ImageIcon DELETED_ICON;\n     private final ImageIcon CLOSED_ICON;\n@@ -167,10 +169,10 @@ private Icon generateIconFromState(final ObjectTreeNode node) {\n                 }\n                 return result;\n             } else {\n-                if (!listOfRetrievingObjectWorkers.contains(node)) {\n-                    synchronized (listOfRetrievingObjectWorkers) {\n-                        if (!listOfRetrievingObjectWorkers.contains(node)) {\n-                            listOfRetrievingObjectWorkers.add(node);\n+                if (!listOfRetrievingObjectWorkers.containsKey(node)) {\n+                    if (!listOfRetrievingObjectWorkers.containsKey(node)) {\n+                        listOfRetrievingObjectWorkers.put(node, objectRetrievalExecutor);\n+                        synchronized (listOfRetrievingObjectWorkers) {\n                             objectRetrievalExecutor.execute(new javax.swing.SwingWorker\u003cVoid, Void\u003e() {\n \n                                     @Override\n@@ -189,15 +191,13 @@ protected Void doInBackground() throws Exception {\n                                                 node.getMetaObject(true);\n                                             }\n                                         }\n+\n                                         return null;\n                                     }\n \n                                     @Override\n                                     protected void done() {\n                                         try {\n-                                            synchronized (listOfRetrievingObjectWorkers) {\n-                                                listOfRetrievingObjectWorkers.remove(node);\n-                                            }\n                                             final Void result \u003d get();\n                                             if (node.getPath()[0].equals(\n                                                             ComponentRegistry.getRegistry().getSearchResultsTree()\n@@ -212,6 +212,10 @@ protected void done() {\n                                             }\n                                         } catch (Exception e) {\n                                             log.error(\"Fehler beim Laden des MetaObjects\", e);\n+                                        } finally {\n+                                            synchronized (listOfRetrievingObjectWorkers) {\n+                                                listOfRetrievingObjectWorkers.remove(node);\n+                                            }\n                                         }\n                                     }\n                                 });"
        },
        {
          "file_name": "src/main/java/de/cismet/cids/custom/treeicons/wunda_blau/Alb_baulastblattIconFactory.java",
          "patch": "@@ -21,6 +21,7 @@\n \n import java.util.HashSet;\n import java.util.List;\n+import java.util.WeakHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n \n@@ -50,7 +51,8 @@\n     //~ Instance fields --------------------------------------------------------\n \n     volatile javax.swing.SwingWorker\u003cVoid, Void\u003e objectRetrievingWorker \u003d null;\n-    final HashSet\u003cObjectTreeNode\u003e listOfRetrievingObjectWorkers \u003d new HashSet\u003cObjectTreeNode\u003e();\n+    final WeakHashMap\u003cObjectTreeNode, ExecutorService\u003e listOfRetrievingObjectWorkers \u003d\n+        new WeakHashMap\u003cObjectTreeNode, ExecutorService\u003e();\n     private final ExecutorService objectRetrievalExecutor \u003d Executors.newFixedThreadPool(15);\n     private final ImageIcon DELETED_ICON;\n     private final ImageIcon WARNING_ICON;\n@@ -143,10 +145,10 @@ private Icon generateIconFromState(final ObjectTreeNode node) {\n                 }\n                 return result;\n             } else {\n-                if (!listOfRetrievingObjectWorkers.contains(node)) {\n-                    synchronized (listOfRetrievingObjectWorkers) {\n-                        if (!listOfRetrievingObjectWorkers.contains(node)) {\n-                            listOfRetrievingObjectWorkers.add(node);\n+                if (!listOfRetrievingObjectWorkers.containsKey(node)) {\n+                    if (!listOfRetrievingObjectWorkers.containsKey(node)) {\n+                        listOfRetrievingObjectWorkers.put(node, objectRetrievalExecutor);\n+                        synchronized (listOfRetrievingObjectWorkers) {\n                             objectRetrievalExecutor.execute(new javax.swing.SwingWorker\u003cVoid, Void\u003e() {\n \n                                     @Override\n@@ -171,9 +173,6 @@ protected Void doInBackground() throws Exception {\n                                     @Override\n                                     protected void done() {\n                                         try {\n-                                            synchronized (listOfRetrievingObjectWorkers) {\n-                                                listOfRetrievingObjectWorkers.remove(node);\n-                                            }\n                                             final Void result \u003d get();\n                                             if (node.getPath()[0].equals(\n                                                             ComponentRegistry.getRegistry().getSearchResultsTree()\n@@ -188,6 +187,10 @@ protected void done() {\n                                             }\n                                         } catch (Exception e) {\n                                             log.error(\"Fehler beim Laden des MetaObjects\", e);\n+                                        } finally {\n+                                            synchronized (listOfRetrievingObjectWorkers) {\n+                                                listOfRetrievingObjectWorkers.remove(node);\n+                                            }\n                                         }\n                                     }\n                                 });"
        },
        {
          "file_name": "src/main/java/de/cismet/cids/custom/treeicons/wunda_blau/Sb_stadtbildserieIconFactory.java",
          "patch": "@@ -152,8 +152,10 @@ protected void done() {\n                                             final Icon result \u003d get();\n                                             setIconToNode(node, result);\n                                             final boolean wasChangedBefore \u003d node.isChanged();\n-                                            node.setMetaObject(null);\n-                                            node.setChanged(wasChangedBefore);\n+                                            if (node.getMetaObject(false) !\u003d null) {\n+                                                node.setMetaObject(null);\n+                                                node.setChanged(wasChangedBefore);\n+                                            }\n                                         } catch (Exception e) {\n                                             LOG.error(\"Fehler beim Laden des MetaObjects\", e);\n                                         } finally {"
        }
      ]
    }
  },
  {
    "name": "JSONPersistence - Fix memory leak",
    "url": "https://github.com/anthonyjatoba/code-smells-history-miner/issues/1",
    "description": "The way the code works may be a problem in bigger projects",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/anthonyjatoba/code-smells-history-miner/commit/49e09905218391efe0749c19e519073f25f2546b",
      "files": [
        {
          "file_name": "JSONPersistence/src/main/java/br/edu/ufal/App2.java",
          "patch": "@@ -50,6 +50,32 @@ public static void main(String[] args) throws IOException {\n \t\tlong startTime \u003d System.currentTimeMillis();\n \n \t\tFiles.walk(Paths.get(jsonPath)).forEach(filePath -\u003e {\n+\t\t\t\n+\t\t\t//Persisto a cada 50 para não usar muita memória\n+\t\t\tif (commits.size() \u003d\u003d 50) {\n+\t\t\t\tSession session \u003d sessionFactory.openSession();\n+\t\t\t\tTransaction tx \u003d session.beginTransaction();\n+\n+\t\t\t\ttry {\n+\t\t\t\t\tfor (int i \u003d 0; i \u003c commits.size(); i++) {\n+\t\t\t\t\t\tSystem.out.println((i + 1) + \" of \" + commits.size());\n+\t\t\t\t\t\tsession.save(commits.get(i));\n+\t\t\t\t\t\tif (i !\u003d 0 \u0026\u0026 i % 50 \u003d\u003d 0) {\n+\t\t\t\t\t\t\tSystem.out.println(\"Flushing batch \" + i / 50);\n+\t\t\t\t\t\t\tsession.flush();\n+\t\t\t\t\t\t\tsession.clear();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tSystem.err.println(e);\n+\t\t\t\t} finally {\n+\t\t\t\t\ttx.commit();\n+\t\t\t\t\tsession.close();\n+\t\t\t\t}\n+\n+\t\t\t\tcommits.clear();\n+\n+\t\t\t}\n \n \t\t\tif (Files.isRegularFile(filePath)) {\n \n@@ -133,7 +159,9 @@ public static void main(String[] args) throws IOException {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t});\n+\t\t}\n+\n+\t\t);\n \n \t\tSystem.out.println(\"Total files related to corrections: \" + filesRelatedToCorrections);\n \t\tSystem.out.println(\"Total files related to corrections found: \" + filesRelatedToCorrectionsFound);\n@@ -158,6 +186,8 @@ public static void main(String[] args) throws IOException {\n \t\t\tsession.close();\n \t\t}\n \n+\t\tcommits.clear();\n+\n \t\tlong millis \u003d (System.currentTimeMillis() - startTime);\n \n \t\tString hms \u003d String.format(\"%02d:%02d:%02d\", TimeUnit.MILLISECONDS.toHours(millis),\n@@ -417,7 +447,7 @@ private static boolean containsCorrections(Commit commit) {\n \t\tString subject \u003d commit.getSubject().toLowerCase();\n \n \t\tfor (String keyword : keywords) {\n-\t\t\tif (message.contains(keyword) || subject.contains(keyword)\t) {\n+\t\t\tif (message.contains(keyword) || subject.contains(keyword)) {\n \t\t\t\treturn true;\n \t\t\t}\n "
        }
      ]
    }
  },
  {
    "name": "Memory leak opening notebooks",
    "url": "https://github.com/twosigma/beakerx/issues/266",
    "description": "Open the task manager and click \u0027file -\u003e new\u0027 over and over. You\u0027ll see the memory for the tab increase by ~10mb each time.\n\nYou can easily crash the UI with this by opening the tutorial a few times.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/twosigma/beakerx/commit/48f8f7fd0d0dba0f446596dc15e1f5c2ee563008",
      "files": [
        {
          "file_name": "core/src/main/web/app/beaker.js",
          "patch": "@@ -98,7 +98,7 @@\n       \u0027bk.evaluatePluginManager\u0027,\n       \u0027bk.controlPanel\u0027,\n       \u0027bk.mainApp\u0027,\n-      \u0027bk.debug\u0027\n+      \u0027bk.helper\u0027\n     ]);\n \n     // setup routing. the template is going to replace ng-view\n@@ -201,7 +201,7 @@\n       }\n     });\n \n-    beaker.run(function($location, $route, $document, bkUtils, bkCoreManager, bkDebug) {\n+    beaker.run(function($location, $route, $document, bkUtils, bkCoreManager, bkHelper) {\n       var user;\n       var lastAction \u003d new Date();\n       var beakerRootOp \u003d {\n@@ -261,7 +261,7 @@\n           $(\u0027.dropdown.open .dropdown-toggle\u0027).dropdown(\u0027toggle\u0027);\n         }\n       });\n-      window.bkDebug \u003d bkDebug;\n+      window.bkHelper \u003d bkHelper;\n     });\n \n     beaker.run(function(bkEvaluatePluginManager) {"
        },
        {
          "file_name": "core/src/main/web/app/helpers/debug.js",
          "patch": "@@ -25,7 +25,6 @@\n     \u0027bk.cellMenuPluginManager\u0027,\n     \"bk.core\",\n     \u0027bk.sessionManager\u0027,\n-    \"bk.helper\",\n     \"bk.outputLog\",\n     \"bk.recentMenu\",\n     \"bk.session\",\n@@ -41,7 +40,7 @@\n   ]);\n   module.factory(\"bkDebug\", function(\n       $injector, angularUtils, bkEvaluateJobManager, bkCellMenuPluginManager, bkSessionManager,\n-      bkCoreManager, bkHelper, bkOutputLog, bkRecentMenu, bkSession, bkShare,\n+      bkCoreManager, bkOutputLog, bkRecentMenu, bkSession, bkShare,\n       bkTrack, bkUtils, cometdUtils, commonUtils, bkMenuPluginManager, bkEvaluatePluginManager,\n       bkEvaluatorManager) {\n     return {\n@@ -51,7 +50,6 @@\n       bkCellMenuPluginManager: bkCellMenuPluginManager,\n       bkSessionManager: bkSessionManager,\n       bkCoreManager: bkCoreManager,\n-      bkHelper: bkHelper,\n       bkOutputLog: bkOutputLog,\n       bkRecentMenu: bkRecentMenu,\n       bkSession: bkSession,\n@@ -62,7 +60,11 @@\n       commonUtils: commonUtils,\n       bkMenuPluginManager: bkMenuPluginManager,\n       bkEvaluatePluginManager: bkEvaluatePluginManager,\n-      bkEvaluatorManager: bkEvaluatorManager\n+      bkEvaluatorManager: bkEvaluatorManager,\n+      debugUI: function() {\n+        bkHelper.getBkNotebookViewModel().toggleDebugging();\n+        bkHelper.refreshRootScope();\n+      }\n     };\n   });\n })();"
        },
        {
          "file_name": "core/src/main/web/app/helpers/helper.js",
          "patch": "@@ -20,7 +20,7 @@\n  */\n (function() {\n   \u0027use strict\u0027;\n-  var module \u003d angular.module(\u0027bk.helper\u0027, [\u0027bk.utils\u0027, \u0027bk.core\u0027, \u0027bk.share\u0027]);\n+  var module \u003d angular.module(\u0027bk.helper\u0027, [\u0027bk.utils\u0027, \u0027bk.core\u0027, \u0027bk.share\u0027, \u0027bk.debug\u0027]);\n   /**\n    * bkHelper\n    * - should be the only thing plugins depend on to interact with general beaker stuffs (other than\n@@ -30,7 +30,7 @@\n    *   plugins dynamically\n    * - it mostly should just be a subset of bkUtil\n    */\n-  module.factory(\u0027bkHelper\u0027, function(bkUtils, bkCoreManager, bkShare) {\n+  module.factory(\u0027bkHelper\u0027, function(bkUtils, bkCoreManager, bkShare, bkDebug) {\n     var getCurrentApp \u003d function() {\n       return bkCoreManager.getBkApp();\n     };\n@@ -43,6 +43,10 @@\n     };\n \n     var bkHelper \u003d {\n+      // enable debug\n+      debug: function() {\n+        window.bkDebug \u003d bkDebug;\n+      },\n \n       // beaker (root)\n       gotoControlPanel: function() {\n@@ -265,7 +269,7 @@\n       // bkShare\n       share: bkShare\n     };\n-    window.bkHelper \u003d bkHelper; // TODO, we want to revisit the decision of making this global\n+\n     return bkHelper;\n   });\n })();"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/cell-directive.js",
          "patch": "@@ -149,7 +149,7 @@\n       },\n       link: function(scope, element, attrs) {\n         var div \u003d element.find(\".bkcell\").first();\n-        div.click(function(event) {\n+        var clickHandler \u003d function(event) {\n           //click in the border or padding should trigger menu\n           if (bkUtils.getEventOffsetX(div, event) \u003e\u003d div.width()) {\n             var menu \u003d div.find(\u0027.bkcellmenu\u0027).last();\n@@ -158,13 +158,20 @@\n             menu.find(\u0027.dropdown-toggle\u0027).first().dropdown(\u0027toggle\u0027);\n             event.stopPropagation();\n           }\n-        });\n-        div.mousemove(function(event) {\n+        };\n+        div.on(\"click\", clickHandler);\n+        var mouseMoveHandler \u003d function(event) {\n           if (bkUtils.getEventOffsetX(div, event) \u003e\u003d div.width()) {\n             div.css(\u0027cursor\u0027, \u0027pointer\u0027);\n           } else {\n             div.css(\u0027cursor\u0027, \u0027default\u0027);\n           }\n+        };\n+        div.mousemove(\u0027mousemove\u0027, mouseMoveHandler);\n+\n+        scope.$on(\"$destroy\", function() {\n+          div.off(\"click\", clickHandler);\n+          div.off(\"mousemove\", mouseMoveHandler);\n         });\n       }\n     };"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/codecell-directive.js",
          "patch": "@@ -193,10 +193,6 @@\n             notebookCellOp.reset();\n           }\n         });\n-        $scope.$on(\"$destroy\", function() {\n-          $scope.bkNotebook.unregisterFocusable($scope.cellmodel.id);\n-          $scope.bkNotebook.unregisterCM($scope.cellmodel.id);\n-        });\n       },\n       link: function(scope, element, attrs) {\n         scope.showDebug \u003d false;\n@@ -222,13 +218,14 @@\n           }\n           cm.refresh();\n         }\n-\n-        CodeMirror.on(window, \"resize\", function() {\n+        var resizeHandler \u003d function() {\n           var showing \u003d document.body.getElementsByClassName(\"CodeMirror-fullscreen\")[0];\n           if (!showing)\n             return;\n           showing.CodeMirror.getWrapperElement().style.height \u003d winHeight() + \"px\";\n-        });\n+        };\n+\n+        CodeMirror.on(window, \"resize\", resizeHandler);\n         var moveFocusDown \u003d function() {\n           // move focus to next code cell\n           var thisCellId \u003d scope.cellmodel.id;\n@@ -363,10 +360,11 @@\n           }\n         });\n         // cellmodel.body \u003c-- CodeMirror\n-        scope.cm.on(\"change\", function(cm, e) {\n+        var changeHandler \u003d function(cm, e) {\n           scope.cellmodel.input.body \u003d cm.getValue();\n           bkUtils.refreshRootScope();\n-        });\n+        };\n+        scope.cm.on(\"change\", changeHandler);\n \n         var inputMenuDiv \u003d element.find(\".bkcell\").first();\n         scope.popupMenu \u003d function(event) {\n@@ -376,19 +374,21 @@\n           menu.css(\"left\", clicked ? event.clientX - 150 : \"\");\n           menu.find(\u0027.dropdown-toggle\u0027).first().dropdown(\u0027toggle\u0027);\n         };\n-        inputMenuDiv.click(function(event) {\n+        var inputClickHandler \u003d function(event) {\n           if (bkUtils.getEventOffsetX(inputMenuDiv, event) \u003e\u003d inputMenuDiv.width()) {\n             scope.popupMenu(event);\n             event.stopPropagation();\n           }\n-        });\n-        inputMenuDiv.mousemove(function(event) {\n+        };\n+        inputMenuDiv.click(inputClickHandler);\n+        var inputMousemoveHandler \u003d function(event) {\n           if (bkUtils.getEventOffsetX(inputMenuDiv, event) \u003e\u003d inputMenuDiv.width()) {\n             inputMenuDiv.css(\u0027cursor\u0027, \u0027pointer\u0027);\n           } else {\n             inputMenuDiv.css(\u0027cursor\u0027, \u0027default\u0027);\n           }\n-        });\n+        };\n+        inputMenuDiv.mousemove(inputMousemoveHandler);\n \n         if (scope.isInitializationCell()) {\n           element.closest(\".bkcell\").addClass(\"initcell\");\n@@ -413,6 +413,16 @@\n           var cells \u003d [scope.cellmodel];\n           return bkUtils.generateNotebook([evaluator], cells);\n         };\n+\n+        scope.$on(\"$destroy\", function() {\n+          inputMenuDiv.off(\"click\", inputClickHandler);\n+          inputMenuDiv.off(\"mousemove\", inputMousemoveHandler);\n+          CodeMirror.off(window, \"resize\", resizeHandler);\n+          CodeMirror.off(\"change\", changeHandler);\n+          scope.bkNotebook.unregisterFocusable(scope.cellmodel.id);\n+          scope.bkNotebook.unregisterCM(scope.cellmodel.id);\n+          scope.bkNotebook \u003d null;\n+        });\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/codecelloutputmenu-directive.js",
          "patch": "@@ -64,7 +64,7 @@\n       },\n       link: function(scope, element, attrs) {\n         var outputMenuDiv \u003d element.parent(\u0027.bkcell\u0027);\n-        outputMenuDiv.click(function(event) {\n+        var clickHandler \u003d function(event) {\n           //click in the border or padding should trigger menu\n           if (bkUtils.getEventOffsetX(outputMenuDiv, event) \u003e\u003d outputMenuDiv.width()) {\n             var menu \u003d outputMenuDiv.find(\u0027.dropdown\u0027).last();\n@@ -73,13 +73,19 @@\n             menu.find(\u0027.dropdown-toggle\u0027).first().dropdown(\u0027toggle\u0027);\n             event.stopPropagation();\n           }\n-        });\n-        outputMenuDiv.mousemove(function(event) {\n+        };\n+        outputMenuDiv.click(clickHandler);\n+        var mousemoveHandler \u003d function(event) {\n           if (bkUtils.getEventOffsetX(outputMenuDiv, event) \u003e\u003d outputMenuDiv.width()) {\n             outputMenuDiv.css(\u0027cursor\u0027, \u0027pointer\u0027);\n           } else {\n             outputMenuDiv.css(\u0027cursor\u0027, \u0027default\u0027);\n           }\n+        };\n+        outputMenuDiv.mousemove(mousemoveHandler);\n+        scope.$on(\"$destroy\", function () {\n+          outputMenuDiv.off(\"click\", clickHandler);\n+          outputMenuDiv.off(\"mousemove\", mousemoveHandler);\n         });\n       }\n     };"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/markdowncell-directive.js",
          "patch": "@@ -72,6 +72,11 @@\n             bkSessionManager.setNotebookModelEdited(true);\n           }\n         });\n+\n+        scope.$on(\u0027$destroy\u0027, function() {\n+          editor.unload();\n+          EpicEditor._data.unnamedEditors \u003d [];\n+        });\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/notebook-directive.js",
          "patch": "@@ -89,6 +89,7 @@\n           },\n           unregisterFocusable: function (cellId) {\n             delete this._focusables[cellId];\n+            this._focusables[cellId] \u003d null;\n           },\n           getFocusable: function (cellId) {\n             return this._focusables[cellId];\n@@ -100,6 +101,7 @@\n           },\n           unregisterCM: function (cellId) {\n             delete this._codeMirrors[cellId];\n+            this._codeMirrors[cellId] \u003d null;\n           },\n           _cmKeyMapMode: \"default\",\n           setCMKeyMapMode: function (keyMapMode) {\n@@ -159,15 +161,28 @@\n           $(\".outputlogout\").css(\"width\", width);\n           $(\".outputlogerr\").css(\"width\", width);\n         };\n+        $scope.unregisters \u003d [];\n         $(window).resize(fixOutputLogPosition);\n-        $(\".outputloghandle\").drag(\"start\", function () {\n+        $scope.unregisters.push(function() {\n+          $(window).off(\"resize\", fixOutputLogPosition);\n+        });\n+        var dragStartHandler \u003d function () {\n           dragHeight \u003d outputLogHeight;\n+        };\n+        var outputloghandle \u003d $(\".outputloghandle\");\n+        outputloghandle.drag(\"start\", dragStartHandler);\n+        $scope.unregisters.push(function() {\n+          outputloghandle.off(\"dragstart\", dragStartHandler);\n         });\n-        $(\".outputloghandle\").drag(function (ev, dd) {\n+        var dragHandler \u003d function (ev, dd) {\n           outputLogHeight \u003d dragHeight - dd.deltaY;\n           if (outputLogHeight \u003c 20) outputLogHeight \u003d 20;\n           if (outputLogHeight \u003e window.innerHeight - 50) outputLogHeight \u003d window.innerHeight - 50;\n           fixOutputLogPosition();\n+        };\n+        outputloghandle.drag(dragHandler);\n+        $scope.unregisters.push(function() {\n+          outputloghandle.off(\"drag\", dragHandler);\n         });\n         $scope.showStdOut \u003d true;\n         $scope.showStdErr \u003d true;\n@@ -184,7 +199,7 @@\n         bkOutputLog.getLog(function (res) {\n           $scope.outputLog \u003d res;\n         });\n-        bkOutputLog.subscribe(function (reply) {\n+        $scope.unregisterOutputLog \u003d bkOutputLog.subscribe(function (reply) {\n           if (!_impl._viewModel.isShowingOutput()) {\n             _impl._viewModel.toggleShowOutput();\n           }\n@@ -269,6 +284,13 @@\n             }\n           }\n         });\n+        scope.$on(\"$destroy\", function() {\n+          scope.setBkNotebook({bkNotebook: undefined});\n+          scope.unregisterOutputLog();\n+          _(scope.unregisters).each(function(unregister) {\n+            unregister();\n+          })\n+        });\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/components/notebook/outputdisplay/outputdisplay-directive.js",
          "patch": "@@ -61,6 +61,11 @@\n             refresh(scope.type);\n           }\n         });\n+        scope.$on(\"$destroy\", function () {\n+          if (childScope) {\n+            childScope.$destroy();\n+          }\n+        });\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/mainapp.js",
          "patch": "@@ -503,6 +503,8 @@\n           stopAutoBackup();\n           bkCoreManager.setBkAppImpl(null);\n           $(document).unbind(\u0027keydown\u0027, keydownHandler);\n+          window.onbeforeunload \u003d null;\n+          bkUtils.removeConnectedStatusListener();\n         };\n \n         // TODO, when use setLocation and leave from bkApp (e.g. to control panel),\n@@ -537,6 +539,7 @@\n             window.open(\"./\");\n           } else {\n             bkSessionManager.backup().then(function() {\n+              bkSessionManager.clear();\n               bkCoreManager.gotoControlPanel();\n             });\n           }"
        },
        {
          "file_name": "core/src/main/web/app/mainapp/services/notebookcellmodelmanager.js",
          "patch": "@@ -145,6 +145,8 @@\n       reset: function(_cells_) {\n         if (_cells_) {\n           cells \u003d _cells_;\n+        } else {\n+          cells \u003d [];\n         }\n         this.clipboard \u003d null;\n         recreateCellMap();"
        },
        {
          "file_name": "core/src/main/web/app/utils/cometdutils.js",
          "patch": "@@ -35,7 +35,10 @@\n         $.cometd.removeListener(_statusListener);\n       },\n       addOutputlogUpdateListener: function (cb) {\n-        $.cometd.subscribe(\"/outputlog\", cb);\n+        var listener \u003d $.cometd.subscribe(\"/outputlog\", cb);\n+        return function() {\n+          $.cometd.removeListener(listener);\n+        };\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/utils/outputlog.js",
          "patch": "@@ -30,7 +30,7 @@\n             });\n       },\n       subscribe: function (cb) {\n-        cometdUtils.addOutputlogUpdateListener(cb);\n+        return cometdUtils.addOutputlogUpdateListener(cb);\n       }\n     };\n   });"
        },
        {
          "file_name": "core/src/main/web/app/utils/utils.js",
          "patch": "@@ -185,7 +185,10 @@\n         return deferred.promise;\n       },\n       addConnectedStatusListener: function(cb) {\n-        cometdUtils.addConnectedStatusListener(cb);\n+        return cometdUtils.addConnectedStatusListener(cb);\n+      },\n+      removeConnectedStatusListener: function() {\n+        return cometdUtils.removeConnectedStatusListener();\n       },\n \n       // wrapper around requireJS"
        },
        {
          "file_name": "core/src/main/web/vendor/epiceditor/js/epiceditor.js",
          "patch": "@@ -863,25 +863,28 @@\n \n     // Sets up the NATIVE fullscreen editor/previewer for WebKit\n     if (nativeFsWebkit) {\n-      document.addEventListener(\u0027webkitfullscreenchange\u0027, function () {\n+      self.webkitfullscreenchange_handler \u003d function () {\n         if (!document.webkitIsFullScreen \u0026\u0026 self._eeState.fullscreen) {\n           self._exitFullscreen(fsElement);\n         }\n-      }, false);\n+      };\n+      document.addEventListener(\u0027webkitfullscreenchange\u0027, self.webkitfullscreenchange_handler, false);\n     }\n     else if (nativeFsMoz) {\n-      document.addEventListener(\u0027mozfullscreenchange\u0027, function () {\n+      self.mozfullscreenchange_handler \u003d function () {\n         if (!document.mozFullScreen \u0026\u0026 self._eeState.fullscreen) {\n           self._exitFullscreen(fsElement);\n         }\n-      }, false);\n+      };\n+      document.addEventListener(\u0027mozfullscreenchange\u0027, self.mozfullscreenchange_handler, false);\n     }\n     else if (nativeFsW3C) {\n-      document.addEventListener(\u0027fullscreenchange\u0027, function () {\n+      self.fullscreenchange_handler \u003d function () {\n         if (document.fullscreenElement \u003d\u003d null \u0026\u0026 self._eeState.fullscreen) {\n           self._exitFullscreen(fsElement);\n         }\n-      }, false);\n+      };\n+      document.addEventListener(\u0027fullscreenchange\u0027, self.fullscreenchange_handler, false);\n     }\n \n     // TODO: Move utilBar stuff into a utilBar setup function (_setupUtilBar)\n@@ -1035,13 +1038,13 @@\n       self._setupTextareaSync();\n     }\n \n-    window.addEventListener(\u0027resize\u0027, function () {\n+    self.onResize \u003d function () {\n       // If NOT webkit, and in fullscreen, we need to account for browser resizing\n       // we don\u0027t care about webkit because you can\u0027t resize in webkit\u0027s fullscreen\n       if (self.is(\u0027fullscreen\u0027)) {\n         _applyStyles(self.iframeElement, {\n           \u0027width\u0027: window.outerWidth + \u0027px\u0027\n-        , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n+          , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n         });\n \n         _applyStyles(self.element, {\n@@ -1050,19 +1053,21 @@\n \n         _applyStyles(self.previewerIframe, {\n           \u0027width\u0027: window.outerWidth / 2 + \u0027px\u0027\n-        , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n+          , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n         });\n \n         _applyStyles(self.editorIframe, {\n           \u0027width\u0027: window.outerWidth / 2 + \u0027px\u0027\n-        , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n+          , \u0027height\u0027: window.innerHeight + \u0027px\u0027\n         });\n       }\n       // Makes the editor support fluid width when not in fullscreen mode\n       else if (!self.is(\u0027fullscreen\u0027)) {\n         self.reflow();\n       }\n-    });\n+    };\n+\n+    window.addEventListener(\u0027resize\u0027, self.onResize);\n \n     // Set states before flipping edit and preview modes\n     self._eeState.loaded \u003d true;\n@@ -1219,6 +1224,21 @@\n       window.clearInterval(self._textareaSaveTimer);\n     }\n \n+    if (self.webkitfullscreenchange_handler) {\n+      document.removeEventListener(\u0027webkitfullscreenchange\u0027, self.webkitfullscreenchange_handler);\n+    }\n+    if (self.mozfullscreenchange_handler) {\n+      document.removeEventListener(\u0027mozfullscreenchange\u0027, self.mozfullscreenchange_handler);\n+    }\n+    if (self.fullscreenchange_handler) {\n+      document.removeEventListener(\"fullscreenchange\", self.fullscreenchange_handler);\n+    }\n+\n+    if (self.onResize) {\n+      window.removeEventListener(\u0027resize\u0027, self.onResize);\n+    }\n+\n+\n     callback.call(this);\n     self.emit(\u0027unload\u0027);\n     return self;"
        }
      ]
    }
  },
  {
    "name": "fixes the memory-leak bug by introducing a max packet size",
    "url": "https://github.com/benedekh/WeLoveClouds/pull/110",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/benedekh/WeLoveClouds/commit/b0458360886551f5732234e172dca6a991da114e",
      "files": [
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/communication/models/Connection.java",
          "patch": "@@ -21,7 +21,7 @@ protected Connection(Builder builder) {\n     }\n \n     public boolean isConnected() {\n-        return socket !\u003d null \u0026\u0026 socket.isConnected() \u0026\u0026 !socket.isClosed();\n+        return socket !\u003d null \u0026\u0026 !socket.isClosed();\n     }\n \n     public ServerConnectionInfo getRemoteServer() {\n@@ -53,6 +53,8 @@ public OutputStream getOutputStream() throws IOException {\n      */\n     public void kill() throws IOException {\n         if (isConnected()) {\n+            socket.shutdownOutput();\n+            socket.shutdownInput();\n             socket.close();\n         }\n     }"
        },
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/communication/services/CommunicationService.java",
          "patch": "@@ -1,5 +1,6 @@\n package weloveclouds.communication.services;\n \n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -14,6 +15,7 @@\n import weloveclouds.communication.exceptions.UnableToSendContentToServerException;\n import weloveclouds.communication.models.Connection;\n import weloveclouds.communication.models.ServerConnectionInfo;\n+import weloveclouds.communication.validator.SerializedMessageValidator;\n \n /**\n  * The communication module implementation which executes the network operations (connect,\n@@ -23,6 +25,8 @@\n  */\n public class CommunicationService implements ICommunicationService {\n \n+    private static final int MAX_PACKET_SIZE_IN_BYTES \u003d 65535;\n+\n     private static final Logger LOGGER \u003d Logger.getLogger(CommunicationService.class);\n \n     private SocketFactory socketFactory;\n@@ -110,24 +114,47 @@ public void send(byte[] content) throws IOException, UnableToSendContentToServer\n \n     @Override\n     public byte[] receive() throws IOException, ClientNotConnectedException {\n-        if (connectionToEndpoint.isConnected()) {\n-            byte[] receivedData \u003d null;\n+        String errorMessage \u003d \"Client is not connected, so message cannot be received.\";\n \n+        if (connectionToEndpoint.isConnected()) {\n             InputStream socketDataReader \u003d connectionToEndpoint.getInputStream();\n \n-            while (receivedData \u003d\u003d null) {\n-                int availableBytes \u003d socketDataReader.available();\n-                if (availableBytes !\u003d 0) {\n-                    LOGGER.debug(CustomStringJoiner.join(\" \", \"Receiving\",\n-                            String.valueOf(availableBytes), \"from the connection.\"));\n-                    receivedData \u003d new byte[availableBytes];\n-                    socketDataReader.read(receivedData);\n-                    LOGGER.debug(\"Data received from the network.\");\n+            byte[] buffer \u003d new byte[MAX_PACKET_SIZE_IN_BYTES];\n+            int readBytes \u003d 0;\n+            ByteArrayOutputStream baosBuffer \u003d new ByteArrayOutputStream();\n+            while ((readBytes \u003d socketDataReader.read(buffer)) \u003e 0) {\n+                if (readBytes \u003c buffer.length) {\n+                    byte[] smaller \u003d new byte[readBytes];\n+                    System.arraycopy(buffer, 0, smaller, 0, readBytes);\n+                    buffer \u003d smaller;\n+\n+                }\n+\n+                LOGGER.debug(CustomStringJoiner.join(\" \", \"Received\", String.valueOf(readBytes),\n+                        \"bytes from the connection.\"));\n+                baosBuffer.write(buffer);\n+\n+                byte[] contentReceivedSoFar \u003d baosBuffer.toByteArray();\n+                boolean isValid \u003d SerializedMessageValidator\n+                        .byteArrayRepresentsDeserializableMessage(contentReceivedSoFar);\n+\n+                if (isValid) {\n+                    return contentReceivedSoFar;\n+                } else {\n+                    baosBuffer.reset();\n+                    baosBuffer.write(contentReceivedSoFar);\n                 }\n             }\n-            return receivedData;\n+\n+            if (readBytes \u003d\u003d -1) {\n+                // connection was closed\n+                LOGGER.debug(errorMessage);\n+                throw new ClientNotConnectedException();\n+            } else {\n+                return new byte[0];\n+            }\n         } else {\n-            LOGGER.debug(\"Client is not connected, so message cannot be received.\");\n+            LOGGER.debug(errorMessage);\n             throw new ClientNotConnectedException();\n         }\n     }"
        },
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/communication/services/ConcurrentCommunicationService.java",
          "patch": "@@ -1,6 +1,7 @@\n package weloveclouds.communication.services;\n \n \n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n@@ -9,6 +10,7 @@\n \n import weloveclouds.client.utils.CustomStringJoiner;\n import weloveclouds.communication.models.Connection;\n+import weloveclouds.communication.validator.SerializedMessageValidator;\n \n /**\n  * A communication service that can handle multiple connections concurrently.\n@@ -17,6 +19,7 @@\n  */\n public class ConcurrentCommunicationService implements IConcurrentCommunicationService {\n \n+    private static final int MAX_PACKET_SIZE_IN_BYTES \u003d 65535;\n     private static final Logger LOGGER \u003d Logger.getLogger(ConcurrentCommunicationService.class);\n \n     @Override\n@@ -37,24 +40,46 @@ public void send(byte[] message, Connection connection) throws IOException {\n \n     @Override\n     public byte[] receiveFrom(Connection connection) throws IOException {\n+        String errorMessage \u003d \"Client is not connected, so message cannot be received.\";\n+\n         if (connection.isConnected()) {\n-            byte[] receivedData \u003d null;\n             InputStream socketDataReader \u003d connection.getInputStream();\n \n-            while (receivedData \u003d\u003d null) {\n-                int availableBytes \u003d socketDataReader.available();\n-                if (availableBytes !\u003d 0) {\n-                    LOGGER.debug(CustomStringJoiner.join(\" \", \"Receiving\",\n-                            String.valueOf(availableBytes), \"from the connection.\"));\n-                    receivedData \u003d new byte[availableBytes];\n-                    socketDataReader.read(receivedData);\n-                    LOGGER.debug(\"Data received from the network.\");\n+            byte[] buffer \u003d new byte[MAX_PACKET_SIZE_IN_BYTES];\n+            int readBytes \u003d 0;\n+            ByteArrayOutputStream baosBuffer \u003d new ByteArrayOutputStream();\n+            while ((readBytes \u003d socketDataReader.read(buffer)) \u003e 0) {\n+                if (readBytes \u003c buffer.length) {\n+                    byte[] smaller \u003d new byte[readBytes];\n+                    System.arraycopy(buffer, 0, smaller, 0, readBytes);\n+                    buffer \u003d smaller;\n+\n+                }\n+\n+                LOGGER.debug(CustomStringJoiner.join(\" \", \"Received\", String.valueOf(readBytes),\n+                        \"bytes from the connection.\"));\n+                baosBuffer.write(buffer);\n+\n+                byte[] contentReceivedSoFar \u003d baosBuffer.toByteArray();\n+                boolean isValid \u003d SerializedMessageValidator\n+                        .byteArrayRepresentsDeserializableMessage(contentReceivedSoFar);\n+\n+                if (isValid) {\n+                    return contentReceivedSoFar;\n+                } else {\n+                    baosBuffer.reset();\n+                    baosBuffer.write(contentReceivedSoFar);\n                 }\n             }\n \n-            return receivedData;\n+            if (readBytes \u003d\u003d -1) {\n+                // connection was closed\n+                LOGGER.debug(errorMessage);\n+                throw new IOException(errorMessage);\n+            } else {\n+                return new byte[0];\n+            }\n         } else {\n-            String errorMessage \u003d \"Client is not connected, so message cannot be received.\";\n             LOGGER.debug(errorMessage);\n             throw new IOException(errorMessage);\n         }"
        },
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/communication/validator/SerializedMessageValidator.java",
          "patch": "@@ -0,0 +1,50 @@\n+package weloveclouds.communication.validator;\n+\n+import weloveclouds.kvstore.deserialization.IMessageDeserializer;\n+import weloveclouds.kvstore.deserialization.KVAdminMessageDeserializer;\n+import weloveclouds.kvstore.deserialization.KVMessageDeserializer;\n+import weloveclouds.kvstore.deserialization.KVTransferMessageDeserializer;\n+import weloveclouds.kvstore.models.messages.KVAdminMessage;\n+import weloveclouds.kvstore.models.messages.KVMessage;\n+import weloveclouds.kvstore.models.messages.KVTransferMessage;\n+import weloveclouds.kvstore.serialization.exceptions.DeserializationException;\n+import weloveclouds.kvstore.serialization.models.SerializedMessage;\n+\n+public class SerializedMessageValidator {\n+\n+    private static final IMessageDeserializer\u003cKVMessage, SerializedMessage\u003e kvMessageDeserializer \u003d\n+            new KVMessageDeserializer();\n+    private static final IMessageDeserializer\u003cKVAdminMessage, SerializedMessage\u003e kvAdminMessageDeserializer \u003d\n+            new KVAdminMessageDeserializer();\n+    private static final IMessageDeserializer\u003cKVTransferMessage, SerializedMessage\u003e kvTransferMessageDeserializer \u003d\n+            new KVTransferMessageDeserializer();\n+\n+    public static boolean byteArrayRepresentsDeserializableMessage(byte[] message) {\n+        int numberOfFailedValidations \u003d 0;\n+\n+        try {\n+            kvMessageDeserializer.deserialize(message);\n+        } catch (DeserializationException ex) {\n+            numberOfFailedValidations++;\n+        }\n+\n+        try {\n+            kvAdminMessageDeserializer.deserialize(message);\n+        } catch (DeserializationException ex) {\n+            numberOfFailedValidations++;\n+        }\n+\n+        try {\n+            kvTransferMessageDeserializer.deserialize(message);\n+        } catch (DeserializationException ex) {\n+            numberOfFailedValidations++;\n+        }\n+\n+        if (numberOfFailedValidations \u003d\u003d 3) {\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+}"
        },
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/server/core/SimpleConnectionHandler.java",
          "patch": "@@ -55,46 +55,59 @@ public void handleConnection() {\n     @Override\n     public void run() {\n         LOGGER.info(\"Client is connected to server.\");\n-\n-        while (connection.isConnected()) {\n-            M response \u003d null;\n-\n-            try {\n-                M receivedMessage \u003d\n-                        messageDeserializer.deserialize(communicationApi.receiveFrom(connection));\n-                LOGGER.debug(CustomStringJoiner.join(\" \", \"Message received:\",\n-                        receivedMessage.toString()));\n-\n-                response \u003d requestFactory.createRequestFromReceivedMessage(receivedMessage)\n-                        .validate().execute();\n-            } catch (IllegalRequestException ex) {\n+        try {\n+            while (connection.isConnected()) {\n+                M response \u003d null;\n                 try {\n-                    response \u003d (M) ex.getResponse();\n-                } catch (ClassCastException e) {\n-                    LOGGER.error(e);\n-                }\n-            } catch (IOException | DeserializationException e) {\n-                LOGGER.error(e);\n-            } catch (Throwable e) {\n-                LOGGER.fatal(e);\n-            } finally {\n-                if (response !\u003d null) {\n+                    M receivedMessage \u003d messageDeserializer\n+                            .deserialize(communicationApi.receiveFrom(connection));\n+                    LOGGER.debug(CustomStringJoiner.join(\" \", \"Message received:\",\n+                            receivedMessage.toString()));\n+\n+                    response \u003d requestFactory.createRequestFromReceivedMessage(receivedMessage)\n+                            .validate().execute();\n+                } catch (IllegalRequestException ex) {\n                     try {\n-                        communicationApi.send(messageSerializer.serialize(response).getBytes(),\n-                                connection);\n-                        LOGGER.debug(CustomStringJoiner.join(\" \", \"Sent response:\",\n-                                response.toString()));\n-                    } catch (IOException e) {\n+                        response \u003d (M) ex.getResponse();\n+                    } catch (ClassCastException e) {\n                         LOGGER.error(e);\n                     }\n+                } finally {\n+                    if (response !\u003d null) {\n+                        try {\n+                            communicationApi.send(messageSerializer.serialize(response).getBytes(),\n+                                    connection);\n+                            LOGGER.debug(CustomStringJoiner.join(\" \", \"Sent response:\",\n+                                    response.toString()));\n+                        } catch (IOException e) {\n+                            LOGGER.error(e);\n+                        }\n+                    }\n                 }\n             }\n+        } catch (IOException | DeserializationException e) {\n+            LOGGER.error(e);\n+            closeConnection(connection);\n+        } catch (Throwable e) {\n+            LOGGER.fatal(e);\n+            closeConnection(connection);\n         }\n \n         LOGGER.info(\"Client is disconnected.\");\n     }\n \n     /**\n+     * Closes the respective connection.\n+     */\n+    private void closeConnection(Connection connection) {\n+        try {\n+            connection.kill();\n+        } catch (IOException ex) {\n+            LOGGER.error(ex);\n+        }\n+    }\n+\n+    /**\n      * A builder to create a {@link SimpleConnectionHandler} instance.\n      * \n      * @author Benoit"
        },
        {
          "file_name": "Scalable_Storage_Service/src/weloveclouds/server/models/requests/kvecs/MoveDataToDestination.java",
          "patch": "@@ -25,6 +25,7 @@\n import weloveclouds.server.store.exceptions.StorageException;\n import weloveclouds.server.store.models.MovableStorageUnit;\n import weloveclouds.server.store.models.MovableStorageUnits;\n+import weloveclouds.server.store.models.PersistedStorageUnit;\n \n /**\n  * A data move request to the {@link IMovableDataAccessService}, which moves a range of the data\n@@ -36,8 +37,12 @@\n \n     private static final Logger LOGGER \u003d Logger.getLogger(MoveDataToDestination.class);\n \n-    // 1 entry (max.): 20 byte key, 120 kbyte value -\u003e 140 kbyte + some java object metadata\n-    private static final int NUMBER_OF_STORAGE_UNITS_TO_BE_TRANSFERRED_AT_ONCE \u003d 100;\n+    /**\n+     * 1 entry (max.): 20 byte key, 120 kbyte value -\u003e 140 kbyte + some java object metadata \u003cbr\u003e\n+     * there are at most 100 ({@link PersistedStorageUnit#MAX_NUMBER_OF_ENTRIES}) entries in a\n+     * storage unit\n+     */\n+    private static final int NUMBER_OF_STORAGE_UNITS_TO_BE_TRANSFERRED_AT_ONCE \u003d 30;\n \n     private IMovableDataAccessService dataAccessService;\n     private RingMetadataPart targetServerInfo;"
        }
      ]
    }
  },
  {
    "name": "Database memory leaks",
    "url": "https://github.com/jt19056/Notey/issues/25",
    "description": "Warnings in logcat mention: \"A SQLiteConnection object for database notey.db was leaked! Please fix your application to end tranactions in progress properly and to close the database when it is no longer need\"\n",
    "keywords": [
      "database"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/jt19056/Notey/commit/4f36699327b82e29e6eec9bb10d2c0fc6fd1ad79",
      "files": [
        {
          "file_name": "app/src/main/java/thomas/jonathan/notey/MainActivity.java",
          "patch": "@@ -506,6 +506,7 @@ else if (pref_expand \u0026\u0026 !pref_share_action \u0026\u0026 CURRENT_ANDROID_VERSION \u003e\u003d 16) {\n                             .build();\n                 }\n                 nm.notify(id, n);\n+                db.close();\n                 finish();\n             }\n             // alarm time has past, show toast"
        },
        {
          "file_name": "app/src/main/java/thomas/jonathan/notey/MySQLiteHelper.java",
          "patch": "@@ -112,14 +112,18 @@ public NoteyNote getNotey(int id) {\n \n         //build the object\n         NoteyNote notey \u003d new NoteyNote();\n-        notey.setId(Integer.parseInt(cursor.getString(0)));\n-        notey.setNote(cursor.getString(1));\n-        notey.setIcon(cursor.getInt(2));\n-        notey.setSpinnerLoc(cursor.getInt(3));\n-        notey.setImgBtnNum(cursor.getInt(4));\n-        notey.setTitle(cursor.getString(5));\n-        notey.setIconName(cursor.getString(6));\n-        notey.setAlarm(cursor.getString(7));\n+        if (cursor !\u003d null) {\n+            notey.setId(Integer.parseInt(cursor.getString(0)));\n+            notey.setNote(cursor.getString(1));\n+            notey.setIcon(cursor.getInt(2));\n+            notey.setSpinnerLoc(cursor.getInt(3));\n+            notey.setImgBtnNum(cursor.getInt(4));\n+            notey.setTitle(cursor.getString(5));\n+            notey.setIconName(cursor.getString(6));\n+            notey.setAlarm(cursor.getString(7));\n+        }\n+\n+        if (cursor !\u003d null) cursor.close();\n \n         return notey;\n     }\n@@ -149,6 +153,7 @@ public NoteyNote getNotey(int id) {\n                 noteyList.add(notey);\n             } while (cursor.moveToNext());\n         }\n+        cursor.close();\n         return noteyList;\n     }\n \n@@ -194,7 +199,12 @@ boolean checkIfExist(int id) {\n         } catch (SQLiteException e) {\n             e.printStackTrace();\n         }\n-        return cursor.getCount() \u003e 0;\n+        boolean exists;\n+        exists \u003d (cursor !\u003d null) \u0026\u0026 (cursor.getCount() \u003e 0);\n+\n+        if (cursor !\u003d null) cursor.close();\n+\n+        return exists;\n \n     }\n }\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Potential memory leak caused by screenshots",
    "url": "https://github.com/ProjectChroma/Chroma/issues/13",
    "description": "Memory usage graph constantly increases while taking vidcap (constant screenshots) and drops back to normal when game is closed.\nThe `FileOutputStream` created to write the screenshot to is probably not closed, resulting in a memory leak when several hundred are captured in quick succession.\nSolution: create the `FileOutputStream` in our code, call the `write()` method that takes a `FileOutputStream`, and close the stream afterwards.\n",
    "keywords": [
      "memory",
      "`fileoutputstream`"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/ProjectChroma/Chroma/commit/a222e12bc41bbc5d8ecf9a554c93ae5de707b691",
      "files": [
        {
          "file_name": "Chroma.jar",
          "patch": "@@ -1,3 +1,3 @@\n version https://git-lfs.github.com/spec/v1\n-oid sha256:53aa6c58b89a59035b0cbb3a08ccd5e588b9fad2e94170807fab9163d80e21a4\n-size 15639888\n+oid sha256:7fd885b48dc6e7de79fbc6651709262be03593df758dd8fd1be50923fa55c4e7\n+size 15640424"
        },
        {
          "file_name": "src/io/github/projectchroma/chroma/util/FileIO.java",
          "patch": "@@ -1,6 +1,8 @@\n package io.github.projectchroma.chroma.util;\n \n import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n \n import org.newdawn.slick.Image;\n import org.newdawn.slick.SlickException;\n@@ -10,18 +12,26 @@\n \n public class FileIO{\n \tpublic static final File SCREENSHOT_DIR \u003d new File(\"screenshots\");\n+\tprivate static int screenshotIndex \u003d 0;\n \tpublic static void init(){\n \t\tSettings.SETTINGS_DIR.mkdirs();\n \t\tSCREENSHOT_DIR.mkdirs();\n+\t\twhile(new File(SCREENSHOT_DIR, screenshotIndex + \".png\").exists()) ++screenshotIndex;\n+\t\tSystem.out.println(\"Starting at screenshot index \" + screenshotIndex);\n \t}\n \tpublic static File saveScreenshot(Image img) throws SlickException{\n-\t\tFile screenshot;\n+\t\tFile screenshot \u003d new File(SCREENSHOT_DIR, screenshotIndex++ + \".png\");\n \t\t\n-\t\tint i \u003d 0;\n-\t\tdo{\n-\t\t\tscreenshot \u003d new File(SCREENSHOT_DIR, i++ + \".png\");\n-\t\t}while(screenshot.exists());\n-\t\tImageOut.write(img, screenshot.toString());\n+\t\ttry{\n+\t\t\tscreenshot.createNewFile();\n+\t\t}catch(IOException ex){\n+\t\t\tthrow new SlickException(\"Error creating screenshot file \" + screenshot, ex);\n+\t\t}\n+\t\ttry(FileOutputStream out \u003d new FileOutputStream(screenshot)){\n+\t\t\tImageOut.write(img, \"PNG\", out, true);\n+\t\t}catch(IOException ex){\n+\t\t\tthrow new SlickException(\"Error taking screenshot \" + screenshot, ex);\n+\t\t}\n \t\treturn screenshot;\n \t}\n }"
        }
      ]
    }
  },
  {
    "name": "Memory leak?",
    "url": "https://github.com/relayrides/pushy/issues/478",
    "description": "We have found this in one of our components which uses latest pushy:\r\n```\r\nLEAK: ReferenceCountedOpenSslContext.release() was not called before it\u0027s garbage-collected. Enable advanced leak reporting to find out where the leak occurred. To enable advanced leak reporting, specify the JVM option \u0027-Dio.netty.leakDetection.level\u003dadvanced\u0027 or call ResourceLeakDetector.setLevel() See http://netty.io/wiki/reference-counted-objects.html for more information.\r\n\r\nStacktrace (most recent call first):\r\n\r\n    at Slf4JLogger.java.error(Slf4JLogger.java:176)\r\n    at ResourceLeakDetector.java.reportUntracedLeak(ResourceLeakDetector.java:313)\r\n    at ResourceLeakDetector.java.reportLeak(ResourceLeakDetector.java:289)\r\n    at ResourceLeakDetector.java.track0(ResourceLeakDetector.java:248)\r\n    at ResourceLeakDetector.java.track(ResourceLeakDetector.java:237)\r\n    at ReferenceCountedOpenSslContext.java.\u003cinit\u003e(ReferenceCountedOpenSslContext.java:239)\r\n    at ReferenceCountedOpenSslContext.java.\u003cinit\u003e(ReferenceCountedOpenSslContext.java:219)\r\n    at ReferenceCountedOpenSslClientContext.java.\u003cinit\u003e(ReferenceCountedOpenSslClientContext.java:59)\r\n```\r\n\r\nWe\u0027ll try to enable the advanced leak detection, but anyhow... anyone else has seen this in latest pushy?",
    "keywords": [
      "leak",
      "resourceleakdetector",
      "advanced leak",
      "java",
      "referencecountedopensslcontext",
      "advanced",
      "enable",
      "java \u003cinit\u003e",
      "\u003cinit\u003e"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/relayrides/pushy/commit/03ddae8459f4e556714d436ad19007ee7a492e6e",
      "files": [
        {
          "file_name": "pushy/src/main/java/com/turo/pushy/apns/SslUtil.java",
          "patch": "@@ -49,7 +49,7 @@ public static SslProvider getSslProvider() {\n         if (OpenSsl.isAvailable()) {\n             if (OpenSsl.isAlpnSupported()) {\n                 log.info(\"Native SSL provider is available and supports ALPN; will use native provider.\");\n-                sslProvider \u003d SslProvider.OPENSSL_REFCNT;\n+                sslProvider \u003d SslProvider.OPENSSL;\n             } else {\n                 log.info(\"Native SSL provider is available, but does not support ALPN; will use JDK SSL provider.\");\n                 sslProvider \u003d SslProvider.JDK;"
        }
      ]
    }
  },
  {
    "name": "Fixes memory leak of grouped iterator",
    "url": "https://github.com/vavr-io/vavr/pull/1907",
    "description": "Fixes #1899",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/vavr-io/vavr/commit/c8b67e8b1ca12dab93f4d0a3e5c6eeaf7c957771",
      "files": [
        {
          "file_name": "javaslang-benchmark/src/test/java/javaslang/collection/IteratorBenchmark.java",
          "patch": "@@ -0,0 +1,70 @@\n+/*     / \\____  _    _  ____   ______  / \\ ____  __    _______\n+ *    /  /    \\/ \\  / \\/    \\ /  /\\__\\/  //    \\/  \\  //  /\\__\\   JΛVΛSLΛNG\n+ *  _/  /  /\\  \\  \\/  /  /\\  \\\\__\\\\  \\  //  /\\  \\ /\\\\/ \\ /__\\ \\   Copyright 2014-2017 Javaslang, http://javaslang.io\n+ * /___/\\_/  \\_/\\____/\\_/  \\_/\\__\\/__/\\__\\_/  \\_//  \\__/\\_____/   Licensed under the Apache License, Version 2.0\n+ */\n+package javaslang.collection;\n+\n+import javaslang.JmhRunner;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.util.Random;\n+\n+import static javaslang.JmhRunner.Includes.*;\n+import static javaslang.JmhRunner.getRandomValues;\n+\n+@SuppressWarnings({ \"ALL\", \"unchecked\", \"rawtypes\" })\n+public class IteratorBenchmark {\n+    \n+    static final Array\u003cClass\u003c?\u003e\u003e CLASSES \u003d Array.of(\n+            Sliding.class\n+    );\n+\n+    @Test\n+    public void testAsserts() { JmhRunner.runDebugWithAsserts(CLASSES); }\n+\n+    public static void main(String... args) {\n+        JmhRunner.runDebugWithAsserts(CLASSES);\n+        JmhRunner.runNormalNoAsserts(CLASSES, JAVA, SCALA, JAVASLANG);\n+    }\n+\n+    @State(Scope.Benchmark)\n+    public static class Base {\n+        @Param({ \"10\", \"100\", \"1000\" })\n+        public int CONTAINER_SIZE;\n+\n+        Integer[] ELEMENTS;\n+\n+        scala.collection.Iterator\u003cInteger\u003e scalaIterator;\n+        javaslang.collection.Iterator\u003cInteger\u003e slangIterator;\n+\n+        @Setup\n+        public void setup() {\n+            final Random random \u003d new Random(0);\n+            ELEMENTS \u003d getRandomValues(CONTAINER_SIZE, false, random);\n+            scalaIterator \u003d (scala.collection.Iterator\u003cInteger\u003e) (Object) scala.collection.mutable.WrappedArray$.MODULE$.make(ELEMENTS).iterator();\n+            slangIterator \u003d Iterator.of(ELEMENTS);\n+        }\n+    }\n+\n+    public static class Sliding extends Base {\n+\n+        @Benchmark\n+        public void scala_persistent(Blackhole bh) {\n+            final scala.collection.Iterator.GroupedIterator values \u003d scalaIterator.sliding(3, 1);\n+            while (values.hasNext()) {\n+                bh.consume(values.next());\n+            }\n+        }\n+\n+        @Benchmark\n+        public void slang_persistent(Blackhole bh) {\n+            final Iterator\u003cSeq\u003cInteger\u003e\u003e values \u003d slangIterator.sliding(3);\n+            while (values.hasNext()) {\n+                bh.consume(values.next());\n+            }\n+        }\n+    }\n+}"
        },
        {
          "file_name": "javaslang/src/main/java/javaslang/collection/Iterator.java",
          "patch": "@@ -11,6 +11,7 @@\n import javaslang.Tuple3;\n import javaslang.collection.IteratorModule.ConcatIterator;\n import javaslang.collection.IteratorModule.DistinctIterator;\n+import javaslang.collection.IteratorModule.GroupedIterator;\n import javaslang.control.Option;\n \n import java.math.BigDecimal;\n@@ -20,6 +21,7 @@\n import static java.lang.Double.NEGATIVE_INFINITY;\n import static java.lang.Double.POSITIVE_INFINITY;\n import static java.math.RoundingMode.HALF_UP;\n+import static javaslang.API.*;\n import static javaslang.collection.IteratorModule.BigDecimalHelper.areEqual;\n import static javaslang.collection.IteratorModule.BigDecimalHelper.asDecimal;\n import static javaslang.collection.IteratorModule.EmptyIterator;\n@@ -1535,9 +1537,9 @@ default T get() {\n \n     @Override\n     default Iterator\u003cSeq\u003cT\u003e\u003e grouped(int size) {\n-        return sliding(size, size);\n+        return new GroupedIterator\u003c\u003e(this, size, size);\n     }\n-\n+    \n     @Override\n     default boolean hasDefiniteSize() {\n         return false;\n@@ -1827,37 +1829,9 @@ public boolean hasNext() {\n \n     @Override\n     default Iterator\u003cSeq\u003cT\u003e\u003e sliding(int size, int step) {\n-        if (size \u003c\u003d 0 || step \u003c\u003d 0) {\n-            throw new IllegalArgumentException(\"size: \" + size + \" or step: \" + step + \" not positive\");\n-        }\n-        if (!hasNext()) {\n-            return empty();\n-        } else {\n-            final Stream\u003cT\u003e source \u003d Stream.ofAll(this);\n-            return new AbstractIterator\u003cSeq\u003cT\u003e\u003e() {\n-                private Stream\u003cT\u003e that \u003d source;\n-                private IndexedSeq\u003cT\u003e next \u003d null;\n-\n-                @Override\n-                public boolean hasNext() {\n-                    while (next \u003d\u003d null \u0026\u0026 !that.isEmpty()) {\n-                        final Tuple2\u003cStream\u003cT\u003e, Stream\u003cT\u003e\u003e split \u003d that.splitAt(size);\n-                        next \u003d split._1.toVector();\n-                        that \u003d split._2.isEmpty() ? Stream.empty() : that.drop(step);\n-                    }\n-                    return next !\u003d null;\n-                }\n-\n-                @Override\n-                public IndexedSeq\u003cT\u003e getNext() {\n-                    final IndexedSeq\u003cT\u003e result \u003d next;\n-                    next \u003d null;\n-                    return result;\n-                }\n-            };\n-        }\n+        return new GroupedIterator\u003c\u003e(this, size, step);\n     }\n-\n+    \n     @Override\n     default Tuple2\u003cIterator\u003cT\u003e, Iterator\u003cT\u003e\u003e span(Predicate\u003c? super T\u003e predicate) {\n         Objects.requireNonNull(predicate, \"predicate is null\");\n@@ -2089,6 +2063,78 @@ public String toString() {\n         }\n     }\n \n+    final class GroupedIterator\u003cT\u003e implements Iterator\u003cSeq\u003cT\u003e\u003e {\n+\n+        private final Iterator\u003cT\u003e that;\n+        private final int size;\n+        private final int step;\n+        private final int gap;\n+        private final int preserve;\n+\n+        private Object[] buffer;\n+\n+        GroupedIterator(Iterator\u003cT\u003e that, int size, int step) {\n+            if (size \u003c 1 || step \u003c 1) {\n+                throw new IllegalArgumentException(\"size (\" + size + \") and step (\" + step + \") must both be positive\");\n+            }\n+            this.that \u003d that;\n+            this.size \u003d size;\n+            this.step \u003d step;\n+            this.gap \u003d Math.max(step - size, 0);\n+            this.preserve \u003d Math.max(size - step, 0);\n+            this.buffer \u003d take(that, new Object[size], 0, size);\n+        }\n+\n+        @Override\n+        public boolean hasNext() {\n+            return buffer.length \u003e 0;\n+        }\n+\n+        @Override\n+        public Seq\u003cT\u003e next() {\n+            if (buffer.length \u003d\u003d 0) {\n+                throw new NoSuchElementException();\n+            }\n+            final Object[] result \u003d buffer;\n+            if (that.hasNext()) {\n+                buffer \u003d new Object[size];\n+                if (preserve \u003e 0) {\n+                    System.arraycopy(result, step, buffer, 0, preserve);\n+                }\n+                if (gap \u003e 0) {\n+                    drop(that, gap);\n+                    buffer \u003d take(that, buffer, preserve, size);\n+                } else {\n+                    buffer \u003d take(that, buffer, preserve, step);\n+                }\n+            } else {\n+                buffer \u003d new Object[0];\n+            }\n+            return Array.wrap(result);\n+        }\n+\n+        private static void drop(Iterator\u003c?\u003e source, int count) {\n+            for (int i \u003d 0; i \u003c count \u0026\u0026 source.hasNext(); i++) {\n+                source.next();\n+            }\n+        }\n+\n+        private static Object[] take(Iterator\u003c?\u003e source, Object[] target, int offset, int count) {\n+            int i \u003d offset;\n+            while (i \u003c count + offset \u0026\u0026 source.hasNext()) {\n+                target[i] \u003d source.next();\n+                i++;\n+            }\n+            if (i \u003c target.length) {\n+                final Object[] result \u003d new Object[i];\n+                System.arraycopy(target, 0, result, 0, i);\n+                return result;\n+            } else {\n+                return target;\n+            }\n+        }\n+    }\n+\n     final class BigDecimalHelper {\n \n         @GwtIncompatible(\"Math::nextDown is not implemented\")"
        },
        {
          "file_name": "javaslang/src/main/java/javaslang/collection/List.java",
          "patch": "@@ -720,6 +720,12 @@\n \n     @Override\n     default List\u003cT\u003e drop(int n) {\n+        if (n \u003c\u003d 0) {\n+            return this;\n+        }\n+        if (n \u003e\u003d size()) {\n+            return empty();\n+        }\n         List\u003cT\u003e list \u003d this;\n         for (long i \u003d n; i \u003e 0 \u0026\u0026 !list.isEmpty(); i--) {\n             list \u003d list.tail();\n@@ -1390,12 +1396,12 @@ default String stringPrefix() {\n \n     @Override\n     default List\u003cT\u003e take(int n) {\n-        if (n \u003e\u003d length()) {\n-            return this;\n-        }\n         if (n \u003c\u003d 0) {\n             return empty();\n         }\n+        if (n \u003e\u003d length()) {\n+            return this;\n+        }\n         List\u003cT\u003e result \u003d Nil.instance();\n         List\u003cT\u003e list \u003d this;\n         for (int i \u003d 0; i \u003c n; i++, list \u003d list.tail()) {\n@@ -1406,12 +1412,12 @@ default String stringPrefix() {\n \n     @Override\n     default List\u003cT\u003e takeRight(int n) {\n-        if (n \u003e\u003d length()) {\n-            return this;\n-        }\n         if (n \u003c\u003d 0) {\n             return empty();\n         }\n+        if (n \u003e\u003d length()) {\n+            return this;\n+        }\n         return reverse().take(n).reverse();\n     }\n "
        },
        {
          "file_name": "javaslang/src/test/java/javaslang/collection/AbstractTraversableTest.java",
          "patch": "@@ -1797,6 +1797,20 @@ public void shouldSlide4ElementsBySize5AndStep3() {\n         assertThat(actual).isEqualTo(expected);\n     }\n \n+    @Test\n+    public void shouldSlide7ElementsBySize1AndStep3() {\n+        final List\u003cTraversable\u003cInteger\u003e\u003e actual \u003d of(1, 2, 3, 4, 5, 6 ,7).sliding(1, 3).toList().map(Vector::ofAll);\n+        final List\u003cTraversable\u003cInteger\u003e\u003e expected \u003d List.of(Vector.of(1), Vector.of(4), Vector.of(7));\n+        assertThat(actual).isEqualTo(expected);\n+    }\n+\n+    @Test\n+    public void shouldSlide7ElementsBySize2AndStep3() {\n+        final List\u003cTraversable\u003cInteger\u003e\u003e actual \u003d of(1, 2, 3, 4, 5, 6 ,7).sliding(2, 3).toList().map(Vector::ofAll);\n+        final List\u003cTraversable\u003cInteger\u003e\u003e expected \u003d List.of(Vector.of(1, 2), Vector.of(4, 5), Vector.of(7));\n+        assertThat(actual).isEqualTo(expected);\n+    }\n+\n     // -- span\n \n     @Test"
        }
      ]
    }
  },
  {
    "name": "Slow memory leak",
    "url": "https://github.com/eXist-db/exist/pull/1363",
    "description": "On several servers I saw memory consumption increasing slowly over time. Stress testing revealed instances of BinaryValueFromInputStream staying in memory and building up over weeks until eXist would eventually crash.\r\n\r\nDebugging showed the registered XQueryContext.BinaryValueCleanupTask is never executed because cleanupTasks list is cleared too early (in XQueryContext.reset). Thus when XQueryContext.runCleanupTasks is called, the list of tasks is already empty.\r\n\r\nThe fix is simple: clear cleanupTasks after tasks have been executed, not before.",
    "keywords": [
      "memory",
      "xquerycontext"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/eXist-db/exist/commit/ef8281ff3f2e809b34d794f8abb95fe40ae1d200",
      "files": [
        {
          "file_name": "src/org/exist/xquery/XQueryContext.java",
          "patch": "@@ -1418,8 +1418,6 @@ public void reset(final boolean keepGlobals) {\n \n         clearUpdateListeners();\n \n-        cleanupTasks.clear();\n-\n         profiler.reset();\n         \n         analyzed \u003d false;\n@@ -3645,5 +3643,8 @@ public void runCleanupTasks() {\n                 LOG.error(\"Cleaning up XQueryContext: Ignoring: \" + t.getMessage(), t);\n             }\n         }\n+        // now it is safe to clear the cleanup tasks list as we know they have run\n+        // do not move this anywhere else\n+        cleanupTasks.clear();\n     }\n }"
        }
      ]
    }
  },
  {
    "name": "Slow Memory Leak for Coroutine based Socket",
    "url": "https://github.com/nginx-clojure/nginx-clojure/issues/32",
    "description": "The C Release handler doesn\u0027t release the native global reference of socket object unless there \u0027s an exception threw by Java release handler.\n\n``` c\nstatic void  jni_ngx_http_clojure_socket_release_handler(ngx_http_clojure_socket_upstream_t *u, ngx_int_t sc) {\n    (*jvm_env)-\u003eCallVoidMethod(jvm_env, (jobject)u-\u003econtext, nc_socket_handler_release_mid, (jlong)(uintptr_t)u, (jlong)sc);\n    exception_handle(0 \u003d\u003d 0, jvm_env, (*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext));\n}\n```\n\nThe last line will cause slow memory leak for coroutine based socket.\n\nIt should be \n\n``` c\nstatic void  jni_ngx_http_clojure_socket_release_handler(ngx_http_clojure_socket_upstream_t *u, ngx_int_t sc) {\n    (*jvm_env)-\u003eCallVoidMethod(jvm_env, (jobject)u-\u003econtext, nc_socket_handler_release_mid, (jlong)(uintptr_t)u, (jlong)sc);\n    exception_handle(0 \u003d\u003d 0, jvm_env, (*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext);return);\n    (*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext);\n}\n```\n",
    "keywords": [
      "sc",
      "0",
      "u-\u003econtext",
      "jvm_env",
      "c",
      "release",
      "jobject u-\u003econtext",
      "-\u003edeleteglobalref",
      "socket",
      "*jvm_env",
      ";",
      "jobject",
      "jlong"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/nginx-clojure/nginx-clojure/commit/4ca88e789b03029a535e217599df24d476179203",
      "files": [
        {
          "file_name": "src/c/ngx_http_clojure_socket.c",
          "patch": "@@ -458,7 +458,8 @@ static void  jni_ngx_http_clojure_socket_connect_handler(ngx_http_clojure_socket\n \n static void  jni_ngx_http_clojure_socket_release_handler(ngx_http_clojure_socket_upstream_t *u, ngx_int_t sc) {\n \t(*jvm_env)-\u003eCallVoidMethod(jvm_env, (jobject)u-\u003econtext, nc_socket_handler_release_mid, (jlong)(uintptr_t)u, (jlong)sc);\n-\texception_handle(0 \u003d\u003d 0, jvm_env, (*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext));\n+\texception_handle(0 \u003d\u003d 0, jvm_env, (*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext);return);\n+\t(*jvm_env)-\u003eDeleteGlobalRef(jvm_env, (jobject)u-\u003econtext);\n }\n \n static jlong JNICALL jni_ngx_http_clojure_socket_create(JNIEnv *env, jclass cls, jobject handler) {"
        }
      ]
    }
  },
  {
    "name": "Memory leak",
    "url": "https://github.com/brianwernick/ExoMedia/issues/353",
    "description": "- [ V] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n\r\n###### Include the following:\r\n - ExoMedia version: `3.1.0`\r\n - Device OS version: `5.1`\r\n - Devide Manufacturer: `LG`\r\n - Device Name: `Nexus 4`\r\n \r\n###### Reproduction Steps\r\nreuse player for few times by calling setDataSource or should i call release every time?\r\n\r\n###### Expected Result\r\nNo memory leak\r\n\r\n###### Actual Result\r\nMemory leak\r\n\r\n```\r\nActivity com.example.MyActivity has leaked IntentReceiver com.google.android.exoplayer.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver@dd6b62c that was originally registered here. Are you missing a call to unregisterReceiver()?\r\n\t   android.app.IntentReceiverLeaked: Activity com.example.MyActivity has leaked IntentReceiver com.google.android.exoplayer.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver@dd6b62c that was originally registered here. Are you missing a call to unregisterReceiver()?\r\n\t\t   at android.app.LoadedApk$ReceiverDispatcher.\u003cinit\u003e(LoadedApk.java:903)\r\n\t\t   at android.app.LoadedApk.getReceiverDispatcher(LoadedApk.java:704)\r\n\t\t   at android.app.ContextImpl.registerReceiverInternal(ContextImpl.java:1643)\r\n\t\t   at android.app.ContextImpl.registerReceiver(ContextImpl.java:1623)\r\n\t\t   at android.app.ContextImpl.registerReceiver(ContextImpl.java:1617)\r\n\t\t   at android.content.ContextWrapper.registerReceiver(ContextWrapper.java:489)\r\n\t\t   at com.google.android.exoplayer.audio.AudioCapabilitiesReceiver.register(AudioCapabilitiesReceiver.java:74)\r\n\t\t   at com.devbrackets.android.exomedia.core.exoplayer.EMExoPlayer.replaceRenderBuilder(EMExoPlayer.java:172)\r\n\t\t   at com.devbrackets.android.exomedia.core.audio.ExoMediaPlayer.setDataSource(ExoMediaPlayer.java:89)\r\n\t\t   at com.devbrackets.android.exomedia.core.audio.ExoMediaPlayer.setDataSource(ExoMediaPlayer.java:81)\r\n\t\t   at com.devbrackets.android.exomedia.EMAudioPlayer.setDataSource(EMAudioPlayer.java:116)\r\n```",
    "keywords": [
      "com",
      "app",
      "setdatasource",
      "exoplayer",
      "memory",
      "contextimpl",
      "android",
      "google",
      "call",
      "core",
      "leak",
      "exomedia",
      "exomediaplayer",
      "######",
      "loadedapk",
      "android app",
      "audio",
      "registerreceiver",
      "devbrackets"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/brianwernick/ExoMedia/commit/cefeb787fa303e40f5ab72de22cb3891bedfcfe8",
      "files": [
        {
          "file_name": "library/src/main/java/com/devbrackets/android/exomedia/core/exoplayer/EMExoPlayer.java",
          "patch": "@@ -167,6 +167,12 @@ public EMExoPlayer(@Nullable RenderBuilder rendererBuilder) {\n \n     public void replaceRenderBuilder(@Nullable RenderBuilder renderBuilder) {\n         this.rendererBuilder \u003d renderBuilder;\n+\n+        if (audioCapabilitiesReceiver !\u003d null) {\n+            audioCapabilitiesReceiver.unregister();\n+            audioCapabilitiesReceiver \u003d null;\n+        }\n+\n         if (rendererBuilder !\u003d null \u0026\u0026 audioCapabilities \u003d\u003d null) {\n             audioCapabilitiesReceiver \u003d new AudioCapabilitiesReceiver(rendererBuilder.getContext(), this);\n             audioCapabilitiesReceiver.register();"
        }
      ]
    }
  },
  {
    "name": "ACT Memory Leak",
    "url": "https://github.com/Nividica/ThaumicEnergistics/issues/77",
    "description": "The ACT has a memory leak in the listeners array. This causes the ACT to take longer and longer to open.\n",
    "keywords": [
      "act"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Nividica/ThaumicEnergistics/commit/6c0e3821d04428b102a848aaefab22c70256ddcb",
      "files": [
        {
          "file_name": "ChangeLog.txt",
          "patch": "@@ -1,4 +1,12 @@\n-﻿11/8/2014 0.8.0b\n+﻿11/11/2014 0.8.0b\n+  Fixed cell recipe.\n+  Fixes #77: ACT no longer leaks memory on client side.\n+  Gearboxes and Providers are now wrenchable.\n+  Essentia cells can now hold 12 types.\n+  Fixes #76: Added scrollbar to Essentia terminal.\n+  Fixes #74: Essentia provider now has suction.\n+\n+11/8/2014 0.8.0b\n   Added Certus Quartz Duplication.\n   Added configuration option to disable certus duplication.\n \n@@ -24,7 +32,7 @@\n 10/29/2014 0.7.4b\n   Bugfix: Import/Export buses got caught in a loop and imported a full jar amount on neighbor change.\n   IO bus redstone pulse mode now works properly\n-  Bugfix: Export bus would not export into reservoir if aspect to export, and aspect in reservoir did not match.\n+  Bugfix: Export bus would not export into reservoir if aspect to export and aspect in reservoir did not match.\n   Compatibility fix with ExtraCells2: Server crash when exporting essentia gas using the Fluid Formation Plane.\n   Notice: Essentia gas will simply disperse if exported using the Fluid Formation Plane.\n "
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/AbstractBlockAEWrenchable.java",
          "patch": "@@ -0,0 +1,94 @@\n+package thaumicenergistics.blocks;\n+\n+import net.minecraft.block.BlockContainer;\n+import net.minecraft.block.material.Material;\n+import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.world.World;\n+import appeng.api.implementations.items.IAEWrench;\n+\n+public abstract class AbstractBlockAEWrenchable\n+\textends BlockContainer\n+{\n+\n+\tprotected AbstractBlockAEWrenchable( final Material material )\n+\t{\n+\t\tsuper( material );\n+\t}\n+\n+\t/**\n+\t * Returning false will cancel onBlockActivated.\n+\t * \n+\t * @return\n+\t */\n+\tpublic boolean canPlayerInteract( final EntityPlayer player )\n+\t{\n+\t\treturn true;\n+\t}\n+\n+\t/**\n+\t * Called when the block is being removed via AE wrench.\n+\t * \n+\t * @return\n+\t */\n+\tpublic ItemStack getWrenchDrop()\n+\t{\n+\t\treturn new ItemStack( this );\n+\t}\n+\n+\t/**\n+\t * Called when the block is right-clicked\n+\t * \n+\t * @param world\n+\t * @param x\n+\t * @param y\n+\t * @param z\n+\t * @param player\n+\t * @return\n+\t */\n+\tpublic boolean onBlockActivated( final World world, final int x, final int y, final int z, final EntityPlayer player )\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * The block was right-clicked\n+\t */\n+\t@Override\n+\tpublic final boolean onBlockActivated( final World world, final int x, final int y, final int z, final EntityPlayer player, final int side,\n+\t\t\t\t\t\t\t\t\t\t\tfinal float hitX, final float hitY, final float hitZ )\n+\t{\n+\t\t// Can the player interact with the block?\n+\t\tif( !this.canPlayerInteract( player ) )\n+\t\t{\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// Is the player holding a anything?\n+\t\tif( player.getHeldItem() !\u003d null )\n+\t\t{\n+\t\t\t// Is the player holding an AE wrench item?\n+\t\t\tif( player.getHeldItem().getItem() instanceof IAEWrench )\n+\t\t\t{\n+\t\t\t\t// Is the player sneaking?\n+\t\t\t\tif( player.isSneaking() )\n+\t\t\t\t{\n+\t\t\t\t\t// Drop the block\n+\t\t\t\t\tthis.dropBlockAsItem( world, x, y, z, this.getWrenchDrop() );\n+\n+\t\t\t\t\t// Set to air\n+\t\t\t\t\tworld.setBlockToAir( x, y, z );\n+\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\t// Ignore\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.onBlockActivated( world, x, y, z, player );\n+\n+\t}\n+\n+}"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/AbstractBlockGearBoxBase.java",
          "patch": "@@ -1,7 +1,6 @@\n package thaumicenergistics.blocks;\n \n import net.minecraft.block.Block;\n-import net.minecraft.block.BlockContainer;\n import net.minecraft.block.material.Material;\n import net.minecraft.client.renderer.texture.IIconRegister;\n import net.minecraft.entity.player.EntityPlayer;\n@@ -16,8 +15,8 @@\n import cpw.mods.fml.relauncher.Side;\n import cpw.mods.fml.relauncher.SideOnly;\n \n-public abstract class BlockGearBoxBase\n-\textends BlockContainer\n+public abstract class AbstractBlockGearBoxBase\n+\textends AbstractBlockAEWrenchable\n {\n \t/**\n \t * Determines if thaumcraft golems are allowed to interact with the gearbox.\n@@ -27,7 +26,7 @@\n \t/**\n \t * Creates the block.\n \t */\n-\tpublic BlockGearBoxBase()\n+\tpublic AbstractBlockGearBoxBase()\n \t{\n \t\t// Set material type\n \t\tsuper( Material.ground );\n@@ -37,6 +36,33 @@ public BlockGearBoxBase()\n \n \t\t// Set sound type\n \t\tthis.setStepSound( Block.soundTypeStone );\n+\n+\t\t// Set hardness\n+\t\tthis.setHardness( 0.6F );\n+\t}\n+\n+\t@Override\n+\tpublic boolean canPlayerInteract( final EntityPlayer player )\n+\t{\n+\t\t// Fake player?\n+\t\tif( player instanceof FakePlayer )\n+\t\t{\n+\t\t\t// Are golems allowed to interact?\n+\t\t\tif( !this.allowGolemInteraction )\n+\t\t\t{\n+\t\t\t\t// Golem interaction not allowed\n+\t\t\t\treturn false;\n+\t\t\t}\n+\n+\t\t\t// Is the fake player a golem?\n+\t\t\tif( !player.getGameProfile().getName().equalsIgnoreCase( \"FakeThaumcraftGolem\" ) )\n+\t\t\t{\n+\t\t\t\t// Not a golem\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn true;\n \t}\n \n \t/**\n@@ -74,7 +100,7 @@ public final boolean isOpaqueCube()\n \t * Is solid.\n \t */\n \t@Override\n-\tpublic boolean isSideSolid( final IBlockAccess world, final int x, final int y, final int z, final ForgeDirection side )\n+\tpublic final boolean isSideSolid( final IBlockAccess world, final int x, final int y, final int z, final ForgeDirection side )\n \t{\n \t\t// This is a solid cube\n \t\treturn true;\n@@ -84,32 +110,26 @@ public boolean isSideSolid( final IBlockAccess world, final int x, final int y,\n \t * Determine if the tile should be cranked.\n \t */\n \t@Override\n-\tpublic boolean onBlockActivated( final World w, final int x, final int y, final int z, final EntityPlayer p, final int side, final float hitX,\n-\t\t\t\t\t\t\t\t\t\tfinal float hitY, final float hitZ )\n+\tpublic boolean onBlockActivated( final World world, final int x, final int y, final int z, final EntityPlayer player )\n \t{\n-\t\t// Fake player?\n-\t\tif( p instanceof FakePlayer )\n-\t\t{\n-\t\t\t// Are golems allowed to interact?\n-\t\t\tif( !this.allowGolemInteraction )\n-\t\t\t{\n-\t\t\t\t// Golem interaction not allowed\n-\t\t\t\treturn false;\n-\t\t\t}\n+\t\t// Get the tile\n+\t\tTileGearBox gearBox \u003d (TileGearBox)world.getTileEntity( x, y, z );\n \n-\t\t\t// Is the fake player a golem?\n-\t\t\tif( !p.getGameProfile().getName().equalsIgnoreCase( \"FakeThaumcraftGolem\" ) )\n-\t\t\t{\n-\t\t\t\t// Not a golem\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n+\t\t// Crank it\n+\t\treturn gearBox.crank();\n+\t}\n \n+\t/**\n+\t * One of the adjacent blocks has changed.\n+\t */\n+\t@Override\n+\tpublic void onNeighborBlockChange( final World w, final int x, final int y, final int z, final Block neighbor )\n+\t{\n \t\t// Get the tile\n \t\tTileGearBox gearBox \u003d (TileGearBox)w.getTileEntity( x, y, z );\n \n-\t\t// Crank it\n-\t\treturn gearBox.crank();\n+\t\t// Update it\n+\t\tgearBox.updateCrankables();\n \t}\n \n \t/**"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/AbstractBlockProviderBase.java",
          "patch": "@@ -1,7 +1,6 @@\n package thaumicenergistics.blocks;\n \n import net.minecraft.block.Block;\n-import net.minecraft.block.BlockContainer;\n import net.minecraft.block.material.Material;\n import net.minecraft.client.renderer.texture.IIconRegister;\n import net.minecraft.entity.EntityLivingBase;\n@@ -19,11 +18,11 @@\n import cpw.mods.fml.relauncher.Side;\n import cpw.mods.fml.relauncher.SideOnly;\n \n-public abstract class BlockProviderBase\n-\textends BlockContainer\n+public abstract class AbstractBlockProviderBase\n+\textends AbstractBlockAEWrenchable\n {\n \n-\tprotected BlockProviderBase( final Material material )\n+\tprotected AbstractBlockProviderBase( final Material material )\n \t{\n \t\tsuper( material );\n \n@@ -69,7 +68,7 @@ public final boolean isOpaqueCube()\n \t}\n \n \t@Override\n-\tpublic boolean isSideSolid( final IBlockAccess world, final int x, final int y, final int z, final ForgeDirection side )\n+\tpublic final boolean isSideSolid( final IBlockAccess world, final int x, final int y, final int z, final ForgeDirection side )\n \t{\n \t\t// This is a solid cube\n \t\treturn true;\n@@ -85,7 +84,8 @@ public final int onBlockPlaced( final World world, final int x, final int y, fin\n \t}\n \n \t@Override\n-\tpublic void onBlockPlacedBy( final World world, final int x, final int y, final int z, final EntityLivingBase entity, final ItemStack itemstack )\n+\tpublic final void onBlockPlacedBy( final World world, final int x, final int y, final int z, final EntityLivingBase entity,\n+\t\t\t\t\t\t\t\t\t\tfinal ItemStack itemstack )\n \t{\n \t\t// Set the owner\n \t\tif( entity instanceof EntityPlayer )"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/BlockEssentiaProvider.java",
          "patch": "@@ -19,7 +19,7 @@\n  * \n  */\n public class BlockEssentiaProvider\n-\textends BlockProviderBase\n+\textends AbstractBlockProviderBase\n {\n \n \tpublic BlockEssentiaProvider()"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/BlockGearBox.java",
          "patch": "@@ -5,7 +5,7 @@\n import thaumicenergistics.texture.BlockTextureManager;\n \n public class BlockGearBox\n-\textends BlockGearBoxBase\n+\textends AbstractBlockGearBoxBase\n {\n \t@Override\n \tpublic IIcon getIcon( final int side, final int meta )"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/BlockGolemGearBox.java",
          "patch": "@@ -5,7 +5,7 @@\n import thaumicenergistics.texture.BlockTextureManager;\n \n public class BlockGolemGearBox\n-\textends BlockGearBoxBase\n+\textends AbstractBlockGearBoxBase\n {\n \n \tpublic BlockGolemGearBox()"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/blocks/BlockInfusionProvider.java",
          "patch": "@@ -13,7 +13,7 @@\n import cpw.mods.fml.relauncher.SideOnly;\n \n public class BlockInfusionProvider\n-\textends BlockProviderBase\n+\textends AbstractBlockProviderBase\n {\n \n \tpublic BlockInfusionProvider()"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/container/ContainerPartArcaneCraftingTerminal.java",
          "patch": "@@ -260,12 +260,12 @@ public ContainerPartArcaneCraftingTerminal( final AEPartArcaneCraftingTerminal t\n \t\t// Set wand slot number\n \t\tthis.wandSlotNumber \u003d wandSlot.slotNumber;\n \n-\t\t// Register the container with terminal\n-\t\tterminal.registerListener( this );\n-\n \t\t// Is this server side?\n \t\tif( EffectiveSide.isServerSide() )\n \t\t{\n+\t\t\t// Register the container with terminal\n+\t\t\tterminal.registerListener( this );\n+\n \t\t\t// Get the AE monitor\n \t\t\tthis.monitor \u003d terminal.getGridBlock().getItemMonitor();\n \n@@ -276,7 +276,6 @@ public ContainerPartArcaneCraftingTerminal( final AEPartArcaneCraftingTerminal t\n \t\t\t\tthis.monitor.addListener( this, null );\n \t\t\t}\n \t\t}\n-\n \t}\n \n \t/**\n@@ -933,7 +932,11 @@ public void onClientRequestExtract( final EntityPlayer player, final IAEItemStac\n \t\t\t\telse\n \t\t\t\t{\n \t\t\t\t\t// Half amount up to half of maxStackSize\n-\t\t\t\t\tamountToExtract \u003d (int)Math.min( maxStackSize / 2L, requestedStack.getStackSize() / 2L );\n+\t\t\t\t\tdouble halfRequest \u003d requestedStack.getStackSize() / 2.0D;\n+\t\t\t\t\tdouble halfMax \u003d maxStackSize / 2.0D;\n+\t\t\t\t\thalfRequest \u003d Math.ceil( halfRequest );\n+\t\t\t\t\thalfMax \u003d Math.ceil( halfMax );\n+\t\t\t\t\tamountToExtract \u003d (int)Math.min( halfMax, halfRequest );\n \t\t\t\t}\n \t\t\t\tbreak;\n \n@@ -1073,14 +1076,14 @@ public void onContainerClosed( final EntityPlayer player )\n \t\t// Pass to super\n \t\tsuper.onContainerClosed( player );\n \n-\t\tif( this.terminal !\u003d null )\n-\t\t{\n-\t\t\tthis.terminal.removeListener( this );\n-\t\t}\n-\n \t\t// Is this server side?\n \t\tif( EffectiveSide.isServerSide() )\n \t\t{\n+\t\t\tif( this.terminal !\u003d null )\n+\t\t\t{\n+\t\t\t\tthis.terminal.removeListener( this );\n+\t\t\t}\n+\n \t\t\tif( this.monitor !\u003d null )\n \t\t\t{\n \t\t\t\tthis.monitor.removeListener( this );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiArcaneCraftingTerminal.java",
          "patch": "@@ -6,7 +6,6 @@\n import net.minecraft.entity.player.EntityPlayer;\n import net.minecraft.inventory.Slot;\n import net.minecraft.item.ItemStack;\n-import net.minecraft.util.ResourceLocation;\n import net.minecraft.util.StatCollector;\n import org.lwjgl.input.Keyboard;\n import org.lwjgl.input.Mouse;\n@@ -29,8 +28,6 @@\n import appeng.api.config.ViewItems;\n import appeng.api.storage.data.IAEItemStack;\n import appeng.api.storage.data.IItemList;\n-import appeng.client.gui.AEBaseGui;\n-import appeng.client.gui.widgets.GuiScrollbar;\n import appeng.client.gui.widgets.ISortSource;\n import appeng.client.me.ItemRepo;\n import appeng.client.render.AppEngRenderItem;\n@@ -70,34 +67,30 @@\n \tprivate final ItemRepo repo;\n \n \t/**\n-\t * Scroll bar\n-\t */\n-\tprivate final GuiScrollbar scrollBar;\n-\n-\t/**\n-\t * Serves as a graphics call bridge for the scroll bar.\n+\t * How the items are sorted.\n \t */\n-\tprivate AEBaseGui aeGuiBridge;\n+\tprivate SortOrder sortingOrder \u003d SortOrder.NAME;\n \n \t/**\n-\t * True if the scroll bar has mouse focus.\n+\t * What direction are the items sorted.\n \t */\n-\tprivate boolean isScrollBarHeld \u003d false;\n+\tprivate SortDir sortingDirection \u003d SortDir.ASCENDING;\n \n \t/**\n-\t * The last Y position of the mouse when the scroll bar has mouse focus.\n+\t * Tracks mouse movement.\n \t */\n-\tprivate int scrollHeldPrevY \u003d 0;\n+\tprivate int previousMouseX \u003d 0;\n+\tprivate int previousMouseY \u003d 0;\n \n \t/**\n-\t * How the items are sorted.\n+\t * Tracks what widget was under the mouse last draw.\n \t */\n-\tprivate SortOrder sortingOrder \u003d SortOrder.NAME;\n+\tprivate WidgetAEItem previousWidgetUnderMouse \u003d null;\n \n \t/**\n-\t * What direction are the items sorted.\n+\t * Tracks the last time the tooltip was updated.\n \t */\n-\tprivate SortDir sortingDirection \u003d SortDir.ASCENDING;\n+\tprivate long lastTooltipUpdateTime \u003d 0;\n \n \tpublic GuiArcaneCraftingTerminal( final AEPartArcaneCraftingTerminal part, final EntityPlayer player )\n \t{\n@@ -127,9 +120,6 @@ public GuiArcaneCraftingTerminal( final AEPartArcaneCraftingTerminal part, final\n \t\t\t}\n \t\t}\n \n-\t\t// Create the scrollbar\n-\t\tthis.scrollBar \u003d new GuiScrollbar();\n-\n \t\t// Create the repo\n \t\tthis.repo \u003d new ItemRepo( this.scrollBar, this );\n \n@@ -366,15 +356,15 @@ protected void drawGuiContainerBackgroundLayer( final float alpha, final int mou\n \t@Override\n \tprotected void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n \t{\n+\t\t// Call super\n+\t\tsuper.drawGuiContainerForegroundLayer( mouseX, mouseY );\n+\n \t\t// Draw the title\n \t\tthis.fontRendererObj.drawString( this.guiTitle, AbstractGuiConstantsACT.TITLE_POS_X, AbstractGuiConstantsACT.TITLE_POS_Y, 0x000000 );\n \n \t\t// Draw the search field.\n \t\tthis.searchField.drawTextBox();\n \n-\t\t// Draw the scroll bar\n-\t\tthis.scrollBar.draw( this.aeGuiBridge );\n-\n \t\t// Enable lighting\n \t\tGL11.glEnable( GL11.GL_LIGHTING );\n \n@@ -391,24 +381,66 @@ protected void drawGuiContainerForegroundLayer( final int mouseX, final int mous\n \t\t\tthis.drawCraftingAspects( craftingCost );\n \t\t}\n \n-\t\t// Do we have a widget under the mouse?\n-\t\tif( widgetUnderMouse !\u003d null )\n-\t\t{\n-\t\t\t// Get the tooltip from the widget\n-\t\t\twidgetUnderMouse.getTooltip( this.tooltip );\n-\t\t}\n-\t\telse\n+\t\t// Should we force a tooltip update?\n+\t\tboolean forceTooltipUpdate \u003d ( ( System.currentTimeMillis() - this.lastTooltipUpdateTime ) \u003e\u003d AbstractGuiConstantsACT.WIDGET_TOOLTIP_UPDATE_INTERVAL );\n+\n+\t\t// Has the mouse moved, or timeout reached?\n+\t\tif( forceTooltipUpdate || ( this.previousMouseX !\u003d mouseX ) || ( this.previousMouseY !\u003d mouseY ) )\n \t\t{\n-\t\t\t// Get the tooltip from the buttons\n-\t\t\tthis.addTooltipFromButtons( mouseX, mouseY );\n+\t\t\t// Do we have a widget under the mouse?\n+\t\t\tif( widgetUnderMouse !\u003d null )\n+\t\t\t{\n+\t\t\t\t// Has the widget changed?\n+\t\t\t\tif( forceTooltipUpdate || ( widgetUnderMouse !\u003d this.previousWidgetUnderMouse ) )\n+\t\t\t\t{\n+\t\t\t\t\t// Clear the tooltip\n+\t\t\t\t\tthis.tooltip.clear();\n+\n+\t\t\t\t\t// Get the tooltip from the widget\n+\t\t\t\t\twidgetUnderMouse.getTooltip( this.tooltip );\n+\n+\t\t\t\t\t// Set the time\n+\t\t\t\t\tthis.lastTooltipUpdateTime \u003d System.currentTimeMillis();\n+\t\t\t\t}\n+\n+\t\t\t\t// Set the previous widget\n+\t\t\t\tthis.previousWidgetUnderMouse \u003d widgetUnderMouse;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\t// Clear the tooltip\n+\t\t\t\tthis.tooltip.clear();\n+\n+\t\t\t\t// Set the time\n+\t\t\t\tthis.lastTooltipUpdateTime \u003d System.currentTimeMillis();\n+\n+\t\t\t\t// Get the tooltip from the buttons\n+\t\t\t\tthis.addTooltipFromButtons( mouseX, mouseY );\n+\t\t\t}\n+\n+\t\t\t// Set the previous position\n+\t\t\tthis.previousMouseX \u003d mouseX;\n+\t\t\tthis.previousMouseY \u003d mouseY;\n \t\t}\n \n \t\t// Draw the tooltip\n-\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, false );\n \n \t}\n \n \t/**\n+\t * Returns the scroll bar parameters.\n+\t * \n+\t * @return\n+\t */\n+\t@Override\n+\tprotected ScrollbarParams getScrollbarParameters()\n+\t{\n+\t\treturn new ScrollbarParams( AbstractGuiConstantsACT.SCROLLBAR_POS_X, AbstractGuiConstantsACT.SCROLLBAR_POS_Y,\n+\t\t\t\t\t\tAbstractGuiConstantsACT.SCROLLBAR_HEIGHT );\n+\t}\n+\n+\t/**\n \t * Called when the player types a key.\n \t */\n \t@Override\n@@ -444,34 +476,6 @@ else if( this.searchField.isFocused() )\n \t\t\t\tthis.updateMEWidgets();\n \t\t\t}\n \t\t}\n-\t\t// Home Key\n-\t\telse if( keyID \u003d\u003d Keyboard.KEY_HOME )\n-\t\t{\n-\t\t\t// Move the scroll all the way to home\n-\t\t\tthis.scrollBar.click( this.aeGuiBridge, AbstractGuiConstantsACT.SCROLLBAR_POS_X + 1, AbstractGuiConstantsACT.SCROLLBAR_POS_Y + 1 );\n-\t\t\tthis.scrollBar.wheel( 1 );\n-\t\t\tthis.updateMEWidgets();\n-\t\t}\n-\t\t// End Key\n-\t\telse if( keyID \u003d\u003d Keyboard.KEY_END )\n-\t\t{\n-\t\t\t// Move the scroll all the way to end\n-\t\t\tthis.scrollBar.click( this.aeGuiBridge, AbstractGuiConstantsACT.SCROLLBAR_POS_X + 1, AbstractGuiConstantsACT.SCROLLBAR_VERTICAL_BOUND );\n-\t\t\tthis.updateMEWidgets();\n-\n-\t\t}\n-\t\t// Up Key\n-\t\telse if( keyID \u003d\u003d Keyboard.KEY_UP )\n-\t\t{\n-\t\t\tthis.scrollBar.wheel( 1 );\n-\t\t\tthis.updateMEWidgets();\n-\t\t}\n-\t\t// Down Key\n-\t\telse if( keyID \u003d\u003d Keyboard.KEY_DOWN )\n-\t\t{\n-\t\t\tthis.scrollBar.wheel( -1 );\n-\t\t\tthis.updateMEWidgets();\n-\t\t}\n \t\telse\n \t\t{\n \t\t\tsuper.keyTyped( key, keyID );\n@@ -522,26 +526,6 @@ protected void mouseClicked( final int mouseX, final int mouseY, final int mouse\n \t\t\t}\n \t\t}\n \n-\t\t// Is the mouse over the scroll bar area?\n-\t\tif( GuiHelper.instance.isPointInGuiRegion( AbstractGuiConstantsACT.SCROLLBAR_POS_Y, AbstractGuiConstantsACT.SCROLLBAR_POS_X,\n-\t\t\tAbstractGuiConstantsACT.SCROLLBAR_HEIGHT, this.scrollBar.getWidth(), mouseX, mouseY, this.guiLeft, this.guiTop ) )\n-\t\t{\n-\t\t\t// The scroll bar now has mouse focus\n-\t\t\tthis.isScrollBarHeld \u003d true;\n-\n-\t\t\t// Mark this Y\n-\t\t\tthis.scrollHeldPrevY \u003d mouseY;\n-\n-\t\t\t// Jump the scroll to the mouse\n-\t\t\tthis.scrollBar.click( this.aeGuiBridge, mouseX - this.guiLeft, mouseY - this.guiTop );\n-\n-\t\t\t// Update the widgets\n-\t\t\tthis.updateMEWidgets();\n-\n-\t\t\t// Do not pass to super\n-\t\t\treturn;\n-\t\t}\n-\n \t\t// Was the mouse right-clicked over the search field?\n \t\tif( ( mouseButton \u003d\u003d GuiHelper.MOUSE_BUTTON_RIGHT ) \u0026\u0026\n \t\t\t\t\t\tGuiHelper.instance.isPointInGuiRegion( AbstractGuiConstantsACT.SEARCH_POS_Y, AbstractGuiConstantsACT.SEARCH_POS_X,\n@@ -568,6 +552,13 @@ protected void mouseClicked( final int mouseX, final int mouseY, final int mouse\n \t\tsuper.mouseClicked( mouseX, mouseY, mouseButton );\n \t}\n \n+\t@Override\n+\tprotected void onScrollbarMoved()\n+\t{\n+\t\t// Update the widgets\n+\t\tthis.updateMEWidgets();\n+\t}\n+\n \t/**\n \t * Called when a button is clicked.\n \t */\n@@ -633,67 +624,6 @@ public void actionPerformed( final GuiButton button )\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic void drawScreen( final int mouseX, final int mouseY, final float mouseBtn )\n-\t{\n-\t\t// Call super\n-\t\tsuper.drawScreen( mouseX, mouseY, mouseBtn );\n-\n-\t\t// Is the mouse holding the scroll bar?\n-\t\tif( this.isScrollBarHeld )\n-\t\t{\n-\t\t\t// Is the mouse button still being held down?\n-\t\t\tif( Mouse.isButtonDown( GuiHelper.MOUSE_BUTTON_LEFT ) )\n-\t\t\t{\n-\t\t\t\t// Has the Y changed?\n-\t\t\t\tif( mouseY \u003d\u003d this.scrollHeldPrevY )\n-\t\t\t\t{\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\n-\t\t\t\tboolean correctForZero \u003d false;\n-\n-\t\t\t\t// Mark the Y\n-\t\t\t\tthis.scrollHeldPrevY \u003d mouseY;\n-\n-\t\t\t\t// Calculate the Y position for the scroll bar\n-\t\t\t\tint repY \u003d mouseY - this.guiTop;\n-\n-\t\t\t\t// Has the mouse exceeded the \u0027upper\u0027 bound?\n-\t\t\t\tif( repY \u003e AbstractGuiConstantsACT.SCROLLBAR_VERTICAL_BOUND )\n-\t\t\t\t{\n-\t\t\t\t\trepY \u003d AbstractGuiConstantsACT.SCROLLBAR_VERTICAL_BOUND;\n-\t\t\t\t}\n-\t\t\t\t// Has the mouse exceeded the \u0027lower\u0027 bound?\n-\t\t\t\telse if( repY \u003c\u003d AbstractGuiConstantsACT.SCROLLBAR_POS_Y )\n-\t\t\t\t{\n-\t\t\t\t\trepY \u003d AbstractGuiConstantsACT.SCROLLBAR_POS_Y;\n-\n-\t\t\t\t\t// We will have to correct for zero\n-\t\t\t\t\tcorrectForZero \u003d true;\n-\t\t\t\t}\n-\n-\t\t\t\t// Update the scroll bar\n-\t\t\t\tthis.scrollBar.click( this.aeGuiBridge, AbstractGuiConstantsACT.SCROLLBAR_POS_X + 1, repY );\n-\n-\t\t\t\t// Should we correct for zero?\n-\t\t\t\tif( correctForZero )\n-\t\t\t\t{\n-\t\t\t\t\tthis.scrollBar.wheel( 1 );\n-\t\t\t\t}\n-\n-\t\t\t\t// Update the widgets\n-\t\t\t\tthis.updateMEWidgets();\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\t// The scroll bar no longer has mouse focus\n-\t\t\t\tthis.isScrollBarHeld \u003d false;\n-\t\t\t}\n-\t\t}\n-\n-\t}\n-\n \t/**\n \t * Gets the sorting order.\n \t */\n@@ -791,49 +721,6 @@ public void initGui()\n \t\tthis.buttonList.add( new ButtonClearCraftingGrid( AbstractGuiConstantsACT.BUTTON_CLEAR_GRID_ID, this.guiLeft +\n \t\t\t\t\t\tAbstractGuiConstantsACT.BUTTON_CLEAR_GRID_POS_X, this.guiTop + AbstractGuiConstantsACT.BUTTON_CLEAR_GRID_POS_Y, 8, 8 ) );\n \n-\t\t// Create the AE bridge\n-\t\tthis.aeGuiBridge \u003d new AEBaseGui( this.inventorySlots )\n-\t\t{\n-\n-\t\t\t@Override\n-\t\t\tpublic void bindTexture( final String file )\n-\t\t\t{\n-\t\t\t\tthis.bindTexture( \"appliedenergistics2\", file );\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void bindTexture( final String base, final String file )\n-\t\t\t{\n-\t\t\t\tGuiArcaneCraftingTerminal.this.mc.getTextureManager().bindTexture( new ResourceLocation( base, \"textures/\" + file ) );\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void drawBG( final int arg0, final int arg1, final int arg2, final int arg3 )\n-\t\t\t{\n-\t\t\t\t// Ignored\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void drawFG( final int arg0, final int arg1, final int arg2, final int arg3 )\n-\t\t\t{\n-\t\t\t\t// Ignored\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void drawTexturedModalRect( final int posX, final int posY, final int sourceOffsetX, final int sourceOffsetY, final int width,\n-\t\t\t\t\t\t\t\t\t\t\t\tfinal int height )\n-\t\t\t{\n-\t\t\t\tGuiArcaneCraftingTerminal.this.drawTexturedModalRect( posX, posY, sourceOffsetX, sourceOffsetY, width, height );\n-\t\t\t}\n-\t\t};\n-\n-\t\t// Setup the scroll bar\n-\t\tthis.scrollBar.setLeft( AbstractGuiConstantsACT.SCROLLBAR_POS_X ).setTop( AbstractGuiConstantsACT.SCROLLBAR_POS_Y )\n-\t\t\t\t\t\t.setHeight( AbstractGuiConstantsACT.SCROLLBAR_HEIGHT );\n-\n-\t\t// No scrolling until we get items\n-\t\tthis.scrollBar.setRange( 0, 0, 1 );\n-\n \t\t// Add sort order button\n \t\tthis.buttonList.add( new ButtonSortingMode( AbstractGuiConstantsACT.BUTTON_SORT_ORDER_ID, this.guiLeft +\n \t\t\t\t\t\tAbstractGuiConstantsACT.BUTTON_SORT_ORDER_POS_X, this.guiTop + AbstractGuiConstantsACT.BUTTON_SORT_ORDER_POS_Y,"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiEssentiaCell.java",
          "patch": "@@ -32,13 +32,13 @@\n \t * @param z\n \t * Z position of the chest.\n \t */\n-\tpublic GuiEssentiaCell( EntityPlayer player, World world, int x, int y, int z )\n+\tpublic GuiEssentiaCell( final EntityPlayer player, final World world, final int x, final int y, final int z )\n \t{\n \t\tsuper( player, new ContainerEssentiaCell( player, world, x, y, z ) );\n \t}\n \n \t@Override\n-\tprotected void sortModeButtonClicked( ComparatorMode modeRequested )\n+\tprotected void sortModeButtonClicked( final ComparatorMode modeRequested )\n \t{\n \t\t// Pass to the container\n \t\t( (ContainerEssentiaCell)this.inventorySlots ).sendSortModeChangeRequest( modeRequested );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiEssentiaLevelEmitter.java",
          "patch": "@@ -187,7 +187,7 @@\n \t * @param player\n \t * Player viewing the gui.\n \t */\n-\tpublic GuiEssentiaLevelEmitter( AEPartEssentiaLevelEmitter part, EntityPlayer player )\n+\tpublic GuiEssentiaLevelEmitter( final AEPartEssentiaLevelEmitter part, final EntityPlayer player )\n \t{\n \t\t// Call super\n \t\tsuper( new ContainerPartEssentiaLevelEmitter( part, player ) );\n@@ -211,7 +211,7 @@ public GuiEssentiaLevelEmitter( AEPartEssentiaLevelEmitter part, EntityPlayer pl\n \t * Draw the gui background\n \t */\n \t@Override\n-\tprotected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mouseY )\n+\tprotected void drawGuiContainerBackgroundLayer( final float alpha, final int mouseX, final int mouseY )\n \t{\n \t\t// Full white\n \t\tGL11.glColor4f( 1.0F, 1.0F, 1.0F, 1.0F );\n@@ -227,7 +227,7 @@ protected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mou\n \t * Called when the player types a key\n \t */\n \t@Override\n-\tprotected void keyTyped( char key, int keyID )\n+\tprotected void keyTyped( final char key, final int keyID )\n \t{\n \t\t// Pass to super\n \t\tsuper.keyTyped( key, keyID );\n@@ -258,7 +258,7 @@ protected void keyTyped( char key, int keyID )\n \t * Called when the player clicks a mouse button\n \t */\n \t@Override\n-\tprotected void mouseClicked( int mouseX, int mouseY, int mouseBtn )\n+\tprotected void mouseClicked( final int mouseX, final int mouseY, final int mouseBtn )\n \t{\n \t\t// Pass to super\n \t\tsuper.mouseClicked( mouseX, mouseY, mouseBtn );\n@@ -275,7 +275,7 @@ protected void mouseClicked( int mouseX, int mouseY, int mouseBtn )\n \t * Called when a button is clicked.\n \t */\n \t@Override\n-\tpublic void actionPerformed( GuiButton button )\n+\tpublic void actionPerformed( final GuiButton button )\n \t{\n \t\t// Get the index of the button that was clicked\n \t\tint index \u003d button.id;\n@@ -307,7 +307,7 @@ else if( index \u003d\u003d GuiEssentiaLevelEmitter.REDSTONE_MODE_BUTTON_INDEX )\n \t * Draw the foreground\n \t */\n \t@Override\n-\tpublic void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n+\tpublic void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n \t{\n \t\t// Draw the title\n \t\tthis.fontRendererObj.drawString( AEPartsEnum.EssentiaLevelEmitter.getStatName(), GuiEssentiaLevelEmitter.TITLE_POS_X,\n@@ -329,15 +329,15 @@ public void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n \t\tif( this.addTooltipFromButtons( mouseX, mouseY ) )\n \t\t{\n \t\t\t// Draw the tooltip\n-\t\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, true );\n \t\t}\n \t}\n \n \t/**\n \t * Draws the screen and all the components in it.\n \t */\n \t@Override\n-\tpublic void drawScreen( int x, int y, float f )\n+\tpublic void drawScreen( final int x, final int y, final float f )\n \t{\n \t\t// Call super\n \t\tsuper.drawScreen( x, y, f );\n@@ -436,7 +436,7 @@ public void onGuiClosed()\n \t * \n \t * @param mode\n \t */\n-\tpublic void onServerUpdateRedstoneMode( RedstoneMode mode )\n+\tpublic void onServerUpdateRedstoneMode( final RedstoneMode mode )\n \t{\n \t\t( (ButtonRedstoneModes)this.buttonList.get( GuiEssentiaLevelEmitter.REDSTONE_MODE_BUTTON_INDEX ) ).setRedstoneMode( mode );\n \t}\n@@ -446,12 +446,12 @@ public void onServerUpdateRedstoneMode( RedstoneMode mode )\n \t * \n \t * @param amount\n \t */\n-\tpublic void onServerUpdateWantedAmount( long amount )\n+\tpublic void onServerUpdateWantedAmount( final long amount )\n \t{\n \t\tthis.amountField.setText( Long.toString( amount ) );\n \t}\n \n-\tpublic boolean setFilteredAspectFromItemstack( ItemStack itemStack )\n+\tpublic boolean setFilteredAspectFromItemstack( final ItemStack itemStack )\n \t{\n \t\tAspect itemAspect \u003d EssentiaItemContainerHelper.instance.getAspectInContainer( itemStack );\n \n@@ -469,7 +469,7 @@ public boolean setFilteredAspectFromItemstack( ItemStack itemStack )\n \t * Sets the filtered aspect\n \t */\n \t@Override\n-\tpublic void updateAspects( List\u003cAspect\u003e aspectList )\n+\tpublic void updateAspects( final List\u003cAspect\u003e aspectList )\n \t{\n \t\tif( ( aspectList \u003d\u003d null ) || ( aspectList.isEmpty() ) )\n \t\t{"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiEssentiaStorageBus.java",
          "patch": "@@ -290,7 +290,7 @@ public void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY\n \t\t}\n \n \t\t// Draw the tooltip\n-\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, true );\n \t}\n \n \t@Override"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiEssentiatIO.java",
          "patch": "@@ -163,7 +163,7 @@\n \t * @param partBus\n \t * @param player\n \t */\n-\tpublic GuiEssentiatIO( AEPartEssentiaIO partBus, EntityPlayer player )\n+\tpublic GuiEssentiatIO( final AEPartEssentiaIO partBus, final EntityPlayer player )\n \t{\n \t\t// Call super\n \t\tsuper( new ContainerPartEssentiaIOBus( partBus, player ) );\n@@ -204,7 +204,7 @@ else if( partBus instanceof AEPartEssentiaExportBus )\n \t * Draws the GUI background layer\n \t */\n \t@Override\n-\tprotected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mouseY )\n+\tprotected void drawGuiContainerBackgroundLayer( final float alpha, final int mouseX, final int mouseY )\n \t{\n \t\t// Full white\n \t\tGL11.glColor4f( 1.0F, 1.0F, 1.0F, 1.0F );\n@@ -236,7 +236,7 @@ protected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mou\n \t * Called when the mouse is clicked.\n \t */\n \t@Override\n-\tprotected void mouseClicked( int mouseX, int mouseY, int mouseButton )\n+\tprotected void mouseClicked( final int mouseX, final int mouseY, final int mouseButton )\n \t{\n \t\t// Call super\n \t\tsuper.mouseClicked( mouseX, mouseY, mouseButton );\n@@ -275,7 +275,7 @@ protected void mouseClicked( int mouseX, int mouseY, int mouseButton )\n \t * Called when a button is pressed\n \t */\n \t@Override\n-\tpublic void actionPerformed( GuiButton button )\n+\tpublic void actionPerformed( final GuiButton button )\n \t{\n \t\t// Call super\n \t\tsuper.actionPerformed( button );\n@@ -288,7 +288,7 @@ public void actionPerformed( GuiButton button )\n \t}\n \n \t@Override\n-\tpublic void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n+\tpublic void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n \t{\n \t\t// Call super\n \t\tsuper.drawGuiContainerForegroundLayer( mouseX, mouseY );\n@@ -329,7 +329,7 @@ public void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n \t\t}\n \n \t\t// Draw the tooltip\n-\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, true );\n \t}\n \n \t@Override\n@@ -376,7 +376,7 @@ public void initGui()\n \t * \n \t * @param filterSize\n \t */\n-\tpublic void onReceiveFilterSize( byte filterSize )\n+\tpublic void onReceiveFilterSize( final byte filterSize )\n \t{\n \t\t// Inform our part\n \t\tthis.part.receiveFilterSize( filterSize );\n@@ -400,7 +400,7 @@ public void onReceiveFilterSize( byte filterSize )\n \t * \n \t * @param newRedstoneControled\n \t */\n-\tpublic void onReceiveRedstoneControlled( boolean newRedstoneControled )\n+\tpublic void onReceiveRedstoneControlled( final boolean newRedstoneControled )\n \t{\n \t\t// Do we differ?\n \t\tif( this.redstoneControlled !\u003d newRedstoneControled )\n@@ -424,7 +424,7 @@ public void onReceiveRedstoneControlled( boolean newRedstoneControled )\n \t\t}\n \t}\n \n-\tpublic void onReceiveRedstoneMode( RedstoneMode redstoneMode )\n+\tpublic void onReceiveRedstoneMode( final RedstoneMode redstoneMode )\n \t{\n \t\t// Are we redstone controlled, and have the redstone mod button\n \t\tif( this.redstoneControlled \u0026\u0026 ( this.buttonList.size() \u003e 0 ) )\n@@ -437,7 +437,7 @@ public void onReceiveRedstoneMode( RedstoneMode redstoneMode )\n \t}\n \n \t@Override\n-\tpublic void updateAspects( List\u003cAspect\u003e aspectList )\n+\tpublic void updateAspects( final List\u003cAspect\u003e aspectList )\n \t{\n \t\t// Inform our part\n \t\tthis.part.receiveFilterList( aspectList );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/GuiPriority.java",
          "patch": "@@ -31,7 +31,7 @@\n \n \t\t\tpublic final int width;\n \n-\t\t\tprivate EnumButtonWidth( int width )\n+\t\t\tprivate EnumButtonWidth( final int width )\n \t\t\t{\n \t\t\t\tthis.width \u003d width;\n \t\t\t}\n@@ -63,7 +63,7 @@ private EnumButtonWidth( int width )\n \t\t * @param buttonWidth\n \t\t * @param amount\n \t\t */\n-\t\tpublic AdjustmentButtonDef( EnumButtonWidth buttonWidth, int amount )\n+\t\tpublic AdjustmentButtonDef( final EnumButtonWidth buttonWidth, final int amount )\n \t\t{\n \t\t\t// Set the width\n \t\t\tthis.width \u003d buttonWidth.width;\n@@ -83,7 +83,7 @@ public AdjustmentButtonDef( EnumButtonWidth buttonWidth, int amount )\n \t\t * @param yPosition\n \t\t * @return\n \t\t */\n-\t\tpublic GuiButton makeButton( int ID, int xPosition, int yPosition )\n+\t\tpublic GuiButton makeButton( final int ID, final int xPosition, final int yPosition )\n \t\t{\n \t\t\treturn new GuiButton( ID, xPosition, yPosition, this.width, AdjustmentButtonDef.BUTTON_HEIGHT, this.caption );\n \t\t}\n@@ -199,7 +199,7 @@ public GuiButton makeButton( int ID, int xPosition, int yPosition )\n \t * @param host\n \t * @param player\n \t */\n-\tpublic GuiPriority( IPriorityHost host, EntityPlayer player )\n+\tpublic GuiPriority( final IPriorityHost host, final EntityPlayer player )\n \t{\n \t\t// Call super and pass the priority container\n \t\tsuper( new ContainerPriority( host, player ) );\n@@ -219,7 +219,7 @@ public GuiPriority( IPriorityHost host, EntityPlayer player )\n \t}\n \n \t@Override\n-\tprotected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mouseY )\n+\tprotected void drawGuiContainerBackgroundLayer( final float alpha, final int mouseX, final int mouseY )\n \t{\n \t\t// Full white\n \t\tGL11.glColor4f( 1.0F, 1.0F, 1.0F, 1.0F );\n@@ -235,7 +235,7 @@ protected void drawGuiContainerBackgroundLayer( float alpha, int mouseX, int mou\n \t * Called when the player types a key\n \t */\n \t@Override\n-\tprotected void keyTyped( char key, int keyID )\n+\tprotected void keyTyped( final char key, final int keyID )\n \t{\n \t\t// Pass to super\n \t\tsuper.keyTyped( key, keyID );\n@@ -271,7 +271,7 @@ protected void keyTyped( char key, int keyID )\n \t * Called when a button is clicked.\n \t */\n \t@Override\n-\tpublic void actionPerformed( GuiButton button )\n+\tpublic void actionPerformed( final GuiButton button )\n \t{\n \t\t// Was the priority button clicked?\n \t\tif( button.id \u003d\u003d GuiPriority.PART_SWITCH_BUTTON_ID )\n@@ -306,7 +306,7 @@ public void actionPerformed( GuiButton button )\n \t * Draw the foreground\n \t */\n \t@Override\n-\tpublic void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n+\tpublic void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n \t{\n \t\t// Draw the title\n \t\tthis.fontRendererObj.drawString( this.title, GuiPriority.TITLE_POS_X, GuiPriority.TITLE_POS_Y, 0 );\n@@ -318,7 +318,7 @@ public void drawGuiContainerForegroundLayer( int mouseX, int mouseY )\n \t\tif( this.addTooltipFromButtons( mouseX, mouseY ) )\n \t\t{\n \t\t\t// Draw the tooltip\n-\t\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, true );\n \t\t}\n \t}\n \n@@ -394,7 +394,7 @@ public void onGuiClosed()\n \t * \n \t * @param priority\n \t */\n-\tpublic void onServerSendPriority( int priority )\n+\tpublic void onServerSendPriority( final int priority )\n \t{\n \t\t// Set the textbox text\n \t\tthis.amountField.setText( Integer.toString( priority ) );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/abstraction/AbstractGuiBase.java",
          "patch": "@@ -114,7 +114,6 @@ public Bounds( final int t, final int l, final int b, final int r )\n \t * Thickness of the tooltip\u0027s borders.\n \t */\n \tprivate static final int TOOLTIP_BORDER_SIZE \u003d 3;\n-\t\n \n \t/**\n \t * Lines to draw when drawTooltip is called.\n@@ -182,11 +181,12 @@ private final void drawTooltipBorders( final Bounds bounds, final int colorStart\n \n \t/**\n \t * Adds to the tooltip based on which button the mouse is over.\n+\t * \n \t * @param mouseX\n \t * @param mouseY\n \t * @return True when a tooltip was added, false otherwise.\n \t */\n-\tprotected boolean addTooltipFromButtons( int mouseX, int mouseY )\n+\tprotected boolean addTooltipFromButtons( final int mouseX, final int mouseY )\n \t{\n \t\t// Is the mouse over any buttons?\n \t\tfor( Object obj : this.buttonList )\n@@ -208,7 +208,7 @@ protected boolean addTooltipFromButtons( int mouseX, int mouseY )\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\t\n+\n \t\treturn false;\n \t}\n \n@@ -224,7 +224,7 @@ protected boolean addTooltipFromButtons( int mouseX, int mouseY )\n \t * @param posY\n \t * Y anchor position to draw the tooltip. Generally the mouse\u0027s Y position.\n \t */\n-\tprotected final void drawTooltip( int posX, int posY )\n+\tprotected final void drawTooltip( int posX, int posY, final boolean clearTooltipAfterDraw )\n \t{\n \t\tif( !this.tooltip.isEmpty() )\n \t\t{\n@@ -236,13 +236,12 @@ protected final void drawTooltip( int posX, int posY )\n \n \t\t\t// Disable depth testing\n \t\t\tGL11.glDisable( GL11.GL_DEPTH_TEST );\n-\t\t\t\n+\n \t\t\t// Bounds check the position\n \t\t\tif( posY \u003c 0 )\n \t\t\t{\n \t\t\t\tposY \u003d 0;\n \t\t\t}\n-\t\t\t\n \n \t\t\t// Assume string length is zero\n \t\t\tint maxStringLength_px \u003d 0;\n@@ -322,9 +321,12 @@ protected final void drawTooltip( int posX, int posY )\n \n \t\t\t// Reenable scaling\n \t\t\tGL11.glEnable( GL12.GL_RESCALE_NORMAL );\n-\t\t\t\n+\n \t\t\t// Clear the tooltip\n-\t\t\tthis.tooltip.clear();\n+\t\t\tif( clearTooltipAfterDraw )\n+\t\t\t{\n+\t\t\t\tthis.tooltip.clear();\n+\t\t\t}\n \t\t}\n \t}\n "
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/abstraction/AbstractGuiCellTerminalBase.java",
          "patch": "@@ -38,7 +38,7 @@\n  */\n @SideOnly(Side.CLIENT)\n public abstract class AbstractGuiCellTerminalBase\n-\textends AbstractGuiWidgetHost\n+\textends AbstractGuiWithScrollbar\n \timplements IAspectSelectorGui\n {\n \n@@ -60,7 +60,7 @@\n \t/**\n \t * Width of the gui\n \t */\n-\tprivate static final int GUI_SIZE_X \u003d 176;\n+\tprivate static final int GUI_SIZE_X \u003d 195;\n \n \t/**\n \t * Height of the gui\n@@ -153,6 +153,21 @@\n \tprivate static final int SORT_MODE_BUTTON_ID \u003d 0;\n \n \t/**\n+\t * X position of the scroll bar\n+\t */\n+\tprivate static final int SCROLLBAR_POS_X \u003d 175;\n+\n+\t/**\n+\t * Y position of the scroll bar\n+\t */\n+\tprivate static final int SCROLLBAR_POS_Y \u003d 0;\n+\n+\t/**\n+\t * Height of the scroll bar\n+\t */\n+\tprivate static final int SCROLLBAR_HEIGHT \u003d 70;\n+\n+\t/**\n \t * Local translation of the title.\n \t */\n \tprivate final String guiTitle;\n@@ -275,45 +290,22 @@ private void sortMatchingList()\n \t}\n \n \t/**\n-\t * Updates the scroll position based on mouse wheel movement.\n+\t * Updates the scroll bar\u0027s range.\n \t */\n-\tprivate void updateScrollPosition()\n+\tprivate void updateScrollMaximum()\n \t{\n-\t\t// Get the mouse wheel movement\n-\t\tint deltaMouseWheel \u003d Mouse.getDWheel();\n+\t\t// Calculate the number of widgets the will overflow\n+\t\tdouble overflowWidgets \u003d Math.max( 0, this.matchingSearchWidgets.size() - AbstractGuiCellTerminalBase.WIDGETS_PER_PAGE );\n \n-\t\tif( deltaMouseWheel \u003c 0 )\n-\t\t{\n-\t\t\tthis.currentScroll++ ;\n-\t\t}\n-\t\telse if( deltaMouseWheel \u003e 0 )\n-\t\t{\n-\t\t\tthis.currentScroll-- ;\n-\t\t}\n+\t\t// Calculate how many rows will overflow\n+\t\tint overflowRows \u003d (int)Math.ceil( overflowWidgets / AbstractGuiCellTerminalBase.WIDGETS_PER_ROW );\n \n-\t\t// Lower Bounds check the scrolling\n-\t\tif( this.currentScroll \u003c 0 )\n+\t\t// Update if the range has changed\n+\t\tif( overflowRows !\u003d this.scrollBar.getRange() )\n \t\t{\n-\t\t\tthis.currentScroll \u003d 0;\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\t// Get how many rows is required for the display-able widgets\n-\t\t\tint requiredRows \u003d (int)Math.ceil( (double)this.matchingSearchWidgets.size() / (double)AbstractGuiCellTerminalBase.WIDGETS_PER_ROW );\n-\n-\t\t\t// Subtract from the required rows the starting row\n-\t\t\tint rowsToDraw \u003d requiredRows - this.currentScroll;\n-\n-\t\t\t// Calculate how many blank rows that would leave\n-\t\t\tint blankRows \u003d AbstractGuiCellTerminalBase.ROWS_PER_PAGE - rowsToDraw;\n-\n-\t\t\t// Would that scroll leave any blank rows?\n-\t\t\tif( blankRows \u003e 0 )\n-\t\t\t{\n-\t\t\t\t// Subtract the blank rows from the scroll, bounding to 0\n-\t\t\t\tthis.currentScroll \u003d Math.max( 0, this.currentScroll - blankRows );\n-\t\t\t}\n-\n+\t\t\t// Update the scroll bar\n+\t\t\tthis.scrollBar.setRange( 0, overflowRows, 1 );\n+\t\t\tthis.onScrollbarMoved();\n \t\t}\n \t}\n \n@@ -338,6 +330,9 @@ private void updateSearch()\n \t\t// Sort\n \t\tthis.sortMatchingList();\n \n+\t\t// Update scrollbar\n+\t\tthis.updateScrollMaximum();\n+\n \t}\n \n \t/**\n@@ -365,6 +360,9 @@ protected void drawGuiContainerBackgroundLayer( final float alpha, final int siz\n \t@Override\n \tprotected void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n \t{\n+\t\t// Call super\n+\t\tsuper.drawGuiContainerForegroundLayer( mouseX, mouseY );\n+\n \t\t// Draw the title\n \t\tthis.fontRendererObj.drawString( this.guiTitle, AbstractGuiCellTerminalBase.TITLE_POS_X, AbstractGuiCellTerminalBase.TITLE_POS_Y, 0 );\n \n@@ -396,7 +394,14 @@ protected void drawGuiContainerForegroundLayer( final int mouseX, final int mous\n \t\t}\n \n \t\t// Draw the tooltip\n-\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop );\n+\t\tthis.drawTooltip( mouseX - this.guiLeft, mouseY - this.guiTop, true );\n+\t}\n+\n+\t@Override\n+\tprotected ScrollbarParams getScrollbarParameters()\n+\t{\n+\t\treturn new ScrollbarParams( AbstractGuiCellTerminalBase.SCROLLBAR_POS_X, AbstractGuiCellTerminalBase.SCROLLBAR_POS_Y,\n+\t\t\t\t\t\tAbstractGuiCellTerminalBase.SCROLLBAR_HEIGHT );\n \t}\n \n \t/**\n@@ -414,14 +419,18 @@ protected void keyTyped( final char key, final int keyID )\n \t\t\t// Slot the screen.\n \t\t\tthis.mc.thePlayer.closeScreen();\n \t\t}\n-\t\telse\n+\t\telse if( this.searchBar.isFocused() )\n \t\t{\n \t\t\t// Get the search term\n \t\t\tthis.searchTerm \u003d this.searchBar.getText().trim().toLowerCase();\n \n \t\t\t// Re-search the widgets\n \t\t\tthis.updateSearch();\n \t\t}\n+\t\telse\n+\t\t{\n+\t\t\tsuper.keyTyped( key, keyID );\n+\t\t}\n \n \t}\n \n@@ -499,6 +508,12 @@ protected void mouseClicked( final int mouseX, final int mouseY, final int mouse\n \n \t}\n \n+\t@Override\n+\tprotected void onScrollbarMoved()\n+\t{\n+\t\tthis.currentScroll \u003d this.scrollBar.getCurrentScroll();\n+\t}\n+\n \tprotected abstract void sortModeButtonClicked( ComparatorMode modeRequested );\n \n \t/**\n@@ -526,9 +541,6 @@ public void drawWidgets( final int mouseX, final int mouseY )\n \t\t// Anything to draw?\n \t\tif( !this.matchingSearchWidgets.isEmpty() )\n \t\t{\n-\t\t\t// Get the scroll position\n-\t\t\tthis.updateScrollPosition();\n-\n \t\t\t// Calculate the starting index\n \t\t\tint startingIndex \u003d this.currentScroll * AbstractGuiCellTerminalBase.WIDGETS_PER_ROW;\n \n@@ -615,6 +627,27 @@ public AspectStack getSelectedAspect()\n \t}\n \n \t/**\n+\t * If the mouse wheel moves, updates the scrollbar\n+\t */\n+\t@Override\n+\tpublic void handleMouseInput()\n+\t{\n+\t\t// Call super\n+\t\tsuper.handleMouseInput();\n+\n+\t\t// Get the delta z for the scroll wheel\n+\t\tint deltaZ \u003d Mouse.getEventDWheel();\n+\n+\t\t// Did the wheel move?\n+\t\tif( deltaZ !\u003d 0 )\n+\t\t{\n+\t\t\t// Inform the scroll bar\n+\t\t\tthis.scrollBar.wheel( deltaZ );\n+\t\t\tthis.onScrollbarMoved();\n+\t\t}\n+\t}\n+\n+\t/**\n \t * Sets the gui up.\n \t */\n \t@Override\n@@ -679,6 +712,9 @@ public void updateAspects()\n \t\t\tthis.aspectWidgets.add( new WidgetAspectSelector( this, aspectStack, 0, 0, this.player ) );\n \t\t}\n \n+\t\t// Update the scrollbar\n+\t\tthis.updateScrollMaximum();\n+\n \t\t// Update the search results\n \t\tthis.updateSearch();\n "
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/abstraction/AbstractGuiConstantsACT.java",
          "patch": "@@ -9,7 +9,7 @@\n  * \n  */\n public abstract class AbstractGuiConstantsACT\n-\textends AbstractGuiWidgetHost\n+\textends AbstractGuiWithScrollbar\n {\n \n \t/**\n@@ -41,7 +41,7 @@\n \t * Minimum transparency of the aspect if there is not enough in the wand.\n \t */\n \tprotected static final float ASPECT_COST_MAX_ALPHA \u003d 0.75F;\n-\t\n+\n \t/**\n \t * ID of the clear grid button\n \t */\n@@ -60,15 +60,15 @@\n \tprotected static final int BUTTON_SORT_ORDER_ID \u003d 1;\n \n \tprotected static final int BUTTON_SORT_ORDER_POS_X \u003d -18;\n-\t\n+\n \tprotected static final int BUTTON_SORT_ORDER_POS_Y \u003d 8;\n \n \tprotected static final int BUTTON_SORT_DIR_ID \u003d 2;\n \n \tprotected static final int BUTTON_SORT_DIR_POS_X \u003d BUTTON_SORT_ORDER_POS_X;\n-\t\n+\n \tprotected static final int BUTTON_SORT_DIR_POS_Y \u003d BUTTON_SORT_ORDER_POS_Y + 20;\n-\t\n+\n \tprotected static final int BUTTON_SORT_SIZE \u003d 16;\n \n \t/**\n@@ -125,16 +125,11 @@\n \t * Y position of the scroll bar\n \t */\n \tprotected static final int SCROLLBAR_POS_Y \u003d 18;\n-\t\n+\n \t/**\n \t * Height of the scroll bar\n \t */\n \tprotected static final int SCROLLBAR_HEIGHT \u003d 52;\n-\t\n-\t/**\n-\t * Position + Height of the scroll bar.\n-\t */\n-\tprotected static final int SCROLLBAR_VERTICAL_BOUND \u003d AbstractGuiConstantsACT.SCROLLBAR_HEIGHT + AbstractGuiConstantsACT.SCROLLBAR_POS_Y;\n \n \t/**\n \t * X offset to draw the search field.\n@@ -171,6 +166,11 @@\n \t */\n \tprotected static final int TITLE_POS_Y \u003d 6;\n \n+\t/**\n+\t * Determines how often to update the tooltip when the mouse is not moving.\n+\t */\n+\tprotected static final long WIDGET_TOOLTIP_UPDATE_INTERVAL \u003d 3000L;\n+\n \tpublic AbstractGuiConstantsACT( final Container container )\n \t{\n \t\tsuper( container );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/abstraction/AbstractGuiWithScrollbar.java",
          "patch": "@@ -0,0 +1,296 @@\n+package thaumicenergistics.gui.abstraction;\n+\n+import net.minecraft.inventory.Container;\n+import net.minecraft.util.ResourceLocation;\n+import org.lwjgl.input.Keyboard;\n+import org.lwjgl.input.Mouse;\n+import thaumicenergistics.util.GuiHelper;\n+import appeng.client.gui.AEBaseGui;\n+import appeng.client.gui.widgets.GuiScrollbar;\n+\n+public abstract class AbstractGuiWithScrollbar\n+\textends AbstractGuiWidgetHost\n+{\n+\tprotected class ScrollbarParams\n+\t{\n+\t\t/**\n+\t\t * X position of the scroll bar\n+\t\t */\n+\t\tint scrollbarPosX;\n+\n+\t\t/**\n+\t\t * Y position of the scroll bar\n+\t\t */\n+\t\tint scrollbarPosY;\n+\n+\t\t/**\n+\t\t * Height of the scroll bar\n+\t\t */\n+\t\tint scrollbarHeight;\n+\n+\t\t/**\n+\t\t * Position + Height of the scroll bar.\n+\t\t */\n+\t\tint scrollbarVerticalBound;\n+\n+\t\t/**\n+\t\t * Create the parameters\n+\t\t * \n+\t\t * @param x\n+\t\t * @param y\n+\t\t * @param height\n+\t\t */\n+\t\tpublic ScrollbarParams( final int x, final int y, final int height )\n+\t\t{\n+\t\t\tthis.scrollbarPosX \u003d x;\n+\t\t\tthis.scrollbarPosY \u003d y;\n+\t\t\tthis.scrollbarHeight \u003d height;\n+\t\t\tthis.scrollbarVerticalBound \u003d this.scrollbarHeight + this.scrollbarPosY;\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Scroll bar\n+\t */\n+\tprotected final GuiScrollbar scrollBar;\n+\n+\t/**\n+\t * Serves as a graphics call bridge for the scroll bar.\n+\t */\n+\tprivate AEBaseGui aeGuiBridge;\n+\t/**\n+\t * True if the scroll bar has mouse focus.\n+\t */\n+\tprivate boolean isScrollBarHeld \u003d false;\n+\t/**\n+\t * The last Y position of the mouse when the scroll bar has mouse focus.\n+\t */\n+\tprivate int scrollHeldPrevY \u003d 0;\n+\n+\t/**\n+\t * Scrollbar parameters\n+\t */\n+\tprivate ScrollbarParams scrollParams;\n+\n+\tpublic AbstractGuiWithScrollbar( final Container container )\n+\t{\n+\t\tsuper( container );\n+\n+\t\t// Create the scrollbar\n+\t\tthis.scrollBar \u003d new GuiScrollbar();\n+\t}\n+\n+\t/**\n+\t * Draw the foreground layer.\n+\t */\n+\t@Override\n+\tprotected void drawGuiContainerForegroundLayer( final int mouseX, final int mouseY )\n+\t{\n+\t\t// Call super\n+\t\tsuper.drawGuiContainerForegroundLayer( mouseX, mouseY );\n+\n+\t\t// Draw the scroll bar\n+\t\tthis.scrollBar.draw( this.aeGuiBridge );\n+\t}\n+\n+\t/**\n+\t * Gets the scroll bar parameters from the subclass.\n+\t * \n+\t * @return\n+\t */\n+\tprotected abstract ScrollbarParams getScrollbarParameters();\n+\n+\t/**\n+\t * Called when the player types a key.\n+\t */\n+\t@Override\n+\tprotected void keyTyped( final char key, final int keyID )\n+\t{\n+\t\t// Home Key\n+\t\tif( keyID \u003d\u003d Keyboard.KEY_HOME )\n+\t\t{\n+\t\t\t// Move the scroll all the way to home\n+\t\t\tthis.scrollBar.click( this.aeGuiBridge, this.scrollParams.scrollbarPosX + 1, this.scrollParams.scrollbarPosY + 1 );\n+\t\t\tthis.scrollBar.wheel( 1 );\n+\t\t\tthis.onScrollbarMoved();\n+\t\t}\n+\t\t// End Key\n+\t\telse if( keyID \u003d\u003d Keyboard.KEY_END )\n+\t\t{\n+\t\t\t// Move the scroll all the way to end\n+\t\t\tthis.scrollBar.click( this.aeGuiBridge, this.scrollParams.scrollbarPosX + 1, this.scrollParams.scrollbarVerticalBound );\n+\t\t\tthis.onScrollbarMoved();\n+\n+\t\t}\n+\t\t// Up Key\n+\t\telse if( keyID \u003d\u003d Keyboard.KEY_UP )\n+\t\t{\n+\t\t\tthis.scrollBar.wheel( 1 );\n+\t\t\tthis.onScrollbarMoved();\n+\t\t}\n+\t\t// Down Key\n+\t\telse if( keyID \u003d\u003d Keyboard.KEY_DOWN )\n+\t\t{\n+\t\t\tthis.scrollBar.wheel( -1 );\n+\t\t\tthis.onScrollbarMoved();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tsuper.keyTyped( key, keyID );\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Called when the mouse is clicked while the gui is open\n+\t */\n+\t@Override\n+\tprotected void mouseClicked( final int mouseX, final int mouseY, final int mouseButton )\n+\t{\n+\t\t// Is the mouse over the scroll bar area?\n+\t\tif( GuiHelper.instance.isPointInGuiRegion( this.scrollParams.scrollbarPosY, this.scrollParams.scrollbarPosX,\n+\t\t\tthis.scrollParams.scrollbarHeight, this.scrollBar.getWidth(), mouseX, mouseY, this.guiLeft, this.guiTop ) )\n+\t\t{\n+\t\t\t// The scroll bar now has mouse focus\n+\t\t\tthis.isScrollBarHeld \u003d true;\n+\n+\t\t\t// Mark this Y\n+\t\t\tthis.scrollHeldPrevY \u003d mouseY;\n+\n+\t\t\t// Jump the scroll to the mouse\n+\t\t\tthis.scrollBar.click( this.aeGuiBridge, mouseX - this.guiLeft, mouseY - this.guiTop );\n+\n+\t\t\t// Update the subclass\n+\t\t\tthis.onScrollbarMoved();\n+\n+\t\t\t// Do not pass to super\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Call super\n+\t\tsuper.mouseClicked( mouseX, mouseY, mouseButton );\n+\t}\n+\n+\t/**\n+\t * Called when the scroll bar has moved.\n+\t */\n+\tprotected abstract void onScrollbarMoved();\n+\n+\t@Override\n+\tpublic void drawScreen( final int mouseX, final int mouseY, final float mouseBtn )\n+\t{\n+\t\t// Call super\n+\t\tsuper.drawScreen( mouseX, mouseY, mouseBtn );\n+\n+\t\t// Is the mouse holding the scroll bar?\n+\t\tif( this.isScrollBarHeld )\n+\t\t{\n+\t\t\t// Is the mouse button still being held down?\n+\t\t\tif( Mouse.isButtonDown( GuiHelper.MOUSE_BUTTON_LEFT ) )\n+\t\t\t{\n+\t\t\t\t// Has the Y changed?\n+\t\t\t\tif( mouseY \u003d\u003d this.scrollHeldPrevY )\n+\t\t\t\t{\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\n+\t\t\t\tboolean correctForZero \u003d false;\n+\n+\t\t\t\t// Mark the Y\n+\t\t\t\tthis.scrollHeldPrevY \u003d mouseY;\n+\n+\t\t\t\t// Calculate the Y position for the scroll bar\n+\t\t\t\tint repY \u003d mouseY - this.guiTop;\n+\n+\t\t\t\t// Has the mouse exceeded the \u0027upper\u0027 bound?\n+\t\t\t\tif( repY \u003e this.scrollParams.scrollbarVerticalBound )\n+\t\t\t\t{\n+\t\t\t\t\trepY \u003d this.scrollParams.scrollbarVerticalBound;\n+\t\t\t\t}\n+\t\t\t\t// Has the mouse exceeded the \u0027lower\u0027 bound?\n+\t\t\t\telse if( repY \u003c\u003d this.scrollParams.scrollbarPosY )\n+\t\t\t\t{\n+\t\t\t\t\trepY \u003d this.scrollParams.scrollbarPosY;\n+\n+\t\t\t\t\t// We will have to correct for zero\n+\t\t\t\t\tcorrectForZero \u003d true;\n+\t\t\t\t}\n+\n+\t\t\t\t// Update the scroll bar\n+\t\t\t\tthis.scrollBar.click( this.aeGuiBridge, this.scrollParams.scrollbarPosX + 1, repY );\n+\n+\t\t\t\t// Should we correct for zero?\n+\t\t\t\tif( correctForZero )\n+\t\t\t\t{\n+\t\t\t\t\tthis.scrollBar.wheel( 1 );\n+\t\t\t\t}\n+\n+\t\t\t\t// Inform the subclass the scrollbar has moved //\n+\t\t\t\tthis.onScrollbarMoved();\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\t// The scroll bar no longer has mouse focus\n+\t\t\t\tthis.isScrollBarHeld \u003d false;\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Sets the gui up.\n+\t */\n+\t@Override\n+\tpublic void initGui()\n+\t{\n+\t\t// Call super\n+\t\tsuper.initGui();\n+\n+\t\t// Get the params\n+\t\tthis.scrollParams \u003d this.getScrollbarParameters();\n+\n+\t\t// Setup the scroll bar\n+\t\tthis.scrollBar.setLeft( this.scrollParams.scrollbarPosX ).setTop( this.scrollParams.scrollbarPosY )\n+\t\t\t\t\t\t.setHeight( this.scrollParams.scrollbarHeight );\n+\n+\t\t// No scrolling yet\n+\t\tthis.scrollBar.setRange( 0, 0, 1 );\n+\n+\t\t// Create the AE bridge\n+\t\tthis.aeGuiBridge \u003d new AEBaseGui( this.inventorySlots )\n+\t\t{\n+\n+\t\t\t@Override\n+\t\t\tpublic void bindTexture( final String file )\n+\t\t\t{\n+\t\t\t\tthis.bindTexture( \"appliedenergistics2\", file );\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void bindTexture( final String base, final String file )\n+\t\t\t{\n+\t\t\t\tAbstractGuiWithScrollbar.this.mc.getTextureManager().bindTexture( new ResourceLocation( base, \"textures/\" + file ) );\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void drawBG( final int arg0, final int arg1, final int arg2, final int arg3 )\n+\t\t\t{\n+\t\t\t\t// Ignored\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void drawFG( final int arg0, final int arg1, final int arg2, final int arg3 )\n+\t\t\t{\n+\t\t\t\t// Ignored\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void drawTexturedModalRect( final int posX, final int posY, final int sourceOffsetX, final int sourceOffsetY, final int width,\n+\t\t\t\t\t\t\t\t\t\t\t\tfinal int height )\n+\t\t\t{\n+\t\t\t\tAbstractGuiWithScrollbar.this.drawTexturedModalRect( posX, posY, sourceOffsetX, sourceOffsetY, width, height );\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+}"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/gui/widget/WidgetAEItem.java",
          "patch": "@@ -40,51 +40,13 @@\n \t * @param yPos\n \t * @param aeItemRenderer\n \t */\n-\tpublic WidgetAEItem( IWidgetHost hostGUI, int xPos, int yPos, AppEngRenderItem aeItemRenderer )\n+\tpublic WidgetAEItem( final IWidgetHost hostGUI, final int xPos, final int yPos, final AppEngRenderItem aeItemRenderer )\n \t{\n \t\tsuper( hostGUI, xPos, yPos );\n \n \t\tthis.aeItemRenderer \u003d aeItemRenderer;\n \t}\n \n-\t@Override\n-\tpublic void getTooltip( final List\u003cString\u003e tooltip )\n-\t{\n-\t\tif( this.aeItemStack !\u003d null )\n-\t\t{\n-\t\t\t// Get the stack\n-\t\t\tItemStack stack \u003d this.aeItemStack.getItemStack();\n-\n-\t\t\t// Get the tooltip list\n-\t\t\tList\u003cString\u003e stackTooltip \u003d stack.getTooltip( WidgetAEItem.MC.thePlayer, WidgetAEItem.MC.gameSettings.advancedItemTooltips );\n-\n-\t\t\t// Set colors and add\n-\t\t\tfor( int index \u003d 0; index \u003c stackTooltip.size(); index++ )\n-\t\t\t{\n-\t\t\t\tif( index \u003d\u003d 0 )\n-\t\t\t\t{\n-\t\t\t\t\t// Item name based on rarity\n-\t\t\t\t\tstackTooltip.set( index, stack.getRarity().rarityColor + stackTooltip.get( index ) );\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\t// The rest grey\n-\t\t\t\t\tstackTooltip.set( index, EnumChatFormatting.GRAY + stackTooltip.get( index ) );\n-\t\t\t\t}\n-\n-\t\t\t\t// Add the item tooltip line\n-\t\t\t\ttooltip.add( stackTooltip.get( index ) );\n-\t\t\t}\n-\n-\t\t\t// Get the mod name\n-\t\t\tString modName \u003d ( (AEItemStack)this.aeItemStack ).getModID();\n-\t\t\tmodName \u003d modName.substring( 0, 1 ).toUpperCase() + modName.substring( 1 );\n-\t\t\t\n-\t\t\t// Add the mod name\n-\t\t\ttooltip.add( EnumChatFormatting.BLUE + \"\" + EnumChatFormatting.ITALIC + modName );\n-\t\t}\n-\t}\n-\n \t/**\n \t * Draws the itemstack if there is one.\n \t */\n@@ -126,6 +88,44 @@ public IAEItemStack getItemStack()\n \t}\n \n \t@Override\n+\tpublic void getTooltip( final List\u003cString\u003e tooltip )\n+\t{\n+\t\tif( this.aeItemStack !\u003d null )\n+\t\t{\n+\t\t\t// Get the stack\n+\t\t\tItemStack stack \u003d this.aeItemStack.getItemStack();\n+\n+\t\t\t// Get the tooltip list\n+\t\t\tList\u003cString\u003e stackTooltip \u003d stack.getTooltip( WidgetAEItem.MC.thePlayer, WidgetAEItem.MC.gameSettings.advancedItemTooltips );\n+\n+\t\t\t// Set colors and add\n+\t\t\tfor( int index \u003d 0; index \u003c stackTooltip.size(); index++ )\n+\t\t\t{\n+\t\t\t\tif( index \u003d\u003d 0 )\n+\t\t\t\t{\n+\t\t\t\t\t// Item name based on rarity\n+\t\t\t\t\tstackTooltip.set( index, stack.getRarity().rarityColor + stackTooltip.get( index ) );\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\t// The rest grey\n+\t\t\t\t\tstackTooltip.set( index, EnumChatFormatting.GRAY + stackTooltip.get( index ) );\n+\t\t\t\t}\n+\n+\t\t\t\t// Add the item tooltip line\n+\t\t\t\ttooltip.add( stackTooltip.get( index ) );\n+\t\t\t}\n+\n+\t\t\t// Get the mod name\n+\t\t\tString modName \u003d ( (AEItemStack)this.aeItemStack ).getModID();\n+\t\t\tmodName \u003d modName.substring( 0, 1 ).toUpperCase() + modName.substring( 1 );\n+\n+\t\t\t// Add the mod name\n+\t\t\ttooltip.add( EnumChatFormatting.BLUE + \"\" + EnumChatFormatting.ITALIC + modName );\n+\t\t}\n+\t}\n+\n+\t@Override\n \tpublic void mouseClicked()\n \t{\n \t\t// Unused\n@@ -136,7 +136,7 @@ public void mouseClicked()\n \t * \n \t * @param itemStack\n \t */\n-\tpublic void setItemStack( IAEItemStack itemStack )\n+\tpublic void setItemStack( final IAEItemStack itemStack )\n \t{\n \t\tthis.aeItemStack \u003d itemStack;\n \t}"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/integration/ModuleWaila.java",
          "patch": "@@ -7,7 +7,7 @@\n import mcp.mobius.waila.api.IWailaRegistrar;\n import net.minecraft.item.ItemStack;\n import net.minecraft.tileentity.TileEntity;\n-import thaumicenergistics.blocks.BlockProviderBase;\n+import thaumicenergistics.blocks.AbstractBlockProviderBase;\n import thaumicenergistics.tileentities.TileProviderBase;\n import appeng.core.localization.WailaText;\n import cpw.mods.fml.common.event.FMLInterModComms;\n@@ -41,7 +41,7 @@ public ModuleWaila()\n \tpublic static void callbackRegister( IWailaRegistrar registrar )\n \t{\n \t\t// Register the providers\n-\t\tregistrar.registerBodyProvider( ModuleWaila.instance, BlockProviderBase.class );\n+\t\tregistrar.registerBodyProvider( ModuleWaila.instance, AbstractBlockProviderBase.class );\n \t}\n \n \t/**"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/integration/tc/EssentiaItemContainerHelper.java",
          "patch": "@@ -401,7 +401,7 @@ public int getContainerCapacity( final ItemStack container )\n \t * @param metadata\n \t * @return\n \t */\n-\tpublic IEssentiaContainerPermission getContainerInfo( final Item item, final int metadata ) // TODO\n+\tpublic IEssentiaContainerPermission getContainerInfo( final Item item, final int metadata )\n \t{\n \t\t// Is the item not null?\n \t\tif( item !\u003d null )"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/inventory/HandlerItemEssentiaCell.java",
          "patch": "@@ -499,7 +499,7 @@ public long getFreeBytes()\n \t}\n \n \t/**\n-\t * TODO: Implement this\n+\t * TODO: Implement Essentia cell priority\n \t */\n \t@Override\n \tpublic int getPriority()\n@@ -654,7 +654,7 @@ public IAEFluidStack injectItems( final IAEFluidStack input, final Actionable mo\n \t}\n \n \t/**\n-\t * TODO: Implement this\n+\t * TODO: Implement Essentia cell pre-formated\n \t * \n \t * @return\n \t */\n@@ -674,7 +674,7 @@ public boolean isPreformatted()\n \t}\n \n \t/**\n-\t * TODO: Implement this.\n+\t * TODO: Implement if Essentia cell is pre-formated\n \t */\n \t@Override\n \tpublic boolean isPrioritized( final IAEFluidStack input )"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/items/ItemEssentiaCell.java",
          "patch": "@@ -45,15 +45,9 @@\n \n \tprivate static final double[] IDLE_DRAIN_AMOUNTS \u003d { 0.5D, 1.0D, 1.5D, 2.0D };\n \n-\tprivate static final int MAX_TYPES \u003d 8;\n+\tprivate static final int MAX_TYPES \u003d 12;\n \n-\tprivate static final int CELL_STATUS_MISSING \u003d 0;\n-\n-\tprivate static final int CELL_STATUS_HAS_ROOM \u003d 1;\n-\n-\tprivate static final int CELL_STATUS_TYPES_FULL \u003d 2;\n-\n-\tprivate static final int CELL_STATUS_FULL \u003d 3;\n+\tprivate static final int CELL_STATUS_MISSING \u003d 0, CELL_STATUS_HAS_ROOM \u003d 1, CELL_STATUS_TYPES_FULL \u003d 2, CELL_STATUS_FULL \u003d 3;\n \n \tprivate IIcon[] icons;\n \n@@ -92,12 +86,12 @@ private void addContentsToCellDescription( final HandlerItemEssentiaCell cellHan\n \t\t\t\telse\n \t\t\t\t{\n \t\t\t\t\t// It does not, set to gray\n-\t\t\t\t\taspectChatColor \u003d EnumChatFormatting.GRAY.toString();\n+\t\t\t\t\taspectChatColor \u003d EnumChatFormatting.WHITE.toString();\n \t\t\t\t}\n \n \t\t\t\t// Build the display string\n \t\t\t\tString aspectInfo \u003d String.format( \"%s%s%s x %d\", aspectChatColor, currentStack.getAspectName( player ),\n-\t\t\t\t\tEnumChatFormatting.GRAY.toString(), currentStack.amount );\n+\t\t\t\t\tEnumChatFormatting.WHITE.toString(), currentStack.amount );\n \n \t\t\t\t// Add to the list\n \t\t\t\tdisplayList.add( aspectInfo );\n@@ -148,6 +142,12 @@ public void addInformation( final ItemStack essentiaCell, final EntityPlayer pla\n \t\t\t// Add information about the essentia types in the cell\n \t\t\tthis.addContentsToCellDescription( cellHandler, displayList, player );\n \t\t}\n+\t\telse\n+\t\t{\n+\t\t\t// Let the user know they can hold shift\n+\t\t\tdisplayList.add( EnumChatFormatting.WHITE.toString() + EnumChatFormatting.ITALIC.toString() +\n+\t\t\t\t\t\t\tStatCollector.translateToLocal( ThaumicEnergistics.MOD_ID + \".tooltip.essentia.cell.details\" ) );\n+\t\t}\n \n \t}\n \n@@ -220,7 +220,6 @@ public void getSubItems( final Item item, final CreativeTabs creativeTab, final\n \t\tfor( int i \u003d 0; i \u003c ItemStorageBase.SUFFIXES.length; i++ )\n \t\t{\n \t\t\tlistSubItems.add( new ItemStack( item, 1, i ) );\n-\n \t\t}\n \t}\n "
        },
        {
          "file_name": "src/main/java/thaumicenergistics/network/handlers/part/HandlerClientArcaneCraftingTerminal.java",
          "patch": "@@ -10,7 +10,7 @@\n {\n \n \t@Override\n-\tpublic IMessage onMessage( PacketClientArcaneCraftingTerminal message, MessageContext ctx )\n+\tpublic IMessage onMessage( final PacketClientArcaneCraftingTerminal message, final MessageContext ctx )\n \t{\n \t\tmessage.execute();\n \t\treturn null;"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/network/packet/AbstractPacket.java",
          "patch": "@@ -5,6 +5,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.util.zip.Deflater;\n import java.util.zip.GZIPInputStream;\n import java.util.zip.GZIPOutputStream;\n import net.minecraft.client.Minecraft;\n@@ -74,7 +75,7 @@ private static World getClientWorld()\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static IAEItemStack readAEItemStack( ByteBuf stream )\n+\tprotected static IAEItemStack readAEItemStack( final ByteBuf stream )\n \t{\n \t\tIAEItemStack itemStack;\n \t\ttry\n@@ -97,7 +98,7 @@ protected static IAEItemStack readAEItemStack( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static Aspect readAspect( ByteBuf stream )\n+\tprotected static Aspect readAspect( final ByteBuf stream )\n \t{\n \t\treturn Aspect.aspects.get( readString( stream ) );\n \t}\n@@ -108,7 +109,7 @@ protected static Aspect readAspect( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static AbstractAEPartBase readPart( ByteBuf stream )\n+\tprotected static AbstractAEPartBase readPart( final ByteBuf stream )\n \t{\n \t\tForgeDirection side \u003d ForgeDirection.getOrientation( stream.readInt() );\n \n@@ -123,7 +124,7 @@ protected static AbstractAEPartBase readPart( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static EntityPlayer readPlayer( ByteBuf stream )\n+\tprotected static EntityPlayer readPlayer( final ByteBuf stream )\n \t{\n \t\tEntityPlayer player \u003d null;\n \n@@ -142,7 +143,7 @@ protected static EntityPlayer readPlayer( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static String readString( ByteBuf stream )\n+\tprotected static String readString( final ByteBuf stream )\n \t{\n \t\tbyte[] stringBytes \u003d new byte[stream.readInt()];\n \n@@ -157,7 +158,7 @@ protected static String readString( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static TileEntity readTileEntity( ByteBuf stream )\n+\tprotected static TileEntity readTileEntity( final ByteBuf stream )\n \t{\n \t\tWorld world \u003d AbstractPacket.readWorld( stream );\n \n@@ -170,7 +171,7 @@ protected static TileEntity readTileEntity( ByteBuf stream )\n \t * @param stream\n \t * @return\n \t */\n-\tprotected static World readWorld( ByteBuf stream )\n+\tprotected static World readWorld( final ByteBuf stream )\n \t{\n \t\tWorld world \u003d DimensionManager.getWorld( stream.readInt() );\n \n@@ -191,7 +192,7 @@ protected static World readWorld( ByteBuf stream )\n \t * @param itemStack\n \t * @param stream\n \t */\n-\tprotected static void writeAEItemStack( IAEItemStack itemStack, ByteBuf stream )\n+\tprotected static void writeAEItemStack( final IAEItemStack itemStack, final ByteBuf stream )\n \t{\n \t\t// Do we have a valid stack?\n \t\tif( itemStack !\u003d null )\n@@ -214,7 +215,7 @@ protected static void writeAEItemStack( IAEItemStack itemStack, ByteBuf stream )\n \t * @param aspect\n \t * @param stream\n \t */\n-\tprotected static void writeAspect( Aspect aspect, ByteBuf stream )\n+\tprotected static void writeAspect( final Aspect aspect, final ByteBuf stream )\n \t{\n \t\tString aspectName \u003d \"\";\n \n@@ -232,7 +233,7 @@ protected static void writeAspect( Aspect aspect, ByteBuf stream )\n \t * @param part\n \t * @param stream\n \t */\n-\tprotected static void writePart( AbstractAEPartBase part, ByteBuf stream )\n+\tprotected static void writePart( final AbstractAEPartBase part, final ByteBuf stream )\n \t{\n \t\tstream.writeInt( part.getSide().ordinal() );\n \n@@ -246,7 +247,7 @@ protected static void writePart( AbstractAEPartBase part, ByteBuf stream )\n \t * @param stream\n \t */\n \t@SuppressWarnings(\"null\")\n-\tprotected static void writePlayer( EntityPlayer player, ByteBuf stream )\n+\tprotected static void writePlayer( final EntityPlayer player, final ByteBuf stream )\n \t{\n \t\tboolean validPlayer \u003d ( player !\u003d null );\n \n@@ -265,7 +266,7 @@ protected static void writePlayer( EntityPlayer player, ByteBuf stream )\n \t * @param string\n \t * @param stream\n \t */\n-\tprotected static void writeString( String string, ByteBuf stream )\n+\tprotected static void writeString( final String string, final ByteBuf stream )\n \t{\n \t\tbyte[] stringBytes \u003d string.getBytes( Charsets.UTF_8 );\n \n@@ -280,7 +281,7 @@ protected static void writeString( String string, ByteBuf stream )\n \t * @param entity\n \t * @param stream\n \t */\n-\tprotected static void writeTileEntity( TileEntity entity, ByteBuf stream )\n+\tprotected static void writeTileEntity( final TileEntity entity, final ByteBuf stream )\n \t{\n \t\twriteWorld( entity.getWorldObj(), stream );\n \t\tstream.writeInt( entity.xCoord );\n@@ -294,7 +295,7 @@ protected static void writeTileEntity( TileEntity entity, ByteBuf stream )\n \t * @param world\n \t * @param stream\n \t */\n-\tprotected static void writeWorld( World world, ByteBuf stream )\n+\tprotected static void writeWorld( final World world, final ByteBuf stream )\n \t{\n \t\tstream.writeInt( world.provider.dimensionId );\n \t}\n@@ -391,12 +392,17 @@ private void toCompressedBytes( final ByteBuf packetStream )\n \t\t\t{\n \n \t\t\t\t@Override\n-\t\t\t\tpublic void write( int byteToWrite ) throws IOException\n+\t\t\t\tpublic void write( final int byteToWrite ) throws IOException\n \t\t\t\t{\n \t\t\t\t\t// Write the byte to the packet stream\n \t\t\t\t\tpacketStream.writeByte( byteToWrite \u0026 0xFF );\n \t\t\t\t}\n-\t\t\t} );\n+\t\t\t} )\n+\t\t\t{\n+\t\t\t\t{\n+\t\t\t\t\tthis.def.setLevel( Deflater.BEST_COMPRESSION );\n+\t\t\t\t}\n+\t\t\t};\n \n \t\t\t// Compress\n \t\t\tcompressor.write( streamToCompress.array(), 0, streamToCompress.writerIndex() );\n@@ -444,7 +450,7 @@ public void write( int byteToWrite ) throws IOException\n \t * Reads data from the packet stream.\n \t */\n \t@Override\n-\tpublic void fromBytes( ByteBuf stream )\n+\tpublic void fromBytes( final ByteBuf stream )\n \t{\n \t\tthis.mode \u003d stream.readByte();\n \t\tthis.player \u003d AbstractPacket.readPlayer( stream );\n@@ -466,7 +472,7 @@ public void fromBytes( ByteBuf stream )\n \t * Writes data into the packet stream.\n \t */\n \t@Override\n-\tpublic void toBytes( ByteBuf stream )\n+\tpublic void toBytes( final ByteBuf stream )\n \t{\n \t\t// Write the mode\n \t\tstream.writeByte( this.mode );"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/network/packet/client/PacketClientArcaneCraftingTerminal.java",
          "patch": "@@ -227,7 +227,6 @@ public void readData( final ByteBuf stream )\n \t@Override\n \tpublic void writeData( final ByteBuf stream )\n \t{\n-\n \t\tswitch ( this.mode )\n \t\t{\n \t\t\tcase PacketClientArcaneCraftingTerminal.MODE_RECEIVE_FULL_LIST:"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/parts/AEPartEssentiaIO.java",
          "patch": "@@ -45,7 +45,6 @@\n import cpw.mods.fml.relauncher.Side;\n import cpw.mods.fml.relauncher.SideOnly;\n \n-// TODO: Owner security\n public abstract class AEPartEssentiaIO\n \textends AbstractAEPartBase\n \timplements IGridTickable, IInventoryUpdateReceiver, IAspectSlotPart, IAEAppEngInventory"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/proxy/CommonProxy.java",
          "patch": "@@ -81,7 +81,8 @@ public void registerSpatialIOMovables()\n \t\t// Add infusion provider\n \t\tmovableRegistry.whiteListTileEntity( TileInfusionProvider.class );\n \n-\t\t// TODO Add golem crank\n+\t\t// Added gearbox\n+\t\tmovableRegistry.whiteListTileEntity( TileGearBox.class );\n \t}\n \n \t/**"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/registries/AEAspectRegister.java",
          "patch": "@@ -427,15 +427,15 @@ else if( ing instanceof ItemStack )\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tSystem.out.println( \"Missing ingredient clause for\" );\n-\t\t\t\t\t\t\tSystem.out.println( ing.getClass() );\n-\t\t\t\t\t\t\tSystem.out.println();\n+\t\t\t\t\t\t\t//System.out.println( \"Missing ingredient clause for\" );\n+\t\t\t\t\t\t\t//System.out.println( ing.getClass() );\n+\t\t\t\t\t\t\t//System.out.println();\n \t\t\t\t\t\t}\n \n \t\t\t\t\t}\n \t\t\t\t\tcatch( Exception e )\n \t\t\t\t\t{\n-\t\t\t\t\t\tSystem.out.println( e );\n+\t\t\t\t\t\t//System.out.println( e );\n \t\t\t\t\t}\n \n \t\t\t\t\t// Skip null stacks\n@@ -458,7 +458,7 @@ else if( ing instanceof ItemStack )\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\tSystem.out.println( this.displayName + \": getIngredients() failed\" );\n+\t\t\t\t//System.out.println( this.displayName + \": getIngredients() failed\" );\n \t\t\t}\n \t\t}\n \n@@ -930,20 +930,35 @@ private void registerItem( final AEItemDefinition itemDef, final AspectList aspe\n \t}\n \n \t/**\n-\t * Updates the aspects for the Essentia cells.\n+\t * Updates the aspects for the thaumic energistics items.\n \t */\n-\tprivate void registerTECells()\n+\tprivate void registerTEItems()\n \t{\n \t\t// Get the aspect list for a 1k cell\n-\t\tAspectList aspects \u003d ThaumcraftApiHelper.getObjectAspects( AEApi.instance().items().itemCell1k.stack( 1 ) ).copy();\n-\n-\t\taspects.add( Aspect.MAGIC, 3 );\n-\t\taspects.add( Aspect.AURA, 5 );\n-\n-\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_1k.getStack(), aspects );\n-\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_4k.getStack(), aspects );\n-\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_16k.getStack(), aspects );\n-\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_64k.getStack(), aspects );\n+\t\tAspectList cellAspects \u003d ThaumcraftApiHelper.getObjectAspects( AEApi.instance().items().itemCell1k.stack( 1 ) ).copy();\n+\n+\t\tcellAspects.add( Aspect.MAGIC, 3 );\n+\t\tcellAspects.add( Aspect.AURA, 5 );\n+\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_1k.getStack(), cellAspects );\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_4k.getStack(), cellAspects );\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_16k.getStack(), cellAspects );\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().items().EssentiaCell_64k.getStack(), cellAspects );\n+\n+\t\t// Set the aspects for the iron gearbox\n+\t\tAspectList ironGearboxAspects \u003d new AspectList();\n+\t\tironGearboxAspects.add( Aspect.METAL, 7 );\n+\t\tironGearboxAspects.add( Aspect.MECHANISM, 5 );\n+\t\tironGearboxAspects.add( Aspect.EARTH, 2 );\n+\t\tironGearboxAspects.add( Aspect.ENTROPY, 2 );\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().blocks().IronGearBox.getStack(), ironGearboxAspects );\n+\n+\t\t// Set the aspects for the thaumium gearbox\n+\t\tAspectList thaumGearbox \u003d ironGearboxAspects.copy();\n+\t\tthaumGearbox.add( Aspect.MAGIC, 10 );\n+\t\tthaumGearbox.add( Aspect.MECHANISM, 5 );\n+\t\tthaumGearbox.add( Aspect.METAL, 3 );\n+\t\tThaumcraftApi.registerObjectTag( TEApi.instance().blocks().ThaumiumGearBox.getStack(), thaumGearbox );\n \n \t}\n \n@@ -983,7 +998,7 @@ public void registerAEAspects()\n \t\t}\n \n \t\t// Finally register my cells\n-\t\tthis.registerTECells();\n+\t\tthis.registerTEItems();\n \n \t\t// Cleanup\n \t\tthis.NORMAL_RECIPES \u003d null;"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/registries/RecipeRegistry.java",
          "patch": "@@ -81,13 +81,13 @@ private static void registerComponents( final Materials aeMaterials, final Block\n \t\tItemStack QuartzGlass \u003d aeBlocks.blockQuartzGlass.stack( 1 );\n \n \t\t// My items\n-\t\tItemStack EssentiaCell_1k \u003d teItems.EssentiaCell_1k.getStack();\n+\t\tItemStack EssentiaComp_1k \u003d teItems.EssentiaStorageComponent_1k.getStack();\n \n-\t\tItemStack EssentiaCell_4k \u003d teItems.EssentiaCell_4k.getStack();\n+\t\tItemStack EssentiaComp_4k \u003d teItems.EssentiaStorageComponent_4k.getStack();\n \n-\t\tItemStack EssentiaCell_16k \u003d teItems.EssentiaCell_16k.getStack();\n+\t\tItemStack EssentiaComp_16k \u003d teItems.EssentiaStorageComponent_16k.getStack();\n \n-\t\tItemStack EssentiaCell_64k \u003d teItems.EssentiaCell_64k.getStack();\n+\t\tItemStack EssentiaComp_64k \u003d teItems.EssentiaStorageComponent_64k.getStack();\n \n \t\t// Item Groups\t\t\n \t\tArrayList\u003cItemStack\u003e GroupQuartz \u003d new ArrayList\u003cItemStack\u003e( 3 );\n@@ -99,32 +99,32 @@ private static void registerComponents( final Materials aeMaterials, final Block\n \t\tAspectList storage1kAspects \u003d new AspectList();\n \t\tstorage1kAspects.add( Aspect.FIRE, 3 );\n \t\tstorage1kAspects.add( Aspect.ORDER, 1 );\n-\t\tRecipeRegistry.STORAGE_COMPONENT_1K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaCell_1k,\n+\t\tRecipeRegistry.STORAGE_COMPONENT_1K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaComp_1k,\n \t\t\tstorage1kAspects, new Object[] { \"EQE\", \"QPQ\", \"EQE\", \u0027E\u0027, EtheralEssence, \u0027Q\u0027, CertusQuartz, \u0027P\u0027, LogicProcessor } );\n \t\tRecipeRegistry.replaceRecipeIngredientWithGroup( (ShapedArcaneRecipe)RecipeRegistry.STORAGE_COMPONENT_1K, CertusQuartz, GroupQuartz );\n \n \t\t// 4K Storage Component\n \t\tAspectList storage4kAspects \u003d new AspectList();\n \t\tstorage4kAspects.add( Aspect.FIRE, 3 );\n \t\tstorage4kAspects.add( Aspect.ORDER, 2 );\n-\t\tRecipeRegistry.STORAGE_COMPONENT_4K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaCell_4k,\n-\t\t\tstorage4kAspects, new Object[] { \"EPE\", \"1G1\", \"E1E\", \u0027E\u0027, EtheralEssence, \u00271\u0027, EssentiaCell_1k, \u0027P\u0027, CalculationProcessor, \u0027G\u0027,\n+\t\tRecipeRegistry.STORAGE_COMPONENT_4K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaComp_4k,\n+\t\t\tstorage4kAspects, new Object[] { \"EPE\", \"1G1\", \"E1E\", \u0027E\u0027, EtheralEssence, \u00271\u0027, EssentiaComp_1k, \u0027P\u0027, CalculationProcessor, \u0027G\u0027,\n \t\t\t\t\t\t\tQuartzGlass } );\n \n \t\t// 16K Storage Component\n \t\tAspectList storage16kAspects \u003d new AspectList();\n \t\tstorage16kAspects.add( Aspect.FIRE, 3 );\n \t\tstorage16kAspects.add( Aspect.ORDER, 4 );\n-\t\tRecipeRegistry.STORAGE_COMPONENT_16K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaCell_16k,\n-\t\t\tstorage16kAspects, new Object[] { \"SPE\", \"4G4\", \"E4S\", \u0027E\u0027, EtheralEssence, \u0027S\u0027, SalisMundus, \u00274\u0027, EssentiaCell_4k, \u0027P\u0027,\n+\t\tRecipeRegistry.STORAGE_COMPONENT_16K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaComp_16k,\n+\t\t\tstorage16kAspects, new Object[] { \"SPE\", \"4G4\", \"E4S\", \u0027E\u0027, EtheralEssence, \u0027S\u0027, SalisMundus, \u00274\u0027, EssentiaComp_4k, \u0027P\u0027,\n \t\t\t\t\t\t\tEngineeringProcessor, \u0027G\u0027, QuartzGlass } );\n \n \t\t// 16K Storage Component\n \t\tAspectList storage64kAspects \u003d new AspectList();\n \t\tstorage64kAspects.add( Aspect.FIRE, 3 );\n \t\tstorage64kAspects.add( Aspect.ORDER, 8 );\n-\t\tRecipeRegistry.STORAGE_COMPONENT_64K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaCell_64k,\n-\t\t\tstorage64kAspects, new Object[] { \"SPS\", \"6G6\", \"S6S\", \u0027S\u0027, SalisMundus, \u00276\u0027, EssentiaCell_16k, \u0027P\u0027, EngineeringProcessor, \u0027G\u0027,\n+\t\tRecipeRegistry.STORAGE_COMPONENT_64K \u003d ThaumcraftApi.addArcaneCraftingRecipe( ResearchTypes.STORAGE.getKey(), EssentiaComp_64k,\n+\t\t\tstorage64kAspects, new Object[] { \"SPS\", \"6G6\", \"S6S\", \u0027S\u0027, SalisMundus, \u00276\u0027, EssentiaComp_16k, \u0027P\u0027, EngineeringProcessor, \u0027G\u0027,\n \t\t\t\t\t\t\tQuartzGlass } );\n \t}\n \n@@ -210,7 +210,7 @@ private static void registerMaterials( final Materials aeMaterials, final Items\n \t\t{\n \t\t\tAspectList certusAspects \u003d new AspectList();\n \t\t\tcertusAspects.add( Aspect.CRYSTAL, 4 );\n-\t\t\tcertusAspects.add( Aspect.ORDER, 2 );\n+\t\t\tcertusAspects.add( Aspect.WATER, 2 );\n \t\t\tRecipeRegistry.DUPE_CERTUS \u003d ThaumcraftApi.addCrucibleRecipe( ResearchRegistry.ResearchTypes.CERTUSDUPE.getKey(), Certus2, Certus1,\n \t\t\t\tcertusAspects );\n \t\t}"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/registries/ResearchRegistry.java",
          "patch": "@@ -29,7 +29,8 @@\n \t\t\tINFUSION (\"INFUSION\", \"ARTIFICE\", -6, 0),\n \t\t\tVISPOWER (\"VISPOWER\", \"THAUMATURGY\", 2, -1),\n \t\t\tCOREUSE (\"COREUSE\", \"GOLEMANCY\", 4, 3),\n-\t\t\tDUPE (\"ALCHEMICALDUPLICATION\", \"ALCHEMY\", -6, -7);\n+\t\t\tDUPE (\"ALCHEMICALDUPLICATION\", \"ALCHEMY\", -6, -7),\n+\t\t\tWARDED (\"WARDEDARCANA\", \"ARTIFICE\", 0, 2);\n \n \t\tprivate String realResearchKey;\n \t\tprivate String realResearchCategory;\n@@ -176,6 +177,13 @@ private static void addPseudoParents()\n \t\t\t\t\t}\n \t\t\t\t\tbreak;\n \n+\t\t\t\tcase WARDED:\n+\t\t\t\t\tif( !Config.wardedStone )\n+\t\t\t\t\t{\n+\t\t\t\t\t\t// Skip this, warded research is disabled\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\n \t\t\t\tdefault:\n \t\t\t\t\tbreak;\n \n@@ -460,9 +468,24 @@ private static void registerStorage()\n \t\t\t\t\t\tnew ResearchPage( storageComponentRecipes ), new ResearchPage( RecipeRegistry.STORAGE_CASING ),\n \t\t\t\t\t\tnew ResearchPage( storageCellsShaped ), new ResearchPage( storageCellsShapeless ) };\n \n+\t\tString[] storageParents;\n+\n+\t\t// Is the warded stone research enabled?\n+\t\tif( Config.wardedStone )\n+\t\t{\n+\t\t\tstorageParents \u003d new String[3];\n+\t\t\tstorageParents[2] \u003d PseudoResearchTypes.WARDED.getKey();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tstorageParents \u003d new String[2];\n+\t\t}\n+\t\tstorageParents[0] \u003d ResearchTypes.BASIC.getKey();\n+\t\tstorageParents[1] \u003d PseudoResearchTypes.DISTILESSENTIA.getKey();\n+\n \t\t// Create the storage research\n \t\tResearchTypes.STORAGE.createResearchItem( storageAspectList, COMPLEXITY_MEDIUM, storageIcon, storagePages );\n-\t\tResearchTypes.STORAGE.researchItem.setParents( ResearchTypes.BASIC.getKey(), PseudoResearchTypes.DISTILESSENTIA.getKey() );\n+\t\tResearchTypes.STORAGE.researchItem.setParents( storageParents );\n \t\tResearchTypes.STORAGE.researchItem.setParentsHidden( \"DISTILESSENTIA\" );\n \t\tResearchTypes.STORAGE.researchItem.registerResearchItem();\n \t}"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/tileentities/TileEssentiaProvider.java",
          "patch": "@@ -7,6 +7,9 @@\n import thaumcraft.api.aspects.IEssentiaTransport;\n import thaumicenergistics.api.TEApi;\n import thaumicenergistics.aspect.AspectStack;\n+import appeng.api.config.Actionable;\n+import appeng.tile.events.AETileEventHandler;\n+import appeng.tile.events.TileEventType;\n \n public class TileEssentiaProvider\n \textends TileProviderBase\n@@ -15,6 +18,36 @@\n \tpublic static final String TILE_ID \u003d \"TileEssentiaProvider\";\n \n \t/**\n+\t * How often should the tile tick.\n+\t */\n+\tprivate static final int TICK_RATE_IDLE \u003d 15, TICK_RATE_URGENT \u003d 5;\n+\n+\tprivate final AETileEventHandler tickHandler \u003d new AETileEventHandler( TileEventType.TICK )\n+\t{\n+\t\t@Override\n+\t\tpublic void Tick()\n+\t\t{\n+\t\t\tTileEssentiaProvider.this.onTick();\n+\t\t}\n+\t};\n+\n+\t/**\n+\t * Tracks the number of ticks that have occurred.\n+\t */\n+\tprivate int tickCount \u003d 0;\n+\n+\t/**\n+\t * How often should the tile tick.\n+\t */\n+\tprivate int tickRate \u003d TileEssentiaProvider.TICK_RATE_IDLE;\n+\n+\tpublic TileEssentiaProvider()\n+\t{\n+\t\t// Add the tick handler\n+\t\tthis.addNewHandler( this.tickHandler );\n+\t}\n+\n+\t/**\n \t * How much power does this require just to be active?\n \t */\n \t@Override\n@@ -31,18 +64,16 @@ protected ItemStack getItemFromTile( final Object obj )\n \n \t}\n \n-\tprotected Aspect getNeighborWantedAspect( final ForgeDirection face )\n+\tprotected Aspect getNeighborWantedAspect( final ForgeDirection side )\n \t{\n-\t\tSystem.out.println( face );\n-\n-\t\t// Get the tile entity next to this face\n-\t\tTileEntity neighbor \u003d this.worldObj.getTileEntity( this.xCoord + face.offsetX, this.yCoord + face.offsetY, this.zCoord + face.offsetZ );\n+\t\t// Get the tile entity next to this side\n+\t\tTileEntity neighbor \u003d this.worldObj.getTileEntity( this.xCoord + side.offsetX, this.yCoord + side.offsetY, this.zCoord + side.offsetZ );\n \n \t\t// Do we have essentia transport neighbor?\n \t\tif( ( neighbor !\u003d null ) \u0026\u0026 ( neighbor instanceof IEssentiaTransport ) )\n \t\t{\n \t\t\t// Get the aspect they want\n-\t\t\tAspect wantedAspect \u003d ( (IEssentiaTransport)neighbor ).getSuctionType( face.getOpposite() );\n+\t\t\tAspect wantedAspect \u003d ( (IEssentiaTransport)neighbor ).getSuctionType( side.getOpposite() );\n \n \t\t\t// Return the aspect they want\n \t\t\treturn wantedAspect;\n@@ -58,32 +89,30 @@ protected void onChannelUpdate()\n \t}\n \n \t@Override\n-\tpublic int addEssentia( final Aspect aspect, final int amount, final ForgeDirection face )\n+\tpublic int addEssentia( final Aspect aspect, final int amount, final ForgeDirection side )\n \t{\n-\t\t// Doesn\u0027t accept essentia\n-\t\treturn 0;\n+\t\treturn this.injectEssentiaIntoNetwork( aspect, amount, Actionable.MODULATE );\n \t}\n \n \t@Override\n-\tpublic boolean canInputFrom( final ForgeDirection face )\n+\tpublic boolean canInputFrom( final ForgeDirection side )\n \t{\n-\t\t// Doesn\u0027t accept essentia\n-\t\treturn false;\n+\t\t// Can input from any side\n+\t\treturn true;\n \t}\n \n \t@Override\n-\tpublic boolean canOutputTo( final ForgeDirection face )\n+\tpublic boolean canOutputTo( final ForgeDirection side )\n \t{\n-\t\tSystem.out.println( face );\n \t\t// Can output to any side\n \t\treturn true;\n \t}\n \n \t@Override\n-\tpublic int getEssentiaAmount( final ForgeDirection face )\n+\tpublic int getEssentiaAmount( final ForgeDirection side )\n \t{\n \t\t// Get the aspect this neighbor wants\n-\t\tAspect wantedAspect \u003d this.getNeighborWantedAspect( face );\n+\t\tAspect wantedAspect \u003d this.getNeighborWantedAspect( side );\n \n \t\t// Does the neighbor want anything?\n \t\tif( wantedAspect !\u003d null )\n@@ -104,10 +133,10 @@ public int getEssentiaAmount( final ForgeDirection face )\n \t}\n \n \t@Override\n-\tpublic Aspect getEssentiaType( final ForgeDirection face )\n+\tpublic Aspect getEssentiaType( final ForgeDirection side )\n \t{\n \t\t// Get the aspect this neighbor wants\n-\t\tAspect wantedAspect \u003d this.getNeighborWantedAspect( face );\n+\t\tAspect wantedAspect \u003d this.getNeighborWantedAspect( side );\n \n \t\t// Does the neighbor want anything?\n \t\tif( wantedAspect !\u003d null )\n@@ -128,25 +157,25 @@ public Aspect getEssentiaType( final ForgeDirection face )\n \tpublic int getMinimumSuction()\n \t{\n \t\t// Any amount of suction is good enough\n-\t\treturn 0;\n+\t\treturn 1;\n \t}\n \n \t@Override\n-\tpublic int getSuctionAmount( final ForgeDirection face )\n+\tpublic int getSuctionAmount( final ForgeDirection side )\n \t{\n-\t\t// Doesn\u0027t accept essentia\n-\t\treturn 0;\n+\t\t// Just a wee bit of suction.\n+\t\treturn 8;\n \t}\n \n \t@Override\n-\tpublic Aspect getSuctionType( final ForgeDirection face )\n+\tpublic Aspect getSuctionType( final ForgeDirection side )\n \t{\n-\t\t// Doesn\u0027t accept essentia\n+\t\t// All types\n \t\treturn null;\n \t}\n \n \t@Override\n-\tpublic boolean isConnectable( final ForgeDirection face )\n+\tpublic boolean isConnectable( final ForgeDirection side )\n \t{\n \t\t// Can connect on any side\n \t\treturn true;\n@@ -166,10 +195,80 @@ public void setSuction( final Aspect aspect, final int amount )\n \t}\n \n \t@Override\n-\tpublic int takeEssentia( final Aspect aspect, final int amount, final ForgeDirection face )\n+\tpublic int takeEssentia( final Aspect aspect, final int amount, final ForgeDirection side )\n \t{\n \t\t// Extract essentia from the network, and return the amount extracted\n \t\treturn this.extractEssentiaFromNetwork( aspect, amount, false );\n \t}\n \n+\t/**\n+\t * Called during the tileentity update phase.\n+\t */\n+\tvoid onTick()\n+\t{\n+\t\t// Ensure this is server side, and that 5 ticks have elapsed\n+\t\tif( ( !this.worldObj.isRemote ) \u0026\u0026 ( ++this.tickCount \u003e\u003d this.tickRate ) )\n+\t\t{\n+\t\t\t// Reset the tick count\n+\t\t\tthis.tickCount \u003d 0;\n+\n+\t\t\t// Assume idle\n+\t\t\tthis.tickRate \u003d TileEssentiaProvider.TICK_RATE_IDLE;\n+\n+\t\t\t// Search every side\n+\t\t\tfor( ForgeDirection side : ForgeDirection.VALID_DIRECTIONS )\n+\t\t\t{\n+\t\t\t\t// Get the tile\n+\t\t\t\tTileEntity tile \u003d this.worldObj.getTileEntity( side.offsetX + this.xCoord, side.offsetY + this.yCoord, side.offsetZ + this.zCoord );\n+\n+\t\t\t\t// Ensure it is a transport\n+\t\t\t\tif( !( tile instanceof IEssentiaTransport ) )\n+\t\t\t\t{\n+\t\t\t\t\t// Not transport, skip it.\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Cast\n+\t\t\t\tIEssentiaTransport transport \u003d (IEssentiaTransport)tile;\n+\t\t\t\tForgeDirection opSide \u003d side.getOpposite();\n+\n+\t\t\t\t// Does the transport have essentia to give?\n+\t\t\t\tif( transport.getEssentiaAmount( opSide ) \u003d\u003d 0 )\n+\t\t\t\t{\n+\t\t\t\t\t// No essentia.\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Set tick rate to urgent.\n+\t\t\t\tthis.tickRate \u003d TileEssentiaProvider.TICK_RATE_URGENT;\n+\n+\t\t\t\t// Is there enough suction to pull it out?\n+\t\t\t\tif( ( this.getSuctionAmount( side ) \u003c transport.getMinimumSuction() ) ||\n+\t\t\t\t\t\t\t\t( this.getSuctionAmount( side ) \u003c transport.getSuctionAmount( opSide ) ) )\n+\t\t\t\t{\n+\t\t\t\t\t// Not enough suction.\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Get the aspect of the essentia.\n+\t\t\t\tAspect aspect \u003d transport.getEssentiaType( side );\n+\n+\t\t\t\t// Ensure there is an aspect\n+\t\t\t\tif( aspect \u003d\u003d null )\n+\t\t\t\t{\n+\t\t\t\t\t// Null aspect\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Can the essentia be imported?\n+\t\t\t\tif( this.injectEssentiaIntoNetwork( aspect, 1, Actionable.SIMULATE ) \u003d\u003d 1 )\n+\t\t\t\t{\n+\t\t\t\t\t// Take from tile and import\n+\t\t\t\t\tthis.injectEssentiaIntoNetwork( aspect, transport.takeEssentia( aspect, 1, opSide ), Actionable.MODULATE );\n+\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n }"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/tileentities/TileGearBox.java",
          "patch": "@@ -8,156 +8,196 @@\n public class TileGearBox\n \textends TileEntity\n {\n+\t/**\n+\t * ID of the tileentity\n+\t */\n \tpublic static final String TILE_ID \u003d \"TileGearBox\";\n \n \t/**\n-\t * Total amount of power per crank.\n+\t * Amount of power generated each time the gearbox is cranked.\n+\t * This power is divided among the connected shafts.\n \t */\n \tprivate static final int BASE_POWER \u003d 6;\n \n \t/**\n-\t * How much accumulated power is required to turn a grinder?\n+\t * How much shaft power is required to apply a turn?\n \t */\n \tprivate static final int REQUIRED_POWER \u003d 18;\n \n \t/**\n+\t * Number of valid sides.\n+\t */\n+\tprivate static final int SIDE_COUNT \u003d ForgeDirection.VALID_DIRECTIONS.length;\n+\n+\t/**\n \t * Tracks the amount of power being sent per side\n \t */\n-\tprivate int[] crankPower \u003d new int[ForgeDirection.VALID_DIRECTIONS.length];\n+\tprivate int[] shafts \u003d new int[SIDE_COUNT];\n+\n+\t/**\n+\t * Stores the located crankables.\n+\t */\n+\tprivate ICrankable[] crankables \u003d new ICrankable[SIDE_COUNT];\n+\n+\t/**\n+\t * Tracks if the crankable can be turned.\n+\t */\n+\tprivate boolean[] canTurn \u003d new boolean[TileGearBox.SIDE_COUNT];\n \n \t/**\n-\t * Tracks if there is a grinder per side\n+\t * The number of crankable tiles attached to the gearbox.\n \t */\n-\tprivate boolean[] hasGrinder \u003d new boolean[ForgeDirection.VALID_DIRECTIONS.length];\n+\tprivate int crankableCount \u003d -1;\n \n \t/**\n-\t * Gets the grinder on the specified side.\n+\t * Calculates the amount of power to send to each crank.\n \t * \n-\t * @param sideIndex\n \t * @return\n \t */\n-\tprivate ICrankable getGrinder( final int sideIndex )\n+\tprivate int calculateTransferPower()\n \t{\n-\t\t// Get the side\n-\t\tForgeDirection side \u003d ForgeDirection.VALID_DIRECTIONS[sideIndex];\n+\t\t// Number of crankables that can turn.\n+\t\tint powerDivisor \u003d 0;\n \n-\t\t// Get the tile\n-\t\tTileEntity t \u003d this.worldObj.getTileEntity( side.offsetX + this.xCoord, side.offsetY + this.yCoord, side.offsetZ + this.zCoord );\n+\t\t// Calculate how many can accept a turn\n+\t\tfor( int sideIndex \u003d 0; sideIndex \u003c TileGearBox.SIDE_COUNT; sideIndex++ )\n+\t\t{\n+\t\t\tICrankable c \u003d this.crankables[sideIndex];\n+\t\t\tif( ( c !\u003d null ) \u0026\u0026 ( c.canTurn() ) )\n+\t\t\t{\n+\t\t\t\tthis.canTurn[sideIndex] \u003d true;\n+\t\t\t\tpowerDivisor++ ;\n+\t\t\t}\n+\t\t}\n \n-\t\tif( t instanceof ICrankable )\n+\t\t// Can any turn?\n+\t\tif( powerDivisor \u003d\u003d 0 )\n \t\t{\n-\t\t\treturn (ICrankable)t;\n+\t\t\t// None can turn\n+\t\t\treturn 0;\n \t\t}\n \n-\t\treturn null;\n+\t\t// Calculate the amount of power to send to each\n+\t\treturn TileGearBox.BASE_POWER / powerDivisor;\n \t}\n \n \t/**\n-\t * Locates attached grinders.\n+\t * Applies the specified power to each shaft.\n+\t * Once a shaft has enough stored power, it applies a turn to\n+\t * its crankable.\n \t * \n-\t * @return Number of attached grinders found.\n+\t * @param powerTransfered\n \t */\n-\tprivate int locateGrinders( final boolean isServerThread )\n+\tprivate void updateShafts( final int powerTransfered )\n \t{\n-\t\t// Number of attached grinders\n-\t\tint grinderCount \u003d 0;\n-\n-\t\t// Check all sides\n-\t\tfor( int sideIndex \u003d 0; sideIndex \u003c ForgeDirection.VALID_DIRECTIONS.length; sideIndex++ )\n+\t\tfor( int sideIndex \u003d 0; sideIndex \u003c TileGearBox.SIDE_COUNT; sideIndex++ )\n \t\t{\n-\t\t\t// Get the side\n-\t\t\tForgeDirection side \u003d ForgeDirection.VALID_DIRECTIONS[sideIndex];\n-\n-\t\t\t// Assume there is not a grinder\n-\t\t\tthis.hasGrinder[sideIndex] \u003d false;\n-\n-\t\t\t// Get the grinder\n-\t\t\tICrankable crank \u003d this.getGrinder( sideIndex );\n-\n-\t\t\t// Is there a grinder?\n-\t\t\tif( crank \u003d\u003d null )\n+\t\t\t// Can this side turn?\n+\t\t\tif( this.canTurn[sideIndex] )\n \t\t\t{\n-\t\t\t\tcontinue;\n-\t\t\t}\n+\t\t\t\t// Does it have enough power to turn the grinder?\n+\t\t\t\tif( ( this.shafts[sideIndex] +\u003d powerTransfered ) \u003e\u003d TileGearBox.REQUIRED_POWER )\n+\t\t\t\t{\n+\t\t\t\t\t// Reset the power\n+\t\t\t\t\tthis.shafts[sideIndex] \u003d 0;\n \n-\t\t\t// Can it turn?\n-\t\t\tif( isServerThread \u0026\u0026 ( !crank.canTurn() ) )\n-\t\t\t{\n-\t\t\t\tcontinue;\n+\t\t\t\t\t// Turn it\n+\t\t\t\t\tthis.crankables[sideIndex].applyTurn();\n+\t\t\t\t}\n \t\t\t}\n-\n-\t\t\t// Is it facing the correct direction?\n-\t\t\tif( crank.canCrankAttach( side.getOpposite() ) )\n+\t\t\telse\n \t\t\t{\n-\t\t\t\t// Increment the grinder count\n-\t\t\t\tgrinderCount++ ;\n-\n-\t\t\t\t// Mark there is a grinder.\n-\t\t\t\tthis.hasGrinder[sideIndex] \u003d true;\n+\t\t\t\t// No power is going to this side.\n+\t\t\t\tthis.shafts[sideIndex] \u003d 0;\n \t\t\t}\n-\n \t\t}\n-\n-\t\treturn grinderCount;\n-\t}\n-\n-\t@Override\n-\tpublic boolean canUpdate()\n-\t{\n-\t\treturn false;\n \t}\n \n \t/**\n-\t * Turns the crankshaft.\n+\t * Cranks the gearbox.\n \t * \n \t * @return\n \t */\n \tpublic boolean crank()\n \t{\n-\t\tboolean isServerSide \u003d EffectiveSide.isServerSide();\n+\t\t// Update if needed\n+\t\tif( this.crankableCount \u003d\u003d -1 )\n+\t\t{\n+\t\t\tthis.updateCrankables();\n+\t\t}\n \n-\t\t// Get the grinders\n-\t\tint grinderCount \u003d this.locateGrinders( isServerSide );\n+\t\t// Are there any crankables?\n+\t\tif( this.crankableCount \u003d\u003d 0 )\n+\t\t{\n+\t\t\t// Nothing to crank.\n+\t\t\treturn false;\n+\t\t}\n \n-\t\tboolean hasGrinder \u003d grinderCount \u003e 0;\n+\t\t// Don\u0027t do work on client side\n+\t\tif( EffectiveSide.isClientSide() )\n+\t\t{\n+\t\t\treturn( true );\n+\t\t}\n \n-\t\t// Don\u0027t do work on client side.\n-\t\tif( !isServerSide )\n+\t\t// Get the power transfer amount\n+\t\tint powerTransfered \u003d this.calculateTransferPower();\n+\n+\t\t// Ensure there is some power to transfer\n+\t\tif( powerTransfered \u003d\u003d 0 )\n \t\t{\n-\t\t\treturn( hasGrinder );\n+\t\t\t// Nothing to crank\n+\t\t\treturn false;\n \t\t}\n \n-\t\t// Were there any grinders?\n-\t\tif( hasGrinder )\n+\t\t// Update the shafts\n+\t\tthis.updateShafts( powerTransfered );\n+\n+\t\t// Did work\n+\t\treturn true;\n+\n+\t}\n+\n+\t/**\n+\t * Locates attached crankables.\n+\t * \n+\t * @return Number of attached crankables found.\n+\t */\n+\tpublic void updateCrankables()\n+\t{\n+\t\t// Reset attached to zero\n+\t\tthis.crankableCount \u003d 0;\n+\n+\t\t// Check all sides\n+\t\tfor( int sideIndex \u003d 0; sideIndex \u003c TileGearBox.SIDE_COUNT; sideIndex++ )\n \t\t{\n-\t\t\t// Calculate the amount of power to send to each\n-\t\t\tint powerTransfered \u003d TileGearBox.BASE_POWER / grinderCount;\n+\t\t\t// Get the side\n+\t\t\tForgeDirection side \u003d ForgeDirection.VALID_DIRECTIONS[sideIndex];\n+\n+\t\t\t// Assume there is not a crankable\n+\t\t\tthis.crankables[sideIndex] \u003d null;\n \n-\t\t\t// Update powers\n-\t\t\tfor( int sideIndex \u003d 0; sideIndex \u003c this.crankPower.length; sideIndex++ )\n+\t\t\t// Get the tile\n+\t\t\tTileEntity tile \u003d this.worldObj.getTileEntity( side.offsetX + this.xCoord, side.offsetY + this.yCoord, side.offsetZ + this.zCoord );\n+\n+\t\t\t// Is there a crankable?\n+\t\t\tif( !( tile instanceof ICrankable ) )\n \t\t\t{\n-\t\t\t\t// Is there a grinder on this side?\n-\t\t\t\tif( this.hasGrinder[sideIndex] )\n-\t\t\t\t{\n-\t\t\t\t\t// Does it have enough power to turn the grinder?\n-\t\t\t\t\tif( ( this.crankPower[sideIndex] +\u003d powerTransfered ) \u003e\u003d TileGearBox.REQUIRED_POWER )\n-\t\t\t\t\t{\n-\t\t\t\t\t\t// Reset the power\n-\t\t\t\t\t\tthis.crankPower[sideIndex] \u003d 0;\n-\n-\t\t\t\t\t\t// Turn the grinder\n-\t\t\t\t\t\tthis.getGrinder( sideIndex ).applyTurn();\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\t// No power is going to this side.\n-\t\t\t\t\tthis.crankPower[sideIndex] \u003d 0;\n-\t\t\t\t}\n+\t\t\t\tcontinue;\n \t\t\t}\n-\t\t}\n \n-\t\treturn( hasGrinder );\n+\t\t\t// Get the crankable\n+\t\t\tICrankable crank \u003d (ICrankable)tile;\n+\n+\t\t\t// Is it facing the correct direction?\n+\t\t\tif( crank.canCrankAttach( side.getOpposite() ) )\n+\t\t\t{\n+\t\t\t\t// Increment the crankable count\n+\t\t\t\tthis.crankableCount++ ;\n+\n+\t\t\t\t// Mark there is a crankable.\n+\t\t\t\tthis.crankables[sideIndex] \u003d crank;\n+\t\t\t}\n \n+\t\t}\n \t}\n }"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/tileentities/TileInfusionProvider.java",
          "patch": "@@ -19,6 +19,8 @@\n import appeng.me.GridAccessException;\n import cpw.mods.fml.common.FMLCommonHandler;\n \n+// TODO: Display runes when providing essentia\n+\n public class TileInfusionProvider\n \textends TileProviderBase\n \timplements IAspectSource, IMEMonitorHandlerReceiver\u003cIAEFluidStack\u003e"
        },
        {
          "file_name": "src/main/java/thaumicenergistics/tileentities/TileProviderBase.java",
          "patch": "@@ -283,6 +283,54 @@ protected boolean getFluidMonitor()\n \t}\n \n \t/**\n+\t * Injects essentia into the ME network.\n+\t * \n+\t * @param aspect\n+\t * @param amount\n+\t * @param mode\n+\t * @return\n+\t */\n+\tprotected int injectEssentiaIntoNetwork( final Aspect aspect, final int amount, final Actionable mode )\n+\t{\n+\t\t// Ensure there is a request\n+\t\tif( amount \u003d\u003d 0 )\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\t// Ensure we have a monitor\n+\t\tif( this.getFluidMonitor() )\n+\t\t{\n+\t\t\t// Get the gas version of the aspect\n+\t\t\tGaseousEssentia essentiaGas \u003d GaseousEssentia.getGasFromAspect( aspect );\n+\n+\t\t\t// Is there a fluid version of the aspect?\n+\t\t\tif( essentiaGas \u003d\u003d null )\n+\t\t\t{\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\tIAEFluidStack request \u003d EssentiaConversionHelper.instance.createAEFluidStackInEssentiaUnits( essentiaGas, amount );\n+\n+\t\t\t// Simulate the injection\n+\t\t\tIAEFluidStack fluidStack \u003d this.monitor.injectItems( request, mode, new MachineSource( this ) );\n+\n+\t\t\t// Was all injected?\n+\t\t\tif( fluidStack \u003d\u003d null )\n+\t\t\t{\n+\t\t\t\treturn amount;\n+\t\t\t}\n+\n+\t\t\t// Return the amount not injected\n+\t\t\treturn amount - (int)EssentiaConversionHelper.instance.convertFluidAmountToEssentiaAmount( fluidStack.getStackSize() );\n+\t\t}\n+\n+\t\t// No monitor\n+\t\treturn 0;\n+\n+\t}\n+\n+\t/**\n \t * Called when our channel updates.\n \t */\n \tprotected abstract void onChannelUpdate();"
        },
        {
          "file_name": "src/main/resources/assets/thaumicenergistics/lang/en_US.lang",
          "patch": "@@ -37,6 +37,7 @@ thaumicenergistics.item.material.iron.gear.name\u003dIron Gear\n #Tooltips\n thaumicenergistics.tooltip.essentia.cell.bytes\u003d%d of %d bytes used.\n thaumicenergistics.tooltip.essentia.cell.types\u003d%d of %d essentia types stored.\n+thaumicenergistics.tooltip.essentia.cell.details\u003dHold shift for details.\n thaumicenergistics.tooltip.button.clear.crafting\u003dDeposit Crafting Grid\n thaumicenergistics.tooltip.button.void\u003dAllow Void?\n thaumicenergistics.tooltip.button.void.disabled\u003dDo not void essentia\n@@ -90,7 +91,7 @@ thaumicenergistics.research_page.TEESSTERM.2\u003dThe §lEssentia Level Emitter§r wi\n # Research Essentia Provider\n tc.research_name.thaumicenergistics.TEESSPROV\u003dEssentia Provider\n tc.research_text.thaumicenergistics.TEESSPROV\u003dAsk and you shall receive.\n-thaumicenergistics.research_page.TEESSPROV.1\u003dWhile import and export buses are useful for an array of jobs, they lack the flexibility to interface with complex alchemical constructs. To overcome this limitation you have created a device that will allow these constructs to request essentia directly from the network.\u003cBR\u003eUsing the §lEssentia Provider§r should prove to be a simple task. Simply connect it to both the network and construct, and it will do the rest.\n+thaumicenergistics.research_page.TEESSPROV.1\u003dWhile import and export buses are useful for an array of jobs, they lack the flexibility to interface with complex alchemical constructs. To overcome this limitation you have created a device that will allow these constructs to request essentia directly from the network.\u003cBR\u003eUsing the §lEssentia Provider§r should prove to be a simple task. Simply connect it to both the network and construct, and it will do the rest.\u003cBR\u003eLike an essentia buffer it has a small amount of suction(8).\n \n # Research Infusion Provider\n tc.research_name.thaumicenergistics.TEINFPROV\u003dInfusion Provider"
        },
        {
          "file_name": "src/main/resources/assets/thaumicenergistics/textures/gui/essentia.terminal.png"
        }
      ]
    }
  },
  {
    "name": "http client leaks memory, blocks threads if entity is not consumed",
    "url": "https://github.com/FindTheRippleLtd/twofishes-client/issues/5",
    "description": "http://stackoverflow.com/questions/21082692/using-java-apache-poolingclientconnectionmanager-leaks-the-memory-how-to-solve-i\nEntity should be consumed _before_ throwing exception or returning values\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/FindTheRippleLtd/twofishes-client/commit/878b8f260ea8b3b4f681cc5c5521cc724de46a5e",
      "files": [
        {
          "file_name": "twofishes-client/src/main/java/it/cybion/geocoder/GeocoderImpl.java",
          "patch": "@@ -140,10 +140,6 @@ public GeocodeResponse geocode(final GeocodeRequest request) {\n             String responseAsJson \u003d null;\n             final int statusCode \u003d response.getStatusLine().getStatusCode();\n \n-            if (statusCode !\u003d 200) {\n-                throw new GeocoderException(\"received http status code \u0027\" + statusCode + \"\u0027\");\n-            }\n-\n             try {\n                 final HttpEntity entity \u003d response.getEntity();\n                 responseAsJson \u003d EntityUtils.toString(entity);\n@@ -153,6 +149,10 @@ public GeocodeResponse geocode(final GeocodeRequest request) {\n             } finally {\n                 closeQuietly(response);\n             }\n+\n+            if (statusCode !\u003d 200) {\n+                throw new GeocoderException(\"received http status code \u0027\" + statusCode + \"\u0027\");\n+            }\n             //deserialize to json\n \n             try {"
        },
        {
          "file_name": "twofishes-client/src/test/java/it/cybion/geocoder/GeocoderImplIntegration.java",
          "patch": "@@ -6,13 +6,8 @@\n import it.cybion.geocoder.requests.YahooWoeType;\n import it.cybion.geocoder.responses.Feature;\n import it.cybion.geocoder.responses.GeocodeResponse;\n-import it.cybion.geocoder.serialization.ObjectMapperFactory;\n-import org.apache.http.impl.client.CloseableHttpClient;\n-import org.apache.http.impl.client.HttpClients;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n import org.testng.annotations.Test;\n \n import static org.testng.Assert.assertEquals;\n@@ -22,40 +17,19 @@\n /**\n  * @author Matteo Moci ( matteo (dot) moci (at) gmail (dot) com )\n  */\n-public class GeocoderImplIntegration {\n+public class GeocoderImplIntegration extends GeocoderImplProvider {\n \n     private static final Logger LOGGER \u003d LoggerFactory.getLogger(GeocoderImplIntegration.class);\n \n-    private GeocoderImpl geocoderImpl;\n-\n-    private CloseableHttpClient closeable;\n-\n-    @BeforeMethod\n-    public void setUp() throws Exception {\n-\n-        this.closeable \u003d HttpClients.createDefault();\n-        this.geocoderImpl \u003d new GeocoderImpl(\"localhost\", 5101,\n-                ObjectMapperFactory.INSTANCE.getObjectMapper(), closeable);\n-\n-    }\n-\n-    @AfterMethod\n-    public void tearDown() throws Exception {\n-\n-        this.closeable.close();\n-        this.geocoderImpl \u003d null;\n-\n-    }\n-\n     @Test\n     public void givenDefaultAndEnglishQueriesShouldBeSame() throws Exception {\n \n         final GeocodeRequest aRequestDefaultLang \u003d new GeocodeRequest(\"nyc\");\n-        final GeocodeResponse nycResponse \u003d this.geocoderImpl.geocode(aRequestDefaultLang);\n+        final GeocodeResponse nycResponse \u003d this.geocoder.geocode(aRequestDefaultLang);\n         assertNotNull(nycResponse);\n \n         final GeocodeRequest aRequestEnglishLang \u003d new GeocodeRequest(\"nyc\", \"en\");\n-        final GeocodeResponse response1 \u003d this.geocoderImpl.geocode(aRequestEnglishLang);\n+        final GeocodeResponse response1 \u003d this.geocoder.geocode(aRequestEnglishLang);\n         assertNotNull(response1);\n         assertEquals(nycResponse, response1);\n     }\n@@ -66,7 +40,7 @@ public void givenAStreetShouldNot() throws Exception {\n         final GeocodeRequest aRequestDefaultLang \u003d new GeocodeRequest.GeocodeRequestBuilder().query(\n                 \"via trionfale\").countryCode(\"IT\").lang(\"en\").build();\n \n-        final GeocodeResponse response \u003d this.geocoderImpl.geocode(aRequestDefaultLang);\n+        final GeocodeResponse response \u003d this.geocoder.geocode(aRequestDefaultLang);\n         assertNotNull(response);\n         assertEquals(response.getInterpretations().size(), 0);\n \n@@ -79,7 +53,7 @@ public void givenRomeShouldReturnProvinceWithCountryAndLatLon() throws Exception\n                 \"Rome, Italy\").addWoeHint(YahooWoeType.ADMIN2).addResponseInclude(\n                 ResponseIncludes.PARENTS).build();\n \n-        final GeocodeResponse response \u003d this.geocoderImpl.geocode(locationRequest);\n+        final GeocodeResponse response \u003d this.geocoder.geocode(locationRequest);\n \n         assertEquals(response.getInterpretations().size(), 2);\n         final Feature romeFeature \u003d response.getInterpretations().get(0).getFeature();\n@@ -97,7 +71,7 @@ public void givenNettunoShouldReturnProvinceWithCountryAndLatLon() throws Except\n                 \"Nettuno\").addWoeHint(YahooWoeType.ADMIN2).addResponseInclude(\n                 ResponseIncludes.PARENTS).build();\n \n-        final GeocodeResponse response \u003d this.geocoderImpl.geocode(locationRequest);\n+        final GeocodeResponse response \u003d this.geocoder.geocode(locationRequest);\n \n         assertEquals(response.getInterpretations().size(), 1);\n         final Feature nettunoFeature \u003d response.getInterpretations().get(0).getFeature();\n@@ -116,7 +90,7 @@ public void givenChicagoShouldReturnProvinceWithCountryAndLatLon() throws Except\n                 \"Chicago/Brooklyn\").addWoeHint(YahooWoeType.ADMIN2).addResponseInclude(\n                 ResponseIncludes.PARENTS).build();\n \n-        final GeocodeResponse response \u003d this.geocoderImpl.geocode(locationRequest);\n+        final GeocodeResponse response \u003d this.geocoder.geocode(locationRequest);\n \n         LOGGER.info(response + \"\");\n \n@@ -140,7 +114,7 @@ public void givenWhenQueryStartsWithHttpShouldThrowException() throws Exception\n                 .build();\n \n         try {\n-            final GeocodeResponse response \u003d this.geocoderImpl.geocode(locationRequest);\n+            final GeocodeResponse response \u003d this.geocoder.geocode(locationRequest);\n             fail();\n         } catch (GeocoderException e) {\n             assertNotNull(e);"
        },
        {
          "file_name": "twofishes-client/src/test/java/it/cybion/geocoder/GeocoderImplProvider.java",
          "patch": "@@ -1,10 +1,9 @@\n package it.cybion.geocoder;\n \n import it.cybion.geocoder.serialization.ObjectMapperFactory;\n-import org.apache.http.conn.HttpClientConnectionManager;\n+import org.apache.http.client.config.RequestConfig;\n import org.apache.http.impl.client.CloseableHttpClient;\n import org.apache.http.impl.client.HttpClients;\n-import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.testng.annotations.AfterClass;\n@@ -24,8 +23,14 @@\n     @BeforeClass\n     public void setUpGeocoder() throws Exception {\n \n-        final HttpClientConnectionManager connManager \u003d new PoolingHttpClientConnectionManager();\n-        this.httpClient \u003d HttpClients.createMinimal(connManager);\n+        final int tenSecondsMsecs \u003d 10000;\n+        final RequestConfig requestConfig \u003d RequestConfig.custom()\n+                .setConnectTimeout(tenSecondsMsecs)\n+                .setSocketTimeout(tenSecondsMsecs)\n+                .build();\n+\n+        this.httpClient \u003d HttpClients.custom().setDefaultRequestConfig(requestConfig).build();\n+\n         this.geocoder \u003d new GeocoderImpl(\"localhost\", 5101,\n                 ObjectMapperFactory.INSTANCE.getObjectMapper(), httpClient);\n     }"
        }
      ]
    }
  },
  {
    "name": "Fix webapp PermGen memory leak",
    "url": "https://github.com/intermine/intermine/pull/894",
    "description": "Clean up webapp shutdown procedure and de-register ShutdownHook from JVM which was preventing WebappClassLoader from being garbage collected.  I can now deploy/undeploy a webapp continually without causing a PermGen out of memory error.  Fixes #679.\n\nNote that the use of a ShutdownHook in a webapp isn\u0027t best practice and we\u0027re calling and de-registering it explicitly in InitialiserPlugin.destroy(). This is somewhat hacky but does mean the shutdown procedure is consistent whether the ObjectStore is used in tomcat or from the command line.\n\nI still see some database connections not being closed, related to the BatchFlusher when I undeploy a webapp, not worked out yet what\u0027s happening with them.\n",
    "keywords": [
      "webapp"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/intermine/intermine/commit/10fc7c7e840cf16bf2c27aceee04429592c4b301",
      "files": [
        {
          "file_name": "intermine/api/main/src/org/intermine/api/tracker/TrackerDelegate.java",
          "patch": "@@ -9,6 +9,7 @@\n  * information or http://www.gnu.org/copyleft/lesser.html.\n  *\n  */\n+import java.lang.ref.WeakReference;\n import java.sql.Connection;\n import java.sql.SQLException;\n import java.util.HashMap;\n@@ -19,6 +20,7 @@\n \n import org.apache.log4j.Logger;\n import org.intermine.api.profile.Profile;\n+import org.intermine.api.template.TemplateManager;\n import org.intermine.api.tracker.factory.TrackerFactory;\n import org.intermine.api.tracker.track.ListTrack;\n import org.intermine.api.tracker.track.Track;\n@@ -27,14 +29,15 @@\n import org.intermine.api.tracker.util.TrackerUtil;\n import org.intermine.objectstore.ObjectStoreWriter;\n import org.intermine.objectstore.intermine.ObjectStoreWriterInterMineImpl;\n-import org.intermine.api.template.TemplateManager;\n+import org.intermine.util.ShutdownHook;\n+import org.intermine.util.Shutdownable;\n \n /**\n  * Intermediate class which decouples the tracker components from the code that uses them.\n  * @author dbutano\n  *\n  */\n-public class TrackerDelegate\n+public class TrackerDelegate implements Shutdownable\n {\n     private static final Logger LOG \u003d Logger.getLogger(TrackerDelegate.class);\n     protected Map\u003cString, Tracker\u003e trackers \u003d new HashMap\u003cString, Tracker\u003e();\n@@ -51,6 +54,7 @@\n     public TrackerDelegate(String[] trackerClassNames, ObjectStoreWriter osw) {\n         Queue\u003cTrack\u003e trackQueue \u003d new LinkedList\u003cTrack\u003e();\n         this.osw \u003d osw;\n+        ShutdownHook.registerObject(new WeakReference\u003cObject\u003e(this));\n         try {\n             connection \u003d getConnection();\n             Tracker tracker;\n@@ -354,6 +358,13 @@ public synchronized void close() {\n     }\n \n     /**\n+     * Called from ShutdownHook.\n+     */\n+    public synchronized void shutdown() {\n+        close();\n+    }\n+\n+    /**\n      * clean up threads\n      * @throws Throwable if something goes wrong\n      */"
        },
        {
          "file_name": "intermine/objectstore/main/src/org/intermine/objectstore/intermine/ObjectStoreInterMineImpl.java",
          "patch": "@@ -1053,10 +1053,12 @@ public synchronized void close() throws ObjectStoreException {\n                 + statsEstTime + \", Execute: \" + statsExeTime + \", Results Convert: \"\n                 + statsConTime);\n \n-        try {\n-            logTableBatch.close(logTableConnection);\n-        } catch (SQLException e1) {\n-            LOG.error(\"Couldn\u0027t close OS log table.\");\n+        if (logTableBatch !\u003d null) {\n+            try {\n+                logTableBatch.close(logTableConnection);\n+            } catch (SQLException e1) {\n+                LOG.error(\"Couldn\u0027t close OS log table.\");\n+            }\n         }\n \n         Connection c \u003d null;"
        },
        {
          "file_name": "intermine/objectstore/main/src/org/intermine/sql/Database.java",
          "patch": "@@ -332,16 +332,25 @@ public String getVersion() {\n         }\n         if (version \u003d\u003d null) {\n             try {\n-                Connection c \u003d getConnection();\n-                Statement s \u003d c.createStatement();\n-                String versionQuery \u003d \"SELECT current_setting(\u0027server_version\u0027)\";\n-                ResultSet rs \u003d s.executeQuery(versionQuery);\n-                if (rs.next()) {\n-                    version \u003d rs.getString(1);\n+                Connection c \u003d null;\n+                try {\n+                    c \u003d getConnection();\n+                    Statement s \u003d c.createStatement();\n+                    String versionQuery \u003d \"SELECT current_setting(\u0027server_version\u0027)\";\n+                    ResultSet rs \u003d s.executeQuery(versionQuery);\n+                    if (rs.next()) {\n+                        version \u003d rs.getString(1);\n+                    }\n+                } catch (SQLException e) {\n+                    throw new IllegalArgumentException(\"Error fetching version number from\"\n+                            + \" database: \" + e.getMessage());\n+                } finally {\n+                    if (c !\u003d null) {\n+                        c.close();\n+                    }\n                 }\n             } catch (SQLException e) {\n-                throw new IllegalArgumentException(\"Error fetching version number from database: \"\n-                        + e.getMessage());\n+                LOG.warn(\"Error closing database connection used to find Postgres version.\");\n             }\n         }\n         return version;"
        },
        {
          "file_name": "intermine/objectstore/main/src/org/intermine/util/ShutdownHook.java",
          "patch": "@@ -48,6 +48,14 @@ private ShutdownHook() {\n     }\n \n     /**\n+     * Get the instance of this ShutdownHook.\n+     * @return the ShutdownHook instance\n+     */\n+    public static synchronized ShutdownHook getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n      * Registers an object with the shutdown hook.\n      *\n      * @param object the object\n@@ -59,7 +67,7 @@ public static synchronized void registerObject(Object object) {\n     /**\n      * Performs the shutdown.\n      */\n-    private static synchronized void shutdown() {\n+    public static synchronized void shutdown() {\n         while (!objects.empty()) {\n             Object o \u003d objects.pop();\n             try {"
        },
        {
          "file_name": "intermine/web/main/src/org/intermine/web/context/InterMineContext.java",
          "patch": "@@ -168,7 +168,10 @@ public void shutdown() {\n     }\n \n     /**\n-     * Send the signal that shutdown is happening - try and release resources.\n+     * Send the signal that shutdown is happening - try and release resources.  This class registers\n+     * with ShutdownHook on construction, this method is called automatically on JVM shutdown and\n+     * by InitialiserPlugin which calls ShutdownHook.shutdown() explicitly when a webapp is\n+     * undeployed.\n      */\n     public static void doShutdown() {\n         if (mailQueue !\u003d null \u0026\u0026 mailService !\u003d null) {"
        },
        {
          "file_name": "intermine/web/main/src/org/intermine/web/struts/InitialiserPlugin.java",
          "patch": "@@ -82,10 +82,10 @@\n import org.intermine.objectstore.ObjectStoreWriter;\n import org.intermine.objectstore.ObjectStoreWriterFactory;\n import org.intermine.objectstore.intermine.ObjectStoreInterMineImpl;\n-import org.intermine.objectstore.intermine.ObjectStoreWriterInterMineImpl;\n import org.intermine.sql.Database;\n import org.intermine.sql.DatabaseUtil;\n import org.intermine.util.PropertiesUtil;\n+import org.intermine.util.ShutdownHook;\n import org.intermine.web.autocompletion.AutoCompleter;\n import org.intermine.web.context.InterMineContext;\n import org.intermine.web.logic.Constants;\n@@ -904,31 +904,18 @@ private UserProfile getSuperUser(ObjectStoreWriter uosw) {\n      */\n     @Override\n     public void destroy() {\n-        if (userprofileOSW !\u003d null) {\n-            try {\n-                userprofileOSW.close();\n-            } catch (ObjectStoreException e) {\n-                LOG.warn(\"Error closing userprofile writer.\", e);\n-            }\n-            ((ObjectStoreWriterInterMineImpl) userprofileOSW).getDatabase().shutdown();\n-        }\n-        if (os !\u003d null) {\n-            if (os instanceof ObjectStoreInterMineImpl) {\n-                try {\n-                    ((ObjectStoreInterMineImpl) os).close();\n-                } catch (ObjectStoreException e) {\n-                    LOG.error(\"Couldn\u0027t shut down OS. Memory leaks!\");\n-                }\n-                ((ObjectStoreInterMineImpl) os).getDatabase().shutdown();\n-            }\n-        }\n-        if (trackerDelegate !\u003d null) {\n-            trackerDelegate.close();\n-        }\n-        InterMineContext.doShutdown();\n+        // We\u0027re undeploying the webapp so we need to shut everything down. The ShutdownHook will\n+        // shutdown all objects that have registerted themselves. However, this doesn\u0027t get\n+        // called automatically unless the JVM itself (tomcat) is shut down,\n+        ShutdownHook.shutdown();\n+\n+        // The ShutdownHook is registered JVM-wide so unless we remove it a reference will be held\n+        // to the current WebappClassLoader preventing it from being garbage collected. This will\n+        // cause a memory leak, where tomcat would run out of PermGen space after several deploy\n+        // cycles.\n+        Runtime.getRuntime().removeShutdownHook(ShutdownHook.getInstance());\n     }\n \n-\n     /**\n      * Remove class tags from the user profile that refer to classes that non longer exist\n      * @param tagManager tag manager"
        }
      ]
    }
  },
  {
    "name": "Memory Leak fix",
    "url": "https://github.com/sguergachi/AuroraGameHub/issues/14",
    "description": "Going in and out of dashboard many times causes a Memory Overflow bug caused by too much memory being used.\n",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/sguergachi/AuroraGameHub/commit/29e1128adf2e31781bd12a5d72ce53ddd7d9a39d",
      "files": [
        {
          "file_name": "src/Test/Sandbox.java",
          "patch": "@@ -15,271 +15,44 @@\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import javax.swing.*;\n+import javax.swing.UIManager.LookAndFeelInfo;\n \n-public class Sandbox {\n+public class Sandbox extends JFrame {\n \n     public static void main(String[] args) throws IOException {\n-\n-        Sandbox test \u003d new Sandbox();\n-\n-        test.gui2();\n-\n-\n-    }\n-    private JFileChooser fc;\n-\n-    private JPanel RightBottomCenter;\n-\n-    private Cursor eraserCursor;\n-\n-    public void gui2() {\n-\n-        int size \u003d 32;\n-\n-        /*\n-         * we need two buffered images as the cursor only supports on/off for alpha\n-         *\n-         * so we need to draw to an image without alpha support\n-         * then draw that to one with alpha support\n-         * then make \"white\" transparent\n-         */\n-        BufferedImage image \u003d new BufferedImage(size, size,\n-                BufferedImage.TYPE_INT_RGB);\n-        BufferedImage image2 \u003d new BufferedImage(size, size,\n-                BufferedImage.TYPE_INT_ARGB);\n-\n-        Graphics2D g \u003d image.createGraphics();\n-        Graphics2D g2 \u003d image2.createGraphics();\n-\n-        g.setColor(Color.white);\n-        g.fillRect(0, 0, size, size);\n-\n-\n-        // turn on anti-aliasing.\n-        g.setStroke(new BasicStroke(4.0f)); // 4-pixel lines\n-        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n-                RenderingHints.VALUE_ANTIALIAS_ON);\n-\n-        g.setColor(new Color(0.5f, 0f, 0f));\n-        g.drawOval(3, 3, size - 7, size - 7);\n-\n-        g2.drawImage(image, 0, 0, null, null);\n-\n-\n-        for (int y \u003d 0; y \u003c size; y++) {\n-            for (int x \u003d 0; x \u003c size; x++) {\n-\n-                int rgb \u003d image.getRGB(x, y);\n-\n-                int blue \u003d rgb \u0026 0xff;\n-                int green \u003d (rgb \u0026 0xff00) \u003e\u003e 8;\n-                int red \u003d (rgb \u0026 0xff0000) \u003e\u003e 16;\n-                //int alpha \u003d (rgb \u0026 0xff000000) \u003e\u003e 24;\n-\n-                if (red \u003d\u003d 255 \u0026\u0026 green \u003d\u003d 255 \u0026\u0026 blue \u003d\u003d 255) {\n-                    // make white transparent\n-                    image2.setRGB(x, y, 0);\n+        try {\n+            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {\n+                if (\"Nimbus\".equals(info.getName())) {\n+                    UIManager.setLookAndFeel(info.getClassName());\n+                    break;\n                 }\n-\n             }\n-        }\n-\n-        eraserCursor \u003d Toolkit.getDefaultToolkit().createCustomCursor(\n-                image2, new Point(size / 2, size / 2), \"eraserCursor\");\n-\n-        JFrame frame \u003d new JFrame(\"Test\");\n-        frame.setSize(800, 800);\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.setLocationRelativeTo(null);\n-\n-        frame.setVisible(true);\n-\n-        frame.setCursor(eraserCursor);\n-    }\n-\n-    public void gui() {\n-\n-        JFrame frame \u003d new JFrame(\"Test\");\n-        frame.getContentPane().setBackground(Color.black);\n-\n-        AImage cursorImage \u003d new AImage(\"cursor.png\");\n-        AImage cursorSelect \u003d new AImage(\"cursorSelect.png\");\n-        AImage cursorHover \u003d new AImage(\"cursorHover.png\");\n-        AImage cursorHoverYellow \u003d new AImage(\"cursorHoverYellow.png\");\n-\n-        cursorImage.setVisible(false);\n-        cursorSelect.setVisible(false);\n-        cursorHover.setVisible(false);\n-        cursorHoverYellow.setVisible(false);\n-\n-\n-        JPanel pnl \u003d new JPanel();\n-        pnl.setBackground(Color.darkGray);\n-        JPanel pnl2 \u003d new JPanel();\n-        pnl2.setBackground(Color.darkGray);\n-        JPanel pnl3 \u003d new JPanel();\n-        pnl3.setBackground(Color.darkGray);\n-        pnl3.setPreferredSize(new Dimension(50, 100));\n-        JPanel pnl5 \u003d new JPanel();\n-        pnl5.setBackground(Color.gray);\n-        JPanel pnl4 \u003d new JPanel();\n-        pnl4.setBackground(Color.black);\n-\n-        frame.setLayout(new BorderLayout());\n-\n-        frame.add(pnl, BorderLayout.EAST);\n-        frame.add(pnl2, BorderLayout.WEST);\n-        frame.add(pnl3, BorderLayout.NORTH);\n-        frame.add(pnl5, BorderLayout.SOUTH);\n-        frame.add(pnl4, BorderLayout.CENTER);\n-\n-        frame.setCursor(frame.getToolkit().createCustomCursor(\n-                new BufferedImage(3, 3, BufferedImage.TYPE_INT_ARGB), new Point(\n-                0, 0),\n-                \"null\"));\n-\n-        frame.setSize(800, 800);\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.setLocationRelativeTo(null);\n-\n-        frame.setVisible(true);\n-\n-        JPanel glass \u003d (JPanel) frame.getGlassPane();\n-        glass.setVisible(true);\n-        glass.setLayout(null);\n-        glass.setOpaque(false);\n-\n-        glass.add(cursorImage);\n-        glass.add(cursorSelect);\n-        glass.add(cursorHover);\n-        glass.add(cursorHoverYellow);\n-\n-        CursorListener cursor \u003d new CursorListener(\n-                cursorImage, cursorSelect);\n-        glass.addMouseMotionListener(cursor);\n-        glass.addMouseListener(new CursorClick(cursor));\n-\n-        glass.revalidate();\n-\n-        frame.setGlassPane(glass);\n-\n-    }\n-\n-    private static class CursorClick extends MouseAdapter {\n-\n-        private final AImage cursorImage;\n-\n-        private final AImage cursorSelect;\n-\n-//        private final AImage cursorHover;\n-        private final CursorListener click;\n-\n-        public CursorClick(CursorListener click) {\n-            this.cursorImage \u003d click.getCursorImage();\n-            this.cursorSelect \u003d click.getCursorSelect();\n-            this.click \u003d click;\n-        }\n-\n-        public AImage getCursorImage() {\n-            return cursorImage;\n-        }\n-\n-        public AImage getCursorSelect() {\n-            return cursorSelect;\n-        }\n-\n-        @Override\n-        public void mousePressed(MouseEvent e) {\n-\n-            cursorImage.setVisible(false);\n-\n-            cursorSelect.setLocation(e.getPoint());\n-\n-            cursorSelect.setBounds(e.getX(), e.getY(), cursorImage.getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-            cursorSelect.setVisible(true);\n-        }\n-\n-        @Override\n-        public void mouseReleased(MouseEvent e) {\n-\n-            cursorSelect.setVisible(false);\n-\n-            cursorImage.setLocation(e.getPoint());\n-\n-            cursorImage.setBounds(e.getX(), e.getY(), cursorImage.getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-\n-\n-            cursorImage.setVisible(true);\n+        } catch (Exception e) {\n \n+        System.out.println(\"Nimbus not available\");\n         }\n+        new Sandbox().gui();\n \n-        @Override\n-        public void mouseExited(MouseEvent e) {\n-            cursorSelect.setVisible(false);\n-            cursorImage.setVisible(false);\n-        }\n     }\n+    private Cursor cursor;\n \n-    class CursorListener implements MouseMotionListener {\n-\n-        private final AImage cursorImage;\n+    private Toolkit kit;\n \n-        private final AImage cursorSelect;\n-\n-//        private final AImage cursorHover;\n-        private CursorListener(AImage cursorImage, AImage cursorSelect) {\n-            this.cursorImage \u003d cursorImage;\n-            this.cursorSelect \u003d cursorSelect;\n-//            this.cursorHover \u003d cursorHover;\n-\n-\n-        }\n-\n-        public AImage getCursorImage() {\n-            return cursorImage;\n-        }\n-\n-        public AImage getCursorSelect() {\n-            return cursorSelect;\n-        }\n-\n-        @Override\n-        public void mouseDragged(MouseEvent e) {\n-\n-            cursorImage.setVisible(false);\n-\n-            cursorSelect.setLocation(e.getPoint());\n-\n-            cursorSelect.setBounds(e.getX(), e.getY(), cursorImage.getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-\n-\n-            cursorSelect.setVisible(true);\n-        }\n-\n-        @Override\n-        public void mouseMoved(MouseEvent e) {\n-\n-            cursorSelect.setVisible(false);\n-//            if (panel.getBounds().contains(e.getPoint())) {\n-\n-\n-            cursorImage.setLocation(e.getPoint());\n-\n-            cursorImage.setBounds(e.getX(), e.getY(), cursorImage\n-                    .getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon()\n-                    .getIconHeight());\n+    private Image cursorImage;\n \n+    public void gui() {\n \n-            cursorImage.setVisible(true);\n+        kit \u003d Toolkit.getDefaultToolkit();\n+        cursorImage \u003d kit.createImage(getClass().getResource(\n+                \"/aurora/V1/resources/cursor.png\"));\n \n+        cursor \u003d Toolkit.getDefaultToolkit().createCustomCursor(\n+                cursorImage, new Point(0, 0), \"CustomCursor\");\n \n-        }\n+        setSize(800, 800);\n+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        setLocationRelativeTo(null);\n+        setVisible(true);\n+        setCursor(cursor);\n     }\n }"
        },
        {
          "file_name": "src/aurora/V1/core/AuroraApp.java",
          "patch": "@@ -157,15 +157,20 @@ public final void addToVolatileListenerBank(final JComponent aComponent) {\n      */\n     public final void backToDashboard() {\n \n+\n+\n         //* Remove All Listeners from componentsContainingListeners *//\n         removeAllListeners();\n \n+\n         //* Clear everything in the Center Panel of CoreUI *//\n         clearUI();\n \n+\n         //* Re-add all DashboardUI components back to CoreUI *//\n         getDashboardUI().addToCanvas();\n \n+\n     }\n \n     /**\n@@ -229,14 +234,23 @@ public final void clearUI() {\n         getCoreUI().getSouthFromTopPanel()\n                 .add(getCoreUI().getFrameControlContainerPanel(),\n                 BorderLayout.EAST);\n-        getCoreUI().getFrameControlImagePane().getComponent(0)\n-                .addMouseListener(new MouseAdapter() {\n-            @Override\n-            public void mouseClicked(final MouseEvent e) {\n-                removeAllListeners();\n-                backToDashboard();\n-            }\n-        });\n+\n+        System.out.println(\"Mouse Listeners::: \" + getCoreUI()\n+                .getFrameControlImagePane().getComponent(0)\n+                .getMouseListeners().length);\n+\n+        if (getCoreUI().getFrameControlImagePane().getComponent(0)\n+                .getMouseListeners().length \u003c\u003d 2) {\n+            getCoreUI().getFrameControlImagePane().getComponent(0)\n+                    .addMouseListener(new MouseAdapter() {\n+                @Override\n+                public void mouseClicked(final MouseEvent e) {\n+                    removeAllListeners();\n+                    backToDashboard();\n+                }\n+            });\n+        }\n+\n \n         //* Remove all from the title pane of the bottom bar and re-add title*//\n         getCoreUI().getTitlePanel().removeAll();\n@@ -249,11 +263,13 @@ public void mouseClicked(final MouseEvent e) {\n                                               - getCoreUI().getBottomImagePane()\n                 .getHeight() - getCoreUI().getTopImagePane().getHeight()));\n \n+        getCoreUI().getFrame().requestFocus();\n+        getCoreUI().getFrame().repaint();\n+\n \n         System.gc();\n \n-        getCoreUI().getFrame().requestFocus();\n-        getCoreUI().getFrame().repaint();\n+\n \n \n     }"
        },
        {
          "file_name": "src/aurora/V1/core/AuroraCoreUI.java",
          "patch": "@@ -269,7 +269,7 @@\n     private JFrame frame;\n \n     /*\n-     * Center panel that displays the main part of Aurora \n+     * Center panel that displays the main part of Aurora\n      * ie. Dashboard, Library, etc.\n      */\n     private JPanel paneCenter;\n@@ -280,7 +280,7 @@\n     private JPanel paneKeyToPress;\n \n     /*\n-     * \n+     *\n      */\n     private JPanel southFromTopPanel;\n \n@@ -316,7 +316,7 @@\n     private JPanel paneFrameControlContainer;\n \n     /*\n-     * \n+     *\n      */\n     private JPanel paneUserSpace;\n \n@@ -336,7 +336,7 @@\n     private JLabel lblKeyAction;\n \n     /*\n-     * \n+     *\n      */\n     private AuroraMini miniMode;\n \n@@ -387,24 +387,24 @@ public AuroraCoreUI(final JFrame aFrame) {\n      * |\n      * | This method sets up the core UI for Aurora\n      * |\n-     * | \n-     * | \n-     * | \n-     * | \n-     * | \n-     * | \n+     * |\n+     * |\n+     * |\n+     * |\n+     * |\n+     * |\n      * |\n      * |\n      * .........................................................................\n      *\n-     * \n+     *\n      *\n      */\n     public void setUI() throws UnsupportedAudioFileException, IOException,\n                                LineUnavailableException, InterruptedException,\n                                FontFormatException {\n \n-        // Determine Global Size based on Screen Size \t\n+        // Determine Global Size based on Screen Size\n \n         // TODO work on Screen Gui Change\n \n@@ -415,7 +415,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n \n         System.out.println(\"Current Screen Ressolution: \"\n                            + screenWidth + \"x\" + screenHeight);\n-       \n+\n         //*\n         // Check the resolution (in pixels) of the screen to determine if the screen\n         // is large or not\n@@ -458,7 +458,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n                 System.out.println(\"ERROR In Getting Font Resourcess\");\n             }\n         }\n-        \n+\n         //*\n         // The Background Panel Contains The Background Image for the Window as\n         // Well as all components found in the window\n@@ -533,7 +533,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n         // Top Panel\n \n         // Frame Buttons\n-        \n+\n         paneFrameControl \u003d new AImagePane(\"Aurora_FrameButton1.png\",\n                 controlWidth, controlHeight);\n         paneFrameControl.setImageHeight(controlHeight);\n@@ -572,7 +572,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n         paneCenterFromBottom \u003d new JPanel(new BorderLayout());\n         paneCenterFromBottom.setOpaque(false);\n         paneBottom.add(BorderLayout.CENTER, paneCenterFromBottom);\n-        \n+\n         // WELCOME LABEL\n         // -----------------------------------------------------------------------\n \n@@ -592,7 +592,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n \n         // TIME LABEL\n         // -----------------------------------------------------------------------\n-        \n+\n         paneHeaderOfCenterFromBottom \u003d new JPanel(new BorderLayout());\n         lblTime \u003d new ATimeLabel();\n         lblTime.setFont(boldFont.deriveFont(Font.PLAIN, timeFontSize));\n@@ -605,7 +605,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n \n         // KEY PRESS PANEL\n         // -----------------------------------------------------------------------\n-  \n+\n         paneKeyToPress \u003d new JPanel();\n         paneKeyToPress.setOpaque(false);\n \n@@ -624,7 +624,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n \n         // USER SPACE\n         // -----------------------------------------------------------------------\n-        \n+\n         paneUserSpace \u003d new JPanel();\n         paneUserSpace.setOpaque(false);\n         paneUserSpace\n@@ -634,7 +634,7 @@ public void setUI() throws UnsupportedAudioFileException, IOException,\n \n         // VERSION LABEL\n         // -----------------------------------------------------------------------\n-        \n+\n         lblVersion \u003d new JLabel(version);\n         lblVersion.setOpaque(false);\n         lblVersion.setForeground(Color.LIGHT_GRAY);\n@@ -790,7 +790,7 @@ private void setSizes() {\n     public void setKeyIconHeight(int keyIconHeight) {\n         this.keyIconHeight \u003d keyIconHeight;\n     }\n-    \n+\n     public int getKeyIconHeight() {\n         return keyIconHeight;\n     }\n@@ -802,15 +802,15 @@ public boolean getLargeScreen() {\n     public void setKeyIconWidth(int keyIconWidth) {\n         this.keyIconWidth \u003d keyIconWidth;\n     }\n-    \n+\n     public int getKeyIconWidth() {\n         return keyIconWidth;\n     }\n \n     public void setTimeFontSize(int timeFontSize) {\n         this.timeFontSize \u003d timeFontSize;\n     }\n-    \n+\n     public int getTimeFontSize() {\n         return timeFontSize;\n     }\n@@ -866,7 +866,7 @@ public int getControlHeight() {\n     public void setControlWidth(int controlWidth) {\n         this.controlWidth \u003d controlWidth;\n     }\n-    \n+\n     public int getControlWidth() {\n         return controlWidth;\n     }\n@@ -930,87 +930,87 @@ public int getWelcomeFontSize() {\n     public void setBackgroundImagePane(AImagePane backgroundImagePane) {\n         this.paneBackground \u003d backgroundImagePane;\n     }\n-    \n+\n     public AImagePane getBackgroundImagePane() {\n         return paneBackground;\n     }\n \n     public void setBottomImagePane(AImagePane bottomImagePane) {\n         this.paneBottom \u003d bottomImagePane;\n     }\n-    \n+\n     public AImagePane getBottomImagePane() {\n         return paneBottom;\n     }\n \n     public void setCenterPanel(JPanel centerPanel) {\n         this.paneCenter \u003d centerPanel;\n     }\n-    \n+\n     public JPanel getCenterPanel() {\n         return paneCenter;\n     }\n \n     public void setCenterFromBottomPanel(JPanel centerFromBottomPanel) {\n         this.paneCenterFromBottom \u003d centerFromBottomPanel;\n     }\n-    \n+\n     public JPanel getCenterFromBottomPanel() {\n         return paneCenterFromBottom;\n     }\n \n     public void setSouthFromTopPanel(JPanel southFromTopPanel) {\n         this.southFromTopPanel \u003d southFromTopPanel;\n     }\n-    \n+\n     public JPanel getSouthFromTopPanel() {\n         return southFromTopPanel;\n     }\n \n     public void setFrameControlImagePane(AImagePane frameControlImagePane) {\n         this.paneFrameControl \u003d frameControlImagePane;\n     }\n-    \n+\n     public AImagePane getFrameControlImagePane() {\n         return paneFrameControl;\n     }\n \n     public void setTopImagePane(AImagePane topImagePane) {\n         this.paneTopImage \u003d topImagePane;\n     }\n-    \n+\n     public AImagePane getTopImagePane() {\n         return paneTopImage;\n     }\n \n     public void setLogoImage(AImage logoImage) {\n         this.imgLogo \u003d logoImage;\n     }\n-    \n+\n     public AImage getLogoImage() {\n         return imgLogo;\n     }\n \n     public void setTitleLabel(JLabel aTitleLabel) {\n         this.lblTitle \u003d aTitleLabel;\n     }\n-    \n+\n     public JLabel getTitleLabel() {\n         return lblTitle;\n     }\n \n     public void setVi(ANuance vi) {\n         this.vi \u003d vi;\n     }\n-    \n+\n     public ANuance getVi() {\n         return vi;\n     }\n \n     public void setUserbarPanel(JPanel userbarPanel) {\n         this.paneUserSpace \u003d userbarPanel;\n     }\n-    \n+\n     public JPanel getUserSpacePanel() {\n         return paneUserSpace;\n     }\n@@ -1022,23 +1022,23 @@ public String getRevision() {\n     public void setFrame(JFrame frame) {\n         this.frame \u003d frame;\n     }\n-    \n+\n     public JFrame getFrame() {\n         return frame;\n     }\n \n     public void setKeyIconImage(AImage keyIconImage) {\n         this.imgKeyIcon \u003d keyIconImage;\n     }\n-    \n+\n     public AImage getKeyIconImage() {\n         return imgKeyIcon;\n     }\n \n     public void setKeyActionLabel(JLabel keyActionLabel) {\n         this.lblKeyAction \u003d keyActionLabel;\n     }\n-    \n+\n     public JLabel getKeyActionLabel() {\n         return lblKeyAction;\n     }\n@@ -1050,7 +1050,7 @@ public static void setTimeLabel(ATimeLabel timeLabel) {\n     public void setVersionLabel(JLabel versionLabel) {\n         this.lblVersion \u003d versionLabel;\n     }\n-    \n+\n     public JLabel getVersionLabel() {\n         return lblVersion;\n     }\n@@ -1059,31 +1059,31 @@ public void setHeaderOfCenterFromBottomPanel(\n             JPanel headerOfCenterFromBottomPanel) {\n         this.paneHeaderOfCenterFromBottom \u003d headerOfCenterFromBottomPanel;\n     }\n-    \n+\n     public JPanel getHeaderOfCenterFromBottomPanel() {\n         return paneHeaderOfCenterFromBottom;\n     }\n \n     public void setKeyToPressPanel(JPanel keyToPressPanel) {\n         this.paneKeyToPress \u003d keyToPressPanel;\n     }\n-    \n+\n     public JPanel getKeyToPressPanel() {\n         return paneKeyToPress;\n     }\n \n     public void setScreenLabelPanel(JPanel screenLabelPanel) {\n         this.screenLabelPanel \u003d screenLabelPanel;\n     }\n-    \n+\n     public JPanel getScreenLabelPanel() {\n         return screenLabelPanel;\n     }\n \n     public void setVersionPanel(JPanel versionPanel) {\n         this.versionPanel \u003d versionPanel;\n     }\n-    \n+\n     public JPanel getVersionPanel() {\n         return versionPanel;\n     }\n@@ -1121,7 +1121,7 @@ public JPanel getTitlePanel() {\n      * | Background sound\n      * |\n      * | This is a method that will set the background sound effects for Aurora\n-     * | \n+     * |\n      * .........................................................................\n      *\n      */\n@@ -1139,12 +1139,12 @@ public void setSFX() throws UnsupportedAudioFileException, IOException,\n      * |\n      * | This method displays the exit dialog\n      * |\n-     * | After the user clicks on the Exit button, the user will be presented \n+     * | After the user clicks on the Exit button, the user will be presented\n      * | with a warning dialog asking them if they are sure they want to exit\n      * | the application.\n      * .........................................................................\n      *\n-     */    \n+     */\n     public void showExitDialog() {\n         if (warningDialog \u003d\u003d null) {\n             warningDialog \u003d new ADialog(ADialog.aDIALOG_WARNING,\n@@ -1226,37 +1226,6 @@ public ASurface getResource() {\n     private void setCursor() {\n \n \n-        frame.setCursor(frame.getToolkit().createCustomCursor(\n-                new BufferedImage(3, 3, BufferedImage.TYPE_INT_ARGB), new Point(\n-                0, 0),\n-                \"null\"));\n-\n-        AImage cursorImage \u003d new AImage(\"cursor.png\");\n-        AImage cursorSelect \u003d new AImage(\"cursorSelect.png\");\n-\n-        cursorImage.setVisible(false);\n-        cursorSelect.setVisible(false);\n-\n-        JPanel glass \u003d new JPanel();\n-\n-        glass.add(cursorImage);\n-        glass.add(cursorSelect);\n-\n-        Cursor cursor \u003d new Cursor(\n-                cursorImage, cursorSelect, frame.getContentPane(), glass);\n-\n-        frame.getContentPane()\n-                .addMouseWheelListener(new MouseEventRedispatcher(glass, frame\n-                .getContentPane()));\n-\n-        glass.addMouseMotionListener(cursor);\n-        glass.addMouseListener(new CursorClick(cursor));\n-\n-        frame.setGlassPane(glass);\n-\n-        glass.setVisible(true);\n-        glass.setLayout(null);\n-        glass.setOpaque(false);\n \n     }\n \n@@ -1319,179 +1288,6 @@ public void keyReleased(KeyEvent e) {\n         }\n     }\n \n-    private static class CursorClick extends MouseAdapter {\n-\n-        private final AImage cursorImage;\n-\n-        private final AImage cursorSelect;\n-\n-        private final Cursor click;\n-\n-//        private final AImage cursorHover;\n-        public CursorClick(Cursor click) {\n-            this.cursorImage \u003d click.getCursorImage();\n-            this.cursorSelect \u003d click.getCursorSelect();\n-            this.click \u003d click;\n-        }\n-\n-        public AImage getCursorImage() {\n-            return cursorImage;\n-        }\n-\n-        public AImage getCursorSelect() {\n-            return cursorSelect;\n-        }\n-\n-        @Override\n-        public void mousePressed(MouseEvent e) {\n-\n-            cursorImage.setVisible(false);\n-\n-            cursorSelect.setLocation(e.getPoint());\n-\n-            cursorSelect.setBounds(e.getX() - 11, e.getY() - 8, cursorImage\n-                    .getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-            cursorSelect.setVisible(true);\n-\n-            click.redispatchMouseEvent(e, true);\n-        }\n-\n-        @Override\n-        public void mouseReleased(MouseEvent e) {\n-\n-            cursorSelect.setVisible(false);\n-\n-            cursorImage.setLocation(e.getPoint());\n-\n-            cursorImage.setBounds(e.getX() - 11, e.getY() - 8, cursorImage\n-                    .getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-            cursorImage.setVisible(true);\n-\n-            click.redispatchMouseEvent(e, true);\n-\n-        }\n-\n-        public void mouseClicked(MouseEvent e) {\n-            click.redispatchMouseEvent(e, true);\n-        }\n-\n-        public void mouseEntered(MouseEvent e) {\n-            click.redispatchMouseEvent(e, true);\n-        }\n-\n-        @Override\n-        public void mouseExited(MouseEvent e) {\n-            cursorSelect.setVisible(false);\n-            cursorImage.setVisible(false);\n-            click.redispatchMouseEvent(e, true);\n-        }\n-    }\n-\n-    class Cursor implements MouseMotionListener {\n-\n-        private final AImage cursorImage;\n-\n-        private final AImage cursorSelect;\n-\n-        private final JPanel glassPane;\n-\n-        private final Container contentPane;\n-\n-        private Cursor(AImage cursorImage, AImage cursorSelect,\n-                       Container contentPane, JPanel glassPane) {\n-            this.cursorImage \u003d cursorImage;\n-            this.cursorSelect \u003d cursorSelect;\n-            this.contentPane \u003d contentPane;\n-            this.glassPane \u003d glassPane;\n-        }\n-\n-        public AImage getCursorImage() {\n-            return cursorImage;\n-        }\n-\n-        public AImage getCursorSelect() {\n-            return cursorSelect;\n-        }\n-\n-        @Override\n-        public void mouseDragged(MouseEvent e) {\n-\n-            cursorImage.setVisible(false);\n-\n-            cursorSelect.setLocation(e.getPoint());\n-\n-            cursorSelect.setBounds(e.getX() - 11, e.getY() - 8, cursorImage\n-                    .getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon().getIconHeight());\n-\n-            cursorSelect.setVisible(true);\n-\n-            redispatchMouseEvent(e, true);\n-        }\n-\n-        @Override\n-        public void mouseMoved(MouseEvent e) {\n-\n-            cursorSelect.setVisible(false);\n-//            if (panel.getBounds().contains(e.getPoint())) {\n-\n-\n-            cursorImage.setLocation(e.getPoint());\n-\n-            cursorImage.setBounds(e.getX() - 11, e.getY() - 8, cursorImage\n-                    .getImgIcon()\n-                    .getIconWidth(), cursorImage.getImgIcon()\n-                    .getIconHeight());\n-\n-\n-            cursorImage.setVisible(true);\n-\n-            redispatchMouseEvent(e, true);\n-\n-        }\n-\n-        public void redispatchMouseEvent(MouseEvent e,\n-                                         boolean repaint) {\n-            Point glassPanePoint \u003d e.getPoint();\n-            Container container \u003d contentPane;\n-            Point containerPoint \u003d SwingUtilities.convertPoint(glassPane,\n-                    glassPanePoint,\n-                    contentPane);\n-            //The mouse event is probably over the content pane.\n-            //Find out exactly which component it\u0027s over.\n-            Component component \u003d\n-                      SwingUtilities.getDeepestComponentAt(container,\n-                    containerPoint.x,\n-                    containerPoint.y);\n-\n-            if (component !\u003d null) {\n-                //Forward events\n-                Point componentPoint \u003d SwingUtilities.convertPoint(glassPane,\n-                        glassPanePoint,\n-                        component);\n-                component.dispatchEvent(new MouseEvent(component,\n-                        e.getID(),\n-                        e.getWhen(),\n-                        e.getModifiers(),\n-                        componentPoint.x,\n-                        componentPoint.y,\n-                        e.getClickCount(),\n-                        e.isPopupTrigger()));\n-            } else {\n-                glassPanePoint \u003d null;\n-            }\n-\n-            //Update the glass pane if requested.\n-            if (repaint) {\n-                glassPane.repaint();\n-            }\n-        }\n-    }\n-\n     class MouseEventRedispatcher extends MouseAdapter {\n \n         private final JPanel glassPane;\n@@ -1543,8 +1339,8 @@ private void redispatchMouseEvent(MouseEvent e,\n             Point containerPoint \u003d SwingUtilities.convertPoint(glassPane,\n                     glassPanePoint,\n                     contentPane);\n-            \n-            //* \n+\n+            //*\n             // The mouse event is probably over the content pane.\n             // Find out exactly which component it\u0027s over.\n             //*"
        },
        {
          "file_name": "src/aurora/V1/core/main.java",
          "patch": "@@ -47,22 +47,29 @@ public static void main(String[] args) throws InterruptedException, UnsupportedA\n         }\n \n \n+\n         if (Double.parseDouble(System.getProperty(\"java.version\").substring(2, 3)) \u003e\u003d 6\n                 \u0026\u0026 Integer.parseInt(System.getProperty(\"java.version\").substring(6, 8)) \u003e\u003d 17) {\n \n             //Initiate The LoginWindow\n             System.out.println(\"Running Java Version: \" + System.getProperty(\"java.version\"));\n             System.out.println(\"OS: \" + System.getProperty(\"os.name\"));\n+            setLAF();\n             StartScreenUI aurora_StartUp \u003d new StartScreenUI(startMini);\n \n \n         } else if (Double.parseDouble(System.getProperty(\"java.version\").substring(0, 3)) \u003d\u003d 1.7) {\n             //Initiate The LoginWindow\n             System.out.println(\"Running Java Version: \" + System.getProperty(\"java.version\"));\n             System.out.println(\"OS: \" + System.getProperty(\"os.name\"));\n+\n+            setLAF();\n+\n             StartScreenUI aurora_StartUp \u003d new StartScreenUI(startMini);\n \n \n+\n+\n         } else {\n             ressource \u003d new ASurface(\"\");\n             try {\n@@ -81,5 +88,10 @@ public static void main(String[] args) throws InterruptedException, UnsupportedA\n \n \n     }\n+\n+    private static void setLAF() {\n+\n+\n+    }\n }\n "
        },
        {
          "file_name": "src/aurora/V1/core/screen_handler/DashboardHandler.java",
          "patch": "@@ -253,7 +253,7 @@ public CarouselPaneMouseListener(final ACarouselPane aCarouselPane) {\n         @Override\n         public final void mouseClicked(final MouseEvent e) {\n             System.out.println(\"CLICKED\");\n-\n+            System.out.println(pane);\n             if (pane \u003d\u003d null \u0026\u0026 pane instanceof ACarouselPane) {\n                 pane \u003d (ACarouselPane) e.getComponent();\n             }"
        },
        {
          "file_name": "src/aurora/V1/core/screen_handler/GameLibraryHandler.java",
          "patch": "@@ -1104,7 +1104,6 @@ public HoverButtonRight(GameLibraryUI gameLibraryUI,\n             this.libraryUI \u003d gameLibraryUI;\n             this.coreUI \u003d auroraCoreUI;\n \n-            //GridSplit \u003d library.getGridSplit();\n             GameBack \u003d gameLibraryUI.getGameBack();\n             imgGameLeft \u003d gameLibraryUI.getImgGameLeft();\n             imgGameRight \u003d gameLibraryUI.getImgGameRight();\n@@ -1134,9 +1133,6 @@ public void mouseClicked(MouseEvent e) {\n \n                     GridAnimate.moveRight(libraryUI.getCurrentIndex());\n \n-                    //carlos\n-                    // GridSplit.incrementVisibleGridIndex();\n-\n \n                     try {\n                         libraryUI.loadGames(libraryUI.getCurrentIndex() + 1);\n@@ -1178,6 +1174,7 @@ public void mouseReleased(MouseEvent e) {\n \n         @Override\n         public void mouseEntered(MouseEvent e) {\n+            System.out.println(\"HOVER IMAGE ACTIVATED\");\n             GridAnimate \u003d libraryUI.getGridAnimate();\n             imgGameRight \u003d libraryUI.getImgGameRight();\n "
        },
        {
          "file_name": "src/aurora/V1/core/screen_logic/DashboardLogic.java",
          "patch": "@@ -35,6 +35,7 @@\n import java.util.Random;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n+import javax.swing.SwingUtilities;\n \n /**\n  * .------------------------------------------------------------------------.\n@@ -76,6 +77,12 @@\n      */\n     private final AuroraCoreUI coreUI;\n \n+    private GameLibraryUI libraryUI;\n+\n+    private GamerProfileUI profileUI;\n+\n+    private SettingsUI settingsUI;\n+\n     /**\n      * .-----------------------------------------------------------------------.\n      * | DashboardLogic(DashboardUI)\n@@ -106,9 +113,9 @@ public DashboardLogic(final DashboardUI dashboardUi) {\n \n         this.storage \u003d dashboardUI.getStorage();\n \n+        loadAuroraApps();\n     }\n \n-\n     @Override\n     public final void setHandler(final AuroraScreenHandler handler) {\n         this.dashboardHandler \u003d (DashboardHandler) handler;\n@@ -289,20 +296,31 @@ public final void launchAuroraApp(final ACarouselPane aCarouselPane) {\n         if (pane \u003d\u003d dashboardUI.getLibraryPane()) {\n             //action on click right Panel\n             if (dashboardUI !\u003d null) {\n-                GameLibraryUI libraryUI \u003d new GameLibraryUI(dashboardUI\n-                        .getStartUI().getAuroraStorage(), dashboardUI,\n-                        dashboardUI.getCoreUI());\n-                libraryUI.loadUI();\n+\n+                SwingUtilities.invokeLater(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        libraryUI.clearUI();\n+                        libraryUI.buildUI();\n+                    }\n+                });\n             }\n         } else if (pane \u003d\u003d dashboardUI.getProfilePane()) {\n-            GamerProfileUI profileUI \u003d new GamerProfileUI(dashboardUI,\n-                    dashboardUI.getCoreUI());\n-            profileUI.loadUI();\n+            SwingUtilities.invokeLater(new Runnable() {\n+                @Override\n+                public void run() {\n+                    profileUI.clearUI();\n+                    profileUI.buildUI();\n+                }\n+            });\n         } else if (pane \u003d\u003d dashboardUI.getSettingsPane()) {\n-            SettingsUI settingsUI \u003d new SettingsUI(dashboardUI,\n-                    dashboardUI.getCoreUI());\n-\n-            settingsUI.loadUI();\n+            SwingUtilities.invokeLater(new Runnable() {\n+                @Override\n+                public void run() {\n+                    settingsUI.clearUI();\n+                    settingsUI.buildUI();\n+                }\n+            });\n         } else if (pane \u003d\u003d dashboardUI.getAuroraNetPane()) {\n             // do nothing for now\n         }\n@@ -347,4 +365,23 @@ public final void navigateCarousel(final ACarouselPane aCarouselPane) {\n         }\n \n     }\n+\n+    private void loadAuroraApps() {\n+\n+        libraryUI \u003d new GameLibraryUI(dashboardUI\n+                .getStartUI().getAuroraStorage(), dashboardUI,\n+                dashboardUI.getCoreUI());\n+        libraryUI.loadUI();\n+\n+\n+        profileUI \u003d new GamerProfileUI(dashboardUI,\n+                dashboardUI.getCoreUI());\n+        profileUI.loadUI();\n+\n+        settingsUI \u003d new SettingsUI(dashboardUI,\n+                dashboardUI.getCoreUI());\n+\n+        settingsUI.loadUI();\n+\n+    }\n }"
        },
        {
          "file_name": "src/aurora/V1/core/screen_ui/GameLibraryUI.java",
          "patch": "@@ -29,15 +29,28 @@\n import aurora.V1.core.screen_logic.GameLibraryLogic;\n import aurora.engine.V1.Logic.*;\n import aurora.engine.V1.UI.*;\n-import java.awt.*;\n-import java.awt.event.ActionListener;\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n import java.lang.reflect.Field;\n import java.net.MalformedURLException;\n import java.sql.SQLException;\n import java.util.ArrayList;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n-import javax.swing.*;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JFileChooser;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextField;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.PopupFactory;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n \n /**\n  * .---------------------------------------------------------------------------.\n@@ -77,27 +90,11 @@\n \n     private int currentIndex;\n \n-    private ActionListener a;\n-\n     private int currentPanel;\n \n     private ArrayList\u003cBoolean\u003e loadedPanels;\n \n-    public static int SIZE_GameCoverHeight;\n-\n-    public static int SIZE_GameCoverWidth;\n-\n-    public static int SIZE_ZoomButtonHeight;\n-\n-    public static int SIZE_SelectedGameBarHeight;\n-\n-    public static int SIZE_SelectedGameBarWidth;\n-\n-    public static int SIZE_AddGameWidth;\n-\n-    public static int SIZE_AddGameHeight;\n-\n-    public static int SIZE_GameNameFont;\n+    public static int gameCoverHeight;\n \n     private GridAnimation GridAnimate;\n \n@@ -241,6 +238,22 @@\n \n     private JPanel pnlAddGameContainer;\n \n+    public static int gameCoverWidth;\n+\n+    public static int zoomButtonHeight;\n+\n+    public static int selectedGameBarHeight;\n+\n+    public static int selectedGameBarWidth;\n+\n+    public static int addGameWidth;\n+\n+    public static int addGameHeight;\n+\n+    public static int gameNameFontSize;\n+\n+    private boolean isScreenLoaded \u003d false;\n+\n     public GameLibraryUI(AuroraStorage storage, final DashboardUI dashboardUi,\n                          final AuroraCoreUI auroraCoreUI) {\n         this.coreUI \u003d auroraCoreUI;\n@@ -253,7 +266,6 @@ public GameLibraryUI(AuroraStorage storage, final DashboardUI dashboardUi,\n         handler.setLogic(logic);\n         logic.setHandler(handler);\n \n-        this.clearUI();\n         isGameLibraryKeyListenerAdded \u003d false;\n \n     }\n@@ -280,10 +292,10 @@ public final void loadUI() {\n         //* Zoom Buttons *//\n         btnZoomPlus \u003d new AButton(\"Aurora_ZoomP_normal.png\",\n                 \"Aurora_ZoomP_down.png\",\n-                \"Aurora_ZoomP_over.png\", 0, SIZE_ZoomButtonHeight);\n+                \"Aurora_ZoomP_over.png\", 0, zoomButtonHeight);\n         btnZoomLess \u003d new AButton(\"Aurora_ZoomM_normal.png\",\n                 \"Aurora_ZoomM_down.png\",\n-                \"Aurora_ZoomM_over.png\", 0, SIZE_ZoomButtonHeight);\n+                \"Aurora_ZoomM_over.png\", 0, zoomButtonHeight);\n \n \n         //* Key Board Naviagtion Icon *//\n@@ -296,7 +308,7 @@ public final void loadUI() {\n         SelectedGameContainer \u003d new JPanel();\n \n         imgSelectedGamePane \u003d new AImagePane(\"Aurora_SelectedGameBar.png\",\n-                SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight,\n+                selectedGameBarWidth, selectedGameBarHeight,\n                 new FlowLayout(FlowLayout.CENTER, 0, 5));\n \n         lblGameName \u003d new JLabel(\"Select A Game For Info\");\n@@ -306,7 +318,7 @@ public final void loadUI() {\n         pnlAddGameContainer \u003d new JPanel(new BorderLayout());\n \n         btnAddGame \u003d new AButton(\"Aurora_Add_normal.png\", \"Aurora_Add_down.png\",\n-                \"Aurora_Add_over.png\", SIZE_AddGameWidth, SIZE_AddGameHeight);\n+                \"Aurora_Add_over.png\", addGameWidth, addGameHeight);\n \n \n         //* Search Bar *//\n@@ -323,6 +335,21 @@ public final void loadUI() {\n         SearchContainer \u003d new JPanel(new BorderLayout());\n         SearchPane \u003d new JPanel(new BorderLayout());\n \n+        //* Grid Animator *//\n+        this.GridAnimate \u003d new GridAnimation(GridSplit, paneLibraryContainer);\n+\n+\n+        //* Start Aurora Dabatase connection *//\n+        try {\n+            CoverDB \u003d new ASimpleDB(\"AuroraDB\", \"AuroraTable\", false);\n+        } catch (SQLException ex) {\n+            Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE,\n+                    null, ex);\n+        }\n+\n+        //* Create Grid Manager *//\n+        GridSplit \u003d new GridManager(2, 4, coreUI);\n+\n \n         // Handlers\n         // --------------------------------------------------------------------.\n@@ -347,168 +374,175 @@ public final void loadUI() {\n         attactchHandlers();\n \n \n-        //Start Aurora Dabatase connection\n-        try {\n-            CoverDB \u003d new ASimpleDB(\"AuroraDB\", \"AuroraTable\", false);\n-        } catch (SQLException ex) {\n-            Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE,\n-                    null, ex);\n-        }\n \n-        GridSplit \u003d new GridManager(2, 4, coreUI);\n \n \n-        //Grid Animator\n-        this.GridAnimate \u003d new GridAnimation(GridSplit, paneLibraryContainer);\n \n \n     }\n \n     @Override\n     public void buildUI() {\n+        if (!isScreenLoaded) {\n+            setSize();\n \n-        setSize();\n-\n-        //* Add Zoom Buttons *//\n+            //* Add Zoom Buttons *//\n //        coreUI.getTitlePanel().removeAll();\n //        coreUI.getTitlePanel().add(ZoomM);\n //        coreUI.getTitlePanel().add(coreUI.getTitleLabel());\n //        coreUI.getTitlePanel().add(ZoomP);\n \n-        paneLibraryContainer.setOpaque(false);\n-        paneLibraryContainer.setBackground(Color.red);\n-        paneLibraryContainer.setLayout(new BorderLayout(0, 0));\n+            paneLibraryContainer.setOpaque(false);\n+            paneLibraryContainer.setBackground(Color.red);\n+            paneLibraryContainer.setLayout(new BorderLayout(0, 0));\n \n-        lblKeyAction.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n-                coreUI.getKeysFontSize()));\n-        lblKeyAction.setForeground(Color.YELLOW);\n+            lblKeyAction.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n+                    coreUI.getKeysFontSize()));\n+            lblKeyAction.setForeground(Color.YELLOW);\n \n \n \n-        //* Selected Game Name Bar *//\n-        SelectedGameContainer.setOpaque(false);\n+            //* Selected Game Name Bar *//\n+            SelectedGameContainer.setOpaque(false);\n \n-        lblGameName.setOpaque(false);\n-        lblGameName.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n-                SIZE_GameNameFont));\n-        lblGameName.setForeground(Color.LIGHT_GRAY);\n+            lblGameName.setOpaque(false);\n+            lblGameName.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n+                    gameNameFontSize));\n+            lblGameName.setForeground(Color.LIGHT_GRAY);\n \n-        imgSelectedGamePane.setPreferredSize(new Dimension(\n-                SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight));\n-        imgSelectedGamePane.add(lblGameName);\n-        SelectedGameContainer.add(imgSelectedGamePane);\n+            imgSelectedGamePane.setPreferredSize(new Dimension(\n+                    selectedGameBarWidth, selectedGameBarHeight));\n+            imgSelectedGamePane.add(lblGameName);\n+            SelectedGameContainer.add(imgSelectedGamePane);\n \n-        //* Add Game Button *//\n-        pnlAddGameContainer.setOpaque(false);\n-        btnAddGame.addActionListener(addGameHandler);\n-        pnlAddGameContainer.add(btnAddGame, BorderLayout.CENTER);\n+            //* Add Game Button *//\n+            pnlAddGameContainer.setOpaque(false);\n+            btnAddGame.addActionListener(addGameHandler);\n+            pnlAddGameContainer.add(btnAddGame, BorderLayout.CENTER);\n \n \n-        //* Search Bar *//\n-        SearchBarBG.setPreferredSize(new Dimension(SIZE_SearchBarWidth, 50));\n-        removeSearchButton.setPreferredSize(new Dimension(70, 51));\n+            //* Search Bar *//\n+            SearchBarBG.setPreferredSize(new Dimension(SIZE_SearchBarWidth, 50));\n+            removeSearchButton.setPreferredSize(new Dimension(70, 51));\n \n-        gridSearchBar.setOpaque(false);\n-        gridSearchBar.setBorder(null);\n-        gridSearchBar.setColumns(19);\n-        gridSearchBar.setForeground(Color.darkGray);\n-        gridSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 40));\n-        gridSearchBar.setPreferredSize(new Dimension(880, 50));\n+            gridSearchBar.setOpaque(false);\n+            gridSearchBar.setBorder(null);\n+            gridSearchBar.setColumns(19);\n+            gridSearchBar.setForeground(Color.darkGray);\n+            gridSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD,\n+                    40));\n+            gridSearchBar.setPreferredSize(new Dimension(880, 50));\n \n-        SearchButton.setPreferredSize(new Dimension(70, 51));\n-        SearchButton.addActionListener(handler.new searchButtonHandler(this));\n+            SearchButton.setPreferredSize(new Dimension(70, 51));\n+            SearchButton\n+                    .addActionListener(handler.new searchButtonHandler(this));\n \n-        SearchButtonBG.setPreferredSize(new Dimension(70, 51));\n-        SearchButtonBG.add(SearchButton, BorderLayout.NORTH);\n+            SearchButtonBG.setPreferredSize(new Dimension(70, 51));\n+            SearchButtonBG.add(SearchButton, BorderLayout.NORTH);\n \n-        TextPane.setOpaque(false);\n-        TextPane.add(gridSearchBar, BorderLayout.NORTH);\n+            TextPane.setOpaque(false);\n+            TextPane.add(gridSearchBar, BorderLayout.NORTH);\n \n-        SearchContainer.setOpaque(false);\n-        SearchContainer.add(ButtonPane, BorderLayout.WEST);\n-        SearchContainer.add(TextPane, BorderLayout.CENTER);\n+            SearchContainer.setOpaque(false);\n+            SearchContainer.add(ButtonPane, BorderLayout.WEST);\n+            SearchContainer.add(TextPane, BorderLayout.CENTER);\n \n-        ButtonPane.setOpaque(false);\n-        ButtonPane.add(SearchButtonBG, BorderLayout.NORTH);\n+            ButtonPane.setOpaque(false);\n+            ButtonPane.add(SearchButtonBG, BorderLayout.NORTH);\n \n-        SearchBarBG.add(SearchContainer, BorderLayout.WEST);\n-        SearchBarBG.validate();\n+            SearchBarBG.add(SearchContainer, BorderLayout.WEST);\n+            SearchBarBG.validate();\n \n-        SearchPane.setOpaque(false);\n-        SearchPane.add(SearchBarBG, BorderLayout.EAST);\n-        SearchPane.setPreferredSize(new Dimension(SearchPane.getBounds().width,\n-                75));\n-        SearchPane.validate();\n+            SearchPane.setOpaque(false);\n+            SearchPane.add(SearchBarBG, BorderLayout.EAST);\n+            SearchPane.setPreferredSize(new Dimension(\n+                    SearchPane.getBounds().width,\n+                    75));\n+            SearchPane.validate();\n \n-        //* Add Components to Central Container *//\n-        paneLibraryContainer.add(BorderLayout.WEST, imgFavorite);\n-        paneLibraryContainer.add(BorderLayout.CENTER, GridSplit.getGrid(0));\n-        paneLibraryContainer.add(BorderLayout.EAST, btnGameRight);\n+            //* Initiate Grid *//\n+            GridSplit.initiateGrid(0);\n \n-        //* Initiate Grid *//\n-        GridSplit.initiateGrid(0);\n+            //* Add Components to Central Container *//\n+            paneLibraryContainer.add(BorderLayout.WEST, imgFavorite);\n+            paneLibraryContainer.add(BorderLayout.CENTER, GridSplit.getGrid(0));\n+            paneLibraryContainer.add(BorderLayout.EAST, btnGameRight);\n \n \n \n-        // Add Games to Library\n-        // --------------------------------------------------------------------.\n+            // Add Games to Library\n+            // --------------------------------------------------------------------.\n \n-        try {\n+            try {\n \n-            //* Add Games Marked Fav first *//\n-\n-            for (int i \u003d 0; i \u003c storage.getStoredLibrary().getGameNames().size();\n-                    i++) {\n-\n-                Game Game \u003d new Game(GridSplit, coreUI, dashboardUI, storage);\n-                if (storage.getStoredLibrary().getFaveStates().get(i)) {\n-                    Game.setGameName(storage.getStoredLibrary().getGameNames()\n-                            .get(i));\n-                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath()\n-                            .get(i));\n-                    //Handle appostrophese in game path\n-                    Game.setGamePath(storage.getStoredLibrary().getGamePath()\n-                            .get(i).replace(\"\u0027\", \"\u0027\u0027\"));\n-                    Game.setFavorite(storage.getStoredLibrary().getFaveStates()\n-                            .get(i));\n-                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n-\n-                    GridSplit.addGame(Game);\n+                //* Add Games Marked Fav first *//\n+\n+                for (int i \u003d 0; i \u003c storage.getStoredLibrary().getGameNames()\n+                        .size();\n+                        i++) {\n+\n+                    Game Game \u003d new Game(GridSplit, coreUI, dashboardUI, storage);\n+                    if (storage.getStoredLibrary().getFaveStates().get(i)) {\n+                        Game.setGameName(storage.getStoredLibrary()\n+                                .getGameNames()\n+                                .get(i));\n+                        Game.setCoverUrl(storage.getStoredLibrary()\n+                                .getBoxArtPath()\n+                                .get(i));\n+                        //Handle appostrophese in game path\n+                        Game.setGamePath(storage.getStoredLibrary()\n+                                .getGamePath()\n+                                .get(i).replace(\"\u0027\", \"\u0027\u0027\"));\n+                        Game.setFavorite(storage.getStoredLibrary()\n+                                .getFaveStates()\n+                                .get(i));\n+                        Game.setCoverSize(gameCoverWidth, gameCoverHeight);\n+\n+                        GridSplit.addGame(Game);\n+                    }\n                 }\n-            }\n \n-            //* Add Non-Fav games after *//\n-\n-            for (int i \u003d 0; i \u003c storage.getStoredLibrary().getGameNames().size();\n-                    i++) {\n-\n-                Game Game \u003d new Game(GridSplit, coreUI, dashboardUI, storage);\n-                if (!storage.getStoredLibrary().getFaveStates().get(i)) {\n-                    Game.setGameName(storage.getStoredLibrary().getGameNames()\n-                            .get(i));\n-                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath()\n-                            .get(i));\n-                    //Handle appostrophese in game path\n-                    Game.setGamePath(storage.getStoredLibrary().getGamePath()\n-                            .get(i).replace(\"\u0027\", \"\u0027\u0027\"));\n-                    Game.setFavorite(storage.getStoredLibrary().getFaveStates()\n-                            .get(i));\n-                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n-\n-                    GridSplit.addGame(Game);\n+                //* Add Non-Fav games after *//\n+\n+                for (int i \u003d 0; i \u003c storage.getStoredLibrary().getGameNames()\n+                        .size();\n+                        i++) {\n+\n+                    Game Game \u003d new Game(GridSplit, coreUI, dashboardUI, storage);\n+                    if (!storage.getStoredLibrary().getFaveStates().get(i)) {\n+                        Game.setGameName(storage.getStoredLibrary()\n+                                .getGameNames()\n+                                .get(i));\n+                        Game.setCoverUrl(storage.getStoredLibrary()\n+                                .getBoxArtPath()\n+                                .get(i));\n+                        //Handle appostrophese in game path\n+                        Game.setGamePath(storage.getStoredLibrary()\n+                                .getGamePath()\n+                                .get(i).replace(\"\u0027\", \"\u0027\u0027\"));\n+                        Game.setFavorite(storage.getStoredLibrary()\n+                                .getFaveStates()\n+                                .get(i));\n+                        Game.setCoverSize(gameCoverWidth, gameCoverHeight);\n+\n+                        GridSplit.addGame(Game);\n+                    }\n                 }\n-            }\n \n-            GridSplit.finalizeGrid(addGameHandler, SIZE_GameCoverWidth,\n-                    SIZE_GameCoverHeight);\n+                GridSplit.finalizeGrid(addGameHandler, gameCoverWidth,\n+                        gameCoverHeight);\n \n-            //Load First Grid by default\n-            loadGames(0);\n-        } catch (MalformedURLException ex) {\n-            System.out.println(\"MalformedURLExeption \\n\" + ex);\n-        }\n+                //Load First Grid by default\n+                loadGames(0);\n+            } catch (MalformedURLException ex) {\n+                System.out.println(\"MalformedURLExeption \\n\" + ex);\n+            }\n \n-        addToCanvas();\n+            isScreenLoaded \u003d true;\n+            addToCanvas();\n+        } else {\n+            addToCanvas();\n+        }\n     }\n \n     @Override\n@@ -563,8 +597,8 @@ public void addToCanvas() {\n \n         //Finalize\n         coreUI.getTitleLabel().setText(\"   Game Library   \");\n-\n-        coreUI.getFrame().requestFocus();\n+        btnGameRight.requestFocusInWindow();\n+//        coreUI.getFrame().requestFocus();\n     }\n \n     public void attactchHandlers() {\n@@ -1228,32 +1262,32 @@ public void setSize() {\n         System.out.println(\"Height \" + coreUI.getFrame().getHeight());\n         System.out.println(\"Width \" + coreUI.getFrame().getWidth());\n         if (coreUI.isLargeScreen()) {\n-            SIZE_GameCoverHeight \u003d coreUI.getFrame().getHeight() / 3 - (Ratio\n-                                                                        / 10)\n-                                   + 5;\n-            SIZE_GameCoverWidth \u003d coreUI.getFrame().getWidth() / 5\n-                                  - (Ratio / 10) - 5;\n-            SIZE_ZoomButtonHeight \u003d 30;\n-            SIZE_SelectedGameBarHeight \u003d 65;\n-            SIZE_SelectedGameBarWidth \u003d 380;\n-            SIZE_AddGameWidth \u003d 351;\n-            SIZE_AddGameHeight \u003d 51;\n-            SIZE_GameNameFont \u003d 35;\n+            gameCoverHeight \u003d coreUI.getFrame().getHeight() / 3 - (Ratio\n+                                                                   / 10)\n+                              + 5;\n+            gameCoverWidth \u003d coreUI.getFrame().getWidth() / 5\n+                             - (Ratio / 10) - 5;\n+            zoomButtonHeight \u003d 30;\n+            selectedGameBarHeight \u003d 65;\n+            selectedGameBarWidth \u003d 380;\n+            addGameWidth \u003d 351;\n+            addGameHeight \u003d 51;\n+            gameNameFontSize \u003d 35;\n             SIZE_FramePanePadding \u003d 20;\n             SIZE_SearchBarWidth \u003d 880;\n \n         } else {\n             SIZE_FramePanePadding \u003d 10;\n-            SIZE_GameCoverHeight \u003d coreUI.getFrame().getHeight() / 3 - (Ratio\n-                                                                        / 10);\n-            SIZE_GameCoverWidth \u003d coreUI.getFrame().getWidth() / 5\n-                                  - (Ratio / 10);\n-            SIZE_ZoomButtonHeight \u003d 25;\n-            SIZE_AddGameWidth \u003d 300;\n-            SIZE_AddGameHeight \u003d 40;\n-            SIZE_SelectedGameBarHeight \u003d 60;\n-            SIZE_SelectedGameBarWidth \u003d 360;\n-            SIZE_GameNameFont \u003d 32;\n+            gameCoverHeight \u003d coreUI.getFrame().getHeight() / 3 - (Ratio\n+                                                                   / 10);\n+            gameCoverWidth \u003d coreUI.getFrame().getWidth() / 5\n+                             - (Ratio / 10);\n+            zoomButtonHeight \u003d 25;\n+            addGameWidth \u003d 300;\n+            addGameHeight \u003d 40;\n+            selectedGameBarHeight \u003d 60;\n+            selectedGameBarWidth \u003d 360;\n+            gameNameFontSize \u003d 32;\n             SIZE_SearchBarWidth \u003d coreUI.getFrame().getWidth() / 2 + coreUI\n                     .getControlWidth() / 2;\n         }\n@@ -1402,40 +1436,40 @@ public GridManager getGridSplit() {\n         return GridSplit;\n     }\n \n-    public int getSIZE_AddGameHeight() {\n-        return SIZE_AddGameHeight;\n+    public int getAddGameHeight() {\n+        return addGameHeight;\n     }\n \n-    public int getSIZE_AddGameWidth() {\n-        return SIZE_AddGameWidth;\n+    public int getAddGameWidth() {\n+        return addGameWidth;\n     }\n \n     public int getSIZE_FramePanePadding() {\n         return SIZE_FramePanePadding;\n     }\n \n     public int getSIZE_GameCoverHeight() {\n-        return SIZE_GameCoverHeight;\n+        return gameCoverHeight;\n     }\n \n     public int getSIZE_GameCoverWidth() {\n-        return SIZE_GameCoverWidth;\n+        return gameCoverWidth;\n     }\n \n     public int getSIZE_GameNameFont() {\n-        return SIZE_GameNameFont;\n+        return gameNameFontSize;\n     }\n \n-    public int getSIZE_SelectedGameBarHeight() {\n-        return SIZE_SelectedGameBarHeight;\n+    public int getSelectedGameBarHeight() {\n+        return selectedGameBarHeight;\n     }\n \n-    public int getSIZE_SelectedGameBarWidth() {\n-        return SIZE_SelectedGameBarWidth;\n+    public int getSelectedGameBarWidth() {\n+        return selectedGameBarWidth;\n     }\n \n-    public int getSIZE_ZoomButtonHeight() {\n-        return SIZE_ZoomButtonHeight;\n+    public int getZoomButtonHeight() {\n+        return zoomButtonHeight;\n     }\n \n     public GridSearch getSearch() {\n@@ -1486,10 +1520,6 @@ public AButton getZoomP() {\n         return btnZoomPlus;\n     }\n \n-    public ActionListener getA() {\n-        return a;\n-    }\n-\n     public AButton getBtnAddGame() {\n         return btnAddGame;\n     }"
        },
        {
          "file_name": "src/aurora/V1/core/screen_ui/GamerProfileUI.java",
          "patch": "@@ -35,7 +35,6 @@ public GamerProfileUI(DashboardUI dahsboardUi, AuroraCoreUI auroraCoreUi) {\n \n         this.dashboardUI \u003d dahsboardUi;\n         this.coreUI \u003d auroraCoreUi;\n-        this.clearUI();\n     }\n \n     @Override"
        },
        {
          "file_name": "src/aurora/V1/core/screen_ui/SettingsUI.java",
          "patch": "@@ -35,7 +35,6 @@ public SettingsUI(DashboardUI dashboardUI, AuroraCoreUI auroraCoreUI) {\n \n         this.dashboardUI \u003d dashboardUI;\n         this.coreUI \u003d auroraCoreUI;\n-        this.clearUI();\n     }\n \n     @Override"
        }
      ]
    }
  },
  {
    "name": "cleans up Memory leak, because raw data was not released",
    "url": "https://github.com/bumptech/glide/pull/892",
    "description": "We had large memory leaks with gifs. After investigating the memory we found the problem in the \"rawData\" of the released gif decoder, which was in the pool.\n",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/bumptech/glide/commit/735291ad9075a8673f10982274aab93e9661f866",
      "files": [
        {
          "file_name": "third_party/gif_decoder/src/main/java/com/bumptech/glide/gifdecoder/GifDecoder.java",
          "patch": "@@ -352,6 +352,7 @@ public void clear() {\n             bitmapProvider.release(previousImage);\n         }\n         previousImage \u003d null;\n+        rawData \u003d null;\n     }\n \n     public void setData(GifHeader header, byte[] data) {"
        }
      ]
    }
  },
  {
    "name": "Memory Leak : TJobAdapter",
    "url": "https://github.com/arnaud-m/pisco/issues/6",
    "description": "TLinkedList are too complicated when objects can belong to several lists simultaneously.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/arnaud-m/pisco/commit/973f8a0fe55c572618898d1f5776a130ea192abc",
      "files": [
        {
          "file_name": "pisco-common/src/main/java/pisco/common/PDR1Scheduler.java",
          "patch": "@@ -132,7 +132,7 @@ public final static int schedule1PrecLmax(ITJob[] jobs, Proc1PrecLmax procedure)\n \t\tpendingJobs.clear();\n \t\tcurrentTime \u003d JobUtils.sumDurations(jobs);\n \t\t//VisuFactory.getDotManager().show(new DottyBean(jobs));\n-\t\tJobUtils.initPredecessorHooks(jobs, procedure);\n+\t\tJobUtils.initSuccessorHooks(jobs, procedure);\n \t\t//Lawler algorithm : build sequence in backward order P \u003d sum pj\n \t\twhile( ! pendingJobs.isEmpty()) {\n \t\t\t//schedule job with the latest due date (minimize min fj(P))\n@@ -143,7 +143,7 @@ public final static int schedule1PrecLmax(ITJob[] jobs, Proc1PrecLmax procedure)\n \t\t\tfinal int lateness \u003d job.getLateness();\n \t\t\tif(lmax \u003c lateness) { lmax \u003d lateness;}\n \t\t\t//Update pending jobs\n-\t\t\tjob.forEachSuccessor(procedure);\n+\t\t\tjob.forEachPredecessor(procedure);\n \t\t}\n \t\tassert(isScheduled(jobs));\n \t\treturn lmax;"
        },
        {
          "file_name": "pisco-single/src/test/java/pisco/single/TestSingleMachine.java",
          "patch": "@@ -18,14 +18,14 @@\n \n \tprivate final static String[] CMD_PREFIX \u003d {\"--seed\",\"0\",\"-t\", \"LP\"};\n \n-\t//private final static String[] CONFS \u003d {\"basic\", \"pmtn\", \"prec\"};\n-\tprivate final static String[] CONFS \u003d {\"prec\"};\n+\tprivate final static String[] CONFS \u003d {\"basic\", \"pmtn\", \"prec\"};\n+\t//private final static String[] CONFS \u003d {\"prec\"};\n \t\n \t\t\n \t@BeforeClass\n \tpublic final static void setUp() {\n \t\tChocoLogging.setVerbosity(Verbosity.QUIET);\n-\t\tChocoLogging.setVerbosity(Verbosity.VERBOSE);\n+\t\t//ChocoLogging.setVerbosity(Verbosity.VERBOSE);\n \t}\n \t\n \t@AfterClass"
        }
      ]
    }
  },
  {
    "name": "Memory leak in sync mechanic",
    "url": "https://github.com/Fleker/CumulusTV/issues/167",
    "description": "My syncing mechanism appears to have sprouted some issue where it bogs down the system when it\u0027s called and causes an out of memory exception.\n\nThis is a critical issue that will need to be fixed before release. \n\nIt was working fine when the Quick Settings were added, so something seems to have changed since that commit.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Fleker/CumulusTV/commit/8f1c301a7c22218fb55659da6ed9a853ef7bfcc2",
      "files": [
        {
          "file_name": ".idea/misc.xml",
          "patch": "@@ -37,7 +37,7 @@\n     \u003cConfirmationsSetting value\u003d\"0\" id\u003d\"Add\" /\u003e\n     \u003cConfirmationsSetting value\u003d\"0\" id\u003d\"Remove\" /\u003e\n   \u003c/component\u003e\n-  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" languageLevel\u003d\"JDK_1_7\" default\u003d\"true\" assert-keyword\u003d\"true\" jdk-15\u003d\"true\" project-jdk-name\u003d\"1.8\" project-jdk-type\u003d\"JavaSDK\"\u003e\n+  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" languageLevel\u003d\"JDK_1_8\" default\u003d\"true\" assert-keyword\u003d\"true\" jdk-15\u003d\"true\" project-jdk-name\u003d\"1.8\" project-jdk-type\u003d\"JavaSDK\"\u003e\n     \u003coutput url\u003d\"file://$PROJECT_DIR$/build/classes\" /\u003e\n   \u003c/component\u003e\n   \u003ccomponent name\u003d\"ProjectType\"\u003e"
        },
        {
          "file_name": "app/app-release.apk"
        },
        {
          "file_name": "app/app.iml",
          "patch": "@@ -64,13 +64,6 @@\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/main/jni\" isTestSource\u003d\"false\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/main/rs\" isTestSource\u003d\"false\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/main/shaders\" isTestSource\u003d\"false\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/res\" type\u003d\"java-test-resource\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/assets\" type\u003d\"java-test-resource\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/aidl\" isTestSource\u003d\"true\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/java\" isTestSource\u003d\"true\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/jni\" isTestSource\u003d\"true\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/rs\" isTestSource\u003d\"true\" /\u003e\n-      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/shaders\" isTestSource\u003d\"true\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/res\" type\u003d\"java-test-resource\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/resources\" type\u003d\"java-test-resource\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/assets\" type\u003d\"java-test-resource\" /\u003e\n@@ -79,6 +72,13 @@\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/jni\" isTestSource\u003d\"true\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/rs\" isTestSource\u003d\"true\" /\u003e\n       \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/test/shaders\" isTestSource\u003d\"true\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/res\" type\u003d\"java-test-resource\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/assets\" type\u003d\"java-test-resource\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/aidl\" isTestSource\u003d\"true\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/java\" isTestSource\u003d\"true\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/jni\" isTestSource\u003d\"true\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/rs\" isTestSource\u003d\"true\" /\u003e\n+      \u003csourceFolder url\u003d\"file://$MODULE_DIR$/src/androidTest/shaders\" isTestSource\u003d\"true\" /\u003e\n       \u003cexcludeFolder url\u003d\"file://$MODULE_DIR$/build/intermediates/assets\" /\u003e\n       \u003cexcludeFolder url\u003d\"file://$MODULE_DIR$/build/intermediates/blame\" /\u003e\n       \u003cexcludeFolder url\u003d\"file://$MODULE_DIR$/build/intermediates/bundles\" /\u003e\n@@ -134,19 +134,19 @@\n     \u003corderEntry type\u003d\"jdk\" jdkName\u003d\"Android API 24 Platform\" jdkType\u003d\"Android SDK\" /\u003e\n     \u003corderEntry type\u003d\"sourceFolder\" forTests\u003d\"false\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"backport-util-concurrent-3.1\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"xercesMinimal-1.9.6.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-profile-2.2.1\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"xercesMinimal-1.9.6.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"support-compat-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"support-v4-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"runner-0.5\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-settings-2.2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"hamcrest-library-1.3\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"accessibility-test-framework-2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-commons-5.0.1\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"accessibility-test-framework-2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"play-services-base-8.4.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"customtabs-24.2.0\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"wagon-http-lightweight-1.0-beta-6\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"nekohtml-1.9.6.2\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"wagon-http-lightweight-1.0-beta-6\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"support-fragment-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-5.0.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-repository-metadata-2.2.1\" level\u003d\"project\" /\u003e\n@@ -169,15 +169,15 @@\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"materialish-progress-1.5\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"robolectric-3.1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"leanback-v17-24.2.0\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-tree-5.0.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"sqlite4java-0.282\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-tree-5.0.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-project-2.2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"settingsmanager-common-1.2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"plexus-container-default-1.0-alpha-9-stable-1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"plexus-interpolation-1.11\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"shadows-core-v23-3.1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-artifact-manager-2.2.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"classworlds-1.1-alpha-2\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"shadows-core-v23-3.1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"answers-1.3.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"maven-ant-tasks-2.1.3\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"ant-1.8.0\" level\u003d\"project\" /\u003e\n@@ -191,8 +191,8 @@\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"wagon-file-1.0-beta-6\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"animated-vector-drawable-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"settingsmanager-1.3.5\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"xstream-1.4.8\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"wagon-provider-api-1.0-beta-6\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"xstream-1.4.8\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-util-5.0.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"bcprov-jdk16-1.46\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"core-0.9.0.1\" level\u003d\"project\" /\u003e\n@@ -213,8 +213,8 @@\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"asm-analysis-5.0.1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"robolectric-resources-3.1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"protobuf-java-2.6.1\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"hamcrest-core-1.3\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"vtd-xml-2.11\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"hamcrest-core-1.3\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"junit-4.12\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"play-services-basement-8.4.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"module\" module-name\u003d\"plugins\" exported\u003d\"\" /\u003e"
        },
        {
          "file_name": "app/build.gradle",
          "patch": "@@ -23,8 +23,8 @@ android {\n         applicationId \"com.felkertech.n.cumulustv\"\n         minSdkVersion 21\n         targetSdkVersion 24\n-        versionCode 45\n-        versionName \"1.6.0.1.dogfood\"\n+        versionCode 46\n+        versionName \u00271.6.0\u0027\n         testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n     signingConfigs {"
        },
        {
          "file_name": "app/src/main/java/com/felkertech/n/ActivityUtils.java",
          "patch": "@@ -640,15 +640,12 @@ public static void openAbout(final Activity activity) {\n                         @Override\n                         public void onPositive(MaterialDialog dialog) {\n                             super.onPositive(dialog);\n-                            /*Intent gi \u003d new Intent(Intent.ACTION_VIEW);\n-                            gi.setData(Uri.parse(\"http://cumulustv.herokuapp.com\"));\n-                            mActivity.startActivity(gi);*/\n                             String url \u003d activity.getString(R.string.website_url);\n                             CustomTabsIntent.Builder builder \u003d new CustomTabsIntent.Builder();\n                             CustomTabsIntent customTabsIntent \u003d builder.build();\n                             try {\n                                 customTabsIntent.launchUrl(activity, Uri.parse(url));\n-                            } catch (ActivityNotFoundException e) {\n+                            } catch (Exception e) {\n                                 // There is no way to view the website.\n                                 activity.startActivity(new Intent(activity,\n                                         HomepageWebViewActivity.class));"
        },
        {
          "file_name": "app/src/main/java/com/felkertech/n/cumulustv/CumulusTvService.java",
          "patch": "@@ -67,7 +67,7 @@\n     private CaptioningManager mCaptioningManager;\n     private JsonChannel jsonChannel;\n     private boolean stillTuning;\n-    private HashMap\u003cString, XmlTvParser.TvListing\u003e epgData;\n+    private static HashMap\u003cString, XmlTvParser.TvListing\u003e epgData;\n \n     @Override\n     public void onCreate() {\n@@ -90,7 +90,7 @@ public void onCreate() {\n     @Override\n     public void performCustomSync(final SyncAdapter syncAdapter, String inputId) {\n         new EpgDataSyncThread(syncAdapter.getContext()).start();\n-        syncAdapter.performCustomSync(this, inputId);\n+        syncAdapter.performSync(this, inputId);\n     }\n \n     @Override\n@@ -391,6 +391,7 @@ public Session onCreateSession(String inputId) {\n         simpleSession.setOverlayViewEnabled(true);\n         return simpleSession;\n     }\n+\n     private final class EpgDataSyncThread extends Thread {\n         private Context mContext;\n \n@@ -402,6 +403,7 @@ public Session onCreateSession(String inputId) {\n         @Override\n         public void run() {\n             super.run();\n+            epgData \u003d new HashMap\u003c\u003e();\n             ChannelDatabase cdn \u003d ChannelDatabase.getInstance(mContext);\n             try {\n                 List\u003cJsonChannel\u003e channels \u003d cdn.getJsonChannels();"
        },
        {
          "file_name": "app/src/main/java/com/felkertech/n/cumulustv/activities/CumulusChannelsSetup.java",
          "patch": "@@ -115,15 +115,16 @@ public void handleMessage(Message msg) {\n         i.sendEmptyMessageDelayed(0, (SETUP_DURATION - SETUP_UI_LAST) / channels.length);\n \n         String[] projection \u003d {TvContract.Channels.COLUMN_DISPLAY_NUMBER,\n-                TvContract.Channels.COLUMN_DISPLAY_NAME, TvContract.Channels._ID};\n+                TvContract.Channels.COLUMN_DISPLAY_NAME, TvContract.Channels._ID,\n+                TvContract.Channels.COLUMN_INTERNAL_PROVIDER_DATA};\n         //Now look up this channel in the DB\n         try (Cursor cursor \u003d\n                      getContentResolver().query(TvContract.buildChannelsUriForInput(null),\n                              projection, null, null, null)) {\n             if (cursor \u003d\u003d null || cursor.getCount() \u003d\u003d 0) {\n                 return;\n             }\n-            while(cursor.moveToNext()) {\n+            while (cursor.moveToNext()) {\n                 if (DEBUG) {\n                     Log.d(TAG, \"Tune to \" +\n                             cursor.getString(cursor.getColumnIndex("
        },
        {
          "file_name": "app/src/main/res/layout/activity_main.xml",
          "patch": "@@ -25,7 +25,7 @@\n         android:id\u003d\"@+id/view\"/\u003e\n     \u003cButton android:text\u003d\"Sync files with Google Drive\" android:layout_width\u003d\"match_parent\"\n         android:layout_height\u003d\"wrap_content\"\n-        android:layout_below\u003d\"@+id/gotoapp\"\n+        android:layout_below\u003d\"@+id/view\"\n         style\u003d\"@style/main_button\"\n         android:id\u003d\"@+id/gdrive\"/\u003e\n     \u003cButton android:text\u003d\"More...\" android:layout_width\u003d\"match_parent\""
        },
        {
          "file_name": "build/intermediates/dex-cache/cache.xml",
          "patch": "@@ -1,3 +1,292 @@\n \u003c?xml version\u003d\"1.0\" encoding\u003d\"utf-8\"?\u003e\n-\u003citems version\u003d\"2\" /\u003e\n+\u003citems version\u003d\"2\" \u003e\n \n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.google.android.exoplayer\\exoplayer\\r1.5.7\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"f156a33c2991564977dc8514b709d8cbd1d43adc\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.google.android.exoplayer-exoplayer-r1.5.7_62dfe11cce3469db9d00319cd980a7c10a1187ec.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-core-ui\\24.2.0\\jars\\libs\\internal_impl-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"6e02e34594ebe9c0501ffda8dd48497f81b82977\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\internal_impl-24.2.0_2b1ae974424cc46c159b13d0774b9a6ebed6444a.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\appcompat-v7\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"c3c638be6e650b165ab9ae144857b64e82787fad\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-appcompat-v7-24.2.0_0c6bfad2a88f94c2ddcbedd0d146d26527475ac1.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\CumulusTV\\plugins\\unspecified\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"8aa90ab784f5e9cf627393a52088155480492be3\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\CumulusTV-plugins-unspecified_025e76d15336f11b6982e434112554e9d122bab0.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.pnikosis\\materialish-progress\\1.5\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"75c54c470e19b251749e6e6c2cf3d73c0b50aa64\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.pnikosis-materialish-progress-1.5_11214eaea822e5038ba880247ef20b557a9c4631.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\io.fabric.sdk.android\\fabric\\1.3.5\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"6e65060ef2ec6ec98365250d2119d7968626fd3f\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\io.fabric.sdk.android-fabric-1.3.5_84576cff3bc936797befb4976a811018253b71df.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-core-utils\\24.2.0\\jars\\libs\\internal_impl-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"60d7b23621d31e6f42f4f76f16af467e57a20cda\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\internal_impl-24.2.0_d94e7a9e93b8c87901182efe94c55c1be187ca0a.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\AppData\\Local\\Android\\sdk\\extras\\android\\m2repository\\com\\android\\support\\support-annotations\\24.2.0\\support-annotations-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"6be858a75633b1f0a2d24cad740db57775cb6871\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\support-annotations-24.2.0_b7b3e439ef5ff981a7940147e2afe23262862e9b.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.google.android.gms\\play-services-basement\\8.4.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"8e673cdfadd8f2d98fdb2fda2285c30f6e449782\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.google.android.gms-play-services-basement-8.4.0_4ce7c9d9b4998b629ea5a5920ded49ad10f27a25.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-v4\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"45f5eda279825ff470e3f51019d374d1ef61e000\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-v4-24.2.0_f9ee1c57fba405b1b45c63c940c828de30f85e20.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\me.zhanghai.android.materialprogressbar\\library\\1.1.7\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"1478a113f04bf0b679037b4f6bd88bd1837b96a3\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\me.zhanghai.android.materialprogressbar-library-1.1.7_1936a05b56c33f28de720279ea87343241c156e0.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-media-compat\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"6eb9107eb34d2fe2b020662b7fbbec991dcba846\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-media-compat-24.2.0_df548b782996e8f13fdb602cd1a35db905b7e1d0.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.crashlytics.sdk.android\\beta\\1.1.3\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"b7a78990c10481f43cb4909f535ef4f11e60f1ab\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.crashlytics.sdk.android-beta-1.1.3_aa8f7f0af3bf343a981d0acb365220d9794e75d0.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-fragment\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"d8bd2268fdcbfd52c76ade65d9900cd8def93a44\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-fragment-24.2.0_180567b1df8d04e1e45cfe1f5d657fef197d3723.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-media-compat\\24.2.0\\jars\\libs\\internal_impl-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"045be695d968dd707691cc55d23746dbf8cf569a\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\internal_impl-24.2.0_a983dfc586d4b7c3ce509c9d05611f044a5972bb.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\customtabs\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"f3bb74fd640171dc9bfd89d886d2463f43dac5a8\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-customtabs-24.2.0_6228053b163e6ed4bc8971d09319d19211f02c0e.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\.gradle\\caches\\modules-2\\files-2.1\\com.squareup.okio\\okio\\1.4.0\\5b72bf48563ea8410e650de14aa33ff69a3e8c35\\okio-1.4.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"5b72bf48563ea8410e650de14aa33ff69a3e8c35\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\okio-1.4.0_5375cd55cd1229c92869d7b4f65aa9a6b082029d.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.afollestad.material-dialogs\\core\\0.9.0.1\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"b5dd5ce94ed1c747c43710b9f13266f7b0631356\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.afollestad.material-dialogs-core-0.9.0.1_3028700c705dafe0c431cba917af7f364c468c92.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-core-ui\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"c84e216d9bf618464d6b9564d71d9a656433e7c4\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-core-ui-24.2.0_d0bd5eda251eb6b5bb161a28bd3bbc9f829b4d6c.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.crashlytics.sdk.android\\crashlytics-core\\2.3.4\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"467417b1695583fbaee8de0e5f4202b6a2b578e1\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.crashlytics.sdk.android-crashlytics-core-2.3.4_63b5b8713aa8ba6ed3fd7927560099ff5cae80d7.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\palette-v7\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"1ac5b6d36ed6d2e0b6b6e6909bc4e1fb86cf1923\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-palette-v7-24.2.0_57430d69d3c20e645dd5f6d8c04920c7b289c44a.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.google.android.gms\\play-services-drive\\8.4.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"b36f30ac5ee5d5214f4b1e2ac49f11889d58e71a\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.google.android.gms-play-services-drive-8.4.0_d2c90876c19e5bef1ea5b09c48278fce898fe761.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\leanback-v17\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"abe4c00e49b5f739b096d316938d51091a1fa396\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-leanback-v17-24.2.0_f44d617e0e3d480cf8e95ff2a58cc0979be71926.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.fleker\\settingsmanager\\1.3.5\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"50ce22b7e4bbbf49900f49bb9f1d90432f8d629d\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.fleker-settingsmanager-1.3.5_3eb1df0c6fb0f508614672233559ff224a8067e9.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-fragment\\24.2.0\\jars\\libs\\internal_impl-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"032a4b53def5e2ceedfc2e793b126c0163cfa1dd\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\internal_impl-24.2.0_6685a913b040c3bac9bad5784c57c7d771a0c6f5.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.paolorotolo\\appintro\\3.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"88a6346382185deaeb9e3cc7d89717bc67d2fb16\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.paolorotolo-appintro-3.2.0_d447834dc2b952059609f09b7fbd055741afbd4c.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-compat\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"f9b41622897665678d31d78e57a361cb0cebcb0d\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-compat-24.2.0_4e35884d0865030d4bf472a443fd57d9468a02ae.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.fleker\\settingsmanager-common\\1.2.1\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"ca75c062ed024385befef143a03e158bcdf86f59\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.fleker-settingsmanager-common-1.2.1_5b091d7fa902d4e8ec53acd85718d41c31e20011.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-compat\\24.2.0\\jars\\libs\\internal_impl-24.2.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"771b3cc0e597b54da25f8086ba73180c59c6bc71\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\internal_impl-24.2.0_2d83743e55b47772e635d4b3af62894ab6818ca0.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\.gradle\\caches\\modules-2\\files-2.1\\com.squareup.okhttp\\okhttp\\2.4.0\\40340c0748190fe897baf7bffbc1b282734294e5\\okhttp-2.4.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"40340c0748190fe897baf7bffbc1b282734294e5\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\okhttp-2.4.0_87a8e5b02e552b88ff1bb57ffa725646bb909a43.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.crashlytics.sdk.android\\crashlytics\\2.5.1\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"2b1fb39b3c4feeb031b00744fbbe464e3d31a88d\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.crashlytics.sdk.android-crashlytics-2.5.1_5a2b668bbb45b1b58dc07a74376c98085a81ede9.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\.gradle\\caches\\modules-2\\files-2.1\\com.squareup.picasso\\picasso\\2.5.2\\7446d06ec8d4f7ffcc53f1da37c95f200dcb9387\\picasso-2.5.2.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"7446d06ec8d4f7ffcc53f1da37c95f200dcb9387\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\picasso-2.5.2_8e562cd28b0faa805d07187ca3f3672ff9dbbc0f.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-vector-drawable\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"beac40bcc8a320a896dd15f5109cfcaea5e1e0e3\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-vector-drawable-24.2.0_11b86c17dcb844b7345df72e4af6d77f114f2d50.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.afollestad.material-dialogs\\commons\\0.9.0.1\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"a6d8141e9d6c5c7184730e4bc84ad18169211add\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.afollestad.material-dialogs-commons-0.9.0.1_0c2b2d7e516034682b4267a6693b0466535a6970.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\animated-vector-drawable\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"f3ee23ef25c9a8fe3d40246d0b7097267963a612\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-animated-vector-drawable-24.2.0_730042107419a5348d9c089eabc7f0f366cfc7c8.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.github.fleker\\channelsurfer\\0.2.18\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"a178a4a6e44c65f177dbb8a646d1996507b5f8fa\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.github.fleker-channelsurfer-0.2.18_409c202919daa4e2027cb57890e9e6ecdfc4c61c.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\.gradle\\caches\\modules-2\\files-2.1\\com.github.bumptech.glide\\glide\\3.4.0\\82552712133e094bbb565289fb2bc2d2952ba551\\glide-3.4.0.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"82552712133e094bbb565289fb2bc2d2952ba551\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\glide-3.4.0_cdfa03dda7688b54df6db71458d1c5c919fbf05d.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.google.android.gms\\play-services-base\\8.4.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"fef2b3e4b6b1b0e5fe7b69fa137a5fa55a3182ab\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.google.android.gms-play-services-base-8.4.0_3629c70696ccb7a63f5e98a1b4698cf2ccec61d9.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\recyclerview-v7\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"c755536e5a100d9c76c8ea0b72f76c018f7a9de2\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-recyclerview-v7-24.2.0_ed0bc5dd619d50274ac235a3e2d5c5166aaede16.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.crashlytics.sdk.android\\answers\\1.3.1\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"441ace5a20e7fcf94f30b4394d882ed2f79237c3\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.crashlytics.sdk.android-answers-1.3.1_05877bd3fff75835032a4ea76d19d94d214fea8c.jar\" /\u003e\n+    \u003c/item\u003e\n+    \u003citem\n+        jar\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\exploded-aar\\com.android.support\\support-core-utils\\24.2.0\\jars\\classes.jar\"\n+        jumboMode\u003d\"false\"\n+        revision\u003d\"22.0.1\"\n+        sha1\u003d\"fcc945a86ebcbf527429acb8216ec7dae2c06417\"\u003e\n+        \u003cdex dex\u003d\"C:\\Users\\Nick\\Development\\CumulusTV\\app\\build\\intermediates\\pre-dexed\\release\\com.android.support-support-core-utils-24.2.0_aabb472eb295269abda04fd5ded6d0a4afe34f34.jar\" /\u003e\n+    \u003c/item\u003e\n+\n+\u003c/items\u003e"
        },
        {
          "file_name": "plugins/plugins.iml",
          "patch": "@@ -113,8 +113,8 @@\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"rules-0.5\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"support-core-ui-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"support-core-utils-24.2.0\" level\u003d\"project\" /\u003e\n-    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"javax.annotation-api-1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"hamcrest-library-1.3\" level\u003d\"project\" /\u003e\n+    \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"javax.annotation-api-1.2\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" name\u003d\"appcompat-v7-24.2.0\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"javax.inject-1\" level\u003d\"project\" /\u003e\n     \u003corderEntry type\u003d\"library\" exported\u003d\"\" scope\u003d\"TEST\" name\u003d\"hamcrest-integration-1.3\" level\u003d\"project\" /\u003e"
        },
        {
          "file_name": "store/screenshots/device-2016-09-04-141020.png"
        }
      ]
    }
  },
  {
    "name": "Memory leak on netty bitebuf",
    "url": "https://github.com/tonivade/resp-server/issues/3",
    "description": "Using version 0.3.0 on tinydb, there are some errors in logs related to a leak\n\n```\njun 25, 2016 11:27:26 AM io.netty.util.ResourceLeakDetector reportLeak\nGRAVE: LEAK: ByteBuf.release() was not called before it\u0027s garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\nRecent access records: 2\n#2:\n    io.netty.buffer.AdvancedLeakAwareByteBuf.nioBuffer(AdvancedLeakAwareByteBuf.java:689)\n    tonivade.redis.protocol.RedisDecoder.readBytes(RedisDecoder.java:40)\n    tonivade.redis.protocol.RedisDecoder.readString(RedisDecoder.java:34)\n    tonivade.redis.protocol.RedisDecoder.readLine(RedisDecoder.java:30)\n    tonivade.redis.protocol.RedisDecoder.access$100(RedisDecoder.java:14)\n    tonivade.redis.protocol.RedisDecoder$1.readLine(RedisDecoder.java:60)\n    tonivade.redis.protocol.RedisParser.parse(RedisParser.java:35)\n    tonivade.redis.protocol.RedisDecoder.parseResponse(RedisDecoder.java:64)\n    tonivade.redis.protocol.RedisDecoder.decode(RedisDecoder.java:24)\n    io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\n    io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:321)\n    io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1280)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:890)\n    io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:564)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:505)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:419)\n    io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:391)\n    io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:145)\n    java.lang.Thread.run(Thread.java:745)\n#1:\n    io.netty.buffer.AdvancedLeakAwareByteBuf.writeBytes(AdvancedLeakAwareByteBuf.java:581)\n    io.netty.buffer.AbstractByteBuf.readBytes(AbstractByteBuf.java:678)\n    io.netty.handler.codec.ReplayingDecoderByteBuf.readBytes(ReplayingDecoderByteBuf.java:522)\n    tonivade.redis.protocol.RedisDecoder.readBytes(RedisDecoder.java:40)\n    tonivade.redis.protocol.RedisDecoder.readString(RedisDecoder.java:34)\n    tonivade.redis.protocol.RedisDecoder.readLine(RedisDecoder.java:30)\n    tonivade.redis.protocol.RedisDecoder.access$100(RedisDecoder.java:14)\n    tonivade.redis.protocol.RedisDecoder$1.readLine(RedisDecoder.java:60)\n    tonivade.redis.protocol.RedisParser.parse(RedisParser.java:35)\n    tonivade.redis.protocol.RedisDecoder.parseResponse(RedisDecoder.java:64)\n    tonivade.redis.protocol.RedisDecoder.decode(RedisDecoder.java:24)\n    io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\n    io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:321)\n    io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1280)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:890)\n    io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:564)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:505)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:419)\n    io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:391)\n    io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:145)\n    java.lang.Thread.run(Thread.java:745)\nCreated at:\n    io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:280)\n    io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:177)\n    io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:113)\n    io.netty.buffer.AbstractByteBuf.readBytes(AbstractByteBuf.java:677)\n    io.netty.handler.codec.ReplayingDecoderByteBuf.readBytes(ReplayingDecoderByteBuf.java:522)\n    tonivade.redis.protocol.RedisDecoder.readBytes(RedisDecoder.java:40)\n    tonivade.redis.protocol.RedisDecoder.readString(RedisDecoder.java:34)\n    tonivade.redis.protocol.RedisDecoder.readLine(RedisDecoder.java:30)\n    tonivade.redis.protocol.RedisDecoder.access$100(RedisDecoder.java:14)\n    tonivade.redis.protocol.RedisDecoder$1.readLine(RedisDecoder.java:60)\n    tonivade.redis.protocol.RedisParser.parse(RedisParser.java:35)\n    tonivade.redis.protocol.RedisDecoder.parseResponse(RedisDecoder.java:64)\n    tonivade.redis.protocol.RedisDecoder.decode(RedisDecoder.java:24)\n    io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\n    io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:321)\n    io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1280)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n    io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:328)\n    io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:890)\n    io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:564)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:505)\n    io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:419)\n    io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:391)\n    io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:145)\n    java.lang.Thread.run(Thread.java:745)\n```\n",
    "keywords": [
      "handler",
      "bytetomessagedecoder",
      "replayingdecoder",
      "replayingdecoderbytebuf",
      "abstractniobytechannel$niobyteunsafe",
      "channel",
      "run",
      "abstractniobytechannel",
      "decode",
      "redis",
      "java:64",
      "netty channel",
      "advancedleakawarebytebuf",
      "protocol",
      "java",
      "java:60",
      "firechannelread",
      "nio",
      "java:248",
      "netty handler",
      "util concurrent",
      "java:367",
      "calldecode",
      "buffer",
      "java:321",
      "java:24",
      "java:564",
      "redis protocol",
      "read",
      "java:1280",
      "redisparser",
      "io",
      "java:328",
      "tonivade redis",
      "defaultchannelpipeline",
      "java:328 io",
      "nio nioeventloop",
      "java:131",
      "codec",
      "java:890",
      "singlethreadeventexecutor",
      "abstractchannelhandlercontext invokechannelread",
      "java:30",
      "util",
      "abstractbytebuf",
      "abstractchannelhandlercontext",
      "singlethreadeventexecutor$2",
      "protocol redisdecoder",
      "channel abstractchannelhandlercontext",
      "abstractbytebufallocator",
      "java:35",
      "handler codec",
      "java:34",
      "java:419",
      "invokechannelread",
      "redisdecoder",
      "channel nio",
      "concurrent",
      "processselectedkey",
      "defaultthreadfactory",
      "nioeventloop",
      "leak",
      "java:40",
      "processselectedkeysoptimized",
      "netty buffer",
      "defaultthreadfactory$defaultrunnabledecorator",
      "invokechannelread abstractchannelhandlercontext",
      "parseresponse",
      "readbytes",
      "lang",
      "java:145",
      "netty util",
      "java:342",
      "netty",
      "readline",
      "java:505",
      "access$100",
      "java:745",
      "processselectedkeys",
      "defaultchannelpipeline$headcontext",
      "thread",
      "parse",
      "redisdecoder$1",
      "tonivade",
      "readstring",
      "io netty",
      "abstractchannelhandlercontext java:342",
      "java:391",
      "java:112",
      "channelread",
      "java:14"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/tonivade/resp-server/commit/818c5fa4507dd2af38e3088ecd7e14a85cbc7bcd",
      "files": [
        {
          "file_name": "src/main/java/tonivade/redis/protocol/RedisDecoder.java",
          "patch": "@@ -37,12 +37,7 @@ private SafeString readString(ByteBuf buffer, int size) {\n     }\n \n     private SafeString readBytes(ByteBuf buffer, int size) {\n-        ByteBuf readedBytes \u003d buffer.readBytes(size);\n-        try {\n-        \treturn new SafeString(readedBytes.nioBuffer());\n-        } finally {\n-        \treadedBytes.release();\n-        }\n+        return new SafeString(buffer.readSlice(size).nioBuffer());\n     }\n \n     private static int findEndOfLine(final ByteBuf buffer) {"
        }
      ]
    }
  },
  {
    "name": "memory-leak in Baulasteditor",
    "url": "https://github.com/cismet/cids-custom-wuppertal/issues/261",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/cismet/cids-custom-wuppertal/commit/4b91086ed53e1253babe2998fc5c708b62764af3",
      "files": [
        {
          "file_name": "src/main/java/de/cismet/cids/custom/objecteditors/wunda_blau/Alb_baulastEditor.java",
          "patch": "@@ -559,6 +559,7 @@ public Border getCenterrBorder() {\n      */\n     @Override\n     public void dispose() {\n+        bindingGroup.unbind();\n         panMain.dispose();\n         alb_picturePanel.dispose();\n     }"
        },
        {
          "file_name": "src/main/java/de/cismet/cids/custom/objecteditors/wunda_blau/Alb_baulastEditorPanel.java",
          "patch": "@@ -32,6 +32,7 @@\n import org.jfree.util.Log;\n \n import org.openide.util.Exceptions;\n+import org.openide.util.WeakListeners;\n \n import java.awt.Color;\n import java.awt.Component;\n@@ -50,8 +51,8 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.GregorianCalendar;\n-import java.util.HashMap;\n import java.util.List;\n+import java.util.WeakHashMap;\n import java.util.concurrent.ExecutionException;\n \n import javax.swing.ComboBoxModel;\n@@ -118,7 +119,7 @@ public Date convertReverse(final String value) {\n \n     //~ Instance fields --------------------------------------------------------\n \n-    final PropertyChangeListener listener \u003d new CidsBeanListener();\n+    PropertyChangeListener listener;\n     private CidsBean cidsBean;\n     private Collection\u003cMetaObject\u003e allSelectedObjects;\n     private final boolean editable;\n@@ -130,7 +131,7 @@ public Date convertReverse(final String value) {\n     private Object oldGeprueft_Von;\n     private Object oldPruefdatum;\n     private Object oldPruefkommentar;\n-    private final HashMap\u003cCidsBean, String\u003e propStringMap \u003d new HashMap\u003cCidsBean, String\u003e();\n+    private final WeakHashMap\u003cCidsBean, String\u003e propStringMap \u003d new WeakHashMap\u003cCidsBean, String\u003e();\n     // Variables declaration - do not modify//GEN-BEGIN:variables\n     private de.cismet.cids.editors.DefaultBindableDateChooser bdcBefristungsdatum;\n     private de.cismet.cids.editors.DefaultBindableDateChooser bdcEintragungsdatum;\n@@ -949,22 +950,22 @@ public String getRepresentation() {\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnAddBelastetActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnAddBelastetActionPerformed\n+    private void btnAddBelastetActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBelastetActionPerformed\n         fsDialoge.setCurrentListToAdd(CidsBeanSupport.getBeanCollectionFromProperty(cidsBean, \"flurstuecke_belastet\"));\n         handleAddFlurstueck(true);\n-    }                                                                                  //GEN-LAST:event_btnAddBelastetActionPerformed\n+    }//GEN-LAST:event_btnAddBelastetActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnAddBeguenstigtActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnAddBeguenstigtActionPerformed\n+    private void btnAddBeguenstigtActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBeguenstigtActionPerformed\n         fsDialoge.setCurrentListToAdd(CidsBeanSupport.getBeanCollectionFromProperty(\n                 cidsBean,\n                 \"flurstuecke_beguenstigt\"));\n         handleAddFlurstueck(false);\n-    }                                                                                     //GEN-LAST:event_btnAddBeguenstigtActionPerformed\n+    }//GEN-LAST:event_btnAddBeguenstigtActionPerformed\n \n     /**\n      * DOCUMENT ME!\n@@ -988,7 +989,7 @@ private void handleAddFlurstueck(final boolean belastet) {\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnRemoveBeguenstigtActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnRemoveBeguenstigtActionPerformed\n+    private void btnRemoveBeguenstigtActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBeguenstigtActionPerformed\n         final Object[] selection \u003d lstFlurstueckeBeguenstigt.getSelectedValues();\n         if ((selection !\u003d null) \u0026\u0026 (selection.length \u003e 0)) {\n             final int answer \u003d JOptionPane.showConfirmDialog(\n@@ -1011,14 +1012,14 @@ private void btnRemoveBeguenstigtActionPerformed(final java.awt.event.ActionEven\n                 }\n             }\n         }\n-    }                                                                                        //GEN-LAST:event_btnRemoveBeguenstigtActionPerformed\n+    }//GEN-LAST:event_btnRemoveBeguenstigtActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnRemoveBelastetActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnRemoveBelastetActionPerformed\n+    private void btnRemoveBelastetActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBelastetActionPerformed\n         final Object[] selection \u003d lstFlurstueckeBelastet.getSelectedValues();\n         if ((selection !\u003d null) \u0026\u0026 (selection.length \u003e 0)) {\n             final int answer \u003d JOptionPane.showConfirmDialog(\n@@ -1041,27 +1042,27 @@ private void btnRemoveBelastetActionPerformed(final java.awt.event.ActionEvent e\n                 }\n             }\n         }\n-    }                                                                                     //GEN-LAST:event_btnRemoveBelastetActionPerformed\n+    }//GEN-LAST:event_btnRemoveBelastetActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnAddArtActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnAddArtActionPerformed\n+    private void btnAddArtActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddArtActionPerformed\n         if (!baulastArtenListInitialized) {\n             CismetThreadPool.execute(new BaulastArtenComboModelWorker());\n         }\n \n         StaticSwingTools.showDialog(StaticSwingTools.getParentFrame(this), dlgAddBaulastArt, true);\n-    } //GEN-LAST:event_btnAddArtActionPerformed\n+    }//GEN-LAST:event_btnAddArtActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnRemoveArtActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnRemoveArtActionPerformed\n+    private void btnRemoveArtActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveArtActionPerformed\n         final Object[] selection \u003d lstBaulastArt.getSelectedValues();\n         if ((selection !\u003d null) \u0026\u0026 (selection.length \u003e 0)) {\n             final int answer \u003d JOptionPane.showConfirmDialog(\n@@ -1082,23 +1083,23 @@ private void btnRemoveArtActionPerformed(final java.awt.event.ActionEvent evt) {\n                 }\n             }\n         }\n-    }                                                                                //GEN-LAST:event_btnRemoveArtActionPerformed\n+    }//GEN-LAST:event_btnRemoveArtActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnMenAbort1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnMenAbort1ActionPerformed\n+    private void btnMenAbort1ActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenAbort1ActionPerformed\n         dlgAddBaulastArt.setVisible(false);\n-    }                                                                                //GEN-LAST:event_btnMenAbort1ActionPerformed\n+    }//GEN-LAST:event_btnMenAbort1ActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void btnMenOk1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnMenOk1ActionPerformed\n+    private void btnMenOk1ActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenOk1ActionPerformed\n         final Object selection \u003d cbBaulastArt.getSelectedItem();\n         if (selection instanceof LightweightMetaObject) {\n             final CidsBean selectedBean \u003d ((LightweightMetaObject)selection).getBean();\n@@ -1110,48 +1111,48 @@ private void btnMenOk1ActionPerformed(final java.awt.event.ActionEvent evt) { //\n             }\n         }\n         dlgAddBaulastArt.setVisible(false);\n-    }                                                                             //GEN-LAST:event_btnMenOk1ActionPerformed\n+    }//GEN-LAST:event_btnMenOk1ActionPerformed\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void lstFlurstueckeBelastetMouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_lstFlurstueckeBelastetMouseClicked\n+    private void lstFlurstueckeBelastetMouseClicked(final java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFlurstueckeBelastetMouseClicked\n         if (evt.getClickCount() \u003e 1) {\n             handleJumpToListeSelectionBean(lstFlurstueckeBelastet);\n         }\n-    }                                                                                      //GEN-LAST:event_lstFlurstueckeBelastetMouseClicked\n+    }//GEN-LAST:event_lstFlurstueckeBelastetMouseClicked\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void lstFlurstueckeBeguenstigtMouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_lstFlurstueckeBeguenstigtMouseClicked\n+    private void lstFlurstueckeBeguenstigtMouseClicked(final java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFlurstueckeBeguenstigtMouseClicked\n         if (evt.getClickCount() \u003e 1) {\n             handleJumpToListeSelectionBean(lstFlurstueckeBeguenstigt);\n         }\n-    }                                                                                         //GEN-LAST:event_lstFlurstueckeBeguenstigtMouseClicked\n+    }//GEN-LAST:event_lstFlurstueckeBeguenstigtMouseClicked\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void lblLastInMapMouseClicked(final java.awt.event.MouseEvent evt) { //GEN-FIRST:event_lblLastInMapMouseClicked\n+    private void lblLastInMapMouseClicked(final java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLastInMapMouseClicked\n         ObjectRendererUtils.switchToCismapMap();\n         ObjectRendererUtils.addBeanGeomsAsFeaturesToCismapMap(allSelectedObjects, editable);\n-    }                                                                            //GEN-LAST:event_lblLastInMapMouseClicked\n+    }//GEN-LAST:event_lblLastInMapMouseClicked\n \n     /**\n      * DOCUMENT ME!\n      *\n      * @param  evt  DOCUMENT ME!\n      */\n-    private void bdcBefristungsdatumActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_bdcBefristungsdatumActionPerformed\n+    private void bdcBefristungsdatumActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdcBefristungsdatumActionPerformed\n         // TODO add your handling code here:\n-    } //GEN-LAST:event_bdcBefristungsdatumActionPerformed\n+    }//GEN-LAST:event_bdcBefristungsdatumActionPerformed\n \n     /**\n      * DOCUMENT ME!\n@@ -1204,9 +1205,6 @@ public void setCidsBean(final CidsBean cidsBean) {\n                 final Collection\u003cMetaObject\u003e selObj \u003d new ArrayList\u003cMetaObject\u003e(1);\n                 selObj.add(cidsBean.getMetaObject());\n                 setAllSelectedMetaObjects(selObj);\n-                if (this.cidsBean !\u003d null) {\n-                    this.cidsBean.removePropertyChangeListener(listener);\n-                }\n                 this.cidsBean \u003d cidsBean;\n                 List\u003cCidsBean\u003e landParcelCol \u003d CidsBeanSupport.getBeanCollectionFromProperty(\n                         cidsBean,\n@@ -1232,7 +1230,9 @@ public void setCidsBean(final CidsBean cidsBean) {\n                                 \u0026\u0026 propstring.equals(cidsBean.getMetaObject().getPropertyString());\n \n                     chkGeprueft.setEnabled(finalCheckEnable);\n-                    cidsBean.addPropertyChangeListener(listener);\n+                    cidsBean.addPropertyChangeListener(WeakListeners.propertyChange(\n+                            listener \u003d new CidsBeanListener(),\n+                            cidsBean));\n                 } else {\n                     final Object geprueftObj \u003d cidsBean.getProperty(\"geprueft\");\n                     if ((geprueftObj instanceof Boolean) \u0026\u0026 ((Boolean)geprueftObj)) {\n@@ -1287,12 +1287,10 @@ public void setCidsBean(final CidsBean cidsBean) {\n      */\n     @Override\n     public void dispose() {\n-        if (cidsBean !\u003d null) {\n-            cidsBean.removePropertyChangeListener(listener);\n-        }\n+        bindingGroup.unbind();\n+        listener \u003d null;\n         dlgAddBaulastArt.dispose();\n         fsDialoge.dispose();\n-        bindingGroup.unbind();\n     }\n \n     /**\n@@ -1390,9 +1388,11 @@ public void run() {\n                                         Exceptions.printStackTrace(ex);\n                                     }\n                                 } else {\n-                                    cidsBean.removePropertyChangeListener(listener);\n                                     chkGeprueft.setSelected(false);\n-                                    cidsBean.addPropertyChangeListener(listener);\n+                                    cidsBean.addPropertyChangeListener(\n+                                        WeakListeners.propertyChange(\n+                                            listener \u003d new CidsBeanListener(),\n+                                            cidsBean));\n                                 }\n                             }\n                         });"
        }
      ]
    }
  },
  {
    "name": "[bugfix] Memory leak: map constructor",
    "url": "https://github.com/eXist-db/exist/pull/1367",
    "description": "Analyzing a heap dump from one of @joewiz servers, I found another memory leak: the literal constructor for maps does not implement resetState for its subexpressions, so any data held in those expressions is not cleared.\r\n\r\nFix is quite simple: overwrite resetState and pass it on to all subexpressions.",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/eXist-db/exist/commit/ab7e17fcf0a110f3f01b42a948f327e15445e45c",
      "files": [
        {
          "file_name": "src/org/exist/xquery/functions/map/MapExpr.java",
          "patch": "@@ -76,13 +76,24 @@ public void dump(ExpressionDumper dumper) {\n         dumper.display(\"}\");\n     }\n \n+    @Override\n+    public void resetState(boolean postOptimization) {\n+        super.resetState(postOptimization);\n+        mappings.forEach(m -\u003e m.resetState(postOptimization));\n+    }\n+\n     private static class Mapping {\n-        Expression key;\n-        Expression value;\n+        final Expression key;\n+        final Expression value;\n \n         public Mapping(Expression key, Expression value) {\n             this.key \u003d key;\n             this.value \u003d value;\n         }\n+\n+        private void resetState(boolean postOptimization) {\n+            key.resetState(postOptimization);\n+            value.resetState(postOptimization);\n+        }\n     }\n }"
        }
      ]
    }
  },
  {
    "name": "Memory leak - context passed to TweetTimelineListAdapter.Builder()",
    "url": "https://github.com/twitter/twitter-kit-android/issues/55",
    "description": "Memory leak detection can be verified by adding Leak Canary library into project (https://github.com/square/leakcanary). It is easy to add, just one line of code in Application class.\n\nHere is stack returned by Leak Canary:\n\n```\nD/LeakCanary: * com.example.activities.SocialMediaActivity has leaked:\nD/LeakCanary: * GC ROOT static com.squareup.picasso.Picasso.singleton\nD/LeakCanary: * references com.squareup.picasso.Picasso.targetToDeferredRequestCreator\nD/LeakCanary: * references java.util.WeakHashMap.elementData\nD/LeakCanary: * references array java.util.WeakHashMap$Entry[].[12]\nD/LeakCanary: * references java.util.WeakHashMap$Entry.value\nD/LeakCanary: * references com.squareup.picasso.DeferredRequestCreator.callback\nD/LeakCanary: * references com.twitter.sdk.android.tweetui.BaseTweetView$PicassoCallback.this$0\nD/LeakCanary: * references com.twitter.sdk.android.tweetui.CompactTweetView.mContext\nD/LeakCanary: * leaks com.example.activities.SocialMediaActivity instance\n```\n\nI am adding UserTimeline as part of android.support.v4.app.Fragment that is a page in android.support.v4.view.ViewPager. Leaked Activity that holds ViewPager extends android.support.v7.app.AppCompatActivity. Leak is detected after calling SocialMediaActivity.onDestroy().\n\nHow I add timeline:\n\n```\nUserTimeline userTimeline \u003d new UserTimeline.Builder().screenName(mTwitterUserName).maxItemsPerRequest(3).build();\nTweetTimelineListAdapter adapter \u003d new TweetTimelineListAdapter.Builder(getActivity()).setTimeline(userTimeline).build();\nmListView.setAdapter(adapter);\n```\n\nAndroid 5.1.1 Nexus 4\n\n```\n+--- com.twitter.sdk.android:twitter:1.+ -\u003e 1.14.0\n|    +--- com.twitter.sdk.android:tweet-ui:1.11.0\n|    |    +--- io.fabric.sdk.android:fabric:1.3.12\n|    |    +--- com.twitter.sdk.android:twitter-core:1.7.0\n|    |    |    +--- com.squareup.retrofit:retrofit:1.8.0\n|    |    |    |    \\--- com.google.code.gson:gson:2.3 -\u003e 2.7\n|    |    |    +--- io.fabric.sdk.android:fabric:1.3.12\n|    |    |    \\--- com.google.code.gson:gson:2.4 -\u003e 2.7\n|    |    +--- com.android.support:support-v4:23.1.1 -\u003e 24.0.0 (*)\n|    |    \\--- com.squareup.picasso:picasso:2.5.2\n|    +--- io.fabric.sdk.android:fabric:1.3.12\n|    +--- com.digits.sdk.android:digits:1.11.0\n|    |    +--- io.fabric.sdk.android:fabric:1.3.12\n|    |    +--- com.twitter.sdk.android:twitter-core:1.7.0 (*)\n|    |    +--- com.crashlytics.sdk.android:answers-shim:0.0.3\n|    |    \\--- com.squareup.retrofit:retrofit-mock:1.8.0\n|    |         \\--- com.squareup.retrofit:retrofit:1.8.0 (*)\n|    +--- com.twitter.sdk.android:twitter-core:1.7.0 (*)\n|    \\--- com.twitter.sdk.android:tweet-composer:1.0.5\n|         +--- com.twitter:twitter-text:1.13.0\n|         +--- io.fabric.sdk.android:fabric:1.3.12\n|         \\--- com.squareup.picasso:picasso:2.5.2\n```\n\nI tried workaround by calling something like this in Fragment.onDestroy(), but it didn\u0027t work:\n\n```\nprivate void clearRequests(ViewGroup viewGroup) {\n    for (int i \u003d 0; i \u003c viewGroup.getChildCount(); i++) {\n        View item \u003d viewGroup.getChildAt(i);\n        if (item instanceof ViewGroup) {\n            clearRequests((ViewGroup) item);\n        } else if (item instanceof ImageView) {\n            Picasso.with(getContext()).cancelRequest((ImageView) item);\n        }\n    }\n}\n```\n\nIf I understand correctly there are some Picasso requests still being executed after activity have been destroyed. As a solution maybe add some tags to each Picasso request: `Picasso.with(getContext()).load(url).tag(tag).into(imageView);` so they can be cancelled by Picasso.cancelTag(Object tag), e.g. for TweetTimelineListAdapter it might be UserTimeline object and you can add TweetTimelineListAdapter.cancelImageRequests() method thath could be called in onDestroy. If it won\u0027t help with memory leak it will at least help save some transfer - downloading pictures that will never be shown to user because parent activity have been destroyed;\n\nAs a side note please consider upgrading to Retrofit 2, so if someone is using up to date version of Retrofit, apk won\u0027t need to contain two versions of the same library.\n",
    "keywords": [
      "com",
      "squareup",
      "references",
      "0 |",
      "twitter",
      "java",
      "usertimeline",
      "+---",
      "squareup picasso",
      "tag",
      "\\---",
      "picasso",
      "add",
      "12",
      "item",
      "d/leakcanary",
      "io",
      "com twitter",
      "tweettimelinelistadapter",
      "\\--- com",
      "*",
      "0",
      "-\u003e",
      "1",
      "2",
      "3",
      "util",
      "5",
      "socialmediaactivity",
      "fabric",
      "imageview",
      "7",
      "8",
      "3 12",
      ";",
      "sdk",
      "support",
      "code",
      "memory",
      "activity",
      "sdk android:fabric:1",
      "android",
      "8 0",
      "leak",
      "io fabric",
      "can",
      "| +---",
      "viewgroup",
      "builder",
      "| |",
      "references com",
      "android:twitter-core:1",
      "d/leakcanary: *",
      "twitter sdk",
      "android:fabric:1",
      "ondestroy",
      "|",
      "+--- com"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/twitter/twitter-kit-android/commit/040617d62da784a74326f3d12ebdb8bbad203fc4",
      "files": [
        {
          "file_name": "tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java",
          "patch": "@@ -465,18 +465,6 @@ public void testScribePermalinkClick() {\n         verify(scribeClient).click(TestFixtures.TEST_TWEET, view.getViewTypeName());\n     }\n \n-    public void testSetErrorImage_handlesNullPicasso() {\n-        when(mockDependencyProvider.getImageLoader()).thenReturn(null);\n-        final BaseTweetView tweetView \u003d createViewWithMocks(context, TestFixtures.TEST_TWEET,\n-                R.style.tw__TweetDarkStyle, mockDependencyProvider);\n-\n-        try {\n-            tweetView.setErrorImage();\n-        } catch (NullPointerException e) {\n-            fail(\"Should have handled null error image\");\n-        }\n-    }\n-\n     public void testSetProfilePhotoView_handlesNullPicasso() {\n         when(mockDependencyProvider.getImageLoader()).thenReturn(null);\n "
        },
        {
          "file_name": "tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java",
          "patch": "@@ -48,6 +48,7 @@ public static Picasso mockPicasso(Picasso picasso, RequestCreator requestCreator\n         when(picasso.load(anyString())).thenReturn(requestCreator);\n         when(picasso.load(anyInt())).thenReturn(requestCreator);\n         when(requestCreator.centerCrop()).thenReturn(requestCreator);\n+        when(requestCreator.error(anyInt())).thenReturn(requestCreator);\n         when(requestCreator.fit()).thenReturn(requestCreator);\n         when(requestCreator.placeholder(any(Drawable.class)))\n                 .thenReturn(requestCreator);"
        },
        {
          "file_name": "tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java",
          "patch": "@@ -56,6 +56,7 @@\n import com.twitter.sdk.android.tweetui.internal.TweetMediaUtils;\n import com.twitter.sdk.android.tweetui.internal.TweetMediaView;\n \n+import java.lang.ref.WeakReference;\n import java.text.DateFormat;\n import java.util.Date;\n import java.util.Locale;\n@@ -810,10 +811,10 @@ void setMediaImage(String imagePath, double aspectRatio) {\n         mediaView.resetSize();\n         mediaView.setAspectRatio(aspectRatio);\n         imageLoader.load(imagePath)\n-                .placeholder(mediaBg)\n+                .error(photoErrorResId)\n                 .fit()\n                 .centerCrop()\n-                .into(mediaView, new PicassoCallback());\n+                .into(mediaView, new PicassoCallback(mediaView));\n     }\n \n     protected double getAspectRatio(MediaEntity photoEntity) {\n@@ -837,9 +838,9 @@ protected double getAspectRatio(ImageValue imageValue) {\n     protected void clearMediaView() {\n         // Clear out the background behind any potential error images that we had\n         if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.JELLY_BEAN) {\n-            mediaView.setBackground(null);\n+            mediaView.setBackground(mediaBg);\n         } else {\n-            mediaView.setBackgroundDrawable(null);\n+            mediaView.setBackgroundDrawable(mediaBg);\n         }\n \n         mediaView.setOverlayDrawable(null);\n@@ -849,35 +850,27 @@ protected void clearMediaView() {\n     }\n \n     /**\n-     * Picasso Callback which asynchronously sets the error bitmap onError.\n+     * Picasso Callback which clears the ImageView\u0027s background onSuccess. This is done to reduce\n+     * overdraw. A weak reference is used to avoid leaking the Activity context because the Callback\n+     * will be strongly referenced by Picasso.\n      */\n-    class PicassoCallback implements com.squareup.picasso.Callback {\n-        @Override\n-        public void onSuccess() { /* intentionally blank */ }\n+    static class PicassoCallback implements com.squareup.picasso.Callback {\n+        final WeakReference\u003cImageView\u003e imageViewWeakReference;\n \n-        @Override\n-        public void onError() {\n-            setErrorImage();\n+        PicassoCallback(ImageView imageView) {\n+            imageViewWeakReference \u003d new WeakReference\u003c\u003e(imageView);\n         }\n-    }\n-\n-    protected void setErrorImage() {\n-        // async load the error image and set the proper background color behind it once it\u0027s loaded\n-        // this does incur the necessity of clearing the background on each load of an image however\n-        final Picasso imageLoader \u003d dependencyProvider.getImageLoader();\n-\n-        if (imageLoader \u003d\u003d null) return;\n \n-        imageLoader.load(photoErrorResId)\n-                .into(mediaView, new com.squareup.picasso.Callback() {\n-                    @Override\n-                    public void onSuccess() {\n-                        mediaView.setBackgroundColor(mediaBgColor);\n-                    }\n+        @Override\n+        public void onSuccess() {\n+            final ImageView imageView \u003d imageViewWeakReference.get();\n+            if (imageView !\u003d null) {\n+                imageView.setBackgroundResource(android.R.color.transparent);\n+            }\n+        }\n \n-                    @Override\n-                    public void onError() { /* intentionally blank */ }\n-                });\n+        @Override\n+        public void onError() { /* intentionally blank */ }\n     }\n \n     /**"
        }
      ]
    }
  },
  {
    "name": "Fix huge memory leak",
    "url": "https://github.com/CremboC/INI/issues/21",
    "description": "Possibly caused by not removing/disposing of some resources.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/CremboC/INI/commit/44fd85c94deb1cb85870225eafcd7fc7bb014492",
      "files": [
        {
          "file_name": "ini-atc/src/uk/ac/york/ini/atc/screens/GameScreen.java",
          "patch": "@@ -12,4 +12,10 @@ public void render() {\n \n     }\n \n+    @Override\n+    public void update() {\n+\t// TODO Auto-generated method stub\n+\n+    }\n+\n }"
        },
        {
          "file_name": "ini-atc/src/uk/ac/york/ini/atc/screens/Screen.java",
          "patch": "@@ -3,7 +3,6 @@\n import uk.ac.york.ini.atc.ATC;\n \n import com.badlogic.gdx.graphics.Color;\n-import com.badlogic.gdx.graphics.OrthographicCamera;\n import com.badlogic.gdx.graphics.g2d.BitmapFont;\n import com.badlogic.gdx.graphics.g2d.Sprite;\n import com.badlogic.gdx.graphics.g2d.SpriteBatch;\n@@ -14,9 +13,20 @@\n     public static int width;\n     public static int height;\n \n+    /**\n+     * Instance of the main class, used for changing screen among other things\n+     */\n     private ATC atc;\n-    protected SpriteBatch spriteBatch;\n-    protected OrthographicCamera camera;\n+\n+    /**\n+     * A sprite batch, used to draw textures\n+     */\n+    protected final static SpriteBatch spriteBatch \u003d new SpriteBatch();\n+\n+    /**\n+     * Simple way of writing on the screen, uses 15pt Arial font by default\n+     */\n+    private final static BitmapFont font \u003d new BitmapFont();\n \n     /**\n      * Dispose of unused resources\n@@ -32,14 +42,6 @@ public void removed() {\n      */\n     public final void init(ATC atc) {\n \tthis.atc \u003d atc;\n-\n-\t// can be used for a custom coordinate system\n-\t// Matrix4 projection \u003d new Matrix4();\n-\t// projection.setToOrtho(0, 1280, 720, 0, 0, 0);\n-\n-\tspriteBatch \u003d new SpriteBatch();\n-\t// use in conjunction with the above commented code\n-\t// spriteBatch.setProjectionMatrix(projection);\n     }\n \n     /**\n@@ -85,15 +87,12 @@ public void drawSprite(Sprite sprite) {\n      * @param color\n      */\n     public void drawString(CharSequence str, float x, float y, Color color) {\n-\tfinal BitmapFont font \u003d new BitmapFont();\n \tfont.setColor(color);\n \tfont.draw(spriteBatch, str, x, y);\n     }\n \n     public abstract void render();\n \n-    public void update() {\n-\n-    }\n+    public abstract void update();\n \n }"
        },
        {
          "file_name": "ini-atc/src/uk/ac/york/ini/atc/screens/TitleScreen.java",
          "patch": "@@ -3,7 +3,6 @@\n import com.badlogic.gdx.Gdx;\n import com.badlogic.gdx.graphics.Color;\n import com.badlogic.gdx.graphics.Texture;\n-import com.badlogic.gdx.graphics.Texture.TextureFilter;\n import com.badlogic.gdx.graphics.g2d.TextureRegion;\n \n public class TitleScreen extends Screen {\n@@ -29,7 +28,6 @@ public void load() {\n \n \t// loads the texture, whose size must be in power\u0027s of two\n \ttexture \u003d new Texture(Gdx.files.internal(\"data/nisairspace.png\"));\n-\ttexture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n \n \t// select a specific area of the loaded texture, this will be passed\n \t// onto a wrapper and drawn"
        }
      ]
    }
  },
  {
    "name": "Remove potential memory leak from SQLite database implementation",
    "url": "https://github.com/snowplow/snowplow-android-tracker/issues/76",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/snowplow/snowplow-android-tracker/commit/69f7a80d11d233a43c34a2d35a4f4fb1f9d21e3a",
      "files": [
        {
          "file_name": "snowplow-android-tracker/src/main/java/com/snowplowanalytics/snowplow/tracker/storage/EventStore.java",
          "patch": "@@ -61,26 +61,21 @@\n      * @param context The android context object\n      */\n     public EventStore(Context context) {\n-        dbHelper \u003d new EventStoreHelper(context);\n+        dbHelper \u003d EventStoreHelper.getInstance(context);\n         open();\n         Logger.ifDebug(TAG, \"DB Path: \" + database.getPath());\n     }\n \n     /**\n-     * Opens a new writable database and\n-     * sets the database to allow WAL.\n-     *\n-     * WAL: https://www.sqlite.org/wal.html\n+     * Opens a new writable database if it\n+     * is currently closed.\n      *\n      * @return success or failure to open\n      */\n     public boolean open() {\n-\n-        // Opens the database\n-        database \u003d dbHelper.getWritableDatabase();\n-\n-        // Enable write ahead logging\n-        database.enableWriteAheadLogging();\n+        if (!isDatabaseOpen()) {\n+            database \u003d dbHelper.getWritableDatabase();\n+        }\n         return database !\u003d null;\n     }\n \n@@ -362,6 +357,9 @@ public EmittableEvents getEmittableEvents() {\n      * @return a boolean for database status\n      */\n     public boolean isDatabaseOpen() {\n+        if (database \u003d\u003d null) {\n+            return false;\n+        }\n         return database.isOpen();\n     }\n }"
        },
        {
          "file_name": "snowplow-android-tracker/src/main/java/com/snowplowanalytics/snowplow/tracker/storage/EventStoreHelper.java",
          "patch": "@@ -39,7 +39,23 @@\n             \"(id INTEGER PRIMARY KEY, eventData BLOB, \" +\n             \"dateCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP)\";\n \n-    public EventStoreHelper(Context context) {\n+    // Prevents multiple instances being created and avoids\n+    // memory leaks.\n+    private static EventStoreHelper sInstance;\n+\n+    /**\n+     * Use the application context, which will ensure that you\n+     * don\u0027t accidentally leak an Activity\u0027s context.\n+     * See this article for more information: http://bit.ly/6LRzfx\n+     */\n+    public static EventStoreHelper getInstance(Context context) {\n+        if (sInstance \u003d\u003d null) {\n+            sInstance \u003d new EventStoreHelper(context.getApplicationContext());\n+        }\n+        return sInstance;\n+    }\n+\n+    private EventStoreHelper(Context context) {\n         super(context, DATABASE_NAME, null, DATABASE_VERSION);\n     }\n "
        }
      ]
    }
  },
  {
    "name": "Fix memory leaking",
    "url": "https://github.com/White-Oak/space-is-near/issues/29",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/White-Oak/space-is-near/commit/10cac0a63be8b80bf6a9dc345f9ba63d7ee44d7d",
      "files": [
        {
          "file_name": "SpaceIsNear/src/spaceisnear/Main.java",
          "patch": "@@ -44,7 +44,7 @@ private static void runSINInWeirdMode(String[] args) {\n \t\ttry {\n \t\t    ServerCore serverCore \u003d new ServerCore();\n \t\t    serverCore.host();\n-\t\t    new Thread(serverCore).start();\n+\t\t    new Thread(serverCore, \"SIN Server\").start();\n \t\t    System.out.println(\"Hosted\");\n \t\t} catch (IOException ex) {\n \t\t    Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);"
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/game/Corev2.java",
          "patch": "@@ -78,7 +78,7 @@ public void init() {\n     }\n \n     private void callToConnect() {\n-\tnew Thread() {\n+\tnew Thread(\"Server starter\") {\n \t    @Override\n \t    public void run() {\n \t\ttry {\n@@ -280,8 +280,8 @@ public void show() {\n \tupdate(20);\n \tcontext.setCameraToPlayer();\n \tGdx.input.setInputProcessor(stage);\n-\tnew Thread(this).start();\n-\tnew Thread(new Runnable() {\n+\tnew Thread(this, \"Corev2\").start();\n+\tnew Thread(\"Animation\") {\n \n \t    @Override\n \t    public void run() {\n@@ -294,7 +294,7 @@ public void run() {\n \t\t    }\n \t\t}\n \t    }\n-\t}).start();\n+\t}.start();\n     }\n \n     @Override"
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/game/Corev3.java",
          "patch": "@@ -63,11 +63,13 @@ public void run() {\n \n \t    @Override\n \t    public void run() {\n-\t\tSystem.gc();\n-\t\ttry {\n-\t\t    Thread.sleep(10000L);\n-\t\t} catch (InterruptedException ex) {\n-\t\t    Logger.getLogger(Corev3.class.getName()).log(Level.SEVERE, null, ex);\n+\t\twhile (true) {\n+\t\t    System.gc();\n+\t\t    try {\n+\t\t\tThread.sleep(10000L);\n+\t\t    } catch (InterruptedException ex) {\n+\t\t\tLogger.getLogger(Corev3.class.getName()).log(Level.SEVERE, null, ex);\n+\t\t    }\n \t\t}\n \t    }\n \t}, \"GC Runner\").start();\n@@ -132,7 +134,7 @@ public void send(NetworkableMessage m) {\n     }\n \n     private void update() {\n-\twhile (true) {\n+\twhile (getScreen() !\u003d screens[3]) {\n \t    if (!core.isNotpaused()) {\n \t\tNetworkingObject get \u003d (NetworkingObject) core.getContext().getObjects().get(Context.NETWORKING_ID);\n \t\tget.process();"
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/game/components/inventory/Inventory.java",
          "patch": "@@ -150,14 +150,12 @@ public void draw(SpriteBatch batch, float parentAlpha) {\n \tpaintComponent(batch);\n     }\n \n+    final ShapeRenderer renderer \u003d new ShapeRenderer();\n+    final OrthographicCamera camera;\n+\n     public void paintComponent(SpriteBatch batch) {\n-\tShapeRenderer renderer \u003d new ShapeRenderer();\n-\tOrthographicCamera camera \u003d new OrthographicCamera();\n-\tcamera.setToOrtho(true);\n-\tcamera.update();\n-\tbatch \u003d new SpriteBatch();\n+\tbatch.end();\n \tbatch.setProjectionMatrix(camera.combined);\n-\n \tint x \u003d 800 - INVENTORY_WIDTH;\n \tint y \u003d TILE_PADDING;\n \trenderer.setProjectionMatrix(camera.combined);\n@@ -169,10 +167,14 @@ public void paintComponent(SpriteBatch batch) {\n \trenderer.end();\n \tGdx.gl.glDisable(GL20.GL_BLEND);\n \tdrawItems(batch, x, y);\n+\tbatch.begin();\n     }\n \n     public Inventory(GameContext context) {\n \tthis.context \u003d context;\n+\tcamera \u003d new OrthographicCamera();\n+\tcamera.setToOrtho(true);\n+\tcamera.update();\n     }\n \n }"
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/game/objects/ClientGameObject.java",
          "patch": "@@ -22,7 +22,7 @@\n     private final ConcurrentLinkedQueue\u003cMessage\u003e messages \u003d new ConcurrentLinkedQueue\u003c\u003e();\n     @Getter private int id \u003d -1;\n     @Getter @Setter private boolean destroyed \u003d false;\n-    @Getter private List\u003cComponent\u003e components \u003d new LinkedList\u003c\u003e();\n+    @Getter private List\u003cComponent\u003e components \u003d new ArrayList\u003c\u003e();\n     @NonNull @Getter private final GameObjectType type;\n     @Getter private GameContext context;\n \n@@ -54,7 +54,8 @@ public synchronized void process() {\n \t}\n \twhile (messages.size() \u003e 0) {\n \t    Message message \u003d messages.poll();\n-\t    for (Component component : components) {\n+\t    for (int i \u003d 0; i \u003c components.size(); i++) {\n+\t\tComponent component \u003d components.get(i);\n \t\tcomponent.processMessage(message);\n \t    }\n \t}"
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/server/AccountManager.java",
          "patch": "@@ -33,7 +33,7 @@ public AccountManager() {\n \t} catch (IOException ex) {\n \t    Logger.getLogger(AccountManager.class.getName()).log(Level.SEVERE, null, ex);\n \t}\n-\tThread thread \u003d new Thread(new Runnable() {\n+\tThread thread \u003d new Thread(\"Accounts\u0027 thread\") {\n \n \t    @Override\n \t    public void run() {\n@@ -46,7 +46,7 @@ public void run() {\n \t\t    saveAccounts();\n \t\t}\n \t    }\n-\t}, \"Accounts\u0027 thread\");\n+\t};\n \tthread.start();\n     }\n "
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/server/ServerNetworking.java",
          "patch": "@@ -196,13 +196,13 @@ public synchronized void connected(Connection connection) {\n     private synchronized void connectedWantsPlayer(final Client client) {\n \tif (!core.isAlreadyPaused()) {\n \t    core.pause();\n-\t    new Thread(new Runnable() {\n+\t    new Thread(\"Creating new player\") {\n \n \t\t@Override\n \t\tpublic void run() {\n \t\t    processNewPlayer(client);\n \t\t}\n-\t    }).start();\n+\t    }.start();\n \t}\n     }\n "
        },
        {
          "file_name": "SpaceIsNear/src/spaceisnear/server/objects/ServerGameObject.java",
          "patch": "@@ -1,66 +1,63 @@\n-// Generated by delombok at Sun Dec 01 13:28:22 MSK 2013\r\n-/*\r\n- * To change this template, choose Tools | Templates\r\n- * and open the template in the editor.\r\n- */\r\n-package spaceisnear.server.objects;\r\n-\r\n-import java.util.Arrays;\r\n-import java.util.LinkedList;\r\n-import java.util.concurrent.ConcurrentLinkedQueue;\r\n-import lombok.Getter;\r\n-import lombok.RequiredArgsConstructor;\r\n-import lombok.Setter;\r\n-import spaceisnear.abstracts.AbstractGameObject;\r\n-import spaceisnear.abstracts.Context;\r\n-import spaceisnear.game.components.Component;\r\n-import spaceisnear.game.messages.Message;\r\n-import spaceisnear.game.objects.GameObjectType;\r\n-import spaceisnear.server.ServerContext;\r\n-\r\n-/**\r\n- * @author White Oak\r\n- */\r\n-@RequiredArgsConstructor public abstract class ServerGameObject extends AbstractGameObject {\r\n-\r\n-    private final ConcurrentLinkedQueue\u003cMessage\u003e messages \u003d new ConcurrentLinkedQueue\u003c\u003e();\r\n-    @Getter private int id \u003d -1;\r\n-    @Getter @Setter private boolean destroyed \u003d false;\r\n-    @Getter private final LinkedList\u003cComponent\u003e components \u003d new LinkedList\u003c\u003e();\r\n-    @Getter private final GameObjectType type;\r\n-    @Getter private final ServerContext context;\r\n-\r\n-    public void setId(int id) {\r\n-\tif (this.id \u003d\u003d -1) {\r\n-\t    this.id \u003d id;\r\n-\t    for (Component component : components) {\r\n-\t\tcomponent.setOwnerId(id);\r\n-\t    }\r\n-\t}\r\n-    }\r\n-\r\n-    public final synchronized void addComponents(Component... a) {\r\n-\tfor (Component component : a) {\r\n-\t    component.setContext(context);\r\n-\t}\r\n-\tthis.components.addAll(Arrays.asList(a));\r\n-    }\r\n-\r\n-    @Override\r\n-    public final void message(Message message) {\r\n-\tmessages.add(message);\r\n-    }\r\n-\r\n-    @Override\r\n-    public synchronized void process() {\r\n-\tif (destroyed) {\r\n-\t    return;\r\n-\t}\r\n-\twhile (!messages.isEmpty()) {\r\n-\t    Message message \u003d messages.poll();\r\n-\t    for (Component component : components) {\r\n-\t\tcomponent.processMessage(message);\r\n-\t    }\r\n-\t}\r\n-    }\r\n-}\r\n+// Generated by delombok at Sun Dec 01 13:28:22 MSK 2013\n+/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package spaceisnear.server.objects;\n+\n+import java.util.*;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import lombok.*;\n+import spaceisnear.abstracts.AbstractGameObject;\n+import spaceisnear.game.components.Component;\n+import spaceisnear.game.messages.Message;\n+import spaceisnear.game.objects.GameObjectType;\n+import spaceisnear.server.ServerContext;\n+\n+/**\n+ * @author White Oak\n+ */\n+@RequiredArgsConstructor public abstract class ServerGameObject extends AbstractGameObject {\n+\n+    private final Queue\u003cMessage\u003e messages \u003d new ConcurrentLinkedQueue\u003c\u003e();\n+    @Getter private int id \u003d -1;\n+    @Getter @Setter private boolean destroyed \u003d false;\n+    @Getter private final List\u003cComponent\u003e components \u003d new ArrayList\u003c\u003e();\n+    @Getter private final GameObjectType type;\n+    @Getter private final ServerContext context;\n+\n+    public void setId(int id) {\n+\tif (this.id \u003d\u003d -1) {\n+\t    this.id \u003d id;\n+\t    for (Component component : components) {\n+\t\tcomponent.setOwnerId(id);\n+\t    }\n+\t}\n+    }\n+\n+    public final synchronized void addComponents(Component... a) {\n+\tfor (Component component : a) {\n+\t    component.setContext(context);\n+\t}\n+\tthis.components.addAll(Arrays.asList(a));\n+    }\n+\n+    @Override\n+    public final void message(Message message) {\n+\tmessages.add(message);\n+    }\n+\n+    @Override\n+    public synchronized void process() {\n+\tif (destroyed) {\n+\t    return;\n+\t}\n+\twhile (!messages.isEmpty()) {\n+\t    Message message \u003d messages.poll();\n+\t    for (int i \u003d 0; i \u003c components.size(); i++) {\n+\t\tComponent component \u003d components.get(i);\n+\t\tcomponent.processMessage(message);\n+\t    }\n+\t}\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "Textures memory leak",
    "url": "https://github.com/mapsforge/vtm/issues/2",
    "description": "We have serious memory leaks on desktop, related to failed `glDeleteTextures` and depending on libGDX backend and platform.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/mapsforge/vtm/commit/0a465abbfe7962efe5a68966728be7f9691cfb8e",
      "files": [
        {
          "file_name": "vtm/src/org/oscim/renderer/GLUtils.java",
          "patch": "@@ -1,5 +1,6 @@\n /*\n  * Copyright 2013 Hannes Janetzek\n+ * Copyright 2016 devemux86\n  *\n  * This file is part of the OpenScienceMap project (http://www.opensciencemap.org).\n  *\n@@ -248,7 +249,12 @@ public static void glDeleteBuffers(int num, int[] ids) {\n \t\t\treturn null;\n \n \t\tint[] ret \u003d new int[num];\n-\t\tIntBuffer buf \u003d MapRenderer.getIntBuffer(num);\n+\t\t// Workaround for texture memory leaks on desktop\n+\t\tIntBuffer buf;\n+\t\tif (GLAdapter.GDX_DESKTOP_QUIRKS)\n+\t\t\tbuf \u003d ByteBuffer.allocateDirect(num * 4).order(ByteOrder.nativeOrder()).asIntBuffer();\n+\t\telse\n+\t\t\tbuf \u003d MapRenderer.getIntBuffer(num);\n \n \t\tif (GLAdapter.GDX_WEBGL_QUIRKS) {\n \t\t\tfor (int i \u003d 0; i \u003c num; i++) {"
        }
      ]
    }
  },
  {
    "name": "Auditor memory leak",
    "url": "https://github.com/kuujo/vertigo/issues/6",
    "description": "If a message is created and the `auditor` verticle is notified, but the message is never forked, the node will remain in the auditor until it expires. The auditor should be notified of new messages only if they\u0027re actually forked and sent to any other component. Alternatively, the `create` action could be modified to include initial forked message IDs.\n",
    "keywords": [
      "auditor",
      "message",
      "forked"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/kuujo/vertigo/commit/8fcb6cc1e69bbe5ea8a31503fd4b1f0b2abe0bb2",
      "files": [
        {
          "file_name": "src/main/java/net/kuujo/vertigo/auditor/Auditor.java",
          "patch": "@@ -16,6 +16,7 @@\n package net.kuujo.vertigo.auditor;\n \n import java.util.ArrayList;\n+import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n@@ -24,6 +25,7 @@\n import org.vertx.java.core.Handler;\n import org.vertx.java.core.Vertx;\n import org.vertx.java.core.eventbus.Message;\n+import org.vertx.java.core.json.JsonArray;\n import org.vertx.java.core.json.JsonObject;\n \n /**\n@@ -37,7 +39,7 @@\n   private boolean enabled;\n   private long expire \u003d 30000;\n   private long delay \u003d 0;\n-  private long cleanupInterval \u003d 100;\n+  private long cleanupInterval \u003d 500;\n   private Map\u003cString, Node\u003e nodes \u003d new LinkedHashMap\u003c\u003e();\n \n   public static final String ADDRESS \u003d \"address\";\n@@ -80,9 +82,11 @@ private void checkExpire() {\n     // Nodes are stored in a LinkedHashMap in the order in which they\u0027re created,\n     // so we can iterate up to the oldest node which has not yet expired and stop.\n     long currentTime \u003d System.currentTimeMillis();\n-    for (Map.Entry\u003cString, Node\u003e entry : nodes.entrySet()) {\n-      Node node \u003d entry.getValue();\n+    Iterator\u003cMap.Entry\u003cString, Node\u003e\u003e iterator \u003d nodes.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Node node \u003d iterator.next().getValue();\n       if (node.expire \u003c\u003d currentTime) {\n+        iterator.remove();\n         node.fail();\n       }\n       else {\n@@ -116,15 +120,13 @@ public void handle(Message\u003cJsonObject\u003e message) {\n   private Handler\u003cNode\u003e ackHandler \u003d new Handler\u003cNode\u003e() {\n     @Override\n     public void handle(Node node) {\n-      clearNode(node);\n       eb.publish(broadcastAddress, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", node.id));\n     }\n   };\n \n   private Handler\u003cNode\u003e failHandler \u003d new Handler\u003cNode\u003e() {\n     @Override\n     public void handle(Node node) {\n-      clearNode(node);\n       eb.publish(broadcastAddress, new JsonObject().putString(\"action\", \"fail\").putString(\"id\", node.id));\n     }\n   };\n@@ -135,13 +137,27 @@ public void handle(Node node) {\n   private void doCreate(Message\u003cJsonObject\u003e message) {\n     String id \u003d getMandatoryString(\"id\", message);\n     if (enabled) {\n+      // If no forks were defined for the message, just send a failure.\n+      JsonArray forks \u003d message.body().getArray(\"forks\");\n+      if (forks \u003d\u003d null || forks.size() \u003d\u003d 0) {\n+        eb.publish(broadcastAddress, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", id));\n+        return;\n+      }\n+\n        // We simply add ack and fail handlers to the root node. If a descendant\n       // node is failed then it will bubble up to the root. Once all child nodes\n       // are acked the parent will be acked which will also bubble up to the root.\n       Node node \u003d new Root(id, vertx, System.currentTimeMillis() + expire, delay);\n       node.ackHandler(ackHandler);\n       node.failHandler(failHandler);\n       nodes.put(node.id, node);\n+\n+      // Add all initial forks for the root.\n+      for (Object forkId : forks) {\n+        Node fork \u003d new Node((String) forkId, vertx, System.currentTimeMillis() + expire, delay);\n+        node.addChild(fork);\n+        nodes.put(fork.id, fork);\n+      }\n     }\n     // If acking is disabled then immediately ack the message back to its source.\n     else {\n@@ -153,9 +169,6 @@ private void doCreate(Message\u003cJsonObject\u003e message) {\n    * Clears all children of a node from storage.\n    */\n   private void clearNode(Node node) {\n-    for (Node child : node.children) {\n-      clearNode(child);\n-    }\n     nodes.remove(node.id);\n   }\n \n@@ -165,10 +178,14 @@ private void clearNode(Node node) {\n   private void doFork(Message\u003cJsonObject\u003e message) {\n     String parentId \u003d getMandatoryString(\"parent\", message);\n     if (nodes.containsKey(parentId)) {\n-      String id \u003d getMandatoryString(\"id\", message);\n-      Node node \u003d new Node(id, vertx, System.currentTimeMillis() + expire, delay);\n-      nodes.get(parentId).addChild(node);\n-      nodes.put(id, node);\n+      JsonArray forks \u003d message.body().getArray(\"forks\");\n+      if (forks !\u003d null) {\n+        for (Object forkId : forks) {\n+          Node node \u003d new Node((String) forkId, vertx, System.currentTimeMillis() + expire, delay);\n+          nodes.get(parentId).addChild(node);\n+          nodes.put(node.id, node);\n+        }\n+      }\n     }\n   }\n \n@@ -196,7 +213,7 @@ private void doFail(Message\u003cJsonObject\u003e message) {\n   /**\n    * Represents a single node in a message tree.\n    */\n-  private static class Node {\n+  private class Node {\n     private final String id;\n     private final Vertx vertx;\n     private final long expire;\n@@ -294,18 +311,21 @@ private void checkAck() {\n               public void handle(Long timerID) {\n                 locked \u003d true;\n                 ackHandler.handle(Node.this);\n+                clearNode(Node.this);\n               }\n             });\n           }\n           else {\n             locked \u003d true;\n             ackHandler.handle(this);\n+            clearNode(Node.this);\n           }\n         }\n         // If the message was failed then immediately invoke the fail handler.\n         else if (!ack) {\n           locked \u003d true;\n           failHandler.handle(this);\n+          clearNode(Node.this);\n         }\n       }\n     }\n@@ -345,7 +365,7 @@ protected void addChild(Node child) {\n   /**\n    * Represents the root element of a message tree.\n    */\n-  private static final class Root extends Node {\n+  private final class Root extends Node {\n     private Root(String id, Vertx vertx, long expire, long delay) {\n       super(id, vertx, expire, delay);\n     }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/Channel.java",
          "patch": "@@ -15,6 +15,8 @@\n  */\n package net.kuujo.vertigo.output;\n \n+import java.util.List;\n+\n import net.kuujo.vertigo.message.JsonMessage;\n \n /**\n@@ -94,8 +96,8 @@\n    * @param message\n    *   The message to publish to the channel.\n    * @return\n-   *   The called channel instance.\n+   *   A list of written message identifiers.\n    */\n-  Channel publish(JsonMessage message);\n+  List\u003cString\u003e publish(JsonMessage message);\n \n }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/Connection.java",
          "patch": "@@ -42,8 +42,8 @@\n    * @param message\n    *   The message to write to the connection.\n    * @return\n-   *   The called connection instance.\n+   *   The written message identifier.\n    */\n-  Connection write(JsonMessage message);\n+  String write(JsonMessage message);\n \n }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/DefaultChannel.java",
          "patch": "@@ -125,13 +125,14 @@ private boolean isValid(JsonMessage message) {\n   }\n \n   @Override\n-  public Channel publish(JsonMessage message) {\n+  public List\u003cString\u003e publish(JsonMessage message) {\n+    List\u003cString\u003e ids \u003d new ArrayList\u003cString\u003e();\n     if (isValid(message)) {\n       for (Connection connection : selector.select(message, connections)) {\n-        connection.write(message.copy());\n+        ids.add(connection.write(message));\n       }\n     }\n-    return this;\n+    return ids;\n   }\n \n }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/DefaultConnection.java",
          "patch": "@@ -19,7 +19,6 @@\n import net.kuujo.vertigo.serializer.Serializer;\n \n import org.vertx.java.core.eventbus.EventBus;\n-import org.vertx.java.core.json.JsonObject;\n \n /**\n  * A default connection.\n@@ -41,24 +40,10 @@ public String getAddress() {\n   }\n \n   @Override\n-  public Connection write(JsonMessage message) {\n-    eventBus.send(address, Serializer.serialize(audit(message)));\n-    return this;\n-  }\n-\n-  /**\n-   * Sends audit info to the message auditor.\n-   */\n-  protected JsonMessage audit(JsonMessage message) {\n-    String auditor \u003d message.auditor();\n-    if (auditor !\u003d null) {\n-      String parent \u003d message.parent();\n-      if (parent !\u003d null) {\n-        eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\")\n-            .putString(\"id\", message.id()).putString(\"parent\", parent));\n-      }\n-    }\n-    return message;\n+  public String write(JsonMessage message) {\n+    JsonMessage copy \u003d message.copy();\n+    eventBus.send(address, Serializer.serialize(copy));\n+    return copy.id();\n   }\n \n }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/DefaultOutputCollector.java",
          "patch": "@@ -35,6 +35,7 @@\n import org.vertx.java.core.eventbus.EventBus;\n import org.vertx.java.core.eventbus.Message;\n import org.vertx.java.core.impl.DefaultFutureResult;\n+import org.vertx.java.core.json.JsonArray;\n import org.vertx.java.core.json.JsonObject;\n import org.vertx.java.core.logging.Logger;\n import org.vertx.java.platform.Container;\n@@ -280,10 +281,12 @@ public String emit(JsonObject body, String tag, JsonMessage parent) {\n    * Emits a new message.\n    */\n   private String emitNew(JsonMessage message) {\n-    eventBus.send(message.auditor(), new JsonObject().putString(\"action\", \"create\").putString(\"id\", message.id()));\n+    List\u003cObject\u003e ids \u003d new ArrayList\u003cObject\u003e();\n     for (Channel channel : channels) {\n-      channel.publish(message.createChild());\n+      ids.addAll(channel.publish(message.createChild()));\n     }\n+    eventBus.send(message.auditor(), new JsonObject().putString(\"action\", \"create\")\n+        .putString(\"id\", message.id()).putArray(\"forks\", new JsonArray(ids)));\n     hookEmit(message.id());\n     return message.id();\n   }\n@@ -292,9 +295,12 @@ private String emitNew(JsonMessage message) {\n    * Emits a child message.\n    */\n   private String emitChild(JsonMessage message) {\n+    List\u003cObject\u003e ids \u003d new ArrayList\u003cObject\u003e();\n     for (Channel channel : channels) {\n-      channel.publish(message.copy());\n+      ids.addAll(channel.publish(message.copy()));\n     }\n+    eventBus.send(message.auditor(), new JsonObject().putString(\"action\", \"fork\")\n+        .putString(\"parent\", message.parent()).putArray(\"forks\", new JsonArray(ids)));\n     hookEmit(message.parent());\n     return message.parent();\n   }"
        },
        {
          "file_name": "src/main/java/net/kuujo/vertigo/output/DefaultPseudoConnection.java",
          "patch": "@@ -33,9 +33,8 @@ public DefaultPseudoConnection(EventBus eventBus) {\n   }\n \n   @Override\n-  public Connection write(JsonMessage message) {\n-    audit(message);\n-    return this;\n+  public String write(JsonMessage message) {\n+    return message.copy().id();\n   }\n \n }"
        },
        {
          "file_name": "src/test/java/net/kuujo/vertigo/test/integration/AuditorTest.java",
          "patch": "@@ -28,6 +28,7 @@\n import org.vertx.java.core.eventbus.EventBus;\n import org.vertx.java.core.eventbus.Message;\n import org.vertx.java.core.impl.DefaultFutureResult;\n+import org.vertx.java.core.json.JsonArray;\n import org.vertx.java.core.json.JsonObject;\n \n import static org.vertx.testtools.VertxAssert.assertTrue;\n@@ -103,6 +104,7 @@ public void handle(Message\u003cJsonObject\u003e message) {\n   public void testAck() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", ackHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -113,30 +115,33 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n           public void handle(AsyncResult\u003cVoid\u003e result) {\n             assertTrue(result.succeeded());\n             final EventBus eventBus \u003d vertx.eventBus();\n-            final JsonMessage test1 \u003d source.createChild();\n-            final JsonMessage test2 \u003d source.createChild();\n+            final JsonMessage test1 \u003d child.createChild();\n+            final JsonMessage test2 \u003d child.createChild();\n             final JsonMessage test3 \u003d test1.createChild();\n             final JsonMessage test4 \u003d test1.createChild();\n \n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test1.id()).putString(\"parent\", test1.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test2.id()).putString(\"parent\", test2.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test1.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test1.id()).add(test2.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", child.id()));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test3.id()).putString(\"parent\", test3.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test4.id()).putString(\"parent\", test4.parent()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test3.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test3.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test4.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test4.id())));\n                 eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", test1.id()));\n                 eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", test2.id()));\n               }\n@@ -158,6 +163,7 @@ protected void handle() {\n   public void testChildFail() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", failHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -171,13 +177,14 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fail\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fail\").putString(\"id\", child.id()));\n               }\n             });\n           }\n@@ -190,6 +197,7 @@ protected void handle() {\n   public void testDescendantFail() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", failHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -200,30 +208,35 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n           public void handle(AsyncResult\u003cVoid\u003e result) {\n             assertTrue(result.succeeded());\n             final EventBus eventBus \u003d vertx.eventBus();\n-            final JsonMessage test1 \u003d source.createChild();\n-            final JsonMessage test2 \u003d source.createChild();\n+            final JsonMessage test1 \u003d child.createChild();\n+            final JsonMessage test2 \u003d child.createChild();\n             final JsonMessage test3 \u003d test1.createChild();\n             final JsonMessage test4 \u003d test1.createChild();\n \n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test1.id()).putString(\"parent\", test1.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test2.id()).putString(\"parent\", test2.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test1.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test1.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test2.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test2.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", child.id()));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test3.id()).putString(\"parent\", test3.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test4.id()).putString(\"parent\", test4.parent()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test3.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test3.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test4.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test4.id())));\n                 eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", test1.id()));\n                 eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", test2.id()));\n               }\n@@ -245,6 +258,7 @@ protected void handle() {\n   public void testExpire() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", failHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -255,19 +269,22 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n           public void handle(AsyncResult\u003cVoid\u003e result) {\n             assertTrue(result.succeeded());\n             final EventBus eventBus \u003d vertx.eventBus();\n-            final JsonMessage test1 \u003d source.createChild();\n-            final JsonMessage test2 \u003d source.createChild();\n+            final JsonMessage test1 \u003d child.createChild();\n+            final JsonMessage test2 \u003d child.createChild();\n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test1.id()).putString(\"parent\", test1.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test2.id()).putString(\"parent\", test2.parent()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test1.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test1.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test2.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test2.id())));\n               }\n             });\n           }\n@@ -280,6 +297,7 @@ protected void handle() {\n   public void testDelayedForkAck() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", ackHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -290,23 +308,26 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n           public void handle(AsyncResult\u003cVoid\u003e result) {\n             assertTrue(result.succeeded());\n             final EventBus eventBus \u003d vertx.eventBus();\n-            final JsonMessage test1 \u003d source.createChild();\n-            final JsonMessage test2 \u003d source.createChild();\n+            final JsonMessage test1 \u003d child.createChild();\n+            final JsonMessage test2 \u003d child.createChild();\n             final JsonMessage test3 \u003d test1.createChild();\n             final JsonMessage test4 \u003d test1.createChild();\n \n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test1.id()).putString(\"parent\", test1.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test2.id()).putString(\"parent\", test2.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test1.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test1.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test2.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test2.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", child.id()));\n               }\n             })\n             .then(new VoidHandler() {\n@@ -319,8 +340,10 @@ protected void handle() {\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test3.id()).putString(\"parent\", test3.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test4.id()).putString(\"parent\", test4.parent()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test3.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test3.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test4.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test4.id())));\n               }\n             })\n             .then(new VoidHandler() {\n@@ -340,6 +363,7 @@ protected void handle() {\n   public void testDelayedForkFail() {\n     final String auditor \u003d \"test\";\n     final JsonMessage source \u003d JsonMessageBuilder.create(new JsonObject().putString(\"body\", \"Hello world!\")).setAuditor(auditor).toMessage();\n+    final JsonMessage child \u003d source.createChild();\n \n     vertx.eventBus().registerHandler(\"broadcast\", failHandler(source.id()), new Handler\u003cAsyncResult\u003cVoid\u003e\u003e() {\n       @Override\n@@ -350,23 +374,26 @@ public void handle(AsyncResult\u003cVoid\u003e result) {\n           public void handle(AsyncResult\u003cVoid\u003e result) {\n             assertTrue(result.succeeded());\n             final EventBus eventBus \u003d vertx.eventBus();\n-            final JsonMessage test1 \u003d source.createChild();\n-            final JsonMessage test2 \u003d source.createChild();\n+            final JsonMessage test1 \u003d child.createChild();\n+            final JsonMessage test2 \u003d child.createChild();\n             final JsonMessage test3 \u003d test1.createChild();\n             final JsonMessage test4 \u003d test1.createChild();\n \n             run(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"create\").putString(\"id\", source.id())\n+                    .putArray(\"forks\", new JsonArray().add(child.id())));\n               }\n             })\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test1.id()).putString(\"parent\", test1.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test2.id()).putString(\"parent\", test2.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", source.id()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test1.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test1.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test2.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test2.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"ack\").putString(\"id\", child.id()));\n               }\n             })\n             .then(new VoidHandler() {\n@@ -379,8 +406,10 @@ protected void handle() {\n             .then(new VoidHandler() {\n               @Override\n               protected void handle() {\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test3.id()).putString(\"parent\", test3.parent()));\n-                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"id\", test4.id()).putString(\"parent\", test4.parent()));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test3.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test3.id())));\n+                eventBus.send(auditor, new JsonObject().putString(\"action\", \"fork\").putString(\"parent\", test4.parent())\n+                    .putArray(\"forks\", new JsonArray().add(test4.id())));\n               }\n             })\n             .then(new VoidHandler() {"
        }
      ]
    }
  },
  {
    "name": "Prevent memory leak in TweetsFragment from Sample App",
    "url": "https://github.com/pushtorefresh/storio/pull/134",
    "description": "Closes #125 \n\n@nikitin-da PTAL\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/pushtorefresh/storio/commit/3c4f78bf0021c3deec260b62888c4c564cf85714",
      "files": [
        {
          "file_name": "storio-sample-app/src/main/java/com/pushtorefresh/storio/sample/ui/fragment/BaseFragment.java",
          "patch": "@@ -1,6 +1,22 @@\n package com.pushtorefresh.storio.sample.ui.fragment;\n \n+import android.support.annotation.NonNull;\n import android.support.v4.app.Fragment;\n \n+import rx.Subscription;\n+import rx.subscriptions.CompositeSubscription;\n+\n public abstract class BaseFragment extends Fragment {\n+\n+    @NonNull\n+    private final CompositeSubscription compositeSubscriptionForOnStop \u003d new CompositeSubscription();\n+\n+    protected void unsubscribeOnStop(@NonNull Subscription subscription) {\n+        compositeSubscriptionForOnStop.add(subscription);\n+    }\n+\n+    @Override public void onStop() {\n+        compositeSubscriptionForOnStop.clear();\n+        super.onStop();\n+    }\n }"
        },
        {
          "file_name": "storio-sample-app/src/main/java/com/pushtorefresh/storio/sample/ui/fragment/TweetsFragment.java",
          "patch": "@@ -30,6 +30,7 @@\n import butterknife.InjectView;\n import butterknife.OnClick;\n import rx.Observer;\n+import rx.Subscription;\n import rx.android.schedulers.AndroidSchedulers;\n import rx.schedulers.Schedulers;\n \n@@ -81,7 +82,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c\n     void reloadData() {\n         uiStateController.setUiStateLoading();\n \n-        storIODb\n+        final Subscription subscription \u003d storIODb\n                 .get()\n                 .listOfObjects(Tweet.class)\n                 .withMapFunc(Tweet.MAP_FROM_CURSOR)\n@@ -111,6 +112,8 @@ void reloadData() {\n                         // no impl\n                     }\n                 });\n+\n+        unsubscribeOnStop(subscription); // preventing memory leak\n     }\n \n     @OnClick(R.id.tweets_empty_ui_add_tweets_button)"
        }
      ]
    }
  },
  {
    "name": "Memory Leak",
    "url": "https://github.com/artfuldev/KenTacToe/issues/13",
    "description": "Due to improper optimization\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/artfuldev/KenTacToe/commit/d46fa05fbb38a13fa4dd1a638830c112fa007f2c",
      "files": [
        {
          "file_name": "src/com/tictactoe/search/Search.java",
          "patch": "@@ -179,6 +179,7 @@ private double alphaBeta(Table nodeTable, byte depth, double alpha, double beta,\n \t */\n \tpublic Move getBestMove()\n \t{\n+\t\toptimizeSearchDepth();\n \t\tinfinity\u003dcurrentState.getWinScore()+1;\n \t\tdouble winScore\u003dcurrentState.getWinScore();\n \t\tif(currentPlayer.getPlayerSign()\u003d\u003d\u0027O\u0027)\n@@ -195,9 +196,6 @@ public Move getBestMove()\n \t\t\t\tsetBestMove(moveStack[i]);\n \t\t\t\treturn bestMove;\n \t\t\t}\n-\t\t\tbyte maxSearchDepth\u003d(byte)(Runtime.getRuntime().freeMemory()/(MemoryUtil.deepMemoryUsageOf(currentSearchState)*maxMoves));\n-\t\t\tif(searchDepth\u003emaxSearchDepth)\n-\t\t\t\tsearchDepth\u003dmaxSearchDepth;\n \t\t\tcurrentScore\u003dalphaBeta(currentSearchState,searchDepth,-infinity,infinity,currentPlayer);\n \t\t\tif(currentPlayer.getPlayerSign()\u003d\u003d\u0027O\u0027)\n \t\t\t\tcurrentScore*\u003d-1;\n@@ -442,4 +440,22 @@ public void setTime(float time)\n \t{\n \t\tthis.time \u003d time;\n \t}\n+\tpublic void optimizeSearchDepth()\n+\t{\n+\n+\t\tlong freeMemory\u003d(Runtime.getRuntime().freeMemory());\n+\t\tint expectedTables\u003d1;\n+\t\tlong usedMemory\u003d0;\n+\t\tbyte maxSearchDepth;\n+\t\tfor(maxSearchDepth\u003d2;(freeMemory\u003eusedMemory)\u0026\u0026(maxSearchDepth\u003c\u003dsearchDepth);maxSearchDepth++)\n+\t\t{\n+\t\t\tusedMemory\u003d0;\n+\t\t\texpectedTables\u003dmaxMoves;\n+\t\t\tfor(byte k\u003d0;k\u003cmaxSearchDepth;k++)\n+\t\t\t\texpectedTables*\u003dcurrentSearchState.getNoOfDs()-k;\n+\t\t\tusedMemory\u003dexpectedTables*MemoryUtil.deepMemoryUsageOf(currentSearchState);\n+\t\t}\n+\t\tsearchDepth\u003d(byte)Math.min(searchDepth,maxSearchDepth);\n+\t\tSystem.out.println(searchDepth);\n+\t}\n }\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Build #1356 - \"loadChunkOnProvideRequest\" being set to true introduces a Memory Leak?",
    "url": "https://github.com/MinimallyCorrect/TickThreading/issues/339",
    "description": "You can view more information about this here:\nhttps://github.com/nallar/TickThreading/issues/321\n\nI can verify this multiple times over if more testing is needed.\n\nIt almost appears as if chunks do not unload for some reason. Ram just goes up and up and up and never goes down.\n\nYes, I am checking the actual JVM.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/MinimallyCorrect/TickThreading/commit/3349b05c9090ec4f4edbf45dfa2f2a76de3728e0",
      "files": [
        {
          "file_name": "src/common/me/nallar/patched/storage/ThreadedChunkProvider.java",
          "patch": "@@ -77,8 +77,6 @@\n \tprivate final WorldServer world;\r\n \tprivate final Chunk defaultEmptyChunk;\r\n \tprivate final ThreadLocal\u003cBoolean\u003e inUnload \u003d new BooleanThreadLocal();\r\n-\tprivate final boolean loadChunkIfNotFound;\r\n-\tprivate final boolean generateChunkIfNotFound;\r\n \tprivate final ThreadLocal\u003cBoolean\u003e worldGenInProgress;\r\n \tprivate boolean loadedPersistentChunks \u003d false;\r\n \tprivate int unloadTicks \u003d 0;\r\n@@ -99,8 +97,6 @@ public ThreadedChunkProvider(WorldServer world, IChunkLoader loader, IChunkProvi\n \t\tcurrentChunkLoader \u003d this.loader \u003d loader;\r\n \t\tloadedChunks \u003d Collections.synchronizedList(new ArrayList\u003cChunk\u003e());\r\n \t\tdefaultEmptyChunk \u003d new EmptyChunk(world, 0, 0);\r\n-\t\tloadChunkIfNotFound \u003d TickThreading.instance.loadChunkOnProvideRequest;\r\n-\t\tgenerateChunkIfNotFound \u003d TickThreading.instance.generateChunkOnProvideRequest;\r\n \t\tworldGenInProgress \u003d world.worldGenInProgress \u003d new BooleanThreadLocal();\r\n \t\tworld.inImmediateBlockUpdate \u003d new BooleanThreadLocal();\r\n \t}\r\n@@ -186,7 +182,7 @@ public void tick() {\n \t\t\tChunkGarbageCollector.garbageCollect(world);\r\n \t\t}\r\n \r\n-\t\tif (!loadChunkIfNotFound \u0026\u0026 !loadedPersistentChunks \u0026\u0026 unloadTicks \u003e\u003d 5) {\r\n+\t\tif (!loadedPersistentChunks \u0026\u0026 unloadTicks \u003e\u003d 5) {\r\n \t\t\tloadedPersistentChunks \u003d true;\r\n \t\t\tint loaded \u003d 0;\r\n \t\t\tint possible \u003d world.getPersistentChunks().size();\r\n@@ -343,8 +339,8 @@ public final Chunk provideChunk(int x, int z) {\n \t\t\treturn chunk;\r\n \t\t}\r\n \r\n-\t\tif (loadChunkIfNotFound || loadChunkOnProvideRequest || worldGenInProgress.get() \u003d\u003d Boolean.TRUE) {\r\n-\t\t\treturn getChunkAtInternal(x, z, generateChunkIfNotFound || loadChunkOnProvideRequest, false);\r\n+\t\tif (loadChunkOnProvideRequest) {\r\n+\t\t\treturn getChunkAtInternal(x, z, true, false);\r\n \t\t}\r\n \r\n \t\treturn defaultEmptyChunk;\r\n@@ -611,6 +607,8 @@ public void populate(IChunkProvider chunkProvider, int x, int z) {\n \t\t\t\tGameRegistry.generateWorld(x, z, world, generator, chunkProvider);\r\n \t\t\t\tchunk.setChunkModified();\r\n \t\t\t}\r\n+\t\t\t// It may have been modified in generator.populate/GameRegistry.generateWorld.\r\n+\t\t\t//noinspection ConstantConditions\r\n \t\t\tif (chunk.isTerrainPopulated) {\r\n \t\t\t\tLog.warning(\"Chunk \" + chunk + \" had its isTerrainPopulated field set to true incorrectly by external code while populating\");\r\n \t\t\t}\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/minecraft/TickThreading.java",
          "patch": "@@ -61,8 +61,6 @@\n \tpublic boolean lockRegionBorders \u003d true;\r\n \tpublic boolean allowWorldUnloading \u003d true;\r\n \tpublic boolean requireOpForDumpCommand \u003d true;\r\n-\tpublic boolean loadChunkOnProvideRequest \u003d false;\r\n-\tpublic boolean generateChunkOnProvideRequest \u003d false;\r\n \tpublic boolean enableFastMobSpawning \u003d false;\r\n \tpublic int saveInterval \u003d 240;\r\n \tpublic int deadLockTime \u003d 45;\r\n@@ -131,8 +129,6 @@ public void preInit(FMLPreInitializationEvent event) {\n \t\tantiCheatNotify \u003d config.get(GENERAL, \"antiCheatNotify\", antiCheatNotify, \"Whether to notify admins if TT anti-cheat detects cheating\").getBoolean(antiCheatNotify);\r\n \t\tcleanWorlds \u003d config.get(GENERAL, \"cleanWorlds\", cleanWorlds, \"Whether to clean worlds on unload - this should fix some memory leaks due to mods holding on to world objects\").getBoolean(cleanWorlds);\r\n \t\tallowWorldUnloading \u003d config.get(GENERAL, \"allowWorldUnloading\", allowWorldUnloading, \"Whether worlds should be allowed to unload.\").getBoolean(allowWorldUnloading);\r\n-\t\tloadChunkOnProvideRequest \u003d config.get(GENERAL, \"loadChunkOnProvideRequest\", loadChunkOnProvideRequest, \"Whether to load chunks in ChunkProviderServer.provideChunk\").getBoolean(loadChunkOnProvideRequest);\r\n-\t\tgenerateChunkOnProvideRequest \u003d config.get(GENERAL, \"generateChunkOnProvideRequest\", generateChunkOnProvideRequest, \"Whether to generate chunks in ChunkProviderServer.provideChunk\").getBoolean(generateChunkOnProvideRequest);\r\n \t\tlockRegionBorders \u003d config.get(GENERAL, \"lockRegionBorders\", lockRegionBorders, \"Whether to prevent blocks next to each other on region borders from ticking concurrently. false \u003d faster but experimental\").getBoolean(lockRegionBorders);\r\n \t\tconfig.save();\r\n \t\tint[] disabledDimensions \u003d config.get(GENERAL, \"disableFastMobSpawningDimensions\", new int[]{-1}, \"List of dimensions not to enable fast spawning in.\").getIntList();\r"
        }
      ]
    }
  },
  {
    "name": "Memory leak when storing event data using in-memory storage",
    "url": "https://github.com/AlfrescoBenchmark/alfresco-benchmark/issues/18",
    "description": "![memleak](https://cloud.githubusercontent.com/assets/5584103/4819793/223ce85a-5f0a-11e4-99df-8c2bdbb6ce7d.png)\nThe VM-local storage can leak data if events are not handled (events have no further processing) or the test is terminated.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/AlfrescoBenchmark/alfresco-benchmark/commit/4d257f679a9c85ca2cf16c1e50a81c44e27edaae",
      "files": [
        {
          "file_name": "server/src/main/java/org/alfresco/bm/event/Event.java",
          "patch": "@@ -18,11 +18,6 @@\n  */\n package org.alfresco.bm.event;\n \n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.UUID;\n-\n import org.bson.types.ObjectId;\n \n import com.mongodb.DBObject;\n@@ -42,7 +37,6 @@\n     public static final String FIELD_LOCK_OWNER \u003d \"lockOwner\";\n     public static final String FIELD_LOCK_TIME \u003d \"lockTime\";\n     public static final String FIELD_DATA \u003d \"data\";\n-    public static final String FIELD_DATA_KEY \u003d \"dataKey\";\n     public static final String FIELD_DATA_OWNER \u003d \"dataOwner\";\n     \n     /** The \u0027value\u0027 that is associated with the data */\n@@ -54,20 +48,14 @@\n     \n     public static final String EVENT_BEAN_PREFIX \u003d \"event.\";\n     \n-    /**\n-     * Data storage for events that are unable to serialize their data to local storage\n-     */\n-    private static Map\u003cString, Object\u003e serverLocalData \u003d Collections.synchronizedMap(new HashMap\u003cString, Object\u003e(1024));\n-    \n     private String id;\n     private final String name;\n     private String sessionId;\n     private final long scheduledTime;\n     private String lockOwner;\n     private long lockTime;\n-    private Object data;            // Either a DBObject or a String\n-    private String dataKey;\n-    private String dataOwner;\n+    private Object data;            // DBObject, String or Numeric\n+    private boolean dataInMemory;\n     \n     /**\n      * Construct an event with some data, scheduling it for the current time.\n@@ -123,8 +111,12 @@ public Event(String name, long scheduledTime, Object data)\n      * @param name                  the event name\n      * @param scheduledTime         when the event should be processed\n      * @param data                  the event data\n+     * @param dataInMemory          prevent the data from being persisted to the event storage.\n+     *                                      Incompatible data types will be handled automatically,\n+     *                                      but there may be cases where sensitive data may need to be kept\n+     *                                      in memory for some reason.\n      */\n-    public Event(String name, long scheduledTime, Object data, boolean forceInMemoryDataStorage)\n+    public Event(String name, long scheduledTime, Object data, boolean dataInMemory)\n     {\n         if (name \u003d\u003d null)\n         {\n@@ -134,8 +126,9 @@ public Event(String name, long scheduledTime, Object data, boolean forceInMemory\n         this.name \u003d name;\n         this.scheduledTime \u003d scheduledTime;\n         this.sessionId \u003d null;\n-        // Need to use Serializable-aware setter\n-        setDataObject(data, forceInMemoryDataStorage);\n+        // Record if the object should be forced to stay in memory\n+        this.data \u003d data;\n+        this.dataInMemory \u003d dataInMemory;\n         \n         // Certain event have to be unique within the context of the processing\n         if (name.equals(Event.EVENT_NAME_START))\n@@ -160,8 +153,7 @@ public String toString()\n                 \", lockOwner\u003d\" + lockOwner +\n                 \", lockTime\u003d\" + lockTime +\n                 \", data\u003d\" + dataStr +\n-                \", dataKey\u003d\" + dataKey +\n-                \"  dataOwner\u003d \" + dataOwner +\n+                \", dataInMemory\u003d\" + dataInMemory +\n                 \"]\";\n     }\n \n@@ -236,96 +228,20 @@ public void setLockTime(long lockTime)\n         this.lockTime \u003d lockTime;\n     }\n \n-    /**\n-     * Client-safe method to retrieve data based on in-memory or persisted storage\n-     */\n-    public Object getDataObject()\n+    public Object getData()\n     {\n-        if (dataKey \u003d\u003d null)\n-        {\n-            // The data came in and out of persisted storage\n-            return data;\n-        }\n-        else\n-        {\n-            Object data \u003d Event.serverLocalData.get(dataKey);\n-            if (data \u003d\u003d null)\n-            {\n-                // There is no value.  Check whether we have lost it.\n-                if (!Event.serverLocalData.containsKey(dataKey))\n-                {\n-                    // We have lost the data associated with this\n-                    throw new IllegalStateException(\"In-memory data cannot be found for event: \" + this);\n-                }\n-            }\n-            return data;\n-        }\n+        return data;\n     }\n-    /**\n-     * Set the data, taking Serializability or client choice into account\n-     * \n-     * @param data                      the data to store (in memory or persisted)\n-     * @param forceInMemoryDataStorage  \u003ctt\u003etrue\u003c/tt\u003e to force in-memory storage\n-     */\n-    private void setDataObject(Object data, boolean forceInMemoryDataStorage)\n+    public boolean getDataInMemory()\n     {\n-        boolean canPersistData \u003d\n-                data \u003d\u003d null ||\n-                data instanceof String ||\n-                data instanceof DBObject ||\n-                data instanceof Number;\n-        \n-        if (forceInMemoryDataStorage || !canPersistData)\n-        {\n-            // We have to store the data in memory and just persist a key\n-            this.data \u003d null;\n-            this.dataKey \u003d UUID.randomUUID().toString();\n-            Event.serverLocalData.put(this.dataKey, data);\n-        }\n-        else\n-        {\n-            // A null, String or DBObject is provided, so we just accept it as is\n-            this.data \u003d data;\n-            this.dataKey \u003d null;\n-        }\n+        return dataInMemory;\n     }\n-\n     /**\n-     * Method used by persistence framework ONLY.  DO NOT USE.\n-     * \n-     * @return                      the data key in the event that data is stored in the VM only\n-     */\n-    @Deprecated\n-    public String getDataKey()\n-    {\n-        return dataKey;\n-    }\n-    /**\n-     * Method used by persistence framework ONLY.  DO NOT USE.\n+     * @deprecated      in V2.0.2\n      */\n     @Deprecated\n-    public void setDataKey(String dataKey)\n-    {\n-        this.dataKey \u003d dataKey;\n-    }\n-\n-    /**\n-     * Ensure that any locally-stored data is cleaned up\n-     */\n-    public void cleanData()\n-    {\n-        if (dataKey !\u003d null)\n-        {\n-            Event.serverLocalData.remove(dataKey);\n-        }\n-    }\n-\n-    public String getDataOwner()\n-    {\n-        return dataOwner;\n-    }\n-    public void setDataOwner(String dataOwner)\n+    public Object getDataObject()\n     {\n-        this.dataOwner \u003d dataOwner;\n+        return data;\n     }\n }"
        },
        {
          "file_name": "server/src/main/java/org/alfresco/bm/event/EventWork.java",
          "patch": "@@ -83,7 +83,6 @@ public EventWork(\n         this.sessionService \u003d sessionService;\n     }\n \n-    @SuppressWarnings(\"deprecation\")\n     @Override\n     public void run()\n     {\n@@ -188,11 +187,6 @@ public void run()\n                         \"   Processor: \" + processor);\n                 continue;\n             }\n-            // Ensure that any locally-stored data has a data owner attached\n-            if (nextEvent.getDataKey() !\u003d null)\n-            {\n-                nextEvent.setDataOwner(serverId);\n-            }\n             // Carry over the session ID, if required\n             if (propagateSessionId)\n             {\n@@ -216,12 +210,9 @@ public void run()\n             }\n         }\n         \n-        // Clean up any locally-store data and remove the event from the queue.\n-        // This *must* come after the new events have been published;\n-        // otherwise it\u0027s possible to have a short time without events.\n+        // Remove the event from the queue.\n         try\n         {\n-            event.cleanData();\n             boolean deleted \u003d eventService.deleteEvent(event);\n             if (!deleted)\n             {"
        },
        {
          "file_name": "server/src/main/java/org/alfresco/bm/event/mongo/MongoEventService.java",
          "patch": "@@ -18,7 +18,11 @@\n  */\n package org.alfresco.bm.event.mongo;\n \n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.UUID;\n \n import org.alfresco.bm.event.AbstractEventService;\n import org.alfresco.bm.event.Event;\n@@ -47,13 +51,21 @@\n     private static Log logger \u003d LogFactory.getLog(MongoEventService.class);\n \n     private final DBCollection collection;\n+    private final String dataOwner;\n+    /**\n+     * Data storage for events that are unable to serialize their data to MongoDB storage\n+     * \u003cp/\u003e\n+     * TODO: Use a cache that expires entries so that any leaks by a test run are clean up eventually\n+     */\n+    private Map\u003cString, Object\u003e runLocalData \u003d Collections.synchronizedMap(new HashMap\u003cString, Object\u003e(1024));\n \n     /**\n      * Construct a event service against a Mongo database and given collection name\n      */\n     public MongoEventService(DB db, String collection)\n     {\n         this.collection \u003d db.getCollection(collection);\n+        this.dataOwner \u003d UUID.randomUUID().toString();\n     }\n     \n     @Override\n@@ -84,6 +96,11 @@ public void start() throws Exception\n     @Override\n     public void stop() throws Exception\n     {\n+        // If there are still items in the local data, then the test is probably not cleaning up property\n+        if (runLocalData.size() \u003e 0)\n+        {\n+            logger.warn(\"EventService still has \" + runLocalData.size() + \" data entries held in memory.\");\n+        }\n     }\n \n     @Override\n@@ -93,23 +110,29 @@ public long count()\n     }\n \n     /**\n+     * Determine if the data can be written out to MongoDB\n+     * \n+     * @param data                      the data to store (in memory or persisted)\n+     */\n+    public static boolean canPersistDataObject(Object data)\n+    {\n+        boolean canPersistData \u003d\n+                data \u003d\u003d null ||\n+                data instanceof String ||\n+                data instanceof DBObject ||\n+                data instanceof Number;\n+        return canPersistData;\n+    }\n+\n+    /**\n      * Helper method to convert an {@link Event} into a {@link DBObject persistable object}\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public static DBObject convertEvent(Event event)\n     {\n         BasicDBObjectBuilder insertObjBuilder \u003d BasicDBObjectBuilder\n                 .start();\n         // Handle the data-key-data-owner link i.e. we store either the object or the key and owner of the key\n-        if (event.getDataKey() \u003d\u003d null)\n-        {\n-            insertObjBuilder.add(Event.FIELD_DATA, event.getDataObject());\n-        }\n-        else\n-        {\n-            insertObjBuilder.add(Event.FIELD_DATA_KEY, event.getDataKey());\n-            insertObjBuilder.add(Event.FIELD_DATA_OWNER, event.getDataOwner());\n-        }\n+        insertObjBuilder.add(Event.FIELD_DATA, event.getData());\n         insertObjBuilder\n                 .add(Event.FIELD_LOCK_OWNER, event.getLockOwner())\n                 .add(Event.FIELD_LOCK_TIME, new Date(event.getLockTime()))\n@@ -128,12 +151,10 @@ public static DBObject convertEvent(Event event)\n     /**\n      * Helper method to convert a {@link DBObject persistable object} into an {@link Event}\n      */\n-    @SuppressWarnings(\"deprecation\")\n-    public static Event convertDBObject(DBObject obj)\n+    private Event convertDBObject(DBObject obj)\n     {\n         String id \u003d obj.get(Event.FIELD_ID).toString();\n         Object data \u003d obj.get(Event.FIELD_DATA);\n-        String dataKey \u003d (String) obj.get(Event.FIELD_DATA_KEY);\n         String dataOwner \u003d (String) obj.get(Event.FIELD_DATA_OWNER);\n         String lockOwner \u003d (String) obj.get(Event.FIELD_LOCK_OWNER);\n         long lockTime \u003d obj.containsField(Event.FIELD_LOCK_TIME) ?\n@@ -145,13 +166,27 @@ public static Event convertDBObject(DBObject obj)\n                 Long.valueOf(0L);\n         String sessionId \u003d (String) obj.get(Event.FIELD_SESSION_ID);\n         \n+        // Check to see if we should be getting the data from memory\n+        if (dataOwner !\u003d null)\n+        {\n+            if (data !\u003d null)\n+            {\n+                throw new IllegalStateException(\"Event should not be stored with data AND a data owner: \" + obj);\n+            }\n+            // The data was tagged as being held in VM\n+            data \u003d runLocalData.get(id);\n+            if (data \u003d\u003d null)\n+            {\n+                throw new IllegalStateException(\"Event data is not available in the VM: \" + obj);\n+            }\n+        }\n+        \n         Event event \u003d new Event(name, scheduledTime, data);\n         event.setId(id);\n-        event.setDataKey(dataKey);\n-        event.setDataOwner(dataOwner);\n         event.setLockOwner(lockOwner);\n         event.setLockTime(lockTime);\n         event.setSessionId(sessionId);\n+        \n         // Done\n         return event;\n     }\n@@ -165,6 +200,17 @@ public String putEvent(Event event)\n         }\n         DBObject insertObj \u003d convertEvent(event);\n         \n+        // Replace the data with a key, if necessary\n+        Object data \u003d event.getData();\n+        boolean storeInMem \u003d (!canPersistDataObject(data) || event.getDataInMemory());\n+        if (storeInMem)\n+        {\n+            // We will only store the data if the insertion works\n+            insertObj.put(Event.FIELD_DATA_OWNER, dataOwner);\n+            insertObj.removeField(Event.FIELD_DATA);\n+            // Only store locally it after a successful insert\n+        }\n+        \n         try\n         {\n             collection.insert(insertObj);\n@@ -180,6 +226,13 @@ public String putEvent(Event event)\n         ObjectId eventIdObj \u003d (ObjectId) insertObj.get(Event.FIELD_ID);\n         String eventId \u003d eventIdObj.toString();\n         \n+        // If the data owner was used, then the actual data, if there is any, still needs to be stored in memory\n+        if (storeInMem \u0026\u0026 data !\u003d null)\n+        {\n+            // The data will be removed when the event is plucked for processing\n+            runLocalData.put(eventId, data);\n+        }\n+        \n         // Done\n         if (logger.isDebugEnabled())\n         {\n@@ -227,12 +280,12 @@ public Event nextEvent(String serverId, long latestScheduledTime, boolean localD\n                 .and(Event.FIELD_LOCK_OWNER).is(null);\n         if (localDataOnly)\n         {\n-            qb.and(Event.FIELD_DATA_OWNER).is(serverId);\n+            qb.and(Event.FIELD_DATA_OWNER).is(dataOwner);\n         }\n         else\n         {\n             qb.or(\n-                    BasicDBObjectBuilder.start().add(Event.FIELD_DATA_OWNER, serverId).get(),\n+                    BasicDBObjectBuilder.start().add(Event.FIELD_DATA_OWNER, dataOwner).get(),\n                     BasicDBObjectBuilder.start().add(Event.FIELD_DATA_OWNER, null).get());\n         }\n         DBObject queryObj \u003d qb.get();\n@@ -260,6 +313,7 @@ public Event nextEvent(String serverId, long latestScheduledTime, boolean localD\n             event.setLockOwner(serverId);\n             event.setLockTime(now);\n         }\n+        \n         // Done\n         if (logger.isDebugEnabled())\n         {\n@@ -275,10 +329,13 @@ public Event nextEvent(String serverId, long latestScheduledTime, boolean localD\n     @Override\n     public boolean deleteEvent(Event event)\n     {\n+        String id \u003d event.getId();\n         DBObject queryObj \u003d BasicDBObjectBuilder\n                 .start()\n-                .add(Event.FIELD_ID, new ObjectId(event.getId()))\n+                .add(Event.FIELD_ID, new ObjectId(id))\n                 .get();\n+        // Drop any associated memory data\n+        runLocalData.remove(id);\n         \n         WriteResult wr \u003d collection.remove(queryObj);\n         if (wr.getN() !\u003d 1)"
        },
        {
          "file_name": "server/src/main/java/org/alfresco/bm/event/mongo/MongoResultService.java",
          "patch": "@@ -164,22 +164,17 @@ private EventRecord convertToEventRecord(DBObject eventRecordObj)\n     /**\n      * Helper to convert Mongo-persisted object to a client-visible {@link Event}\n      */\n-    @SuppressWarnings(\"deprecation\")\n     private Event convertToEvent(DBObject eventObj)\n     {\n         String name \u003d (String) eventObj.get(Event.FIELD_NAME);\n         long scheduledTime \u003d eventObj.containsField(Event.FIELD_SCHEDULED_TIME) ?\n                 ((Date) eventObj.get(Event.FIELD_SCHEDULED_TIME)).getTime() :\n                 -1L;\n         Object data \u003d eventObj.get(Event.FIELD_DATA);\n-        String dataKey \u003d (String) eventObj.get(Event.FIELD_DATA_KEY);\n-        String dataOwner \u003d (String) eventObj.get(Event.FIELD_DATA_OWNER);\n         String lockOwner \u003d (String) eventObj.get(Event.FIELD_LOCK_OWNER);\n         String sessionId \u003d (String) eventObj.get(Event.FIELD_SESSION_ID);\n         \n         Event event \u003d new Event(name, scheduledTime, data, false);\n-        event.setDataKey(dataKey);\n-        event.setDataOwner(dataOwner);\n         event.setLockOwner(lockOwner);\n         event.setSessionId(sessionId);\n         // Done\n@@ -207,6 +202,11 @@ public void recordResult(EventRecord result)\n         }\n         \n         DBObject eventObj \u003d MongoEventService.convertEvent(event);\n+        // Remove the event data if it is not persistable\n+        if (!MongoEventService.canPersistDataObject(event.getData()))\n+        {\n+            eventObj.removeField(Event.FIELD_DATA);\n+        }\n         DBObject insertObj \u003d BasicDBObjectBuilder\n                 .start()\n                 .add(EventRecord.FIELD_PROCESSED_BY, result.getProcessedBy())"
        },
        {
          "file_name": "server/src/main/java/org/alfresco/bm/event/producer/RedirectEventProducer.java",
          "patch": "@@ -62,21 +62,18 @@ public RedirectEventProducer(String newEventName, long delay)\n     public List\u003cEvent\u003e getNextEvents(Event event)\n     {\n         String oldId \u003d event.getId();\n-        @SuppressWarnings(\"deprecation\")\n-        String oldDataKey \u003d event.getDataKey();\n-        Object oldData \u003d event.getDataObject();\n         long oldScheduledTime \u003d event.getScheduledTime();\n         String oldSessionId \u003d event.getSessionId();\n-        String oldDataOwner \u003d event.getDataOwner();\n+        Object oldData \u003d event.getData();\n+        boolean oldDataInMemory \u003d event.getDataInMemory();\n         \n-        boolean forceInMemoryStorage \u003d oldDataKey !\u003d null;\n         long scheduledTime \u003d System.currentTimeMillis() + delay;\n         if (oldScheduledTime \u003e scheduledTime)\n         {\n             scheduledTime \u003d oldScheduledTime;\n         }\n         \n-        Event newEvent \u003d new Event(newEventName, scheduledTime, oldData, forceInMemoryStorage);\n+        Event newEvent \u003d new Event(newEventName, scheduledTime, oldData, oldDataInMemory);\n         if (oldId !\u003d null)\n         {\n             newEvent.setId(oldId);\n@@ -85,10 +82,6 @@ public RedirectEventProducer(String newEventName, long delay)\n         {\n             newEvent.setSessionId(oldSessionId);\n         }\n-        if (oldDataOwner !\u003d null)\n-        {\n-            newEvent.setDataOwner(oldDataOwner);\n-        }\n         \n         return Collections.singletonList(newEvent);\n     }"
        },
        {
          "file_name": "server/src/test/java/org/alfresco/bm/event/EventTest.java",
          "patch": "@@ -19,7 +19,6 @@\n package org.alfresco.bm.event;\n \n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n@@ -38,7 +37,6 @@\n  * @since 2.0\n  */\n @RunWith(JUnit4.class)\n-@SuppressWarnings(\"deprecation\")\n public class EventTest\n {\n     @Test\n@@ -117,9 +115,7 @@ public void constructor01()\n         long now \u003d System.currentTimeMillis();\n         \n         Event event \u003d new Event(\"A\", null);\n-        assertNull(event.getDataKey());\n-        assertNull(event.getDataObject());\n-        assertNull(event.getDataOwner());\n+        assertNull(event.getData());\n         assertNull(event.getId());\n         assertNull(event.getLockOwner());\n         assertEquals(0L, event.getLockTime());\n@@ -143,56 +139,49 @@ public void constructor03()\n         long now \u003d System.currentTimeMillis();\n         \n         Event event \u003d new Event(\"A\", now, null, true);\n-        assertNull(event.getDataObject());\n-        assertNotNull(event.getDataKey());\n+        assertNull(event.getData());\n     }\n     \n     @Test\n     public void nullData()\n     {\n         Event event \u003d new Event(\"A\", 0L, null);\n-        assertNull(event.getDataKey());\n-        assertNull(event.getDataObject());\n+        assertNull(event.getData());\n     }\n     \n     @Test\n     public void nullDataInMem()\n     {\n         Event event \u003d new Event(\"A\", 0L, null, true);\n-        assertNotNull(event.getDataKey());\n-        assertNull(event.getDataObject());\n+        assertNull(event.getData());\n     }\n     \n     @Test\n     public void stringData()\n     {\n         Event event \u003d new Event(\"A\", 0L, \"BOB\");\n-        assertNull(event.getDataKey());\n-        assertEquals(\"BOB\", event.getDataObject());\n+        assertEquals(\"BOB\", event.getData());\n     }\n     \n     @Test\n     public void stringDataInMem()\n     {\n         Event event \u003d new Event(\"A\", 0L, \"BOB\", true);\n-        assertNotNull(event.getDataKey());\n-        assertEquals(\"BOB\", event.getDataObject());\n+        assertEquals(\"BOB\", event.getData());\n     }\n     \n     @Test\n     public void integerData()\n     {\n         Event event \u003d new Event(\"A\", 0L, Integer.MAX_VALUE);\n-        assertNull(event.getDataKey());\n-        assertEquals(Integer.MAX_VALUE, event.getDataObject());\n+        assertEquals(Integer.MAX_VALUE, event.getData());\n     }\n     \n     @Test\n     public void integerDataInMem()\n     {\n         Event event \u003d new Event(\"A\", 0L, Integer.MAX_VALUE, true);\n-        assertNotNull(event.getDataKey());\n-        assertEquals(Integer.MAX_VALUE, event.getDataObject());\n+        assertEquals(Integer.MAX_VALUE, event.getData());\n     }\n     \n     @Test\n@@ -201,8 +190,7 @@ public void dbObjectData()\n         DBObject bobTheObj \u003d BasicDBObjectBuilder.start().add(\"BOB\", Integer.MAX_VALUE).get();\n         \n         Event event \u003d new Event(\"A\", 0L, bobTheObj);\n-        assertNull(event.getDataKey());\n-        assertEquals(bobTheObj, event.getDataObject());\n+        assertEquals(bobTheObj, event.getData());\n     }\n     \n     @Test\n@@ -211,23 +199,20 @@ public void dbObjectDataInMem()\n         DBObject bobTheObj \u003d BasicDBObjectBuilder.start().add(\"BOB\", Integer.MAX_VALUE).get();\n         \n         Event event \u003d new Event(\"A\", 0L, bobTheObj, true);\n-        assertNotNull(event.getDataKey());\n-        assertEquals(bobTheObj, event.getDataObject());\n+        assertEquals(bobTheObj, event.getData());\n     }\n     \n     @Test\n     public void someObjectData()\n     {\n         Event event \u003d new Event(\"A\", 0L, this);\n-        assertNotNull(event.getDataKey());\n-        assertEquals(this, event.getDataObject());\n+        assertEquals(this, event.getData());\n     }\n     \n     @Test\n     public void someObjectDataInMem()\n     {\n         Event event \u003d new Event(\"A\", 0L, this, true);\n-        assertNotNull(event.getDataKey());\n-        assertEquals(this, event.getDataObject());\n+        assertEquals(this, event.getData());\n     }\n }"
        },
        {
          "file_name": "server/src/test/java/org/alfresco/bm/event/EventWorkTest.java",
          "patch": "@@ -157,6 +157,9 @@ public void testBasicMultipleEventSuccess() throws Exception\n     @Test\n     public void testBasicSerializableEventData() throws Exception\n     {\n+        // Ensure that other EventService instances cannot grab our in-memory data\n+        EventService anotherEventService \u003d new MongoEventService(db, \"es\");\n+        \n         Object dataThatWillNotSerialize \u003d new DataThatWillNotSerialize();\n         nextEvents.add(new Event(EVENT_NAME, dataThatWillNotSerialize));\n         EventResult result \u003d new EventResult(nextEvents);\n@@ -166,12 +169,12 @@ public void testBasicSerializableEventData() throws Exception\n         \n         assertEquals(1, resultService.countResultsBySuccess());\n         assertEquals(1, eventService.count());\n-        assertNull(\"The local data should not be available for other servers.\", eventService.nextEvent(\"RANDOM_SERVER\", Long.MAX_VALUE, false));\n+        assertNull(\"The local data should not be available for other servers.\", anotherEventService.nextEvent(\"RANDOM_SERVER\", Long.MAX_VALUE, false));\n         Event nextEvent \u003d eventService.nextEvent(SERVER_ID, Long.MAX_VALUE, false);\n         assertNotNull(nextEvent);\n         \n         // Check that we can get hold of the next event\u0027s data\n-        assertTrue(\"Expect exactly the original event data.\", dataThatWillNotSerialize \u003d\u003d nextEvent.getDataObject());\n+        assertTrue(\"Expect exactly the original event data.\", dataThatWillNotSerialize \u003d\u003d nextEvent.getData());\n     }\n     \n     @Test"
        },
        {
          "file_name": "server/src/test/java/org/alfresco/bm/event/mongo/MongoEventServiceTest.java",
          "patch": "@@ -143,7 +143,7 @@ public synchronized void persistenceAndSearchOfDBObject() throws Exception\n         assertNotNull(\"Did not find event with DBObject data.\", foundObj);\n         // Retrieve\n         event \u003d eventService.getEvent(eventId);\n-        assertEquals(\"Original DBObject not pulled out.\", foundObj.get(Event.FIELD_DATA), event.getDataObject());\n+        assertEquals(\"Original DBObject not pulled out.\", foundObj.get(Event.FIELD_DATA), event.getData());\n     }\n     \n     /**\n@@ -179,7 +179,7 @@ public void nextEvent()\n             assertTrue(\"Scheduled time must be increasing. \", event.getScheduledTime() \u003e\u003d lastScheduledTime);\n             lastScheduledTime \u003d event.getScheduledTime();\n             assertNotNull(\"Event must have an ID\", event.getId());\n-            assertNotNull(\"Data payload not present on Event\", event.getDataObject());\n+            assertNotNull(\"Data payload not present on Event\", event.getData());\n             // Delete the event\n             assertTrue(\n                     \"Failed to delete event: \" + event,\n@@ -190,6 +190,30 @@ public void nextEvent()\n     }\n     \n     @Test\n+    public void inMemoryDataNotPersistable()\n+    {\n+        Event eventIn \u003d new Event(\"t1\", this);\n+        String id \u003d eventService.putEvent(eventIn);\n+        \n+        // Now get the event\n+        Event eventOut \u003d eventService.getEvent(id);\n+        assertNotNull(eventOut);\n+        assertTrue(\"In-mem data not handled: \" + eventOut, this \u003d\u003d eventOut.getData());\n+    }\n+    \n+    @Test\n+    public void inMemoryDataForced()\n+    {\n+        Event eventIn \u003d new Event(\"t1\", System.currentTimeMillis(), \"bulb\", true);\n+        String id \u003d eventService.putEvent(eventIn);\n+        \n+        // Now get the event\n+        Event eventOut \u003d eventService.getEvent(id);\n+        assertNotNull(eventOut);\n+        assertTrue(\"In-mem data not handled: \" + eventOut, eventIn.getData() \u003d\u003d eventOut.getData());\n+    }\n+    \n+    @Test\n     public void lockEventManual()\n     {\n         Event event \u003d createEvent();"
        },
        {
          "file_name": "server/src/test/java/org/alfresco/bm/event/mongo/MongoResultServiceTest.java",
          "patch": "@@ -20,6 +20,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n@@ -176,6 +177,19 @@ public static final EventRecord createEventRecord(long eventStartTime)\n     }\n     \n     @Test\n+    public synchronized void persistenceAndSearchOfNonSerializableEventData() throws Exception\n+    {\n+        Event event \u003d new Event(\"eventX\", this);\n+        EventRecord eventRecord \u003d new EventRecord(\"SERVERID\", true, 0L, 50L, \"{data:x}\", event);\n+        resultService.recordResult(eventRecord);\n+        \n+        List\u003cEventRecord\u003e results \u003d resultService.getResults(\"eventX\", 0, 1);\n+        assertEquals(1, results.size());\n+        EventRecord eventRecordOut \u003d results.get(0);\n+        assertNull(\"Expect the event data to be left null.\", eventRecordOut.getEvent().getData());\n+    }\n+    \n+    @Test\n     public synchronized void persistenceAndSearchOfDBObject() throws Exception\n     {\n         EventRecord eventRecord \u003d createEventRecord(System.currentTimeMillis());"
        },
        {
          "file_name": "server/src/test/java/org/alfresco/bm/event/producer/EventProducersTest.java",
          "patch": "@@ -60,7 +60,6 @@ public void setUp() throws Exception\n         eventDataKey \u003d new Event(\"a\", \"Some data\");\n         eventDataKey.setId(\"123456789012345678901234\"); \n         eventDataKey.setSessionId(\"sessionA\");\n-        eventDataKey.setDataOwner(\"Bob\");\n         eventInMem \u003d new Event(\"a\", this);\n     }\n     \n@@ -94,8 +93,7 @@ public void testRedirectEventProducer_DataKey()\n         assertEquals(eventOriginal.getId(), event.getId());\n         assertEquals(eventOriginal.getSessionId(), event.getSessionId());\n         assertEquals((double) (System.currentTimeMillis()+10000L), event.getScheduledTime(), 200L);\n-        assertEquals(eventOriginal.getDataOwner(), event.getDataOwner());\n-        assertTrue(eventOriginal.getDataObject() \u003d\u003d event.getDataObject());\n+        assertTrue(eventOriginal.getData() \u003d\u003d event.getData());\n     }\n     \n     @Test\n@@ -110,8 +108,7 @@ public void testRedirectEventProducer_InMem()\n         assertEquals(eventOriginal.getId(), event.getId());\n         assertEquals(eventOriginal.getSessionId(), event.getSessionId());\n         assertEquals((double) (System.currentTimeMillis()), event.getScheduledTime(), 200L);\n-        assertEquals(eventOriginal.getDataOwner(), event.getDataOwner());\n-        assertTrue(eventOriginal.getDataObject() \u003d\u003d event.getDataObject());\n+        assertTrue(eventOriginal.getData() \u003d\u003d event.getData());\n     }\n     \n     @Test"
        }
      ]
    }
  },
  {
    "name": "Memory leak in WebViewFragment",
    "url": "https://github.com/vickychijwani/quill/issues/75",
    "description": "Steps to reproduce:\n1. Open a post preview (the new WebView-based one)\n2. Select some text\n3. Tap back twice to come back to the post list\n4. Open up the post again and watch LeakCanary dump a heap\n\nNote:\n- [x] Test fix on older Android versions (webkit vs chromium)\n- [x] Merge BrowserActivity and WebViewFragment (or fix and test _both_)\n\n---\n\nUnfortunately the heap trace (below) is unhelpful:\n\n```\nme.vickychijwani.spectre D/LeakCanary﹕ In me.vickychijwani.spectre:1.0:1.\n    * me.vickychijwani.spectre.view.PostViewActivity has leaked:\n    * GC ROOT org.chromium.content.browser.input.PopupTouchHandleDrawable.mContext\n    * leaks me.vickychijwani.spectre.view.PostViewActivity instance\n    * Reference Key: c5347412-4c57-49a2-9df7-9760955cedeb\n    * Device: LGE google Nexus 4 occam\n    * Android Version: 5.1.1 API: 22\n    * Durations: watch\u003d5124ms, gc\u003d162ms, heap dump\u003d11630ms, analysis\u003d43875ms\n```\n\nMaybe analyzing the [actual heap dump](https://www.dropbox.com/s/zodudiuacbctjcr/quill_issue_75.hprof?dl\u003d0) will help.\n",
    "keywords": [
      "1",
      "post",
      "spectre",
      "*",
      "heap",
      "vickychijwani"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/vickychijwani/quill/commit/e9056184e45d9a6ed467c1f3065dafb3ea092b89",
      "files": [
        {
          "file_name": "app/src/main/java/me/vickychijwani/spectre/SpectreApplication.java",
          "patch": "@@ -2,8 +2,6 @@\n \n import android.app.Activity;\n import android.app.Application;\n-import android.app.ApplicationErrorReport;\n-import android.content.ComponentCallbacks;\n import android.content.Context;\n import android.os.Build;\n import android.os.StatFs;\n@@ -22,15 +20,12 @@\n \n import java.io.File;\n import java.net.HttpURLConnection;\n-import java.util.Map;\n-import java.util.WeakHashMap;\n import java.util.concurrent.TimeUnit;\n \n import io.fabric.sdk.android.Fabric;\n import me.vickychijwani.spectre.analytics.AnalyticsService;\n import me.vickychijwani.spectre.event.ApiErrorEvent;\n import me.vickychijwani.spectre.event.BusProvider;\n-import me.vickychijwani.spectre.event.LoadGhostVersionEvent;\n import me.vickychijwani.spectre.network.NetworkService;\n import retrofit.RetrofitError;\n import retrofit.client.Response;\n@@ -161,68 +156,4 @@ public void onDeadEvent(DeadEvent event) {\n         Log.w(TAG, \"Dead event ignored: \" + event.event.getClass().getName());\n     }\n \n-    // brilliant hack for #75, courtesy http://stackoverflow.com/a/27253968/504611\n-    @Override\n-    public void registerComponentCallbacks(ComponentCallbacks callback) {\n-        super.registerComponentCallbacks(callback);\n-        ComponentCallbacksAdjustmentTool.INSTANCE.onComponentCallbacksRegistered(callback);\n-    }\n-\n-    @Override\n-    public void unregisterComponentCallbacks(ComponentCallbacks callback) {\n-        super.unregisterComponentCallbacks(callback);\n-        ComponentCallbacksAdjustmentTool.INSTANCE.onComponentCallbacksUnregistered(callback);\n-    }\n-\n-    public void forceUnregisterComponentCallbacks() {\n-        if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n-            ComponentCallbacksAdjustmentTool.INSTANCE.unregisterAll(this);\n-        }\n-    }\n-\n-    private static class ComponentCallbacksAdjustmentTool {\n-        static final ComponentCallbacksAdjustmentTool INSTANCE \u003d new ComponentCallbacksAdjustmentTool();\n-\n-        private final WeakHashMap\u003cComponentCallbacks, ApplicationErrorReport.CrashInfo\u003e mCallbacks\n-                \u003d new WeakHashMap\u003c\u003e();\n-        private boolean mSuspended \u003d false;\n-\n-        public void onComponentCallbacksRegistered(ComponentCallbacks callback) {\n-            Throwable thr \u003d new Throwable(\"Callback registered here\");\n-            ApplicationErrorReport.CrashInfo ci \u003d new ApplicationErrorReport.CrashInfo(thr);\n-            if (! mSuspended) {\n-                if (callback.getClass().getName().startsWith(\"org.chromium.android_webview.AwContents\")) {\n-                    mCallbacks.put(callback, ci);\n-                }\n-            } else {\n-                Log.e(TAG, \"ComponentCallbacks was registered while tracking is suspended!\");\n-            }\n-        }\n-\n-        public void onComponentCallbacksUnregistered(ComponentCallbacks callback) {\n-            if (! mSuspended) {\n-                mCallbacks.remove(callback);\n-            }\n-        }\n-\n-        public void unregisterAll(Context context) {\n-            mSuspended \u003d true;\n-            for (Map.Entry\u003cComponentCallbacks, ApplicationErrorReport.CrashInfo\u003e entry : mCallbacks.entrySet()) {\n-                ComponentCallbacks callback \u003d entry.getKey();\n-                if (callback \u003d\u003d null) continue;\n-                if (BuildConfig.DEBUG) {\n-                    Log.w(TAG, \"Forcibly unregistering a misbehaving ComponentCallbacks: \" + entry.getKey());\n-                    Log.w(TAG, entry.getValue().stackTrace);\n-                }\n-                try {\n-                    context.unregisterComponentCallbacks(entry.getKey());\n-                } catch (Exception exc) {\n-                    Log.e(TAG, \"Unable to unregister ComponentCallbacks\", exc);\n-                }\n-            }\n-            mCallbacks.clear();\n-            mSuspended \u003d false;\n-        }\n-    }\n-\n }"
        },
        {
          "file_name": "app/src/main/java/me/vickychijwani/spectre/view/fragments/WebViewFragment.java",
          "patch": "@@ -18,11 +18,8 @@\n \n import com.crashlytics.android.Crashlytics;\n \n-import butterknife.Bind;\n-import butterknife.ButterKnife;\n import me.vickychijwani.spectre.BuildConfig;\n import me.vickychijwani.spectre.R;\n-import me.vickychijwani.spectre.SpectreApplication;\n import me.vickychijwani.spectre.view.BundleKeys;\n \n /**\n@@ -34,7 +31,7 @@\n         void onWebViewCreated();\n     }\n \n-    @Bind(R.id.web_view) WebView mWebView;\n+    private WebView mWebView;\n     private String mUrl;\n     private OnWebViewCreatedListener mOnWebViewCreatedListener \u003d null;\n \n@@ -58,7 +55,7 @@ public WebViewFragment() {}\n     public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                              Bundle savedInstanceState) {\n         View view \u003d inflater.inflate(R.layout.fragment_web_view, container, false);\n-        ButterKnife.bind(this, view);\n+        mWebView \u003d (WebView) view.findViewById(R.id.web_view);\n         mUrl \u003d getArguments().getString(BundleKeys.URL);\n         if (TextUtils.isEmpty(mUrl)) {\n             throw new IllegalArgumentException(\"Empty URL passed to WebViewFragment!\");\n@@ -106,17 +103,19 @@ public void onPause() {\n \n     @Override\n     public void onDestroyView() {\n+        super.onDestroyView();\n         // don\u0027t hold on to the listener (which could potentially be an Activity)\n         mOnWebViewCreatedListener \u003d null;\n         // destroy the WebView completely\n         if (mWebView !\u003d null) {\n+            // the WebView must be removed from the view hierarchy before calling destroy\n+            // to prevent a memory leak (#75)\n+            // See https://developer.android.com/reference/android/webkit/WebView.html#destroy%28%29\n+            ((ViewGroup) mWebView.getParent()).removeView(mWebView);\n+            mWebView.removeAllViews();\n             mWebView.destroy();\n             mWebView \u003d null;\n         }\n-        // NOTE: super must be called AFTER WebView is destroyed, because super method calls\n-        // ButterKnife.unbind which sets mWebView to null WITHOUT destroying it!\n-        super.onDestroyView();\n-        ((SpectreApplication) getActivity().getApplicationContext()).forceUnregisterComponentCallbacks();\n     }\n \n     // our custom methods"
        }
      ]
    }
  },
  {
    "name": "[BUG] Memory leak issue ,Clean Up handling,Preserve handling during compaction",
    "url": "https://github.com/HuaweiBigData/carbondata/pull/748",
    "description": "1. clean up handling is done in compaction flow.\n2. Fixed the memory leak issue in query execution flow.\n3. Corrected the preserve segment to exclude the already merged segment from the preserve.\n",
    "keywords": [
      "handling",
      "preserve"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/HuaweiBigData/carbondata/commit/24c47c204426cdc51d6d3d13a47f4d351b687484",
      "files": [
        {
          "file_name": "core/src/main/java/org/carbondata/query/carbon/executor/internal/impl/InternalDetailQueryExecutor.java",
          "patch": "@@ -123,6 +123,12 @@ public InternalDetailQueryExecutor() {\n       throw new QueryExecutionException(e);\n     } finally {\n       execService \u003d null;\n+      for (int currentSliceIndex : sliceIndexes) {\n+        if (currentSliceIndex \u003d\u003d -1) {\n+          continue;\n+        }\n+        executionInfos.get(currentSliceIndex).setScannedResultProcessor(null);\n+      }\n     }\n   }\n "
        },
        {
          "file_name": "core/src/main/java/org/carbondata/query/carbon/result/iterator/RawResultIterator.java",
          "patch": "@@ -70,6 +70,7 @@ public RawResultIterator(CarbonIterator\u003cBatchRawResult\u003e detailRawQueryResultIter\n \n     if (null \u003d\u003d batch || checkIfBatchIsProcessedCompletely(batch)) {\n       if (detailRawQueryResultIterator.hasNext()) {\n+        batch \u003d null;\n         batch \u003d detailRawQueryResultIterator.next();\n         counter \u003d 0; // batch changed so reset the counter.\n       } else {\n@@ -102,6 +103,7 @@ public RawResultIterator(CarbonIterator\u003cBatchRawResult\u003e detailRawQueryResultIter\n         return null;\n       }\n     } else { // completed one batch.\n+      batch \u003d null;\n       batch \u003d detailRawQueryResultIterator.next();\n       counter \u003d 0;\n     }"
        },
        {
          "file_name": "integration/spark/src/main/java/org/carbondata/spark/load/CarbonLoaderUtil.java",
          "patch": "@@ -285,18 +285,19 @@ public static void deleteSlice(int partitionCount, String schemaName, String cub\n     }\n   }\n \n-  public static void deletePartialLoadDataIfExist(CarbonLoadModel loadModel) throws IOException {\n+  public static void deletePartialLoadDataIfExist(CarbonLoadModel loadModel,\n+      final boolean isCompactionFlow) throws IOException {\n     CarbonTable carbonTable \u003d loadModel.getCarbonDataLoadSchema().getCarbonTable();\n     String metaDataLocation \u003d carbonTable.getMetaDataFilepath();\n     SegmentStatusManager segmentStatusManager \u003d\n         new SegmentStatusManager(carbonTable.getAbsoluteTableIdentifier());\n     LoadMetadataDetails[] details \u003d segmentStatusManager.readLoadMetadata(metaDataLocation);\n-    CarbonTablePath carbonTablePath \u003d CarbonStorePath.getCarbonTablePath(loadModel.getStorePath(),\n-        carbonTable.getCarbonTableIdentifier());\n+    CarbonTablePath carbonTablePath \u003d CarbonStorePath\n+        .getCarbonTablePath(loadModel.getStorePath(), carbonTable.getCarbonTableIdentifier());\n     final List\u003cString\u003e loadFolders \u003d new ArrayList\u003cString\u003e();\n     for (LoadMetadataDetails loadMetadata : details) {\n-      loadFolders.add(carbonTablePath.getCarbonDataDirectoryPath(loadMetadata.getPartitionCount(),\n-          loadMetadata.getLoadName())\n+      loadFolders.add(carbonTablePath\n+          .getCarbonDataDirectoryPath(loadMetadata.getPartitionCount(), loadMetadata.getLoadName())\n           .replace(\"\\\\\", \"/\"));\n     }\n \n@@ -307,13 +308,22 @@ public static void deletePartialLoadDataIfExist(CarbonLoadModel loadModel) throw\n       if (FileFactory.isFileExist(partitionPath, fileType)) {\n         CarbonFile carbonFile \u003d FileFactory.getCarbonFile(partitionPath, fileType);\n         CarbonFile[] listFiles \u003d carbonFile.listFiles(new CarbonFileFilter() {\n-          @Override\n-          public boolean accept(CarbonFile path) {\n+          @Override public boolean accept(CarbonFile path) {\n             return !loadFolders.contains(path.getAbsolutePath().replace(\"\\\\\", \"/\"));\n           }\n         });\n         for (int k \u003d 0; k \u003c listFiles.length; k++) {\n-          deleteStorePath(listFiles[k].getAbsolutePath());\n+          String segmentId \u003d\n+              CarbonTablePath.DataPathUtil.getSegmentId(listFiles[k].getAbsolutePath() + \"/dummy\");\n+          if (isCompactionFlow) {\n+            if (segmentId.contains(\".\")) {\n+              deleteStorePath(listFiles[k].getAbsolutePath());\n+            }\n+          } else {\n+            if (!segmentId.contains(\".\")) {\n+              deleteStorePath(listFiles[k].getAbsolutePath());\n+            }\n+          }\n         }\n       }\n     }"
        },
        {
          "file_name": "integration/spark/src/main/java/org/carbondata/spark/merger/CarbonDataMergerUtil.java",
          "patch": "@@ -588,39 +588,20 @@ private static boolean isMergedSegment(String segName) {\n       }\n     }\n \n-    // handle the retaining of valid loads,\n-\n     // check if valid list is big enough for removing the number of seg to be retained.\n-    if (validList.size() \u003e numberOfSegToBeRetained) {\n-\n-      // after the sort remove the loads from the last as per the retaining count.\n-      Collections.sort(validList, new Comparator\u003cLoadMetadataDetails\u003e() {\n-\n-        @Override public int compare(LoadMetadataDetails seg1, LoadMetadataDetails seg2) {\n-          double segNumber1 \u003d Double.parseDouble(seg1.getLoadName());\n-          double segNumber2 \u003d Double.parseDouble(seg2.getLoadName());\n-\n-          if ((segNumber1 - segNumber2) \u003c 0) {\n-            return -1;\n-          } else if ((segNumber1 - segNumber2) \u003e 0) {\n-            return 1;\n-          }\n-          return 0;\n-\n-        }\n-      });\n-\n-      for (int i \u003d 0; i \u003c numberOfSegToBeRetained; i++) {\n-\n-        // remove last segment\n-        validList.remove(validList.size() - 1);\n+    // last element\n+    int removingIndex \u003d validList.size() - 1;\n \n+    for (int i \u003d validList.size(); i \u003e 0; i--) {\n+      if (numberOfSegToBeRetained \u003d\u003d 0) {\n+        break;\n       }\n-      return validList;\n+      // remove last segment\n+      validList.remove(removingIndex--);\n+      numberOfSegToBeRetained--;\n     }\n+    return validList;\n \n-    // case where there is no 2 loads available for merging.\n-    return new ArrayList\u003cLoadMetadataDetails\u003e(0);\n   }\n \n   /**"
        },
        {
          "file_name": "integration/spark/src/main/scala/org/carbondata/spark/rdd/CarbonDataRDDFactory.scala",
          "patch": "@@ -369,6 +369,18 @@ object CarbonDataRDDFactory extends Logging {\n     readLoadMetadataDetails(carbonLoadModel, hdfsStoreLocation)\n     var segList: util.List[LoadMetadataDetails] \u003d carbonLoadModel.getLoadMetadataDetails\n \n+    // clean up of the stale segments.\n+    try {\n+      CarbonLoaderUtil.deletePartialLoadDataIfExist(carbonLoadModel, true)\n+    }\n+    catch {\n+      case e: Exception \u003d\u003e\n+        logger\n+          .error(\"Exception in compaction thread while clean up of stale segments \" + e\n+            .getMessage\n+          )\n+    }\n+\n     var loadsToMerge \u003d CarbonDataMergerUtil.identifySegmentsToBeMerged(\n       hdfsStoreLocation,\n       carbonLoadModel,\n@@ -384,11 +396,25 @@ object CarbonDataRDDFactory extends Logging {\n         override def run(): Unit \u003d {\n \n           while (loadsToMerge.size() \u003e 1) {\n-\n+          // Deleting the any partially loaded data if present.\n+          // in some case the segment folder which is present in store will not have entry in\n+          // status.\n+          // so deleting those folders.\n+          try {\n+            CarbonLoaderUtil.deletePartialLoadDataIfExist(carbonLoadModel, true)\n+          }\n+          catch {\n+            case e: Exception \u003d\u003e\n+              logger\n+                .error(\"Exception in compaction thread while clean up of stale segments \" + e\n+                  .getMessage\n+                )\n+          }\n             val futureList: util.List[Future[Void]] \u003d new util.ArrayList[Future[Void]](\n               CarbonCommonConstants\n                 .DEFAULT_COLLECTION_SIZE\n             )\n+\n             scanSegmentsAndSubmitJob(futureList)\n \n             futureList.asScala.foreach(future \u003d\u003e {\n@@ -425,7 +451,8 @@ object CarbonDataRDDFactory extends Logging {\n \n     /**\n      * This will scan all the segments and submit the loads to be merged into the executor.\n-     * @param futureList\n+      *\n+      * @param futureList\n      */\n     def scanSegmentsAndSubmitJob(futureList: util.List[Future[Void]]): Unit \u003d {\n       breakable {\n@@ -579,8 +606,16 @@ object CarbonDataRDDFactory extends Logging {\n       // Deleting the any partially loaded data if present.\n       // in some case the segment folder which is present in store will not have entry in status.\n       // so deleting those folders.\n-      CarbonLoaderUtil.deletePartialLoadDataIfExist(carbonLoadModel)\n-\n+      try {\n+        CarbonLoaderUtil.deletePartialLoadDataIfExist(carbonLoadModel, false)\n+      }\n+      catch {\n+        case e: Exception \u003d\u003e\n+          logger\n+            .error(\"Exception in data load while clean up of stale segments \" + e\n+              .getMessage\n+            )\n+      }\n \n       // reading the start time of data load.\n       val loadStartTime \u003d CarbonLoaderUtil.readCurrentTime()"
        }
      ]
    }
  },
  {
    "name": "Memory leak causes eventual hang",
    "url": "https://github.com/jtrfp/terminal-recall/issues/108",
    "description": "After several level loads, user may notice performance problems and textures for new models turning completely black.\n\nOverworldSystem class has dangling hard references which are not releasing when an old Mission is discarded, resulting in codepages which won\u0027t release. Game will eventually hang intermittently while calling nuclearGC repeatedly.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/jtrfp/terminal-recall/commit/a5c1fd4ff3a3596bfd64c9d7e40a4950efbc672d",
      "files": [
        {
          "file_name": "src/main/java/org/jtrfp/trcl/obj/CollisionManager.java",
          "patch": "@@ -39,13 +39,16 @@ public CollisionManager(TR tr) {\n     }\n     private final Positionable [] positionableWorkArray \u003d new Positionable[4096];\n     private volatile int numPositionables \u003d0;\n+    private int numPositionablesToClear\u003d0;\n \n     public void performCollisionTests() {\n \ttry{World.relevanceExecutor.submit(new Callable\u003cList\u003cPositionable\u003e\u003e(){\n \t    @Override\n \t    public List\u003cPositionable\u003e call() {\n \t\tList\u003cPositionable\u003e list \u003d inputRelevanceList;\n+\t\tfinal int prevNumPositionables \u003d numPositionables;\n \t\tnumPositionables \u003d list.size();\n+\t\tnumPositionablesToClear \u003d Math.max(0, prevNumPositionables-numPositionables);\n \t\tif(numPositionables\u003c\u003dpositionableWorkArray.length)\n \t\t list.toArray(positionableWorkArray);\n \t\treturn list;\n@@ -69,6 +72,10 @@ public void performCollisionTests() {\n \t\t    }// end for(j)\n \t\t}// end sync(gameStateLock)\n \t\t}// end for(i)\n+\t\t//Erase removed items\n+\t\tfinal int endPoint \u003d numPositionables+numPositionablesToClear;\n+\t\tfor(int i\u003dnumPositionables; i\u003cendPoint; i++)\n+\t\t    positionableWorkArray[i]\u003dnull;\n     }//end performCollisionTests\n \n     public void remove(WorldObject worldObject) {"
        }
      ]
    }
  },
  {
    "name": "Serious memory leak on GLImage due to withOnLoad callback",
    "url": "https://github.com/ProjectSeptemberInc/gl-react-native/issues/17",
    "description": "I\u0027ve found a major memory leak, due this code:\n\n``` objc\nimage \u003d [[GLImage alloc] initWithBridge:_bridge withOnLoad:^{\n  [self onImageLoad:src];\n}];\n```\n\nThe exact reason is the self reference in the implementation of this withOnLoad callback. GLImage never get `dealloc`ated because of this.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ProjectSeptemberInc/gl-react-native/commit/475cf91f3ccb1b4a8da692fb26b175e48cf12ed3",
      "files": [
        {
          "file_name": "RNGL/GLCanvas.m",
          "patch": "@@ -216,8 +216,9 @@ - (void)syncData\n                   images[src] \u003d image;\n               }\n               if (image \u003d\u003d nil) {\n+                __weak GLCanvas *weakSelf \u003d self;\n                 image \u003d [[GLImage alloc] initWithBridge:_bridge withOnLoad:^{\n-                  [self onImageLoad:src];\n+                  if (weakSelf) [weakSelf onImageLoad:src];\n                 }];\n                 image.src \u003d src;\n                 images[src] \u003d image;"
        }
      ]
    }
  },
  {
    "name": "Network memory leak",
    "url": "https://github.com/CyclopsMC/EvilCraft/issues/98",
    "description": "See https://twitter.com/AbrarSyed101/status/471481822212128769\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/CyclopsMC/EvilCraft/commit/3e6738acd9803ffc0de175006e7186c0d110234f",
      "files": [
        {
          "file_name": "src/main/java/evilcraft/network/PacketHandler.java",
          "patch": "@@ -3,6 +3,7 @@\n import io.netty.buffer.ByteBuf;\n import io.netty.channel.ChannelHandler.Sharable;\n import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.SimpleChannelInboundHandler;\n \n import java.util.EnumMap;\n \n@@ -36,9 +37,9 @@\n  *\n  */\n @Sharable\n-public class PacketHandler extends FMLIndexedMessageToMessageCodec\u003cPacketBase\u003e {\n+public final class PacketHandler {\n \n-\tprivate static final PacketHandler INSTANCE \u003d new PacketHandler();\n+\tprivate static Codec CODEC;\n     private static final EnumMap\u003cSide, FMLEmbeddedChannel\u003e CHANNELS \u003d\n     \t\tMaps.newEnumMap(Side.class);\n \t\n@@ -53,8 +54,18 @@ public static void init() {\n         if (!CHANNELS.isEmpty()) {\n             return;\n         }\n+        \n+        CODEC \u003d new Codec();\n \n-        CHANNELS.putAll(NetworkRegistry.INSTANCE.newChannel(Reference.MOD_ID, INSTANCE));\n+        CHANNELS.putAll(NetworkRegistry.INSTANCE.newChannel(Reference.MOD_ID, CODEC, new HandlerServer()));\n+        \n+        // add handlers\n+        if (FMLCommonHandler.instance().getSide().isClient()) {\n+            // for the client\n+            FMLEmbeddedChannel channel \u003d CHANNELS.get(Side.CLIENT);\n+            String codecName \u003d channel.findChannelHandlerNameForType(Codec.class);\n+            channel.pipeline().addAfter(codecName, \"ClientHandler\", new HandlerClient());\n+        }\n     }\n     \n     /**\n@@ -63,41 +74,7 @@ public static void init() {\n      * @param packetType The class of the packet.\n      */\n     public static void register(int id, Class\u003c? extends PacketBase\u003e packetType) {\n-    \tINSTANCE.addDiscriminator(id, packetType);\n-    }\n-\n-\t@Override\n-\tpublic void encodeInto(ChannelHandlerContext context, PacketBase packet,\n-\t\t\tByteBuf target) throws Exception {\n-\t\tByteArrayDataOutput output \u003d ByteStreams.newDataOutput();\n-        packet.encode(output);\n-        target.writeBytes(output.toByteArray());\n-\t}\n-\n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext context, ByteBuf source,\n-\t\t\tPacketBase packet) {\n-\t\tByteArrayDataInput input \u003d ByteStreams.newDataInput(source.array());\n-        input.skipBytes(1); // skip the packet identifier byte\n-        packet.decode(input);\n-        \n-        if (FMLCommonHandler.instance().getEffectiveSide().isClient()) {\n-            actionClient(packet);\n-        } else {\n-            actionServer(context, packet);\n-        }\n-\t}\n-\t\n-\t@SideOnly(Side.CLIENT)\n-    private void actionClient(PacketBase packet) {\n-        Minecraft minecraft \u003d Minecraft.getMinecraft();\n-        packet.actionClient(minecraft.theWorld, minecraft.thePlayer);\n-    }\n-    \n-    private void actionServer(ChannelHandlerContext context, PacketBase packet) {\n-        EntityPlayerMP player \u003d ((NetHandlerPlayServer)context.channel()\n-        \t\t.attr(NetworkRegistry.NET_HANDLER).get()).playerEntity;\n-        packet.actionServer(player.worldObj, player);\n+    \tCODEC.addDiscriminator(id, packetType);\n     }\n     \n     /**\n@@ -176,4 +153,59 @@ public static Packet toMcPacket(PacketBase packet) {\n         return CHANNELS.get(FMLCommonHandler.instance().getEffectiveSide()).generatePacketFrom(packet);\n     }\n     \n+    /**\n+     * Coder/Decoder for using the FML messages in this system.\n+     * @author rubensworks\n+     *\n+     */\n+    private static final class Codec extends FMLIndexedMessageToMessageCodec\u003cPacketBase\u003e {\n+    \t\n+        @Override\n+        public void encodeInto(ChannelHandlerContext ctx, PacketBase packet, ByteBuf target)\n+        \t\tthrows Exception {\n+            ByteArrayDataOutput output \u003d ByteStreams.newDataOutput();\n+            packet.encode(output);\n+            target.writeBytes(output.toByteArray());\n+        }\n+\n+        @Override\n+        public void decodeInto(ChannelHandlerContext ctx, ByteBuf source, PacketBase packet) {\n+            ByteArrayDataInput input \u003d ByteStreams.newDataInput(source.array());\n+            input.skipBytes(1); // skip the packet identifier byte\n+            packet.decode(input);\n+        }\n+        \n+    }\n+    \n+    @Sharable\n+    @SideOnly(Side.CLIENT)\n+    private static final class HandlerClient extends SimpleChannelInboundHandler\u003cPacketBase\u003e {\n+        \n+    \t@Override\n+        protected void channelRead0(ChannelHandlerContext ctx, PacketBase packet)\n+        \t\tthrows Exception {\n+            Minecraft mc \u003d Minecraft.getMinecraft();\n+            packet.actionClient(mc.theWorld, mc.thePlayer);\n+        }\n+    \t\n+    }\n+\n+    @Sharable\n+    private static final class HandlerServer extends SimpleChannelInboundHandler\u003cPacketBase\u003e {\n+        \n+    \t@Override\n+        protected void channelRead0(ChannelHandlerContext ctx, PacketBase packet)\n+        \t\tthrows Exception {\n+            if (FMLCommonHandler.instance().getEffectiveSide().isClient()) {\n+                // nothing on the client thread\n+                return;\n+            }\n+            \n+            EntityPlayerMP player \u003d ((NetHandlerPlayServer) ctx.channel()\n+            \t\t.attr(NetworkRegistry.NET_HANDLER).get()).playerEntity;\n+            packet.actionServer(player.worldObj, player);\n+        }\n+    \t\n+    }\n+    \n }"
        }
      ]
    }
  },
  {
    "name": "Memory leak",
    "url": "https://github.com/MachinePublishers/jBrowserDriver/issues/82",
    "description": "A shutdown hook is added in the JBrowserDriver constructor and is not removed on close causing a reference to the instance to remain in the ApplicationShutdownHooks.hooks static field. Instances of JBrowserDriver contain a Logs instance where Selenium LogEntry instances accumulate eventually causing OutOfMemoryError depending on the max heap size. JBrowserDriver has no public API allowing the caller to manage the Logs instance.\n\nThe condition can be addressed by saving a reference to the shutdown hook created in the constructor and executing+removing it when the JBrowserDriver instance is closed OR using a static inner class for the shutdown hook to separate the JBrowserDriver instance from the hook. In addition, allowing the caller to manage the Logs instance may also be useful.\n\n(Awesome implementation BTW...thanks!)\n",
    "keywords": [
      "hook",
      "instance",
      "jbrowserdriver",
      "logs",
      "shutdown"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/MachinePublishers/jBrowserDriver/commit/f15b3682e17f90ad60013bb93fde11a48a0772fd",
      "files": [
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/FileRemover.java",
          "patch": "@@ -0,0 +1,37 @@\n+/* \n+ * jBrowserDriver (TM)\n+ * Copyright (C) 2014-2016 Machine Publishers, LLC\n+ * \n+ * Sales and support: ops@machinepublishers.com\n+ * Updates: https://github.com/MachinePublishers/jBrowserDriver\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.machinepublishers.jbrowserdriver;\n+\n+import java.io.File;\n+\n+import org.apache.commons.io.FileUtils;\n+\n+class FileRemover extends Thread {\n+  private final File toDelete;\n+\n+  FileRemover(File toDelete) {\n+    this.toDelete \u003d toDelete;\n+  }\n+\n+  @Override\n+  public void run() {\n+    FileUtils.deleteQuietly(toDelete);\n+  }\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/HttpListener.java",
          "patch": "@@ -87,15 +87,17 @@\n \n   private void trace(String label, long frame, int state, String url,\n       String contentType, double progress, int errorCode) {\n-    logs.trace(new StringBuilder()\n-        .append(\"-\").append(label).append(\"-\u003e \")\n-        .append(url)\n-        .append(\" ** {timestamp: \").append(System.currentTimeMillis())\n-        .append(\", state: \").append(states.get(state))\n-        .append(\", progress: \").append(progress)\n-        .append(\", error: \").append(errors.get(errorCode))\n-        .append(\", contentType: \").append(contentType)\n-        .append(\", frame: \").append(frame).append(\"}\").toString());\n+    if (state !\u003d LoadListenerClient.PROGRESS_CHANGED) {\n+      logs.trace(new StringBuilder()\n+          .append(\"-\").append(label).append(\"-\u003e \")\n+          .append(url)\n+          .append(\" ** {timestamp: \").append(System.currentTimeMillis())\n+          .append(\", state: \").append(states.get(state))\n+          .append(\", progress: \").append(progress)\n+          .append(\", error: \").append(errors.get(errorCode))\n+          .append(\", contentType: \").append(contentType)\n+          .append(\", frame: \").append(frame).append(\"}\").toString());\n+    }\n   }\n \n   /**"
        },
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/JBrowserDriver.java",
          "patch": "@@ -141,12 +141,7 @@\n \n       List\u003cFile\u003e items \u003d new ClasspathFinder().getUniqueClasspathElements();\n       final File classpathDir \u003d Files.createTempDirectory(\"jbd_classpath_\").toFile();\n-      Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n-        @Override\n-        public void run() {\n-          FileUtils.deleteQuietly(classpathDir);\n-        }\n-      }));\n+      Runtime.getRuntime().addShutdownHook(new FileRemover(classpathDir));\n       List\u003cString\u003e paths \u003d new ArrayList\u003cString\u003e();\n       for (File curItem : items) {\n         paths.add(curItem.getAbsoluteFile().toURI().toURL().toExternalForm());\n@@ -192,6 +187,7 @@ public void run() {\n   }\n \n   private final File tmpDir;\n+  private final FileRemover shutdownHook;\n \n   /**\n    * Constructs a browser with default settings, UTC timezone, and no proxy.\n@@ -232,13 +228,8 @@ public JBrowserDriver(final Settings settings) {\n       Logs.fatal(t);\n     }\n     this.tmpDir \u003d tmpDir;\n-    final File thisTmpDir \u003d this.tmpDir;\n-    Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n-      @Override\n-      public void run() {\n-        FileUtils.deleteQuietly(thisTmpDir);\n-      }\n-    }));\n+    this.shutdownHook \u003d new FileRemover(tmpDir);\n+    Runtime.getRuntime().addShutdownHook(shutdownHook);\n \n     synchronized (portsAvailable) {\n       for (int curPort : settings.ports()) {\n@@ -301,6 +292,15 @@ public void run() {\n     logs \u003d new Logs(logsRemote);\n   }\n \n+  @Override\n+  protected void finalize() throws Throwable {\n+    super.finalize();\n+    try {\n+      Runtime.getRuntime().removeShutdownHook(shutdownHook);\n+      shutdownHook.run();\n+    } catch (Throwable t) {}\n+  }\n+\n   private void launchProcess(final int port) {\n     final AtomicBoolean ready \u003d new AtomicBoolean();\n     final AtomicReference\u003cString\u003e logPrefix \u003d new AtomicReference\u003cString\u003e(\"\");"
        },
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/LogsServer.java",
          "patch": "@@ -22,16 +22,21 @@\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.rmi.RemoteException;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.LinkedList;\n+import java.util.List;\n import java.util.Set;\n import java.util.logging.Level;\n \n import org.openqa.selenium.logging.LogEntries;\n \n class LogsServer extends RemoteObject implements LogsRemote, org.openqa.selenium.logging.Logs {\n-  private final LinkedList\u003cEntry\u003e entries \u003d new LinkedList\u003cEntry\u003e();\n+  private final LinkedList\u003cEntry\u003e entriesNormal \u003d new LinkedList\u003cEntry\u003e();\n+  private final LinkedList\u003cEntry\u003e entriesTrace \u003d new LinkedList\u003cEntry\u003e();\n+  private static final int LOG_TYPES \u003d 2;\n+  private final Object lock \u003d new Object();\n   private static final LogsServer instance;\n   static {\n     LogsServer instanceTmp \u003d null;\n@@ -61,18 +66,19 @@ static LogsServer instance() {\n   private LogsServer() throws RemoteException {}\n \n   public void clear() {\n-    synchronized (entries) {\n-      entries.clear();\n+    synchronized (lock) {\n+      entriesNormal.clear();\n+      entriesTrace.clear();\n     }\n   }\n \n   public void trace(String message) {\n     Settings settings \u003d SettingsManager.settings();\n     final Entry entry \u003d new Entry(Level.FINEST, System.currentTimeMillis(), message);\n-    synchronized (entries) {\n-      entries.add(entry);\n-      if (settings !\u003d null \u0026\u0026 entries.size() \u003e settings.maxLogs()) {\n-        entries.removeFirst();\n+    synchronized (lock) {\n+      entriesTrace.add(entry);\n+      if (settings !\u003d null \u0026\u0026 entriesTrace.size() \u003e settings.maxLogs() / LOG_TYPES) {\n+        entriesTrace.removeFirst();\n       }\n     }\n     if (settings \u003d\u003d null || settings.traceConsole()) {\n@@ -83,10 +89,10 @@ public void trace(String message) {\n   public void warn(String message) {\n     Settings settings \u003d SettingsManager.settings();\n     final Entry entry \u003d new Entry(Level.WARNING, System.currentTimeMillis(), message);\n-    synchronized (entries) {\n-      entries.add(entry);\n-      if (settings !\u003d null \u0026\u0026 entries.size() \u003e settings.maxLogs()) {\n-        entries.removeFirst();\n+    synchronized (lock) {\n+      entriesNormal.add(entry);\n+      if (settings !\u003d null \u0026\u0026 entriesNormal.size() \u003e settings.maxLogs() / LOG_TYPES) {\n+        entriesNormal.removeFirst();\n       }\n     }\n     if (settings \u003d\u003d null || settings.warnConsole()) {\n@@ -103,10 +109,10 @@ public void exception(Throwable t) {\n         writer \u003d new StringWriter();\n         t.printStackTrace(new PrintWriter(writer));\n         entry \u003d new Entry(Level.WARNING, System.currentTimeMillis(), writer.toString());\n-        synchronized (entries) {\n-          entries.add(entry);\n-          if (settings !\u003d null \u0026\u0026 entries.size() \u003e settings.maxLogs()) {\n-            entries.removeFirst();\n+        synchronized (lock) {\n+          entriesNormal.add(entry);\n+          if (settings !\u003d null \u0026\u0026 entriesNormal.size() \u003e settings.maxLogs() / LOG_TYPES) {\n+            entriesNormal.removeFirst();\n           }\n         }\n       } catch (Throwable t2) {\n@@ -128,10 +134,17 @@ public void exception(Throwable t) {\n    */\n   @Override\n   public Entries getRemote(String s) {\n-    synchronized (entries) {\n-      Entries logEntries \u003d new Entries(entries);\n-      entries.clear();\n-      return logEntries;\n+    synchronized (lock) {\n+      try {\n+        List\u003cEntry\u003e combinedLogs \u003d new ArrayList\u003cEntry\u003e();\n+        combinedLogs.addAll(entriesNormal);\n+        combinedLogs.addAll(entriesTrace);\n+        Entries logEntries \u003d new Entries(combinedLogs);\n+        return logEntries;\n+      } finally {\n+        entriesNormal.clear();\n+        entriesTrace.clear();\n+      }\n     }\n   }\n \n@@ -140,12 +153,8 @@ public Entries getRemote(String s) {\n    */\n   @Override\n   public LogEntries get(String s) {\n-    synchronized (entries) {\n-      try {\n-        return new Entries(entries).toLogEntries();\n-      } finally {\n-        entries.clear();\n-      }\n+    synchronized (lock) {\n+      return getRemote(null).toLogEntries();\n     }\n   }\n "
        },
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/Settings.java",
          "patch": "@@ -176,7 +176,7 @@\n     private boolean traceConsole;\n     private boolean warnConsole \u003d true;\n     private boolean wireConsole;\n-    private int maxLogs \u003d 5000;\n+    private int maxLogs \u003d 3000;\n     private boolean hostnameVerification \u003d true;\n     private boolean javascript \u003d true;\n     private int socketTimeout \u003d -1;\n@@ -813,7 +813,7 @@ public Builder wireConsole(boolean wireConsole) {\n      * Maximum number of log entries to store in memory, accessible via the Selenium APIs.\n      * The oldest log entry is dropped once the max is reached. Regardless of this setting,\n      * logs are cleared per instance of JBrowserDriver after a call to quit(), reset(), or Logs.get(String).\n-     * Defaults to \u003ccode\u003e5000\u003c/code\u003e.\n+     * Defaults to \u003ccode\u003e3000\u003c/code\u003e.\n      * \n      * @param maxLogs\n      * @return this Builder"
        },
        {
          "file_name": "src/com/machinepublishers/jbrowserdriver/StreamConnectionClient.java",
          "patch": "@@ -42,7 +42,6 @@\n import javax.net.ssl.SSLContext;\n import javax.net.ssl.TrustManagerFactory;\n \n-import org.apache.commons.io.FileUtils;\n import org.apache.http.client.ClientProtocolException;\n import org.apache.http.client.methods.CloseableHttpResponse;\n import org.apache.http.client.methods.HttpRequestBase;\n@@ -79,25 +78,23 @@\n   private final PoolingHttpClientConnectionManager manager;\n   private final CloseableHttpClient client;\n   private final CloseableHttpClient cachingClient;\n+  private final FileRemover shutdownHook;\n \n   StreamConnectionClient() {\n     File cacheDirTmp \u003d SettingsManager.settings().cacheDir();\n+    FileRemover shutdownHookTmp \u003d null;\n     try {\n       cacheDirTmp \u003d cacheDirTmp \u003d\u003d null ? Files.createTempDirectory(\"jbd_webcache_\").toFile() : cacheDirTmp;\n       if (SettingsManager.settings().cacheDir() \u003d\u003d null) {\n-        final File finalCacheDir \u003d cacheDirTmp;\n-        Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n-          @Override\n-          public void run() {\n-            FileUtils.deleteQuietly(finalCacheDir);\n-          }\n-        }));\n+        shutdownHookTmp \u003d new FileRemover(cacheDirTmp);\n+        Runtime.getRuntime().addShutdownHook(shutdownHookTmp);\n       } else {\n         cacheDirTmp.mkdirs();\n       }\n     } catch (Throwable t) {\n       LogsServer.instance().exception(t);\n     }\n+    shutdownHook \u003d shutdownHookTmp;\n     cacheDir \u003d cacheDirTmp;\n     httpCache \u003d new HttpCache(cacheDirTmp);\n \n@@ -107,7 +104,7 @@ public void run() {\n         .setMaxObjectSize(SettingsManager.settings().cacheEntrySize())\n         .build();\n     ConnectionSocketFactory sslSocketFactory \u003d SettingsManager.settings()\n-    \t\t.hostnameVerification() ? new SslSocketFactory(sslContext()) : new SslSocketWithoutHostnameVerificationFactory(sslContext());\n+        .hostnameVerification() ? new SslSocketFactory(sslContext()) : new SslSocketWithoutHostnameVerificationFactory(sslContext());\n     registry \u003d RegistryBuilder.\u003cConnectionSocketFactory\u003e create()\n         .register(\"https\", sslSocketFactory)\n         .register(\"http\", new SocketFactory())\n@@ -135,6 +132,15 @@ public void run() {\n         .build();\n   }\n \n+  @Override\n+  protected void finalize() throws Throwable {\n+    super.finalize();\n+    try {\n+      Runtime.getRuntime().removeShutdownHook(shutdownHook);\n+      shutdownHook.run();\n+    } catch (Throwable t) {}\n+  }\n+\n   File cacheDir() {\n     return cacheDir;\n   }\n@@ -235,16 +241,16 @@ public Socket createSocket(final HttpContext context) throws IOException {\n       return newSocket(context);\n     }\n   }\n-  \n+\n   private static class SslSocketWithoutHostnameVerificationFactory extends SSLConnectionSocketFactory {\n-\t  public SslSocketWithoutHostnameVerificationFactory(final SSLContext sslContext) {\n-\t\t  super(sslContext, NoopHostnameVerifier.INSTANCE);\n-\t  }\n-\t  \n-\t  @Override\n-\t  public Socket createSocket(final HttpContext context) throws IOException {\n-\t\t  return newSocket(context);\n-\t  }\n+    public SslSocketWithoutHostnameVerificationFactory(final SSLContext sslContext) {\n+      super(sslContext, NoopHostnameVerifier.INSTANCE);\n+    }\n+\n+    @Override\n+    public Socket createSocket(final HttpContext context) throws IOException {\n+      return newSocket(context);\n+    }\n   }\n \n   private static class SocketFactory extends PlainConnectionSocketFactory {"
        }
      ]
    }
  },
  {
    "name": "Leaked system memory reservation in ExchangeOperator",
    "url": "https://github.com/prestodb/presto/issues/7278",
    "description": "`ExchangeOperator` calls `pipelineContext.reserveSystemMemory`, but appears to leak this reservation under some circumstances. It looks like this was introduced by 64c3fc8b027f598d63fd13e4d8e0b91b77d7d012\r\n\r\nGenerally, `Operator`s should use `OperatorContext.reserveSystemMemory` not `PipelineContext.reserveSystemMemory`\r\n\r\nTo reproduce run `TestMemoryManager.testClusterPools` with an invocation count of at least 100",
    "keywords": [
      "reservesystemmemory`"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/prestodb/presto/commit/e3535bbfecac737074be5b408bac22c64dfe03ff",
      "files": [
        {
          "file_name": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeClient.java",
          "patch": "@@ -203,30 +203,32 @@ private SerializedPage postProcessPage(SerializedPage page)\n     {\n         checkState(!Thread.holdsLock(this), \"Can not get next page while holding a lock on this\");\n \n+        if (page \u003d\u003d null) {\n+            return null;\n+        }\n+\n         if (page \u003d\u003d NO_MORE_PAGES) {\n             // mark client closed\n-            closed.set(true);\n+            close();\n \n             // add end marker back to queue\n             checkState(pageBuffer.add(NO_MORE_PAGES), \"Could not add no more pages marker\");\n             notifyBlockedCallers();\n \n             // don\u0027t return end of stream marker\n-            page \u003d null;\n+            return null;\n         }\n \n-        if (page !\u003d null) {\n-            synchronized (this) {\n-                if (!closed.get()) {\n-                    bufferBytes -\u003d page.getRetainedSizeInBytes();\n-                    systemMemoryUsageListener.updateSystemMemoryUsage(-page.getRetainedSizeInBytes());\n+        synchronized (this) {\n+            if (!closed.get()) {\n+                bufferBytes -\u003d page.getRetainedSizeInBytes();\n+                systemMemoryUsageListener.updateSystemMemoryUsage(-page.getRetainedSizeInBytes());\n+                if (pageBuffer.peek() \u003d\u003d NO_MORE_PAGES) {\n+                    close();\n                 }\n             }\n-            if (!closed.get() \u0026\u0026 pageBuffer.peek() \u003d\u003d NO_MORE_PAGES) {\n-                closed.set(true);\n-            }\n-            scheduleRequestIfNecessary();\n         }\n+        scheduleRequestIfNecessary();\n         return page;\n     }\n \n@@ -272,8 +274,8 @@ public synchronized void scheduleRequestIfNecessary()\n             if (pageBuffer.peekLast() !\u003d NO_MORE_PAGES) {\n                 checkState(pageBuffer.add(NO_MORE_PAGES), \"Could not add no more pages marker\");\n             }\n-            if (!closed.get() \u0026\u0026 pageBuffer.peek() \u003d\u003d NO_MORE_PAGES) {\n-                closed.set(true);\n+            if (pageBuffer.peek() \u003d\u003d NO_MORE_PAGES) {\n+                close();\n             }\n             notifyBlockedCallers();\n             return;"
        }
      ]
    }
  },
  {
    "name": "Keeping doneCallbacks clean, massive memory leaks fix",
    "url": "https://github.com/jdeferred/jdeferred/pull/41",
    "description": "Originally doneCallbacks never have been cleaned, this way if DeferredObject is application level and different views, android activities passing themselves as callback - reference kept forever causing massive memory leaks.\n\nMoreover, objects that register callbacks after .resolve/reject was called still were written into callbacks lists\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/jdeferred/jdeferred/commit/2ea5d9d2a7945f7d4b335b7f22798d51aa8a47f7",
      "files": [
        {
          "file_name": "core/src/main/java/org/jdeferred/impl/AbstractPromise.java",
          "patch": "@@ -59,26 +59,35 @@ public State state() {\n \t@Override\n \tpublic Promise\u003cD, F, P\u003e done(DoneCallback\u003cD\u003e callback) {\n \t\tsynchronized (this) {\n-\t\t\tdoneCallbacks.add(callback);\n-\t\t\tif (isResolved()) triggerDone(callback, resolveResult);\n+\t\t\tif (isResolved()){\n+\t\t\t\ttriggerDone(callback, resolveResult);\n+\t\t\t}else{\n+\t\t\t\tdoneCallbacks.add(callback);\n+\t\t\t}\n \t\t}\n \t\treturn this;\n \t}\n \n \t@Override\n \tpublic Promise\u003cD, F, P\u003e fail(FailCallback\u003cF\u003e callback) {\n \t\tsynchronized (this) {\n-\t\t\tfailCallbacks.add(callback);\n-\t\t\tif (isRejected()) triggerFail(callback, rejectResult);\n+\t\t\tif(isRejected()){\n+\t\t\t\ttriggerFail(callback, rejectResult);\n+\t\t\t}else{\n+\t\t\t\tfailCallbacks.add(callback);\n+\t\t\t}\n \t\t}\n \t\treturn this;\n \t}\n \t\n \t@Override\n \tpublic Promise\u003cD, F, P\u003e always(AlwaysCallback\u003cD, F\u003e callback) {\n \t\tsynchronized (this) {\n-\t\t\talwaysCallbacks.add(callback);\n-\t\t\tif (!isPending()) triggerAlways(callback, state, resolveResult, rejectResult);\n+\t\t\tif(isPending()){\n+\t\t\t\talwaysCallbacks.add(callback);\n+\t\t\t}else{\n+\t\t\t\ttriggerAlways(callback, state, resolveResult, rejectResult);\n+\t\t\t}\n \t\t}\n \t\treturn this;\n \t}\n@@ -91,6 +100,7 @@ protected void triggerDone(D resolved) {\n \t\t\t\tlog.error(\"an uncaught exception occured in a DoneCallback\", e);\n \t\t\t}\n \t\t}\n+\t\tdoneCallbacks.clear();\n \t}\n \t\n \tprotected void triggerDone(DoneCallback\u003cD\u003e callback, D resolved) {\n@@ -105,6 +115,7 @@ protected void triggerFail(F rejected) {\n \t\t\t\tlog.error(\"an uncaught exception occured in a FailCallback\", e);\n \t\t\t}\n \t\t}\n+\t\tfailCallbacks.clear();\n \t}\n \t\n \tprotected void triggerFail(FailCallback\u003cF\u003e callback, F rejected) {\n@@ -133,6 +144,7 @@ protected void triggerAlways(State state, D resolve, F reject) {\n \t\t\t\tlog.error(\"an uncaught exception occured in a AlwaysCallback\", e);\n \t\t\t}\n \t\t}\n+\t\talwaysCallbacks.clear();\n \t\t\n \t\tsynchronized (this) {\n \t\t\tthis.notifyAll();"
        }
      ]
    }
  },
  {
    "name": "DroneClaimManager memory leak",
    "url": "https://github.com/MineMaarten/PneumaticCraft/issues/638",
    "description": "pneumaticCraft.common.ai.DroneClaimManager.claimManagers leaks large quantities of world references as observed by heap dump analysis. Usually the claimManagers map is the only path holding a strong reference to the worlds.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/MineMaarten/PneumaticCraft/commit/094846fe2666d1ba664da33a3531ab0418b58052",
      "files": [
        {
          "file_name": "src/pneumaticCraft/common/ai/DroneClaimManager.java",
          "patch": "@@ -12,15 +12,15 @@\n  */\n public class DroneClaimManager{\n \n-    private static Map\u003cWorld, DroneClaimManager\u003e claimManagers \u003d new HashMap\u003cWorld, DroneClaimManager\u003e();\n+    private static Map\u003cInteger, DroneClaimManager\u003e claimManagers \u003d new HashMap\u003cInteger, DroneClaimManager\u003e();\n     private final Map\u003cChunkPosition, Integer\u003e currentPositions \u003d new HashMap\u003cChunkPosition, Integer\u003e();\n     private static final int TIMEOUT \u003d DroneAIManager.TICK_RATE + 1;\n \n     public static DroneClaimManager getInstance(World world){\n-        DroneClaimManager manager \u003d claimManagers.get(world);\n+        DroneClaimManager manager \u003d claimManagers.get(world.provider.dimensionId);\n         if(manager \u003d\u003d null) {\n             manager \u003d new DroneClaimManager();\n-            claimManagers.put(world, manager);\n+            claimManagers.put(world.provider.dimensionId, manager);\n         }\n         return manager;\n     }"
        }
      ]
    }
  },
  {
    "name": "Fix various memory leaks",
    "url": "https://github.com/TCA-Team/TumCampusApp/pull/331",
    "description": "Fixed various leaks of activities that I traced with [LeakCanary](https://github.com/square/leakcanary).\nThis decreased Memory-usage about 10% on my device.\n\nAlso used the smaller version of the GooglePlayServices, which only include the GCM functions, as this should be sufficient for this App.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/TCA-Team/TumCampusApp/commit/91f76fa680793901769cccd75e8b2876d55ee6b1",
      "files": [
        {
          "file_name": "app/build.gradle",
          "patch": "@@ -38,13 +38,12 @@ android {\n }\n \n dependencies {\n-    compile fileTree(dir: \u0027libs\u0027, include: [\u0027*.jar\u0027])\n     compile \u0027com.android.support:appcompat-v7:23.0.1\u0027\n     compile \u0027com.android.support:support-v4:23.0.1\u0027\n     compile \u0027com.android.support:cardview-v7:23.0.1\u0027\n     compile \u0027com.android.support:recyclerview-v7:23.0.1\u0027\n     compile \u0027com.android.support:design:23.0.1\u0027\n-    compile \u0027com.google.android.gms:play-services:8.1.0\u0027\n+    compile \u0027com.google.android.gms:play-services-gcm:8.1.0\u0027\n     compile \u0027com.google.code.gson:gson:2.4\u0027\n     compile \u0027com.nineoldandroids:library:2.4.0\u0027\n     compile \u0027se.emilsjolander:stickylistheaders:2.7.0\u0027"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/activities/ChatActivity.java",
          "patch": "@@ -550,4 +550,10 @@ public void failure(RetrofitError e) {\n             }\n         });\n     }\n+\n+    @Override\n+    protected void onDestroy() {\n+        super.onDestroy();\n+        mUpdateHandler.removeCallbacksAndMessages(null);\n+    }\n }"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/activities/StartupActivity.java",
          "patch": "@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         setContentView(R.layout.activity_startup);\n \n         //Our own Custom exception handler\n-        ExceptionHandler.setup(this);\n+        ExceptionHandler.setup(getApplicationContext());\n \n         //Upload stats\n         ImplicitCounter.Counter(this);"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/activities/TransportationDetailsActivity.java",
          "patch": "@@ -2,6 +2,7 @@\n \n import android.content.Intent;\n import android.os.Bundle;\n+import android.view.View;\n import android.widget.LinearLayout;\n \n import java.util.List;\n@@ -98,4 +99,16 @@ protected void onLoadFinished(List\u003cTransportManager.Departure\u003e result) {\n             mViewResults.addView(view);\n         }\n     }\n+\n+    @Override\n+    protected void onDestroy() {\n+        super.onDestroy();\n+        for (int i \u003d 0; i \u003c mViewResults.getChildCount(); i++) {\n+            View view \u003d mViewResults.getChildAt(i);\n+            if (!(view instanceof DepartureView)) {\n+                continue;\n+            }\n+            ((DepartureView) view).removeAllCallbacksAndMessages();\n+        }\n+    }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/adapters/RoomFinderListAdapter.java",
          "patch": "@@ -1,7 +1,6 @@\n package de.tum.in.tumcampus.adapters;\n \n import android.app.Activity;\n-import android.content.Context;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -30,7 +29,7 @@\n \n \tpublic RoomFinderListAdapter(Activity activity, ArrayList\u003cHashMap\u003cString, String\u003e\u003e d) {\n \t\tdata \u003d d;\n-\t\tinflater \u003d (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\t\tinflater \u003d LayoutInflater.from(activity.getApplicationContext());\n \t}\n \n \t@Override"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/auxiliary/DepartureView.java",
          "patch": "@@ -27,6 +27,7 @@\n     private final TextSwitcher mTimeSwitcher;\n     private int mCountDown;\n     private final Handler mHandler;\n+    private final ValueAnimator mValueAnimator;\n \n     /**\n      * Standard constructor for DepartureView\n@@ -70,6 +71,22 @@ public DepartureView(Context context, boolean big) {\n         mTimeSwitcher.setOutAnimation(out);\n \n         mHandler \u003d new Handler();\n+\n+        // Set up the ValueAnimator for animateOut()\n+        mValueAnimator \u003d ValueAnimator.ofInt(getHeight(), 0).setDuration(500);\n+        mValueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n+            @Override\n+            public void onAnimationUpdate(ValueAnimator animation) {\n+                int value \u003d (Integer) animation.getAnimatedValue();\n+                if (getLayoutParams() !\u003d null) {\n+                    getLayoutParams().height \u003d value;\n+                    requestLayout();\n+                    if (value \u003d\u003d 0) {\n+                        setVisibility(View.GONE);\n+                    }\n+                }\n+            }\n+        });\n     }\n \n     /**\n@@ -125,21 +142,15 @@ public void run() {\n     }\n \n     private void animateOut() {\n-        ValueAnimator va \u003d ValueAnimator.ofInt(getHeight(), 0);\n-        va.setDuration(500);\n-        va.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n-            @Override\n-            public void onAnimationUpdate(ValueAnimator animation) {\n-                int value \u003d (Integer) animation.getAnimatedValue();\n-                if (getLayoutParams() !\u003d null) {\n-                    getLayoutParams().height \u003d value;\n-                    requestLayout();\n-                    if (value \u003d\u003d 0) {\n-                        setVisibility(View.GONE);\n-                    }\n-                }\n-            }\n-        });\n-        va.start();\n+        mValueAnimator.start();\n+    }\n+\n+    /**\n+     * Call this, when the DepartureView isn\u0027t needed anymore.\n+     */\n+    public void removeAllCallbacksAndMessages(){\n+        mHandler.removeCallbacksAndMessages(null);\n+        mValueAnimator.cancel();\n+        mValueAnimator.removeAllUpdateListeners();\n     }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/models/TUMCabeClient.java",
          "patch": "@@ -84,7 +84,7 @@ private TUMCabeClient() {\n     }\n \n     public static TUMCabeClient getInstance(Context c) {\n-        TUMCabeClient.context \u003d c;\n+        TUMCabeClient.context \u003d c.getApplicationContext();\n         if (instance \u003d\u003d null) {\n             instance \u003d new TUMCabeClient();\n         }"
        },
        {
          "file_name": "app/src/main/java/de/tum/in/tumcampus/models/managers/CardManager.java",
          "patch": "@@ -92,7 +92,7 @@ public static Card getCard(int pos) {\n      * 6. Add an instance of the manager class to the managers list below\n      */\n     public static synchronized void update(Context context) {\n-        mContext \u003d context;\n+        mContext \u003d context.getApplicationContext();\n \n         // Use temporary array to avoid that the main thread is\n         // trying to access an empty array"
        }
      ]
    }
  },
  {
    "name": "Fix Rx memory leak in StorIOContentResolver",
    "url": "https://github.com/pushtorefresh/storio/pull/360",
    "description": "Closes #359, and little refactoring (of course :).\n\n@nikitin-da PTAL, my fault :(\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/pushtorefresh/storio/commit/4e314b1c950a829ca6f78d6d648f2d333a1b3d8f",
      "files": [
        {
          "file_name": "storio-content-resolver/src/main/java/com/pushtorefresh/storio/contentresolver/impl/ChangesFilter.java",
          "patch": "@@ -1,41 +0,0 @@\n-package com.pushtorefresh.storio.contentresolver.impl;\n-\n-import android.net.Uri;\n-import android.support.annotation.NonNull;\n-\n-import com.pushtorefresh.storio.contentresolver.Changes;\n-\n-import java.util.Set;\n-\n-import rx.Observable;\n-import rx.functions.Func1;\n-\n-/**\n- * Hides RxJava from ClassLoader via separate class.\n- */\n-final class ChangesFilter implements Func1\u003cChanges, Boolean\u003e {\n-\n-    @NonNull\n-    private final Set\u003cUri\u003e uris;\n-\n-    private ChangesFilter(@NonNull Set\u003cUri\u003e uris) {\n-        this.uris \u003d uris;\n-    }\n-\n-    @NonNull\n-    static Observable\u003cChanges\u003e apply(@NonNull Observable\u003cChanges\u003e publishSubject, @NonNull Set\u003cUri\u003e uris) {\n-        return publishSubject.filter(new ChangesFilter(uris));\n-    }\n-\n-    @Override\n-    public Boolean call(Changes changes) {\n-        // if one of changed uri found in uris for subscription -\u003e notify observer\n-        for (Uri uri : uris) {\n-            if (changes.affectedUris().contains(uri)) {\n-                return true;\n-            }\n-        }\n-\n-        return false;\n-    }\n-}"
        },
        {
          "file_name": "storio-content-resolver/src/main/java/com/pushtorefresh/storio/contentresolver/impl/DefaultStorIOContentResolver.java",
          "patch": "@@ -2,7 +2,6 @@\n \n import android.content.ContentResolver;\n import android.content.ContentValues;\n-import android.database.ContentObserver;\n import android.database.Cursor;\n import android.net.Uri;\n import android.os.Handler;\n@@ -17,7 +16,6 @@\n import com.pushtorefresh.storio.contentresolver.query.InsertQuery;\n import com.pushtorefresh.storio.contentresolver.query.Query;\n import com.pushtorefresh.storio.contentresolver.query.UpdateQuery;\n-import com.pushtorefresh.storio.internal.ChangesBus;\n import com.pushtorefresh.storio.internal.Queries;\n \n import java.util.Collections;\n@@ -28,7 +26,6 @@\n import rx.Observable;\n \n import static com.pushtorefresh.storio.internal.Checks.checkNotNull;\n-import static com.pushtorefresh.storio.internal.Environment.RX_JAVA_IS_AVAILABLE;\n import static com.pushtorefresh.storio.internal.Environment.throwExceptionIfRxJavaIsNotAvailable;\n \n /**\n@@ -43,36 +40,16 @@\n     private final ContentResolver contentResolver;\n \n     @NonNull\n-    private final ChangesBus\u003cChanges\u003e changesBus \u003d new ChangesBus\u003cChanges\u003e();\n-\n-    // can be null, if RxJava is not available\n-    @Nullable\n-    private final ContentObserver contentObserver;\n+    private final Handler contentObserverHandler;\n \n     protected DefaultStorIOContentResolver(@NonNull ContentResolver contentResolver, @Nullable Map\u003cClass\u003c?\u003e, ContentResolverTypeMapping\u003c?\u003e\u003e typesMapping) {\n         this.contentResolver \u003d contentResolver;\n         internal \u003d new InternalImpl(typesMapping);\n \n-        if (RX_JAVA_IS_AVAILABLE) {\n-            final HandlerThread handlerThread \u003d new HandlerThread(\"StorIOContentResolverNotificationsThread\");\n-            handlerThread.start(); // multithreading: don\u0027t block me, bro!\n-\n-            contentObserver \u003d new ContentObserver(new Handler(handlerThread.getLooper())) {\n-                @Override\n-                public boolean deliverSelfNotifications() {\n-                    return false;\n-                }\n-\n-                @SuppressWarnings(\"ConstantConditions\")\n-                @Override\n-                public void onChange(boolean selfChange, Uri uri) {\n-                    // sending changes to changesBus\n-                    changesBus.onNext(Changes.newInstance(uri));\n-                }\n-            };\n-        } else {\n-            contentObserver \u003d null;\n-        }\n+        final HandlerThread handlerThread \u003d new HandlerThread(\"StorIOContentResolverNotificationsThread\");\n+        handlerThread.start(); // multithreading: don\u0027t block me, bro!\n+\n+        contentObserverHandler \u003d new Handler(handlerThread.getLooper());\n     }\n \n     /**\n@@ -84,16 +61,9 @@ public void onChange(boolean selfChange, Uri uri) {\n     public Observable\u003cChanges\u003e observeChangesOfUris(@NonNull final Set\u003cUri\u003e uris) {\n         throwExceptionIfRxJavaIsNotAvailable(\"Observing changes in StorIOContentProvider\");\n \n-        for (Uri uri : uris) {\n-            contentResolver.registerContentObserver(\n-                    uri,\n-                    true,\n-                    contentObserver\n-            );\n-        }\n-\n-        // indirect usage of RxJava filter() required to avoid problems with ClassLoader when RxJava is not in ClassPath\n-        return ChangesFilter.apply(changesBus.asObservable(), uris);\n+        // indirect usage of RxJava\n+        // required to avoid problems with ClassLoader when RxJava is not in ClassPath\n+        return RxChangesObserver.observeChanges(contentResolver, uris, contentObserverHandler);\n     }\n \n     /**"
        },
        {
          "file_name": "storio-content-resolver/src/main/java/com/pushtorefresh/storio/contentresolver/impl/RxChangesObserver.java",
          "patch": "@@ -0,0 +1,64 @@\n+package com.pushtorefresh.storio.contentresolver.impl;\n+\n+import android.content.ContentResolver;\n+import android.database.ContentObserver;\n+import android.net.Uri;\n+import android.os.Handler;\n+import android.support.annotation.NonNull;\n+\n+import com.pushtorefresh.storio.contentresolver.Changes;\n+\n+import java.util.Set;\n+\n+import rx.Observable;\n+import rx.Subscriber;\n+import rx.functions.Action0;\n+import rx.subscriptions.Subscriptions;\n+\n+/**\n+ * Hides RxJava from ClassLoader via separate class.\n+ *\n+ * FOR INTERNAL USAGE ONLY.\n+ */\n+final class RxChangesObserver {\n+\n+    private RxChangesObserver() {\n+        throw new IllegalStateException(\"No instances please.\");\n+    }\n+\n+    @NonNull\n+    static Observable\u003cChanges\u003e observeChanges(@NonNull final ContentResolver contentResolver, @NonNull final Set\u003cUri\u003e uris, @NonNull final Handler handler) {\n+        return Observable.create(new Observable.OnSubscribe\u003cChanges\u003e() {\n+            @Override\n+            public void call(final Subscriber\u003c? super Changes\u003e subscriber) {\n+                final ContentObserver contentObserver \u003d new ContentObserver(handler) {\n+                    @Override\n+                    public boolean deliverSelfNotifications() {\n+                        return false;\n+                    }\n+\n+                    @Override\n+                    public void onChange(boolean selfChange, Uri uri) {\n+                        subscriber.onNext(Changes.newInstance(uri));\n+                    }\n+                };\n+\n+                for (Uri uri : uris) {\n+                    contentResolver.registerContentObserver(\n+                            uri,\n+                            true,\n+                            contentObserver\n+                    );\n+                }\n+\n+                subscriber.add(Subscriptions.create(new Action0() {\n+                    @Override\n+                    public void call() {\n+                        // Preventing memory leak on unsubscribe from Observable\n+                        contentResolver.unregisterContentObserver(contentObserver);\n+                    }\n+                }));\n+            }\n+        });\n+    }\n+}"
        },
        {
          "file_name": "storio-content-resolver/src/test/java/com/pushtorefresh/storio/contentresolver/impl/RxChangesObserverTest.java",
          "patch": "@@ -0,0 +1,101 @@\n+package com.pushtorefresh.storio.contentresolver.impl;\n+\n+import android.content.ContentResolver;\n+import android.database.ContentObserver;\n+import android.net.Uri;\n+import android.os.Handler;\n+\n+import com.pushtorefresh.storio.contentresolver.Changes;\n+\n+import org.junit.Test;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import rx.Observable;\n+import rx.Subscription;\n+\n+import static java.util.Collections.singleton;\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Matchers.anyBoolean;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class RxChangesObserverTest {\n+\n+    @Test\n+    public void shouldRegisterContentObserverAfterSubscribingToObservable() {\n+        ContentResolver contentResolver \u003d mock(ContentResolver.class);\n+\n+        Observable\u003cChanges\u003e observable \u003d RxChangesObserver\n+                .observeChanges(\n+                        contentResolver,\n+                        singleton(mock(Uri.class)),\n+                        mock(Handler.class)\n+                );\n+\n+        // Should not register ContentObserver before subscribing to Observable\n+        verify(contentResolver, times(0))\n+                .registerContentObserver(any(Uri.class), anyBoolean(), any(ContentObserver.class));\n+\n+        Subscription subscription \u003d observable.subscribe();\n+\n+        // Should register Content Observer after subscribing to Observable\n+        verify(contentResolver)\n+                .registerContentObserver(any(Uri.class), anyBoolean(), any(ContentObserver.class));\n+\n+        subscription.unsubscribe();\n+    }\n+\n+    @Test\n+    public void shouldUnregisterContentObserverAfterUnsubscribingFromObservable() {\n+        ContentResolver contentResolver \u003d mock(ContentResolver.class);\n+\n+        Subscription subscription \u003d RxChangesObserver\n+                .observeChanges(\n+                        contentResolver,\n+                        singleton(mock(Uri.class)),\n+                        mock(Handler.class))\n+                .subscribe();\n+\n+        // Should not unregister before unsubscibe from Subscription\n+        verify(contentResolver, times(0)).unregisterContentObserver(any(ContentObserver.class));\n+\n+        subscription.unsubscribe();\n+\n+        // Should unregister ContentObserver after unsubscribing from Subscription\n+        verify(contentResolver).unregisterContentObserver(any(ContentObserver.class));\n+    }\n+\n+    @Test\n+    public void shouldRegisterContentObserverForPassedUris() {\n+        Set\u003cUri\u003e uris \u003d new HashSet\u003cUri\u003e();\n+\n+        // All Uris are different (objects)\n+        uris.add(mock(Uri.class));\n+        uris.add(mock(Uri.class));\n+        uris.add(mock(Uri.class));\n+\n+        ContentResolver contentResolver \u003d mock(ContentResolver.class);\n+\n+        Observable\u003cChanges\u003e observable \u003d RxChangesObserver\n+                .observeChanges(\n+                        contentResolver,\n+                        uris,\n+                        mock(Handler.class)\n+                );\n+\n+        // Should not register ContentObserver before subscribing to Observable\n+        verify(contentResolver, times(0))\n+                .registerContentObserver(any(Uri.class), anyBoolean(), any(ContentObserver.class));\n+\n+        Subscription subscription \u003d observable.subscribe();\n+\n+        // Should register ContentObserver for each uri from passed set of uris\n+        for (Uri uri : uris) {\n+            verify(contentResolver).registerContentObserver(eq(uri), anyBoolean(), any(ContentObserver.class));\n+        }\n+    }\n+}"
        },
        {
          "file_name": "storio-test-without-rxjava/build.gradle",
          "patch": "@@ -17,6 +17,10 @@ android {\n     packagingOptions {\n         exclude \u0027LICENSE.txt\u0027 // multiple libs have this file -\u003e cause build error\n     }\n+\n+    testOptions {\n+        unitTests.returnDefaultValues \u003d true\n+    }\n }\n \n dependencies {"
        }
      ]
    }
  },
  {
    "name": "Memory leak cleanup for bosses \u0026 eggs",
    "url": "https://github.com/Ne0nx3r0/RareItemHunter2/issues/10",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Ne0nx3r0/RareItemHunter2/commit/fe8dfcd7fef0bee6aff537501a91fc7caef42921",
      "files": [
        {
          "file_name": "com/ne0nx3r0/rih/boss/BossGarbageCollection.java",
          "patch": "@@ -0,0 +1,68 @@\n+package com.ne0nx3r0.rih.boss;\r\n+\r\n+import com.ne0nx3r0.rih.RareItemHunterPlugin;\r\n+import com.ne0nx3r0.rih.boss.egg.BossEgg;\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n+import java.util.Map.Entry;\r\n+import java.util.UUID;\r\n+import net.minecraft.server.v1_7_R3.Material;\r\n+import org.bukkit.World;\r\n+import org.bukkit.entity.LivingEntity;\r\n+\r\n+class BossGarbageCollection {\r\n+    BossGarbageCollection(final RareItemHunterPlugin plugin, final BossManager bm,long timer) {\r\n+        plugin.getServer().getScheduler().runTaskTimer(plugin, new Runnable(){\r\n+            @Override\r\n+            public void run() {\r\n+                List\u003cBoss\u003e activeBosses \u003d bm.getAllActiveBosses();\r\n+                \r\n+                if(!activeBosses.isEmpty()){\r\n+                    Map\u003cUUID,Boss\u003e bossesFound \u003d new HashMap\u003c\u003e();\r\n+                    \r\n+                    for(Boss boss : bm.getAllActiveBosses()){\r\n+                        bossesFound.put(boss.getUniqueID(), boss);\r\n+                    }\r\n+                    \r\n+                    // Yikes. \r\n+                    // I just don\u0027t know how else to detect \r\n+                    // all possible ways to remove an entity\r\n+                    //\r\n+                    // Note: some bosses can teleport to new worlds\r\n+                    for(World world : plugin.getServer().getWorlds()){\r\n+                        for(LivingEntity le : world.getLivingEntities()){\r\n+                            for(Entry\u003cUUID,Boss\u003e entry : bossesFound.entrySet()){\r\n+                                if(entry.getKey().equals(le.getUniqueId())){\r\n+                                    // found\r\n+                                    entry.setValue(null);\r\n+                                }\r\n+                            }\r\n+                        }\r\n+                    }\r\n+                    \r\n+                    for(Entry\u003cUUID,Boss\u003e entry : bossesFound.entrySet()){\r\n+                        // wasn\u0027t found, remove entry\r\n+                        if(entry.getValue() !\u003d null){\r\n+                            activeBosses.remove(entry.getValue());\r\n+                        }\r\n+                    }\r\n+                }\r\n+                \r\n+                // Clean up the eggs, much cleaner\r\n+                List\u003cBossEgg\u003e removeThese \u003d new ArrayList\u003c\u003e();\r\n+                \r\n+                for(BossEgg egg : bm.getAllActiveEggs()){\r\n+                    if(!egg.getLocation().getBlock().getType().equals(Material.DRAGON_EGG)){\r\n+                        removeThese.add(egg);\r\n+                    }\r\n+                }\r\n+                \r\n+                for(BossEgg egg : removeThese){\r\n+                    bm.removeBossEgg(egg);\r\n+                }\r\n+            }\r\n+        }, timer, timer);\r\n+    }\r\n+}\r"
        },
        {
          "file_name": "com/ne0nx3r0/rih/boss/BossManager.java",
          "patch": "@@ -21,6 +21,7 @@\n     private final List\u003cBoss\u003e activeBosses;\r\n     private final List\u003cBossEgg\u003e bossEggs;\r\n     private final RareItemHunterPlugin plugin;\r\n+    private BossGarbageCollection bossGC;\r\n \r\n     public BossManager(RareItemHunterPlugin plugin) {\r\n         this.plugin \u003d plugin;\r\n@@ -40,6 +41,8 @@ public BossManager(RareItemHunterPlugin plugin) {\n         this.activeBosses \u003d bp.getActiveBosses();\r\n         \r\n         bp.startSaving(20*30);\r\n+        \r\n+        this.bossGC \u003d new BossGarbageCollection(plugin,this,20*60*30);\r\n     }\r\n     \r\n     public BossTemplate getBossTemplate(String bossName){\r\n@@ -231,4 +234,8 @@ public void hatchEggIfBoss(Block block) {\n             }\r\n         }\r\n     }\r\n+\r\n+    public boolean removeBossEgg(BossEgg egg) {\r\n+        return this.bossEggs.remove(egg);\r\n+    }\r\n }\r"
        }
      ]
    }
  },
  {
    "name": "Memory leak even after stopping test run",
    "url": "https://github.com/AlfrescoBenchmark/benchmark-cmis/issues/1",
    "description": "CMIS session instances are not being released and build up in the JVM over time.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/AlfrescoBenchmark/benchmark-cmis/commit/6646342c311bfbddc9ed0852a719edec106b90ae",
      "files": [
        {
          "file_name": "pom.xml",
          "patch": "@@ -9,7 +9,7 @@\n \n     \u003cproperties\u003e\n         \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n-        \u003cserver.version\u003e2.0.1-SNAPSHOT\u003c/server.version\u003e\n+        \u003cserver.version\u003e2.0.2-SNAPSHOT\u003c/server.version\u003e\n         \u003cjunit.version\u003e4.11\u003c/junit.version\u003e\n \n         \u003cbm.tomcat.port\u003e9090\u003c/bm.tomcat.port\u003e"
        }
      ]
    }
  },
  {
    "name": "Fixed memory leak in ContributionsLoader",
    "url": "https://github.com/tpb1908/AndroidProjectsClient/pull/188",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/tpb1908/AndroidProjectsClient/commit/77713737cdab01e424bc8db8da7200270a827e93",
      "files": [
        {
          "file_name": "contributionsview/src/main/java/com/tpb/contributionsview/ContributionsLoader.java",
          "patch": "@@ -46,8 +46,8 @@\n \n     private final WeakReference\u003cContributionsRequestListener\u003e mListener;\n \n-    ContributionsLoader(@NonNull WeakReference\u003cContributionsRequestListener\u003e listener) {\n-        mListener \u003d listener;\n+    ContributionsLoader(@NonNull ContributionsRequestListener listener) {\n+        mListener \u003d new WeakReference\u003c\u003e(listener);\n     }\n \n     void beginRequest(Context context, String login) {"
        }
      ]
    }
  },
  {
    "name": "Fix logback + JMX memory leak on web application reload",
    "url": "https://github.com/spring-projects/spring-petclinic/pull/155",
    "description": "I\u0027ve been using Spring PetClinic to test memory leaks in Apache Tomcat and I\u0027ve found a memory leak in PetClinic related to logback and JMX. This pull request fixes the leak but, given I have next to no Spring development experience, I may well have gone about fixing this completely the wrong way.\n",
    "keywords": [
      "leak",
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/spring-projects/spring-petclinic/commit/817fabd9ea83b5a439d9ece38022d74b71283645",
      "files": [
        {
          "file_name": "src/main/resources/logback.xml",
          "patch": "@@ -6,10 +6,7 @@\n     \u003ccontextListener class\u003d\"ch.qos.logback.classic.jul.LevelChangePropagator\"\u003e\n         \u003cresetJUL\u003etrue\u003c/resetJUL\u003e\n     \u003c/contextListener\u003e\n-\n-    \u003c!-- To enable JMX Management --\u003e\n-    \u003cjmxConfigurator/\u003e\n-\n+    \n     \u003cappender name\u003d\"console\" class\u003d\"ch.qos.logback.core.ConsoleAppender\"\u003e\n         \u003cencoder\u003e\n             \u003cpattern\u003e%-5level %logger{0} - %msg%n\u003c/pattern\u003e"
        }
      ]
    }
  },
  {
    "name": "Memory leak/memory management continuous push",
    "url": "https://github.com/couchbase/couchbase-lite-android/issues/629",
    "description": "We have an app that a couple of times every minute updates a document of around 100kb. No attachments. We then have continuous sync on. After a couple of hours the app runs out of memory, freezes, crashes, can\u0027t open more cursors... A bit different behavior depending on app history apparently. Also if there are a lot of changes to be synced, the app can\u0027t even be restored after restart. Just opening it can find more than around 1000 changes and then runs out of memory, before able to sync a single record.\n\nMade the following test code that can reproduce the error depending on the sleep time between writes and the servers response time. http://pastebin.com/3mBsENy1\n\nExpected behavior would be to only sync the last revision or at least not trying to load all non synced revisions into memory at the same time, as it looks now, and therefore completely fail with the sync forever until app reinstall.\n\nClient: both couchbase-lite-android.1.0.4 and couchbase-lite-android:1.1.0-532\nServer: Both tested with Sync Gateway 1.0.3 and master(bfb402f)\n",
    "keywords": [
      "app",
      "1",
      "memory",
      "time",
      "sync"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/couchbase/couchbase-lite-java-core/commit/d8d6c3ba33af568751036c7c2fa982d357ee8614",
      "files": [
        {
          "file_name": "src/main/java/com/couchbase/lite/replicator/PullerInternal.java",
          "patch": "@@ -119,7 +119,7 @@ public boolean isPull() {\n         return true;\n     }\n \n-    /* package */ void maybeCreateRemoteDB() {\n+    protected void maybeCreateRemoteDB() {\n         // puller never needs to do this\n     }\n "
        },
        {
          "file_name": "src/main/java/com/couchbase/lite/replicator/PusherInternal.java",
          "patch": "@@ -12,6 +12,7 @@\n import com.couchbase.lite.Status;\n import com.couchbase.lite.internal.InterfaceAudience;\n import com.couchbase.lite.internal.RevisionInternal;\n+import com.couchbase.lite.support.CustomFuture;\n import com.couchbase.lite.support.HttpClientFactory;\n import com.couchbase.lite.support.RemoteRequest;\n import com.couchbase.lite.support.RemoteRequestCompletionBlock;\n@@ -48,6 +49,11 @@\n @InterfaceAudience.Private\n public class PusherInternal extends ReplicationInternal implements Database.ChangeListener {\n \n+    // Max in-memory size of buffered bulk_docs dictionary\n+    private static long kMaxBulkDocsObjectSize \u003d 5*1000*1000;\n+\n+    public static final int MAX_PENDING_DOCS \u003d 200;\n+\n     private boolean createTarget;\n     private boolean creatingTarget;\n     private boolean observing;\n@@ -56,6 +62,9 @@\n     SortedSet\u003cLong\u003e pendingSequences;\n     Long maxPendingSequence;\n \n+    private boolean paused \u003d false;\n+    private Object  pausedObj \u003d new Object();\n+\n     /**\n      * Constructor\n      *\n@@ -181,50 +190,11 @@ public void waitForPendingFutures() {\n     }\n \n     /**\n-     * Adds a local revision to the \"pending\" set that are awaiting upload:\n-     */\n-    @InterfaceAudience.Private\n-    private void addPending(RevisionInternal revisionInternal) {\n-        long seq \u003d revisionInternal.getSequence();\n-        pendingSequences.add(seq);\n-        if (seq \u003e maxPendingSequence) {\n-            maxPendingSequence \u003d seq;\n-        }\n-    }\n-\n-    /**\n-     * Removes a revision from the \"pending\" set after it\u0027s been uploaded. Advances checkpoint.\n+     * - (void) maybeCreateRemoteDB in CBL_Replicator.m\n      */\n-    @InterfaceAudience.Private\n-    private void removePending(RevisionInternal revisionInternal) {\n-        long seq \u003d revisionInternal.getSequence();\n-        if (pendingSequences \u003d\u003d null || pendingSequences.isEmpty()) {\n-            Log.w(Log.TAG_SYNC, \"%s: removePending() called w/ rev: %s, but pendingSequences empty\",\n-                    this, revisionInternal);\n-            return;\n-        }\n-        boolean wasFirst \u003d (seq \u003d\u003d pendingSequences.first());\n-        if (!pendingSequences.contains(seq)) {\n-            Log.w(Log.TAG_SYNC, \"%s: removePending: sequence %s not in set, for rev %s\",\n-                    this, seq, revisionInternal);\n-        }\n-        pendingSequences.remove(seq);\n-        if (wasFirst) {\n-            // If I removed the first pending sequence, can advance the checkpoint:\n-            long maxCompleted;\n-            if (pendingSequences.size() \u003d\u003d 0) {\n-                maxCompleted \u003d maxPendingSequence;\n-            } else {\n-                maxCompleted \u003d pendingSequences.first();\n-                --maxCompleted;\n-            }\n-            setLastSequence(Long.toString(maxCompleted));\n-        }\n-    }\n-\n     @Override\n     @InterfaceAudience.Private\n-    void maybeCreateRemoteDB() {\n+    protected void maybeCreateRemoteDB() {\n         if (!createTarget) {\n             return;\n         }\n@@ -252,9 +222,14 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n         pendingFutures.add(future);\n     }\n \n+    /**\n+     * - (void) beginReplicating in CBL_Replicator.m\n+     */\n     @Override\n     @InterfaceAudience.Private\n     public void beginReplicating() {\n+        // If we\u0027re still waiting to create the remote db, do nothing now. (This method will be\n+        // re-invoked after that request finishes; see -maybeCreateRemoteDB above.)\n \n         Log.d(Log.TAG_SYNC, \"%s: beginReplicating() called\", this);\n \n@@ -279,7 +254,6 @@ public void beginReplicating() {\n         if (filterName !\u003d null \u0026\u0026 filter \u003d\u003d null) {\n             Log.w(Log.TAG_SYNC, \"%s: No ReplicationFilter registered for filter \u0027%s\u0027; ignoring\",\n                     this, filterName);\n-            ;\n         }\n \n         // Process existing changes since the last push:\n@@ -293,8 +267,19 @@ public void beginReplicating() {\n         RevisionList changes \u003d db.changesSince(lastSequenceLong, options, filter, filterParams);\n         if (changes.size() \u003e 0) {\n             Log.d(Log.TAG_SYNC, \"%s: Queuing %d changes since %s\", this, changes.size(), lastSequence);\n-            batcher.queueObjects(changes);\n-            batcher.flush();\n+            int remaining \u003d changes.size();\n+            int size \u003d batcher.getCapacity();\n+            int start \u003d 0;\n+            while(remaining \u003e 0){\n+                if(size \u003e remaining)\n+                    size \u003d remaining;\n+                RevisionList subChanges \u003d new RevisionList(changes.subList(start, start+size));\n+                batcher.queueObjects(subChanges);\n+                start +\u003d size;\n+                remaining -\u003d size;\n+                pauseOrResume();\n+                waitIfPaused();\n+            }\n         } else {\n             Log.d(Log.TAG_SYNC, \"%s: No changes since %s\", this, lastSequence);\n         }\n@@ -310,7 +295,9 @@ public void beginReplicating() {\n         }\n     }\n \n-\n+    /**\n+     * - (void) stopObserving in CBL_Replicator.m\n+     */\n     @InterfaceAudience.Private\n     private void stopObserving() {\n         if (observing) {\n@@ -341,6 +328,60 @@ protected void goOffline() {\n         stopObserving();\n     }\n \n+\n+    /**\n+     * Adds a local revision to the \"pending\" set that are awaiting upload:\n+     * - (void) addPending: (CBL_Revision*)rev in CBLRestPusher.m\n+     */\n+    @InterfaceAudience.Private\n+    private void addPending(RevisionInternal revisionInternal) {\n+        long seq \u003d revisionInternal.getSequence();\n+        pendingSequences.add(seq);\n+        if (seq \u003e maxPendingSequence) {\n+            maxPendingSequence \u003d seq;\n+        }\n+    }\n+\n+    /**\n+     * Removes a revision from the \"pending\" set after it\u0027s been uploaded. Advances checkpoint.\n+     * - (void) removePending: (CBL_Revision*)rev in CBLRestPusher.m\n+     */\n+    @InterfaceAudience.Private\n+    private void removePending(RevisionInternal revisionInternal) {\n+        long seq \u003d revisionInternal.getSequence();\n+        if (pendingSequences \u003d\u003d null || pendingSequences.isEmpty()) {\n+            Log.w(Log.TAG_SYNC, \"%s: removePending() called w/ rev: %s, but pendingSequences empty\",\n+                    this, revisionInternal);\n+            if(revisionInternal.getBody()!\u003dnull)\n+                revisionInternal.getBody().release();\n+            pauseOrResume();\n+            return;\n+        }\n+        boolean wasFirst \u003d (seq \u003d\u003d pendingSequences.first());\n+        if (!pendingSequences.contains(seq)) {\n+            Log.w(Log.TAG_SYNC, \"%s: removePending: sequence %s not in set, for rev %s\",\n+                    this, seq, revisionInternal);\n+        }\n+        pendingSequences.remove(seq);\n+        if (wasFirst) {\n+            // If I removed the first pending sequence, can advance the checkpoint:\n+            long maxCompleted;\n+            if (pendingSequences.size() \u003d\u003d 0) {\n+                maxCompleted \u003d maxPendingSequence;\n+            } else {\n+                maxCompleted \u003d pendingSequences.first();\n+                --maxCompleted;\n+            }\n+            setLastSequence(Long.toString(maxCompleted));\n+        }\n+        if(revisionInternal.getBody()!\u003dnull)\n+            revisionInternal.getBody().release();\n+        pauseOrResume();\n+    }\n+\n+    /**\n+     * - (void) dbChanged: (NSNotification*)n in CBLRestPusher.m\n+     */\n     @Override\n     @InterfaceAudience.Private\n     public void changed(Database.ChangeEvent event) {\n@@ -353,15 +394,24 @@ public void changed(Database.ChangeEvent event) {\n             }\n             RevisionInternal rev \u003d change.getAddedRevision();\n             if (getLocalDatabase().runFilter(filter, filterParams, rev)) {\n+\n+                pauseOrResume();\n+                waitIfPaused();\n+\n                 addToInbox(rev);\n             }\n         }\n     }\n \n+    /**\n+     * - (void) processInbox: (CBL_RevisionList*)changes in CBLRestPusher.m\n+     */\n     @Override\n     @InterfaceAudience.Private\n     protected void processInbox(final RevisionList changes) {\n \n+        Log.e(Log.TAG_SYNC, \"processInbox() changes\u003d\"+changes.size());\n+\n         // Generate a set of doc/rev IDs in the JSON format that _revs_diff wants:\n         // \u003chttp://wiki.apache.org/couchdb/HttpPostRevsDiff\u003e\n         Map\u003cString, List\u003cString\u003e\u003e diffs \u003d new HashMap\u003cString, List\u003cString\u003e\u003e();\n@@ -379,7 +429,7 @@ protected void processInbox(final RevisionList changes) {\n         // Call _revs_diff on the target db:\n         Log.v(Log.TAG_SYNC, \"%s: posting to /_revs_diff\", this);\n \n-        Future future \u003d sendAsyncRequest(\"POST\", \"/_revs_diff\", diffs, new RemoteRequestCompletionBlock() {\n+        CustomFuture future \u003d sendAsyncRequest(\"POST\", \"/_revs_diff\", diffs, new RemoteRequestCompletionBlock() {\n \n             @Override\n             public void onCompletion(HttpResponse httpResponse, Object response, Throwable e) {\n@@ -392,8 +442,9 @@ public void onCompletion(HttpResponse httpResponse, Object response, Throwable e\n                     if (results.size() !\u003d 0) {\n                         // Go through the list of local changes again, selecting the ones the destination server\n                         // said were missing and mapping them to a JSON dictionary in the form _bulk_docs wants:\n-                        final List\u003cObject\u003e docsToSend \u003d new ArrayList\u003cObject\u003e();\n+                        List\u003cObject\u003e docsToSend \u003d new ArrayList\u003cObject\u003e();\n                         RevisionList revsToSend \u003d new RevisionList();\n+                        //long bufferedSize \u003d 0;\n                         for (RevisionInternal rev : changes) {\n                             // Is this revision in the server\u0027s \u0027missing\u0027 list?\n                             Map\u003cString, Object\u003e properties \u003d null;\n@@ -422,6 +473,7 @@ public void onCompletion(HttpResponse httpResponse, Object response, Throwable e\n                             }\n \n                             RevisionInternal populatedRev \u003d transformRevision(loadedRev);\n+                            loadedRev \u003d null;\n \n                             List\u003cString\u003e possibleAncestors \u003d (List\u003cString\u003e) revResults.get(\"possible_ancestors\");\n \n@@ -453,6 +505,16 @@ public void onCompletion(HttpResponse httpResponse, Object response, Throwable e\n \n                             revsToSend.add(rev);\n                             docsToSend.add(properties);\n+\n+                            /* TODO\n+                            bufferedSize +\u003d JSONUtils.estimateMemorySize(properties);\n+                            if (bufferedSize \u003e kMaxBulkDocsObjectSize) {\n+                                uploadBulkDocs(docsToSend, revsToSend);\n+                                docsToSend \u003d new ArrayList\u003cObject\u003e();\n+                                revsToSend \u003d new RevisionList();\n+                                bufferedSize \u003d 0;\n+                            }\n+                            */\n                         }\n \n                         // Post the revisions to the destination:\n@@ -468,12 +530,18 @@ public void onCompletion(HttpResponse httpResponse, Object response, Throwable e\n             }\n \n         });\n+        future.setQueue(pendingFutures);\n         pendingFutures.add(future);\n+\n+        pauseOrResume();\n     }\n \n     /**\n      * Post the revisions to the destination. \"new_edits\":false means that the server should\n      * use the given _rev IDs instead of making up new ones.\n+     *\n+     * - (void) uploadBulkDocs: (NSArray*)docsToSend changes: (CBL_RevisionList*)changes\n+     * in CBLRestPusher.m\n      */\n     @InterfaceAudience.Private\n     protected void uploadBulkDocs(List\u003cObject\u003e docsToSend, final RevisionList changes) {\n@@ -490,7 +558,7 @@ protected void uploadBulkDocs(List\u003cObject\u003e docsToSend, final RevisionList change\n         bulkDocsBody.put(\"docs\", docsToSend);\n         bulkDocsBody.put(\"new_edits\", false);\n \n-        Future future \u003d sendAsyncRequest(\"POST\", \"/_bulk_docs\", bulkDocsBody, new RemoteRequestCompletionBlock() {\n+        CustomFuture future \u003d sendAsyncRequest(\"POST\", \"/_bulk_docs\", bulkDocsBody, new RemoteRequestCompletionBlock() {\n \n             @Override\n             public void onCompletion(HttpResponse httpResponse, Object result, Throwable e) {\n@@ -531,6 +599,7 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n                 addToCompletedChangesCount(numDocsToSend);\n             }\n         });\n+        future.setQueue(pendingFutures);\n         pendingFutures.add(future);\n     }\n \n@@ -624,7 +693,7 @@ private boolean uploadMultipartRevision(final RevisionInternal revision) {\n \n         addToChangesCount(1);\n \n-        Future future \u003d sendAsyncMultipartRequest(\"PUT\", path, multiPart, new RemoteRequestCompletionBlock() {\n+        CustomFuture future \u003d sendAsyncMultipartRequest(\"PUT\", path, multiPart, new RemoteRequestCompletionBlock() {\n             @Override\n             public void onCompletion(HttpResponse httpResponse, Object result, Throwable e) {\n                 try {\n@@ -649,17 +718,19 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n                     addToCompletedChangesCount(1);\n \n                 }\n-\n             }\n         });\n+        future.setQueue(pendingFutures);\n         pendingFutures.add(future);\n \n         return true;\n-\n     }\n \n-    // Fallback to upload a revision if uploadMultipartRevision failed due to the server\u0027s rejecting\n-    // multipart format.\n+    /**\n+     * Fallback to upload a revision if uploadMultipartRevision failed due to the server\u0027s rejecting\n+     * multipart format.\n+     * - (void) uploadJSONRevision: (CBL_Revision*)originalRev in CBLRestPusher.m\n+     */\n     private void uploadJsonRevision(final RevisionInternal rev) {\n         // Get the revision\u0027s properties:\n         if (!db.inlineFollowingAttachmentsIn(rev)) {\n@@ -668,7 +739,7 @@ private void uploadJsonRevision(final RevisionInternal rev) {\n         }\n \n         final String path \u003d String.format(\"/%s?new_edits\u003dfalse\", encodeDocumentId(rev.getDocID()));\n-        Future future \u003d sendAsyncRequest(\"PUT\",\n+        CustomFuture future \u003d sendAsyncRequest(\"PUT\",\n                 path,\n                 rev.getProperties(),\n                 new RemoteRequestCompletionBlock() {\n@@ -681,11 +752,16 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n                         }\n                     }\n                 });\n+        future.setQueue(pendingFutures);\n         pendingFutures.add(future);\n     }\n \n-    // Given a revision and an array of revIDs, finds the latest common ancestor revID\n-    // and returns its generation #. If there is none, returns 0.\n+    /**\n+     * Given a revision and an array of revIDs, finds the latest common ancestor revID\n+     * and returns its generation #. If there is none, returns 0.\n+     *\n+     * int CBLFindCommonAncestor(CBL_Revision* rev, NSArray* possibleRevIDs) in CBLRestPusher.m\n+     */\n     private static int findCommonAncestor(RevisionInternal rev, List\u003cString\u003e possibleRevIDs) {\n         if (possibleRevIDs \u003d\u003d null || possibleRevIDs.size() \u003d\u003d 0) {\n             return 0;\n@@ -721,4 +797,32 @@ public String getContentEncoding() {\n             return contentEncoding;\n         }\n     }\n+\n+\n+    private void pauseOrResume() {\n+        int pending \u003d batcher.count() + pendingSequences.size();\n+        setPaused(pending \u003e\u003d MAX_PENDING_DOCS);\n+    }\n+\n+    private void setPaused(boolean paused) {\n+        Log.v(Log.TAG, \"setPaused: \" + paused);\n+        synchronized (pausedObj) {\n+            if(this.paused !\u003d paused) {\n+                this.paused \u003d paused;\n+                pausedObj.notifyAll();\n+            }\n+        }\n+    }\n+\n+    private void waitIfPaused(){\n+        while (paused) {\n+            Log.v(Log.TAG, \"Waiting: \" + paused);\n+            synchronized (pausedObj) {\n+                try {\n+                    pausedObj.wait();\n+                } catch (InterruptedException e) {\n+                }\n+            }\n+        }\n+    }\n }"
        },
        {
          "file_name": "src/main/java/com/couchbase/lite/replicator/ReplicationInternal.java",
          "patch": "@@ -65,8 +65,6 @@\n         SYNC, ASYNC\n     }\n \n-    ;\n-\n     public static final String BY_CHANNEL_FILTER_NAME \u003d \"sync_gateway/bychannel\";\n \n     public static final String CHANNELS_QUERY_PARAM \u003d \"channels\";\n@@ -472,7 +470,7 @@ protected void setError(Throwable throwable) {\n \n \n     @InterfaceAudience.Private\n-    /* package */ void addToCompletedChangesCount(int delta) {\n+    protected void addToCompletedChangesCount(int delta) {\n         int previousVal \u003d getCompletedChangesCount().getAndAdd(delta);\n         Log.v(Log.TAG_SYNC, \"%s: Incrementing completedChangesCount count from %s by adding %d -\u003e %d\",\n                 this, previousVal, delta, completedChangesCount.get());\n@@ -481,7 +479,7 @@ protected void setError(Throwable throwable) {\n     }\n \n     @InterfaceAudience.Private\n-    /* package */ void addToChangesCount(int delta) {\n+    protected void addToChangesCount(int delta) {\n         int previousVal \u003d getChangesCount().getAndAdd(delta);\n         if (getChangesCount().get() \u003c 0) {\n             Log.w(Log.TAG_SYNC, \"Changes count is negative, this could indicate an error\");\n@@ -510,7 +508,7 @@ public AtomicInteger getChangesCount() {\n      * @exclude\n      */\n     @InterfaceAudience.Private\n-    public Future sendAsyncRequest(String method, String relativePath, Object body,\n+    public CustomFuture sendAsyncRequest(String method, String relativePath, Object body,\n                                    RemoteRequestCompletionBlock onCompletion) {\n         return sendAsyncRequest(method, relativePath, body, false, onCompletion);\n     }\n@@ -519,7 +517,7 @@ public Future sendAsyncRequest(String method, String relativePath, Object body,\n      * @exclude\n      */\n     @InterfaceAudience.Private\n-    public Future sendAsyncRequest(String method, String relativePath, Object body, boolean dontLog404,\n+    public CustomFuture sendAsyncRequest(String method, String relativePath, Object body, boolean dontLog404,\n                                    RemoteRequestCompletionBlock onCompletion) {\n         try {\n             String urlStr \u003d buildRelativeURLString(relativePath);\n@@ -535,7 +533,7 @@ public Future sendAsyncRequest(String method, String relativePath, Object body,\n      * @exclude\n      */\n     @InterfaceAudience.Private\n-    public Future sendAsyncRequest(String method, URL url, Object body, boolean dontLog404,\n+    public CustomFuture sendAsyncRequest(String method, URL url, Object body, boolean dontLog404,\n                                    final RemoteRequestCompletionBlock onCompletion) {\n         Log.d(Log.TAG_SYNC, \"[sendAsyncRequest()] \" + method + \" \u003d\u003e \" + url);\n         RemoteRequestRetry request \u003d new RemoteRequestRetry(\n@@ -569,15 +567,14 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n         });\n \n \n-        Future future \u003d request.submit(canSendCompressedRequests());\n-        return future;\n+        return request.submit(canSendCompressedRequests());\n     }\n \n     /**\n      * @exclude\n      */\n     @InterfaceAudience.Private\n-    public Future sendAsyncMultipartRequest(String method, String relativePath,\n+    public CustomFuture sendAsyncMultipartRequest(String method, String relativePath,\n                                             MultipartEntity multiPartEntity,\n                                             RemoteRequestCompletionBlock onCompletion) {\n         URL url \u003d null;\n@@ -603,9 +600,7 @@ public Future sendAsyncMultipartRequest(String method, String relativePath,\n \n         request.setAuthenticator(getAuthenticator());\n \n-        Future future \u003d request.submit();\n-        return future;\n-\n+        return request.submit();\n     }\n \n     /**\n@@ -635,24 +630,22 @@ public CustomFuture sendAsyncMultipartDownloaderRequest(String method, String re\n \n             request.setAuthenticator(getAuthenticator());\n \n-            CustomFuture future \u003d request.submit();\n-            return future;\n+            return request.submit();\n         } catch (MalformedURLException e) {\n             Log.e(Log.TAG_SYNC, \"Malformed URL for async request\", e);\n         }\n-\n         return null;\n     }\n \n \n     /**\n      * Get the local database which is the source or target of this replication\n      */\n-    /* package */ Database getLocalDatabase() {\n+    protected Database getLocalDatabase() {\n         return db;\n     }\n \n-    /* package */ void setLocalDatabase(Database db) {\n+    protected void setLocalDatabase(Database db) {\n         this.db \u003d db;\n     }\n \n@@ -803,7 +796,7 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n     }\n \n     @InterfaceAudience.Private\n-    /* package */ String buildRelativeURLString(String relativePath) {\n+    protected String buildRelativeURLString(String relativePath) {\n \n         // the following code is a band-aid for a system problem in the codebase\n         // where it is appending \"relative paths\" that start with a slash, eg:\n@@ -883,8 +876,7 @@ public void onCompletion(HttpResponse httpResponse, Object result, Throwable e)\n     }\n \n \n-    /* package */\n-    abstract void maybeCreateRemoteDB();\n+    protected abstract void maybeCreateRemoteDB();\n \n     /**\n      * This is the _local document ID stored on the remote server to keep track of state.\n@@ -1283,7 +1275,7 @@ public void setAuthenticator(Authenticator authenticator) {\n     }\n \n     @InterfaceAudience.Private\n-    /* package */ boolean serverIsSyncGatewayVersion(String minVersion) {\n+    protected boolean serverIsSyncGatewayVersion(String minVersion) {\n         String prefix \u003d \"Couchbase Sync Gateway/\";\n         if (serverType \u003d\u003d null) {\n             return false;\n@@ -1389,7 +1381,7 @@ protected void retryReplicationIfError() {\n     }\n \n     @InterfaceAudience.Private\n-    /* package */ void setServerType(String serverType) {\n+    protected void setServerType(String serverType) {\n         this.serverType \u003d serverType;\n     }\n \n@@ -1566,7 +1558,7 @@ public void deleteCookie(String name) {\n         this.clientFactory.deleteCookie(name);\n     }\n \n-    /* package */ HttpClientFactory getClientFactory() {\n+    protected HttpClientFactory getClientFactory() {\n         return clientFactory;\n     }\n \n@@ -1642,7 +1634,7 @@ public void run() {\n      * \u003cp/\u003e\n      * Avoids encoding the slash in _design documents since it may cause a 301 redirect.\n      */\n-    /* package */ String encodeDocumentId(String docId) {\n+    protected String encodeDocumentId(String docId) {\n         if (docId.startsWith(\"_design/\")) {\n             // http://docs.couchdb.org/en/1.6.1/http-api.html#cap-/{db}/_design/{ddoc}\n             String designDocId \u003d docId.substring(\"_design/\".length());"
        },
        {
          "file_name": "src/main/java/com/couchbase/lite/support/Batcher.java",
          "patch": "@@ -59,6 +59,11 @@ public Batcher(ScheduledExecutorService workExecutor,\n     // Instance Methods - Public\n     ///////////////////////////////////////////////////////////////////////////\n \n+\n+    public int getCapacity() {\n+        return capacity;\n+    }\n+\n     public int getDelay() {\n         return delay;\n     }\n@@ -151,7 +156,7 @@ public void waitForPendingFutures() {\n             try {\n                 pendingFuture.get();\n             } catch (Exception e) {\n-                Log.w(Log.TAG_BATCHER, e.getMessage());\n+                Log.i(Log.TAG_BATCHER, \"Exception from Future.get()\");\n             }\n         }\n \n@@ -170,7 +175,7 @@ public void waitForPendingFutures() {\n             try {\n                 pendingFuture.get();\n             } catch (Exception e) {\n-                Log.w(Log.TAG_BATCHER, e.getMessage());\n+                Log.i(Log.TAG_BATCHER, \"Exception from Future.get()\");\n             }\n         }\n         Log.v(Log.TAG_BATCHER, \"%s: /waitForPendingFutures\", this);"
        },
        {
          "file_name": "src/main/java/com/couchbase/lite/util/JSONUtils.java",
          "patch": "@@ -0,0 +1,11 @@\n+package com.couchbase.lite.util;\n+\n+/**\n+ * Created by hideki on 7/23/15.\n+ */\n+public class JSONUtils {\n+    public static long estimateMemorySize(Object obj){\n+        // TODO: Needs to implement\n+        return 0;\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "Fixed a memory leak in NinePatchUtils.",
    "url": "https://github.com/mgarin/weblaf/pull/273",
    "description": "The cache is now storing weak references on the NinePatchIcons. When the Garbage Collector runs, the cache will be eventually invalidated. This fixes some problems where Swing Components haven\u0027t been disposed because the NinePatchIcon in the cache held a reference on them.\n",
    "keywords": [
      "cache"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/mgarin/weblaf/commit/6f94c125567b89115726a45411496de449f08cb3",
      "files": [
        {
          "file_name": "modules/ui/src/com/alee/utils/NinePatchUtils.java",
          "patch": "@@ -31,6 +31,7 @@\n import java.awt.geom.Area;\n import java.awt.geom.RoundRectangle2D;\n import java.awt.image.BufferedImage;\n+import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -57,7 +58,7 @@\n     /**\n      * Shade nine-patch icons cache.\n      */\n-    private static final Map\u003cString, NinePatchIcon\u003e shadeIconCache \u003d new HashMap\u003cString, NinePatchIcon\u003e ();\n+    private static final Map\u003cString, WeakReference\u003cNinePatchIcon\u003e\u003e shadeIconCache \u003d new HashMap\u003cString, WeakReference\u003cNinePatchIcon\u003e\u003e ();\n \n     /**\n      * Returns cached shade nine-patch icon.\n@@ -70,16 +71,14 @@\n     public static NinePatchIcon getShadeIcon ( final int shadeWidth, final int round, final float shadeOpacity )\n     {\n         final String key \u003d OUTER_SHADE_PREFIX + \";\" + shadeWidth + \";\" + round + \";\" + shadeOpacity;\n-        if ( shadeIconCache.containsKey ( key ) )\n-        {\n-            return shadeIconCache.get ( key );\n-        }\n-        else\n-        {\n-            final NinePatchIcon ninePatchIcon \u003d createShadeIcon ( shadeWidth, round, shadeOpacity );\n-            shadeIconCache.put ( key, ninePatchIcon );\n-            return ninePatchIcon;\n+        NinePatchIcon icon \u003d getNinePatchIconFromCache(key);\n+        if (icon !\u003d null) {\n+            return icon;\n         }\n+\n+        final NinePatchIcon ninePatchIcon \u003d createShadeIcon(shadeWidth, round, shadeOpacity);\n+        shadeIconCache.put ( key, new WeakReference\u003cNinePatchIcon\u003e(ninePatchIcon) );\n+        return ninePatchIcon;\n     }\n \n     /**\n@@ -139,16 +138,27 @@ public static NinePatchIcon createShadeIcon ( final int shadeWidth, final int ro\n     public static NinePatchIcon getInnerShadeIcon ( final int shadeWidth, final int round, final float shadeOpacity )\n     {\n         final String key \u003d INNER_SHADE_PREFIX + \";\" + shadeWidth + \";\" + round + \";\" + shadeOpacity;\n-        if ( shadeIconCache.containsKey ( key ) )\n-        {\n-            return shadeIconCache.get ( key );\n+        NinePatchIcon icon \u003d getNinePatchIconFromCache(key);\n+        if (icon !\u003d null) {\n+            return icon;\n         }\n-        else\n-        {\n-            final NinePatchIcon ninePatchIcon \u003d createInnerShadeIcon ( shadeWidth, round, shadeOpacity );\n-            shadeIconCache.put ( key, ninePatchIcon );\n-            return ninePatchIcon;\n+\n+        final NinePatchIcon ninePatchIcon \u003d createInnerShadeIcon ( shadeWidth, round, shadeOpacity );\n+        shadeIconCache.put ( key, new WeakReference\u003cNinePatchIcon\u003e(ninePatchIcon) );\n+        return ninePatchIcon;\n+    }\n+\n+    /**\n+     * Fetches the nine-patch icon from the cache.\n+     * @param key Cache key.\n+     * @return Nine-patch icon from the cache or null on cache miss.\n+     */\n+    private static NinePatchIcon getNinePatchIconFromCache(String key) {\n+        if ( shadeIconCache.containsKey ( key ) ) {\n+            return shadeIconCache.get(key).get();\n         }\n+\n+        return null;\n     }\n \n     /**"
        }
      ]
    }
  },
  {
    "name": "Memory leak with view controllers creation/removal",
    "url": "https://github.com/robovm/robovm/issues/749",
    "description": "Given a simple app with a navigation controller repeatedly pushing and popping a view controller, the Swift version shows the following memory usage with the Allocations instrument\n\n![swiftleaker-allocations](https://cloud.githubusercontent.com/assets/133967/6096239/b36cde88-af7e-11e4-874f-800c6724b7f9.png)\n\nwhile the RoboVM version shows a constantly increasing memory usage\n\n![roboleaker-allocations](https://cloud.githubusercontent.com/assets/133967/6096241/d04792fa-af7e-11e4-8f98-9d176562b62f.png)\n\nCode available at https://github.com/mirkonasato/robovm-issue-749 - graphs created by clicking ~30 times on the Start then Close buttons at ~1 second intervals.\n\nThis is with 1.0.0-beta-03.\n",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/robovm/robovm/commit/10b678b64bc91d42f716a5f441933e021386287c",
      "files": [
        {
          "file_name": "objc/src/main/java/org/robovm/objc/ObjCObject.java",
          "patch": "@@ -325,6 +325,7 @@ public ObjCObjectRef(ObjCObject referent) {\n     static class ObjectOwnershipHelper {\n         private static final LongMap\u003cObject\u003e CUSTOM_OBJECTS \u003d new LongMap\u003c\u003e();\n \n+        private static volatile boolean logRetainRelease \u003d false;\n         private static final long retainCount \u003d Selector.register(\"retainCount\").getHandle();\n         private static final long retain \u003d Selector.register(\"retain\").getHandle();\n         private static final long originalRetain \u003d Selector.register(\"original_retain\").getHandle();\n@@ -333,7 +334,7 @@ public ObjCObjectRef(ObjCObject referent) {\n \n         private static final Method retainMethod;\n         private static final Method releaseMethod;\n-        \n+\n         private static final LongMap\u003cLong\u003e customClassToNativeSuper \u003d new LongMap\u003c\u003e();\n \n         static {\n@@ -358,38 +359,42 @@ private static void registerCallbackMethod(long cls, long selector, long newSele\n                 throw new Error(\n                         \"Failed to register callback method on the ObjectOwnershipHelper: class_addMethod(...) failed\");\n             }\n-            \n+\n             // find the super class that is a native class and cache it\n             long superClass \u003d ObjCRuntime.class_getSuperclass(cls);\n             long nativeSuper \u003d 0;\n-            while(superClass !\u003d 0) {\n+            while (superClass !\u003d 0) {\n                 ObjCClass objCClass \u003d ObjCClass.toObjCClass(superClass);\n-                if(!objCClass.isCustom()) {\n+                if (!objCClass.isCustom()) {\n                     nativeSuper \u003d superClass;\n                     break;\n                 }\n                 superClass \u003d ObjCRuntime.class_getSuperclass(superClass);\n             }\n-            if(nativeSuper \u003d\u003d 0) {\n-                throw new Error(\"Couldn\u0027t find native super class for \" + VM.newStringUTF(ObjCRuntime.class_getName(cls)));\n+            if (nativeSuper \u003d\u003d 0) {\n+                throw new Error(\"Couldn\u0027t find native super class for \"\n+                        + VM.newStringUTF(ObjCRuntime.class_getName(cls)));\n             }\n-            synchronized(customClassToNativeSuper) {\n+            synchronized (customClassToNativeSuper) {\n                 customClassToNativeSuper.put(cls, nativeSuper);\n             }\n         }\n \n         @Callback\n         private static @Pointer long retain(@Pointer long self, @Pointer long sel) {\n-            if (ObjCRuntime.int_objc_msgSend(self, retainCount) \u003c\u003d 1) {\n+            int count \u003d ObjCRuntime.int_objc_msgSend(self, retainCount);\n+            if (count \u003c\u003d 1) {\n                 synchronized (CUSTOM_OBJECTS) {\n                     ObjCClass cls \u003d ObjCClass.toObjCClass(ObjCRuntime.object_getClass(self));\n                     ObjCObject obj \u003d ObjCObject.toObjCObject(cls.getType(), self, 0);\n                     CUSTOM_OBJECTS.put(self, obj);\n                 }\n-            }     \n+            }\n             long cls \u003d ObjCRuntime.object_getClass(self);\n+            if (logRetainRelease)\n+                logRetainRelease(cls, self, count, true);\n             long nativeSuper \u003d 0;\n-            synchronized(customClassToNativeSuper) {\n+            synchronized (customClassToNativeSuper) {\n                 nativeSuper \u003d customClassToNativeSuper.get(cls);\n             }\n             Super sup \u003d new Super(self, nativeSuper);\n@@ -398,30 +403,40 @@ private static void registerCallbackMethod(long cls, long selector, long newSele\n \n         @Callback\n         private static void release(@Pointer long self, @Pointer long sel) {\n-            if (ObjCRuntime.int_objc_msgSend(self, retainCount) \u003d\u003d 1) {\n+            int count \u003d ObjCRuntime.int_objc_msgSend(self, retainCount);\n+            if (count \u003d\u003d 2) {\n                 synchronized (CUSTOM_OBJECTS) {\n                     CUSTOM_OBJECTS.remove(self);\n                 }\n-            }            \n+            }\n             long cls \u003d ObjCRuntime.object_getClass(self);\n+            if (logRetainRelease)\n+                logRetainRelease(cls, self, count, false);\n             long nativeSuper \u003d 0;\n-            synchronized(customClassToNativeSuper) {\n+            synchronized (customClassToNativeSuper) {\n                 nativeSuper \u003d customClassToNativeSuper.get(cls);\n             }\n             Super sup \u003d new Super(self, nativeSuper);\n             ObjCRuntime.void_objc_msgSendSuper(sup.getHandle(), sel);\n         }\n-        \n+\n         public static boolean isObjectRetained(ObjCObject object) {\n             synchronized (CUSTOM_OBJECTS) {\n                 return CUSTOM_OBJECTS.containsKey(object.getHandle());\n             }\n         }\n+\n+        private static void logRetainRelease(long cls, long self, int count, boolean isRetain) {\n+            String className \u003d ObjCClass.getFromObject(cls).getType().getName();\n+            System.err.println(String.format(\"[Debug] %s %s@0x%s, retain count: %d\",\n+                    isRetain ? \"Retained\" : \"Released\", className, Long.toHexString(self), isRetain ? count + 1\n+                            : count - 1));\n+        }\n     }\n \n     static class AssociatedObjectHelper {\n         private static final String STRONG_REFS_KEY \u003d AssociatedObjectHelper.class.getName() + \".StrongRefs\";\n-\n+        \n         private static final int OBJC_ASSOCIATION_RETAIN_NONATOMIC \u003d 1;\n         private static final long RELEASE_LISTENER_CLASS;\n         private static final String OWNER_IVAR_NAME \u003d \"value\";\n@@ -583,4 +598,18 @@ public Super(long receiver, long objcClass) {\n         @StructMember(1)\n         public native Super objCClass(@Pointer long objCClass);\n     }\n+    \n+    /**\n+     * Sets whether retain/release of custom {@link ObjCObject} should be logged\n+     * to the console to identify retain/release leaks. Note that the GC has to\n+     * be able to collect the custom object for the final release to be\n+     * triggered.\u003c/p\u003e\n+     * \n+     * The output logs the class, memory address and retain count after the\n+     * release/retain invocation. You can use the memory address to inspect\n+     * custom objects in Instruments.\n+     */\n+    public static void logRetainRelease(boolean enabled) {\n+        ObjectOwnershipHelper.logRetainRelease \u003d enabled;\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Potential memory leak with Android N",
    "url": "https://github.com/isuPatches/WiseFy/issues/45",
    "description": "- [x] Switch from `return (WifiManager) context.getSystemService(Context.WIFI_SERVICE);` to `return (WifiManager) context.getApplicationContext().getSystemService(Context.WIFI_SERVICE);`\r\n\r\n",
    "keywords": [
      "context"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/isuPatches/WiseFy/commit/716997a3d6e88b89e5999603664fc7f748ad4ec4",
      "files": [
        {
          "file_name": "README.md",
          "patch": "@@ -10,7 +10,7 @@ Wifi configuration and util library built for Android.\n \n [ ![Download](https://api.bintray.com/packages/isupatches/Maven/wisefy/images/download.svg) ](https://bintray.com/isupatches/Maven/wisefy/_latestVersion)\n \n-\u003ca href\u003d\"http://www.methodscount.com/?lib\u003dcom.isupatches%3Awisefy%3A1.0.5\"\u003e\u003cimg src\u003d\"https://img.shields.io/badge/Methods and size-core: 104 | deps: 16517 | 55 KB-e91e63.svg\"/\u003e\u003c/a\u003e\n+\u003ca href\u003d\"http://www.methodscount.com/?lib\u003dcom.isupatches%3Awisefy%3A1.0.8\"\u003e\u003cimg src\u003d\"https://img.shields.io/badge/Methods and size-core: 105 | deps: 19372 | 56 KB-e91e63.svg\"/\u003e\u003c/a\u003e\n \n ## Adding to your project\n \n@@ -41,7 +41,7 @@ Then add it as a dependency:\n Gradle:\n \n ```\n-compile \u0027com.isupatches:wisefy:1.0.7\u0027\n+compile \u0027com.isupatches:wisefy:1.0.8\u0027\n ```\n \n Maven:\n@@ -50,7 +50,7 @@ Maven:\n \u003cdependency\u003e\n   \u003cgroupId\u003ecom.isupatches\u003c/groupId\u003e\n   \u003cartifactId\u003ewisefy\u003c/artifactId\u003e\n-  \u003cversion\u003e1.0.7\u003c/version\u003e\n+  \u003cversion\u003e1.0.8\u003c/version\u003e\n   \u003ctype\u003epom\u003c/type\u003e\n \u003c/dependency\u003e\n ```"
        },
        {
          "file_name": "javadoc/allclasses-frame.html",
          "patch": "@@ -2,9 +2,9 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eAll Classes (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eAll Classes (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e"
        },
        {
          "file_name": "javadoc/allclasses-noframe.html",
          "patch": "@@ -2,9 +2,9 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eAll Classes (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eAll Classes (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/WiseFy.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eWiseFy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eWiseFy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"WiseFy (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"WiseFy (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/WiseFy.withContext.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eWiseFy.withContext (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eWiseFy.withContext (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"WiseFy.withContext (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"WiseFy.withContext (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {\n@@ -75,13 +75,13 @@\n \u003cli\u003eSummary:\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eNested\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eField\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n-\u003cli\u003eConstr\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n+\u003cli\u003e\u003ca href\u003d\"#constructor.summary\"\u003eConstr\u003c/a\u003e\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#method.summary\"\u003eMethod\u003c/a\u003e\u003c/li\u003e\n \u003c/ul\u003e\n \u003cul class\u003d\"subNavList\"\u003e\n \u003cli\u003eDetail:\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eField\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n-\u003cli\u003eConstr\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n+\u003cli\u003e\u003ca href\u003d\"#constructor.detail\"\u003eConstr\u003c/a\u003e\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#method.detail\"\u003eMethod\u003c/a\u003e\u003c/li\u003e\n \u003c/ul\u003e\n \u003c/div\u003e\n@@ -123,6 +123,25 @@ \u003ch2 title\u003d\"Class WiseFy.withContext\" class\u003d\"title\"\u003eClass WiseFy.withContext\u003c/h2\u003e\n \u003cdiv class\u003d\"summary\"\u003e\n \u003cul class\u003d\"blockList\"\u003e\n \u003cli class\u003d\"blockList\"\u003e\n+\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CONSTRUCTOR SUMMARY \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n+\u003cul class\u003d\"blockList\"\u003e\n+\u003cli class\u003d\"blockList\"\u003e\u003ca name\u003d\"constructor.summary\"\u003e\n+\u003c!--   --\u003e\n+\u003c/a\u003e\n+\u003ch3\u003eConstructor Summary\u003c/h3\u003e\n+\u003ctable class\u003d\"memberSummary\" border\u003d\"0\" cellpadding\u003d\"3\" cellspacing\u003d\"0\" summary\u003d\"Constructor Summary table, listing constructors, and an explanation\"\u003e\n+\u003ccaption\u003e\u003cspan\u003eConstructors\u003c/span\u003e\u003cspan class\u003d\"tabEnd\"\u003e\u0026nbsp;\u003c/span\u003e\u003c/caption\u003e\n+\u003ctr\u003e\n+\u003cth class\u003d\"colOne\" scope\u003d\"col\"\u003eConstructor and Description\u003c/th\u003e\n+\u003c/tr\u003e\n+\u003ctr class\u003d\"altColor\"\u003e\n+\u003ctd class\u003d\"colOne\"\u003e\u003ccode\u003e\u003cspan class\u003d\"memberNameLink\"\u003e\u003ca href\u003d\"../../../com/isupatches/wisefy/WiseFy.withContext.html#withContext-android.content.Context-\"\u003ewithContext\u003c/a\u003e\u003c/span\u003e(android.content.Context\u0026nbsp;context)\u003c/code\u003e\n+\u003cdiv class\u003d\"block\"\u003eMandatory - The public constructor for the builder that requires a context\u003c/div\u003e\n+\u003c/td\u003e\n+\u003c/tr\u003e\n+\u003c/table\u003e\n+\u003c/li\u003e\n+\u003c/ul\u003e\n \u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d METHOD SUMMARY \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n \u003cul class\u003d\"blockList\"\u003e\n \u003cli class\u003d\"blockList\"\u003e\u003ca name\u003d\"method.summary\"\u003e\n@@ -166,6 +185,29 @@ \u003ch2 title\u003d\"Class WiseFy.withContext\" class\u003d\"title\"\u003eClass WiseFy.withContext\u003c/h2\u003e\n \u003cdiv class\u003d\"details\"\u003e\n \u003cul class\u003d\"blockList\"\u003e\n \u003cli class\u003d\"blockList\"\u003e\n+\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CONSTRUCTOR DETAIL \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n+\u003cul class\u003d\"blockList\"\u003e\n+\u003cli class\u003d\"blockList\"\u003e\u003ca name\u003d\"constructor.detail\"\u003e\n+\u003c!--   --\u003e\n+\u003c/a\u003e\n+\u003ch3\u003eConstructor Detail\u003c/h3\u003e\n+\u003ca name\u003d\"withContext-android.content.Context-\"\u003e\n+\u003c!--   --\u003e\n+\u003c/a\u003e\n+\u003cul class\u003d\"blockListLast\"\u003e\n+\u003cli class\u003d\"blockList\"\u003e\n+\u003ch4\u003ewithContext\u003c/h4\u003e\n+\u003cpre\u003epublic\u0026nbsp;withContext(android.content.Context\u0026nbsp;context)\u003c/pre\u003e\n+\u003cdiv class\u003d\"block\"\u003eMandatory - The public constructor for the builder that requires a context\u003c/div\u003e\n+\u003cdl\u003e\n+\u003cdt\u003e\u003cspan class\u003d\"paramLabel\"\u003eParameters:\u003c/span\u003e\u003c/dt\u003e\n+\u003cdd\u003e\u003ccode\u003econtext\u003c/code\u003e - - The activity or application context to get a WifiConfiguration and\n+ ConnectivityManager instance\u003c/dd\u003e\n+\u003c/dl\u003e\n+\u003c/li\u003e\n+\u003c/ul\u003e\n+\u003c/li\u003e\n+\u003c/ul\u003e\n \u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d METHOD DETAIL \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n \u003cul class\u003d\"blockList\"\u003e\n \u003cli class\u003d\"blockList\"\u003e\u003ca name\u003d\"method.detail\"\u003e\n@@ -260,13 +302,13 @@ \u003ch2 title\u003d\"Class WiseFy.withContext\" class\u003d\"title\"\u003eClass WiseFy.withContext\u003c/h2\u003e\n \u003cli\u003eSummary:\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eNested\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eField\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n-\u003cli\u003eConstr\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n+\u003cli\u003e\u003ca href\u003d\"#constructor.summary\"\u003eConstr\u003c/a\u003e\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#method.summary\"\u003eMethod\u003c/a\u003e\u003c/li\u003e\n \u003c/ul\u003e\n \u003cul class\u003d\"subNavList\"\u003e\n \u003cli\u003eDetail:\u0026nbsp;\u003c/li\u003e\n \u003cli\u003eField\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n-\u003cli\u003eConstr\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n+\u003cli\u003e\u003ca href\u003d\"#constructor.detail\"\u003eConstr\u003c/a\u003e\u0026nbsp;|\u0026nbsp;\u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#method.detail\"\u003eMethod\u003c/a\u003e\u003c/li\u003e\n \u003c/ul\u003e\n \u003c/div\u003e"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/package-frame.html",
          "patch": "@@ -2,9 +2,9 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/package-summary.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"com.isupatches.wisefy (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"com.isupatches.wisefy (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/package-tree.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy Class Hierarchy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy Class Hierarchy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"com.isupatches.wisefy Class Hierarchy (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"com.isupatches.wisefy Class Hierarchy (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/GetManagerUtil.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eGetManagerUtil (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eGetManagerUtil (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"GetManagerUtil (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"GetManagerUtil (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/LogUtil.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eLogUtil (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eLogUtil (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"LogUtil (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"LogUtil (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/SSIDUtil.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eSSIDUtil (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eSSIDUtil (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"SSIDUtil (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"SSIDUtil (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/package-frame.html",
          "patch": "@@ -2,9 +2,9 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy.util (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy.util (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/package-summary.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy.util (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy.util (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"com.isupatches.wisefy.util (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"com.isupatches.wisefy.util (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/com/isupatches/wisefy/util/package-tree.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ecom.isupatches.wisefy.util Class Hierarchy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ecom.isupatches.wisefy.util Class Hierarchy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"../../../../stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"../../../../script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"com.isupatches.wisefy.util Class Hierarchy (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"com.isupatches.wisefy.util Class Hierarchy (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/constant-values.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eConstant Field Values (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eConstant Field Values (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"Constant Field Values (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"Constant Field Values (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/deprecated-list.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eDeprecated List (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eDeprecated List (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"Deprecated List (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"Deprecated List (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/help-doc.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eAPI Help (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eAPI Help (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"API Help (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"API Help (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "javadoc/index-all.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eIndex (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eIndex (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"Index (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"Index (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {\n@@ -162,6 +162,10 @@ \u003ch2 class\u003d\"title\"\u003eW\u003c/h2\u003e\n \u003c/dd\u003e\n \u003cdt\u003e\u003cspan class\u003d\"memberNameLink\"\u003e\u003ca href\u003d\"com/isupatches/wisefy/WiseFy.html#WISEFY_FAILURE\"\u003eWISEFY_FAILURE\u003c/a\u003e\u003c/span\u003e - Static variable in class com.isupatches.wisefy.\u003ca href\u003d\"com/isupatches/wisefy/WiseFy.html\" title\u003d\"class in com.isupatches.wisefy\"\u003eWiseFy\u003c/a\u003e\u003c/dt\u003e\n \u003cdd\u003e\u0026nbsp;\u003c/dd\u003e\n+\u003cdt\u003e\u003cspan class\u003d\"memberNameLink\"\u003e\u003ca href\u003d\"com/isupatches/wisefy/WiseFy.withContext.html#withContext-android.content.Context-\"\u003ewithContext(Context)\u003c/a\u003e\u003c/span\u003e - Constructor for class com.isupatches.wisefy.\u003ca href\u003d\"com/isupatches/wisefy/WiseFy.withContext.html\" title\u003d\"class in com.isupatches.wisefy\"\u003eWiseFy.withContext\u003c/a\u003e\u003c/dt\u003e\n+\u003cdd\u003e\n+\u003cdiv class\u003d\"block\"\u003eMandatory - The public constructor for the builder that requires a context\u003c/div\u003e\n+\u003c/dd\u003e\n \u003c/dl\u003e\n \u003ca href\u003d\"#I:C\"\u003eC\u003c/a\u003e\u0026nbsp;\u003ca href\u003d\"#I:G\"\u003eG\u003c/a\u003e\u0026nbsp;\u003ca href\u003d\"#I:I\"\u003eI\u003c/a\u003e\u0026nbsp;\u003ca href\u003d\"#I:L\"\u003eL\u003c/a\u003e\u0026nbsp;\u003ca href\u003d\"#I:S\"\u003eS\u003c/a\u003e\u0026nbsp;\u003ca href\u003d\"#I:W\"\u003eW\u003c/a\u003e\u0026nbsp;\u003c/div\u003e\n \u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d START OF BOTTOM NAVBAR \u003d\u003d\u003d\u003d\u003d\u003d --\u003e"
        },
        {
          "file_name": "javadoc/index.html",
          "patch": "@@ -2,8 +2,8 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003ewisefy 1.0.7 API\u003c/title\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003ewisefy 1.0.8 API\u003c/title\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\n     targetPage \u003d \"\" + window.location.search;\n     if (targetPage !\u003d \"\" \u0026\u0026 targetPage !\u003d \"undefined\")"
        },
        {
          "file_name": "javadoc/overview-frame.html",
          "patch": "@@ -2,9 +2,9 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eOverview List (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eOverview List (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e"
        },
        {
          "file_name": "javadoc/overview-summary.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eOverview (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eOverview (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"Overview (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"Overview (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {\n@@ -69,7 +69,7 @@\n \u003c/a\u003e\u003c/div\u003e\n \u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d END OF TOP NAVBAR \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n \u003cdiv class\u003d\"header\"\u003e\n-\u003ch1 class\u003d\"title\"\u003ewisefy 1.0.7 API\u003c/h1\u003e\n+\u003ch1 class\u003d\"title\"\u003ewisefy 1.0.8 API\u003c/h1\u003e\n \u003c/div\u003e\n \u003cdiv class\u003d\"contentContainer\"\u003e\n \u003ctable class\u003d\"overviewSummary\" border\u003d\"0\" cellpadding\u003d\"3\" cellspacing\u003d\"0\" summary\u003d\"Packages table, listing packages, and an explanation\"\u003e"
        },
        {
          "file_name": "javadoc/overview-tree.html",
          "patch": "@@ -2,17 +2,17 @@\n \u003c!-- NewPage --\u003e\n \u003chtml lang\u003d\"en\"\u003e\n \u003chead\u003e\n-\u003c!-- Generated by javadoc (1.8.0_102) on Sat Mar 25 21:42:17 CDT 2017 --\u003e\n-\u003ctitle\u003eClass Hierarchy (wisefy 1.0.7 API)\u003c/title\u003e\n-\u003cmeta name\u003d\"date\" content\u003d\"2017-03-25\"\u003e\n+\u003c!-- Generated by javadoc (1.8.0_102) on Sat Jul 01 23:35:22 CDT 2017 --\u003e\n+\u003ctitle\u003eClass Hierarchy (wisefy 1.0.8 API)\u003c/title\u003e\n+\u003cmeta name\u003d\"date\" content\u003d\"2017-07-01\"\u003e\n \u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"stylesheet.css\" title\u003d\"Style\"\u003e\n \u003cscript type\u003d\"text/javascript\" src\u003d\"script.js\"\u003e\u003c/script\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n \u003cscript type\u003d\"text/javascript\"\u003e\u003c!--\n     try {\n         if (location.href.indexOf(\u0027is-external\u003dtrue\u0027) \u003d\u003d -1) {\n-            parent.document.title\u003d\"Class Hierarchy (wisefy 1.0.7 API)\";\n+            parent.document.title\u003d\"Class Hierarchy (wisefy 1.0.8 API)\";\n         }\n     }\n     catch(err) {"
        },
        {
          "file_name": "wisefy/src/main/java/com/isupatches/wisefy/WiseFy.java",
          "patch": "@@ -13,7 +13,6 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package com.isupatches.wisefy;\n \n \n@@ -652,7 +651,6 @@ boolean isNetwork5gHz() {\n         return frequency \u003e 4900 \u0026\u0026 frequency \u003c 5900;\n     }\n \n-\n     /**\n      * To check if a given network is 5gHz\n      *"
        },
        {
          "file_name": "wisefy/src/main/java/com/isupatches/wisefy/util/GetManagerUtil.java",
          "patch": "@@ -67,7 +67,7 @@ public ConnectivityManager getConnectivityManager(Context context) {\n      */\n     public WifiManager getWiFiManager(Context context) {\n         if(context !\u003d null) {\n-            return (WifiManager) context.getSystemService(Context.WIFI_SERVICE);\n+            return (WifiManager) context.getApplicationContext().getSystemService(Context.WIFI_SERVICE);\n         } else {\n             return null;\n         }"
        }
      ]
    }
  },
  {
    "name": "[bugfix] Fix an issue where we were leaking file handles and memory.",
    "url": "https://github.com/eXist-db/exist/pull/943",
    "description": "BinaryValue\u0027s were not closed after an XQuery was executed more than once (i.e. if the XQueryContext was recycled).\n\nI think this one must have been around for quite some time.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/eXist-db/exist/commit/5a0a326e5777eddacd9a862fcffdb1310fccc37e",
      "files": [
        {
          "file_name": "src/org/exist/xquery/XQueryContext.java",
          "patch": "@@ -3537,29 +3537,37 @@ public boolean requireDebugMode()\n     @Override\n     public void registerBinaryValueInstance(final BinaryValue binaryValue) {\n         if(binaryValueInstances \u003d\u003d null) {\n-             binaryValueInstances \u003d new ArrayList\u003cBinaryValue\u003e();\n-             \n-             cleanupTasks.add(new CleanupTask() {\n-                 \n-                 @Override\n-                 public void cleanup(final XQueryContext context) {\n-                    if(context.binaryValueInstances !\u003d null) {\n-                       for(final BinaryValue bv : context.binaryValueInstances) {\n-                           try {\n-                               bv.close();\n-                           } catch (final IOException ioe) {\n-                               LOG.error(\"Unable to close binary value: \" + ioe.getMessage(), ioe);\n-                           }\n-                       }\n-                       context.binaryValueInstances.clear();\n-                   }\n-                 }\n-             });\n+             binaryValueInstances \u003d new ArrayList\u003c\u003e();\n         }\n-        \n+\n+        if(cleanupTasks.isEmpty() || !cleanupTasks.stream().filter(ct -\u003e ct instanceof BinaryValueCleanupTask).findFirst().isPresent()) {\n+            cleanupTasks.add(new BinaryValueCleanupTask());\n+        }\n+\n         binaryValueInstances.add(binaryValue);\n     }\n \n+    /**\n+     * Cleanup Task which is responsible for relasing the streams\n+     * of any {@link BinaryValue} which have been used during\n+     * query execution\n+     */\n+    private static class BinaryValueCleanupTask implements CleanupTask {\n+        @Override\n+        public void cleanup(final XQueryContext context) {\n+            if (context.binaryValueInstances !\u003d null) {\n+                for (final BinaryValue bv : context.binaryValueInstances) {\n+                    try {\n+                        bv.close();\n+                    } catch (final IOException ioe) {\n+                        LOG.error(\"Unable to close binary value: \" + ioe.getMessage(), ioe);\n+                    }\n+                }\n+                context.binaryValueInstances.clear();\n+            }\n+        }\n+    }\n+\n     @Override\n     public String getCacheClass() {\n         return (String) getBroker().getConfiguration().getProperty(Configuration.BINARY_CACHE_CLASS_PROPERTY);\n@@ -3655,14 +3663,14 @@ public void debug() {\n \n     }\n     \n-    private List\u003cCleanupTask\u003e cleanupTasks \u003d new ArrayList\u003cCleanupTask\u003e();\n+    private final List\u003cCleanupTask\u003e cleanupTasks \u003d new ArrayList\u003c\u003e();\n     \n     public void registerCleanupTask(final CleanupTask cleanupTask) {\n         cleanupTasks.add(cleanupTask);\n     }\n     \n     public interface CleanupTask {\n-        public void cleanup(final XQueryContext context);\n+        void cleanup(final XQueryContext context);\n     }\n     \n     @Override"
        },
        {
          "file_name": "test/src/org/exist/xquery/XQueryContextTest.java",
          "patch": "@@ -1,16 +1,40 @@\n+/*\n+ * eXist Open Source Native XML Database\n+ * Copyright (C) 2016 The eXist Project\n+ * http://exist-db.org\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public License\n+ * as published by the Free Software Foundation; either version 2\n+ * of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n+ */\n package org.exist.xquery;\n \n import org.exist.storage.DBBroker;\n import org.exist.security.Subject;\n+import org.exist.xquery.value.BinaryValue;\n import org.junit.Test;\n import org.easymock.EasyMock;\n import org.exist.security.xacml.AccessContext;\n-import static org.easymock.EasyMock.replay;\n-import static org.easymock.EasyMock.verify;\n-import static org.easymock.EasyMock.expect;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Field;\n+import java.util.List;\n+\n+import static org.easymock.EasyMock.*;\n+import static org.junit.Assert.assertEquals;\n+\n /**\n- *\n- * @author aretter\n+ * @author Adam Retter \u003cadam.retter@googlemail.com\u003e\n  */\n public class XQueryContextTest {\n \n@@ -25,9 +49,9 @@ public void prepareForExecution_setsUserFromSession() {\n                 .addMockedMethod(\"getBroker\")\n                 .createMock();\n \n-        DBBroker mockBroker \u003d EasyMock.createMock(DBBroker.class);\n+        DBBroker mockBroker \u003d createMock(DBBroker.class);\n \n-        Subject mockSubject \u003d EasyMock.createMock(Subject.class);\n+        Subject mockSubject \u003d createMock(Subject.class);\n \n         //expectations\n         expect(context.getUserFromHttpSession()).andReturn(mockSubject);\n@@ -41,4 +65,115 @@ public void prepareForExecution_setsUserFromSession() {\n \n         verify(context);\n     }\n+\n+    /**\n+     * Test to ensure that BinaryValueInstances are\n+     * correctly cleaned up by the XQueryContext\n+     * between reuse of the context\n+     */\n+    @Test\n+    public void cleanUp_BinaryValueInstances() throws NoSuchFieldException, IllegalAccessException, IOException {\n+        final XQueryContext context \u003d new XQueryContext(AccessContext.TEST);\n+        final XQueryWatchDog mockWatchdog \u003d createMock(XQueryWatchDog.class);\n+        context.setWatchDog(mockWatchdog);\n+\n+        final BinaryValue mockBin1 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin2 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin3 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin4 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin5 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin6 \u003d createMock(BinaryValue.class);\n+        final BinaryValue mockBin7 \u003d createMock(BinaryValue.class);\n+\n+        // expectations on our mocks\n+        mockBin1.close();\n+        expectLastCall().times(1);\n+        mockBin2.close();\n+        expectLastCall().times(1);\n+        mockBin3.close();\n+        expectLastCall().times(1);\n+        mockBin4.close();\n+        expectLastCall().times(1);\n+        mockBin5.close();\n+        expectLastCall().times(1);\n+        mockBin6.close();\n+        expectLastCall().times(1);\n+        mockBin7.close();\n+        expectLastCall().times(1);\n+        mockWatchdog.reset();\n+        expectLastCall().times(3);\n+\n+        // prepare our mocks for our test\n+        replay(mockBin1, mockBin2, mockBin3, mockBin4, mockBin5, mockBin6, mockBin7, mockWatchdog);\n+\n+\n+        /* round 1 */\n+\n+        // use some binary streams\n+        context.registerBinaryValueInstance(mockBin1);\n+        context.registerBinaryValueInstance(mockBin2);\n+        context.registerBinaryValueInstance(mockBin3);\n+        assertEquals(3, countBinaryValueInstances(context));\n+        assertEquals(1, countCleanupTasks(context));\n+\n+        // cleanup those streams\n+        context.runCleanupTasks();\n+        assertEquals(0, countBinaryValueInstances(context));\n+\n+        //reset the context (for reuse(), just as XQueryPool#returnCompiledXQuery(org.exist.source.Source, CompiledXQuery) would do)\n+        context.reset();\n+        assertEquals(0, countCleanupTasks(context));\n+\n+\n+        /* round 2, let\u0027s reuse the context... */\n+\n+        // use some more binary streams\n+        context.registerBinaryValueInstance(mockBin4);\n+        context.registerBinaryValueInstance(mockBin5);\n+        assertEquals(2, countBinaryValueInstances(context));\n+        assertEquals(1, countCleanupTasks(context));\n+\n+        // cleanup those streams\n+        context.runCleanupTasks();\n+        assertEquals(0, countBinaryValueInstances(context));\n+\n+        //reset the context (for reuse(), just as XQueryPool#returnCompiledXQuery(org.exist.source.Source, CompiledXQuery) would do)\n+        context.reset();\n+        assertEquals(0, countCleanupTasks(context));\n+\n+\n+        /* round 3, let\u0027s reuse the context a second time... */\n+\n+        // again, use some more binary streams\n+        context.registerBinaryValueInstance(mockBin6);\n+        context.registerBinaryValueInstance(mockBin7);\n+        assertEquals(2, countBinaryValueInstances(context));\n+        assertEquals(1, countCleanupTasks(context));\n+\n+        // cleanup those streams\n+        context.runCleanupTasks();\n+        assertEquals(0, countBinaryValueInstances(context));\n+\n+        //reset the context (for reuse(), just as XQueryPool#returnCompiledXQuery(org.exist.source.Source, CompiledXQuery) would do)\n+        context.reset();\n+        assertEquals(0, countCleanupTasks(context));\n+\n+\n+        // verify the expectations of our mocks\n+        verify(mockBin1, mockBin2, mockBin3, mockBin4, mockBin5, mockBin6, mockBin7, mockWatchdog);\n+    }\n+\n+    private int countBinaryValueInstances(final XQueryContext context) throws NoSuchFieldException, IllegalAccessException {\n+        final Field fldBinaryValueInstances \u003d context.getClass().getDeclaredField(\"binaryValueInstances\");\n+        fldBinaryValueInstances.setAccessible(true);\n+        final List\u003cBinaryValue\u003e binaryValueInstances \u003d (List\u003cBinaryValue\u003e)fldBinaryValueInstances.get(context);\n+        return binaryValueInstances.size();\n+    }\n+\n+    private int countCleanupTasks(final XQueryContext context) throws NoSuchFieldException, IllegalAccessException {\n+        final Field fldCleanupTasks \u003d context.getClass().getDeclaredField(\"cleanupTasks\");\n+        fldCleanupTasks.setAccessible(true);\n+        final List\u003cXQueryContext.CleanupTask\u003e cleanupTasks \u003d (List\u003cXQueryContext.CleanupTask\u003e)fldCleanupTasks.get(context);\n+        return cleanupTasks.size();\n+    }\n }\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "Tiny memory leaks after resetDriver() when handle TERM signal enabled",
    "url": "https://github.com/sarxos/webcam-capture/issues/14",
    "description": "This issue can be observed only when handle TERM signal feature is enabled:\n\n``` java\nWebcam.handleTermSignal(true)\n```\n\nAfter user perform `Webcam.resetDriver()` and call `Webcam.getWebcams()` again, all devices are being discovered, hooks and handlers are installed again, but old references are not being freed - TERM signal handler still keep original references and prevents them from being garbage collected.\n\nRelated to issue #10 \n### Workaround:\n\nDisable handle TERM signal feature or accept memory leak in development phase. Please remember that TERM signal handling feature **shall not be used in production code**.\n\nTo disable TERM handling feature (if it was previously enabled):\n\n``` java\nWebcam.handleTermSignal(false)\n```\n\nYou can ignore this bug if TERM signal handler has not been enabled. Without TERM signal handler, everything works fine and all unnecessary references are correctly garbage collected. \n\nScreen from jvisualvm:\n\n![Screenshot from 2013-01-08 18:11:29](https://f.cloud.github.com/assets/472658/50895/538e45a0-59b9-11e2-8ba9-e60ef187eefa.png)\n",
    "keywords": [
      "handler",
      "not",
      "feature",
      "references",
      "term",
      "handle",
      "signal",
      "term signal",
      "enabled"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/sarxos/webcam-capture/commit/5a50ddda4eeffb4321a82f79d2c3cf6401eb5b63",
      "files": [
        {
          "file_name": "webcam-capture/src/main/java/com/github/sarxos/webcam/Webcam.java",
          "patch": "@@ -11,6 +11,7 @@\n import java.util.concurrent.ExecutorService;\r\n import java.util.concurrent.Executors;\r\n import java.util.concurrent.Future;\r\n+import java.util.concurrent.ThreadFactory;\r\n import java.util.concurrent.TimeUnit;\r\n import java.util.concurrent.TimeoutException;\r\n \r\n@@ -58,7 +59,7 @@ public void run() {\n \t\t}\r\n \t}\r\n \r\n-\tprivate static final class WebcamsDiscovery implements Callable\u003cList\u003cWebcam\u003e\u003e {\r\n+\tprivate static final class WebcamsDiscovery implements Callable\u003cList\u003cWebcam\u003e\u003e, ThreadFactory {\r\n \r\n \t\tprivate final WebcamDriver driver;\r\n \r\n@@ -74,6 +75,13 @@ public WebcamsDiscovery(WebcamDriver driver) {\n \t\t\t}\r\n \t\t\treturn webcams;\r\n \t\t}\r\n+\r\n+\t\t@Override\r\n+\t\tpublic Thread newThread(Runnable r) {\r\n+\t\t\tThread t \u003d new Thread(r, \"webcam-discovery\");\r\n+\t\t\tt.setDaemon(true);\r\n+\t\t\treturn t;\r\n+\t\t}\r\n \t}\r\n \r\n \t/**\r\n@@ -180,6 +188,7 @@ public synchronized void close() {\n \t\t}\r\n \r\n \t\tRuntime.getRuntime().removeShutdownHook(hook);\r\n+\r\n \t\tclose0();\r\n \t}\r\n \r\n@@ -362,8 +371,10 @@ public BufferedImage getImage() {\n \t\t\t\tdriver \u003d new WebcamDefaultDriver();\r\n \t\t\t}\r\n \r\n-\t\t\tExecutorService executor \u003d Executors.newSingleThreadExecutor();\r\n-\t\t\tFuture\u003cList\u003cWebcam\u003e\u003e future \u003d executor.submit(new WebcamsDiscovery(driver));\r\n+\t\t\tWebcamsDiscovery discovery \u003d new WebcamsDiscovery(driver);\r\n+\t\t\tExecutorService executor \u003d Executors.newSingleThreadExecutor(discovery);\r\n+\t\t\tFuture\u003cList\u003cWebcam\u003e\u003e future \u003d executor.submit(discovery);\r\n+\r\n \t\t\texecutor.shutdown();\r\n \r\n \t\t\ttry {\r\n@@ -537,7 +548,14 @@ public static void resetDriver() {\n \r\n \t\tdriver \u003d null;\r\n \r\n+\t\tif (deallocOnTermSignal) {\r\n+\t\t\tWebcamDeallocator.unstore();\r\n+\t\t}\r\n+\r\n \t\tif (webcams !\u003d null \u0026\u0026 !webcams.isEmpty()) {\r\n+\t\t\tfor (Webcam webcam : webcams) {\r\n+\t\t\t\twebcam.dispose();\r\n+\t\t\t}\r\n \t\t\twebcams.clear();\r\n \t\t}\r\n \r\n@@ -586,12 +604,21 @@ public WebcamDevice getDevice() {\n \t */\r\n \tprotected void dispose() {\r\n \r\n+\t\tLOG.info(\"Disposing webcam {}\", getName());\r\n+\r\n+\t\t// hook can be null because there is a possibility that webcam has never\r\n+\t\t// been open and therefore hook was not created\r\n+\t\tif (hook !\u003d null) {\r\n+\t\t\tRuntime.getRuntime().removeShutdownHook(hook);\r\n+\t\t}\r\n+\r\n \t\topen \u003d false;\r\n \t\tdisposed \u003d true;\r\n \r\n \t\tWebcamEvent we \u003d new WebcamEvent(this);\r\n \t\tfor (WebcamListener l : listeners) {\r\n \t\t\ttry {\r\n+\t\t\t\tl.webcamClosed(we);\r\n \t\t\t\tl.webcamDisposed(we);\r\n \t\t\t} catch (Exception e) {\r\n \t\t\t\tLOG.error(String.format(\"Notify webcam disposed, exception when calling %s listener\", l.getClass()), e);\r"
        },
        {
          "file_name": "webcam-capture/src/main/java/com/github/sarxos/webcam/WebcamDeallocator.java",
          "patch": "@@ -3,8 +3,6 @@\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.PrintStream;\n-import java.util.Observable;\n-import java.util.Observer;\n \n \n /**\n@@ -13,10 +11,11 @@\n  * \n  * @author Bartosz Firyn (SarXos)\n  */\n-class WebcamDeallocator implements Observer {\n+final class WebcamDeallocator {\n \n-\tprivate Webcam[] webcams \u003d null;\n-\tprivate WebcamSignalHandler handler \u003d new WebcamSignalHandler();\n+\tprivate static final WebcamSignalHandler HANDLER \u003d new WebcamSignalHandler();\n+\n+\tprivate final Webcam[] webcams;\n \n \t/**\n \t * This constructor is used internally to create new deallocator for the\n@@ -25,43 +24,48 @@\n \t * @param devices the devices to be stored in deallocator\n \t */\n \tprivate WebcamDeallocator(Webcam[] devices) {\n-\t\tif (devices !\u003d null \u0026\u0026 devices.length \u003e 0) {\n-\t\t\tthis.webcams \u003d devices;\n-\t\t\tthis.handler.listen(\"TERM\", this);\n-\t\t}\n+\t\tthis.webcams \u003d devices;\n \t}\n \n \t/**\n \t * Store devices to be deallocated when TERM signal has been received.\n \t * \n-\t * @param devices the devices array to be stored by deallocator\n+\t * @param webcams the webcams array to be stored in deallocator\n \t */\n-\tprotected static final void store(Webcam[] devices) {\n-\t\tnew WebcamDeallocator(devices);\n+\tprotected static final void store(Webcam[] webcams) {\n+\t\tif (HANDLER.get() \u003d\u003d null) {\n+\t\t\tHANDLER.set(new WebcamDeallocator(webcams));\n+\t\t} else {\n+\t\t\tthrow new IllegalStateException(\"Deallocator is already set!\");\n+\t\t}\n \t}\n \n-\t@Override\n-\tpublic void update(Observable observable, Object object) {\n-\t\tfor (Webcam device : webcams) {\n+\tprotected static final void unstore() {\n+\t\tHANDLER.reset();\n+\t}\n+\n+\tprotected void deallocate() {\n+\t\tfor (Webcam w : webcams) {\n \t\t\ttry {\n-\t\t\t\tdevice.dispose();\n+\t\t\t\tw.dispose();\n \t\t\t} catch (Throwable t) {\n \t\t\t\tcaugh(t);\n \t\t\t}\n \t\t}\n \t}\n \n-\tpublic void caugh(Throwable e) {\n+\tprivate void caugh(Throwable t) {\n \t\tFile f \u003d new File(String.format(\"webcam-capture-hs-%s\", System.currentTimeMillis()));\n \t\tPrintStream ps \u003d null;\n \t\ttry {\n-\t\t\te.printStackTrace(ps \u003d new PrintStream(f));\n-\t\t} catch (FileNotFoundException e2) {\n-\t\t\t// ignore, stdout is not working, cannot do anything more\n+\t\t\tt.printStackTrace(ps \u003d new PrintStream(f));\n+\t\t} catch (FileNotFoundException e) {\n+\t\t\te.printStackTrace();\n \t\t} finally {\n \t\t\tif (ps !\u003d null) {\n \t\t\t\tps.close();\n \t\t\t}\n \t\t}\n \t}\n+\n }"
        },
        {
          "file_name": "webcam-capture/src/main/java/com/github/sarxos/webcam/WebcamSignalHandler.java",
          "patch": "@@ -1,7 +1,7 @@\n package com.github.sarxos.webcam;\n \n-import java.util.Observable;\n-import java.util.Observer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import sun.misc.Signal;\n import sun.misc.SignalHandler;\n@@ -14,29 +14,44 @@\n  * @author Bartosz Firyn (SarXos)\n  */\n @SuppressWarnings(\"restriction\")\n-class WebcamSignalHandler extends Observable implements SignalHandler {\n+final class WebcamSignalHandler implements SignalHandler {\n+\n+\tprivate static final Logger LOG \u003d LoggerFactory.getLogger(WebcamSignalHandler.class);\n+\n+\tprivate WebcamDeallocator deallocator \u003d null;\n \n \tprivate SignalHandler handler \u003d null;\n \n-\tpublic void listen(String signal, Observer observer) throws IllegalArgumentException {\n-\t\taddObserver(observer);\n-\t\thandler \u003d Signal.handle(new Signal(signal), this);\n+\tpublic WebcamSignalHandler() {\n+\t\thandler \u003d Signal.handle(new Signal(\"TERM\"), this);\n \t}\n \n \t@Override\n \tpublic void handle(Signal signal) {\n \n+\t\tLOG.warn(\"Detected signal {} {}, calling deallocator\", signal.getName(), signal.getNumber());\n+\n \t\t// do nothing on \"signal default\" or \"signal ignore\"\n \t\tif (handler \u003d\u003d SIG_DFL || handler \u003d\u003d SIG_IGN) {\n \t\t\treturn;\n \t\t}\n \n-\t\tsetChanged();\n-\n \t\ttry {\n-\t\t\tnotifyObservers(signal);\n+\t\t\tdeallocator.deallocate();\n \t\t} finally {\n \t\t\thandler.handle(signal);\n \t\t}\n \t}\n+\n+\tpublic void set(WebcamDeallocator deallocator) {\n+\t\tthis.deallocator \u003d deallocator;\n+\t}\n+\n+\tpublic WebcamDeallocator get() {\n+\t\treturn this.deallocator;\n+\t}\n+\n+\tpublic void reset() {\n+\t\tthis.deallocator \u003d null;\n+\t}\n }"
        },
        {
          "file_name": "webcam-capture/src/main/java/com/github/sarxos/webcam/ds/buildin/WebcamDefaultDriver.java",
          "patch": "@@ -2,7 +2,6 @@\n \r\n import java.util.ArrayList;\r\n import java.util.List;\r\n-import java.util.concurrent.atomic.AtomicBoolean;\r\n \r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n@@ -37,28 +36,20 @@\n \t */\r\n \tprivate static final GetDevicesTask DEVICES_TASK \u003d new GetDevicesTask(processor);\r\n \r\n-\t/**\r\n-\t * Static devices list.\r\n-\t */\r\n-\tprivate static final List\u003cWebcamDevice\u003e devices \u003d new ArrayList\u003cWebcamDevice\u003e();\r\n-\r\n-\tprivate static final AtomicBoolean initialized \u003d new AtomicBoolean(false);\r\n-\r\n \t@Override\r\n \tpublic List\u003cWebcamDevice\u003e getDevices() {\r\n \r\n-\t\tif (initialized.compareAndSet(false, true)) {\r\n+\t\tLOG.debug(\"Searching devices\");\r\n \r\n-\t\t\tLOG.debug(\"Searching devices\");\r\n+\t\tList\u003cWebcamDevice\u003e devices \u003d new ArrayList\u003cWebcamDevice\u003e();\r\n \r\n-\t\t\tfor (Device device : DEVICES_TASK.getDevices()) {\r\n-\t\t\t\tdevices.add(new WebcamDefaultDevice(device));\r\n-\t\t\t}\r\n+\t\tfor (Device device : DEVICES_TASK.getDevices()) {\r\n+\t\t\tdevices.add(new WebcamDefaultDevice(device));\r\n+\t\t}\r\n \r\n-\t\t\tif (LOG.isDebugEnabled()) {\r\n-\t\t\t\tfor (WebcamDevice device : devices) {\r\n-\t\t\t\t\tLOG.debug(\"Found device \" + device);\r\n-\t\t\t\t}\r\n+\t\tif (LOG.isDebugEnabled()) {\r\n+\t\t\tfor (WebcamDevice device : devices) {\r\n+\t\t\t\tLOG.debug(\"Found device {}\", device.getName());\r\n \t\t\t}\r\n \t\t}\r\n \r"
        },
        {
          "file_name": "webcam-capture/src/main/java/com/github/sarxos/webcam/ds/buildin/WebcamGrabberProcessor.java",
          "patch": "@@ -19,7 +19,7 @@\n  * \r\n  * @author Bartosz Firyn (SarXos)\r\n  */\r\n-public class WebcamGrabberProcessor {\r\n+public final class WebcamGrabberProcessor {\r\n \r\n \t/**\r\n \t * Thread factory for processor.\r"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak in dependency nodes",
    "url": "https://github.com/maxifier/mxcache/pull/26",
    "description": "Dependency nodes should regularly cleanup their dependent nodes references in order to remove the ones that point to GC\u0027ed dependents\n",
    "keywords": [
      "nodes"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/maxifier/mxcache/commit/14c118b4f9a5887d6a2151e81737537e4ab8d36b",
      "files": [
        {
          "file_name": "mxcache-generation/src/test/java/com/maxifier/mxcache/template/impl/PInlineDependencyCache.template",
          "patch": "@@ -32,6 +32,14 @@ public class #E#InlineDependencyCache extends #E#InlineCacheImpl implements Depe\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public #E#InlineDependencyCache(Object owner, #E#Calculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public class #E#InlineDependencyCache extends #E#InlineCacheImpl implements Depe\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/BooleanInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public BooleanInlineDependencyCache(Object owner, BooleanCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/ByteInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public ByteInlineDependencyCache(Object owner, ByteCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/CharacterInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public CharacterInlineDependencyCache(Object owner, CharacterCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/DoubleInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public DoubleInlineDependencyCache(Object owner, DoubleCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/FloatInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public FloatInlineDependencyCache(Object owner, FloatCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/IntInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public IntInlineDependencyCache(Object owner, IntCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/LongInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public LongInlineDependencyCache(Object owner, LongCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/ObjectInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public ObjectInlineDependencyCache(Object owner, ObjectCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/caches/def/ShortInlineDependencyCache.java",
          "patch": "@@ -32,6 +32,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     public ShortInlineDependencyCache(Object owner, ShortCalculatable calculable, MutableStatistics statistics) {\r\n@@ -68,6 +76,26 @@ public synchronized void trackDependency(DependencyNode node) {\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     @Override\r"
        },
        {
          "file_name": "mxcache-runtime/src/main/java/com/maxifier/mxcache/impl/resource/AbstractDependencyNode.java",
          "patch": "@@ -19,6 +19,14 @@\n      */\r\n     private Set\u003cReference\u003cDependencyNode\u003e\u003e dependentNodes;\r\n \r\n+    /**\r\n+     * Number of elements in dependentNodes after which all the set should be checked for the presence of\r\n+     * references to GC\u0027ed objects.\r\n+     *\r\n+     * This threshold is required in order to evict such references as they pollute memory and never GC\u0027ed otherwise.\r\n+     */\r\n+    private int cleanupThreshold \u003d 10;\r\n+\r\n     private Reference\u003cDependencyNode\u003e selfReference;\r\n \r\n     @Override\r\n@@ -54,9 +62,31 @@ public synchronized int getApproxSize() {\n     @Override\r\n     public synchronized void trackDependency(DependencyNode node) {\r\n         if (dependentNodes \u003d\u003d null) {\r\n+            // this magic set is used to prevent memory leaks\r\n+            // it cleans up references to GC\u0027ed nodes on rehash\r\n             dependentNodes \u003d new THashSet\u003cReference\u003cDependencyNode\u003e\u003e();\r\n         }\r\n         dependentNodes.add(node.getSelfReference());\r\n+        cleanupIfNeeded();\r\n+    }\r\n+\r\n+    private void cleanupIfNeeded() {\r\n+        if (dependentNodes.size() \u003e\u003d cleanupThreshold) {\r\n+            for (Iterator\u003cReference\u003cDependencyNode\u003e\u003e it \u003d dependentNodes.iterator(); it.hasNext(); ) {\r\n+                if (it.next().get() \u003d\u003d null) {\r\n+                    it.remove();\r\n+                }\r\n+            }\r\n+            // It\u0027s important to increase cleanup threshold according to the number of elements in a set\r\n+            // in order to maintain the balance between CPU-overhead and memory-overhead\r\n+\r\n+            // The cleanup has O(N) complexity, so doing this on addition of N new elements would lead to constant\r\n+            // small overhead and thus would not affect the asymptotic behaviour of operations.\r\n+\r\n+            // The memory overhead could be significant but it\u0027s guaranteed that memory usage would not be more than\r\n+            // 2 * peak memory usage for alive elements.\r\n+            cleanupThreshold \u003d dependentNodes.size() * 2;\r\n+        }\r\n     }\r\n \r\n     protected static boolean equal(@Nullable Object a, @Nullable Object b) {\r"
        }
      ]
    }
  },
  {
    "name": "Memory leak in AbstractTripleSort ",
    "url": "https://github.com/culturegraph/metafacture-core/issues/192",
    "description": "AbstractTripleSort registers with the JVM to be informed when memory becomes full. Instances of the class never unregister themselves from the JVM. Thus, instances are always being referred to by the JVM and are consequently never garbage collected.\n",
    "keywords": [
      "jvm"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/culturegraph/metafacture-core/commit/dda23439b5863ba750745b6cb1e3884b4fcf2fdc",
      "files": [
        {
          "file_name": "src/main/java/org/culturegraph/mf/stream/pipe/sort/AbstractTripleSort.java",
          "patch": "@@ -173,6 +173,7 @@ public int compare(final SortedTripleFileFacade o1, final SortedTripleFileFacade\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\t\tMemoryWarningSystem.removeListener(this);\n \t}\n \n \tprotected void onFinished() {"
        },
        {
          "file_name": "src/test/java/org/culturegraph/mf/stream/pipe/sort/AbstractTripleSortTest.java",
          "patch": "@@ -15,6 +15,11 @@\n  */\n package org.culturegraph.mf.stream.pipe.sort;\n \n+import static org.junit.Assert.assertTrue;\n+\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n+\n import org.culturegraph.mf.types.Triple;\n import org.junit.Before;\n import org.junit.Test;\n@@ -49,4 +54,24 @@ public void shouldNotFailIfFlushingBeforeFirstRecord() {\n \t\ttripleSort.closeStream();\n \t}\n \n+\t/**\n+\t * This test case may throw fail unexpectedly as it relies on the\n+\t * garbage collector to run when calling {@code System.gc()}. This\n+\t * is not guaranteed by the JVM.\n+\t */\n+\t@Test\n+\tpublic void issue192ShouldUnregisterFromTheJVMToNotCauseMemoryLeak() {\n+\n+\t\t// Get weak reference for checking whether the object was actually freed later:\n+\t\tfinal ReferenceQueue\u003cAbstractTripleSort\u003e refQueue \u003d new ReferenceQueue\u003cAbstractTripleSort\u003e();\n+\t\tfinal WeakReference\u003cAbstractTripleSort\u003e weakRef \u003d new WeakReference\u003cAbstractTripleSort\u003e(tripleSort, refQueue);\n+\n+\t\ttripleSort.closeStream();\n+\t\ttripleSort \u003d null;\n+\n+\t\tSystem.gc();\n+\n+\t\tassertTrue(weakRef.isEnqueued());\n+\t}\n+\n }"
        }
      ]
    }
  },
  {
    "name": "Memory leak (probably in visual/CameraStreamRouter)",
    "url": "https://github.com/lumenrobot/avatar-nao/issues/2",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/lumenrobot/avatar-nao/commit/4545109e2093224afe250eb8eb9a7a18a9a7ced4",
      "files": [
        {
          "file_name": "src/main/java/org/lskk/lumen/avatar/nao/CameraStreamRouter.java",
          "patch": "@@ -2,15 +2,13 @@\n \n import com.aldebaran.proxy.ALVideoDeviceProxy;\n import com.aldebaran.proxy.Variant;\n+import com.google.common.base.Preconditions;\n import org.apache.camel.ProducerTemplate;\n import org.apache.camel.builder.LoggingErrorHandlerBuilder;\n import org.apache.camel.builder.RouteBuilder;\n import org.apache.commons.codec.binary.Base64;\n import org.apache.commons.io.HexDump;\n-import org.bytedeco.javacpp.BytePointer;\n-import org.bytedeco.javacpp.opencv_core;\n-import org.bytedeco.javacpp.opencv_highgui;\n-import org.bytedeco.javacpp.opencv_imgproc;\n+import org.bytedeco.javacpp.*;\n import org.joda.time.DateTime;\n import org.joda.time.DateTimeZone;\n import org.lskk.lumen.core.ImageObject;\n@@ -23,6 +21,7 @@\n import javax.inject.Inject;\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayOutputStream;\n+import java.nio.ByteBuffer;\n \n /**\n  * Created by ceefour on 10/2/15.\n@@ -43,14 +42,34 @@\n     @Inject\n     private ProducerTemplate producer;\n \n+    /**\n+     * Requires:\n+     *\n+     * // RuntimeException: No native JavaCPP library in memory. (Has Loader.load() been called?) - https://github.com/bytedeco/javacpp/issues/44\n+     * Loader.load(opencv_core.class);\n+     *\n+     * @param topImg\n+     * @return\n+     */\n     protected byte[] yuv422ToJpg(byte[] topImg) {\n         // http://study.marearts.com/2014/12/yuyv-to-rgb-and-rgb-to-yuyv-using.html\n         final byte[] topBytes;\n-        final opencv_core.Mat yuv422Mat \u003d new opencv_core.Mat(naoVideoConfig.getResolution().getHeight(), naoVideoConfig.getResolution().getWidth(),\n-                opencv_core.CV_8UC2);\n+        final BytePointer topPtr \u003d new BytePointer(topImg);\n+//        final opencv_core.Mat yuv422Mat \u003d new opencv_core.Mat(\n+//                naoVideoConfig.getResolution().getHeight(), naoVideoConfig.getResolution().getWidth(),\n+//                opencv_core.CV_8UC2);\n+        final opencv_core.Mat yuv422Mat \u003d new opencv_core.Mat(\n+                naoVideoConfig.getResolution().getHeight(), naoVideoConfig.getResolution().getWidth(),\n+                opencv_core.CV_8UC2, topPtr);\n         final opencv_core.Mat bgrMat;\n         try {\n-            yuv422Mat.ptr().put(topImg);\n+            //yuv422Mat.asByteBuffer().limit(topImg.length);\n+            log.trace(\"Input is {} bytes, yuv422Mat: limit\u003d{} capacity\u003d{} {}\",\n+                    topImg.length, yuv422Mat.ptr().limit(), yuv422Mat.ptr().capacity(), yuv422Mat);\n+//            Preconditions.checkState(topImg.length \u003d\u003d yuv422Mat.asByteBuffer().limit(),\n+//                    \"Input is %s bytes, but yuv422Mat is %s bytes %s\",\n+//                    topImg.length, yuv422Mat.asByteBuffer().limit(), yuv422Mat);\n+//            yuv422Mat.asByteBuffer().put(topImg);\n             bgrMat \u003d new opencv_core.Mat(naoVideoConfig.getResolution().getHeight(), naoVideoConfig.getResolution().getWidth(),\n                     opencv_core.CV_8UC3);\n             try {\n@@ -79,6 +98,8 @@ public void configure() throws Exception {\n         errorHandler(new LoggingErrorHandlerBuilder(log));\n         final int period \u003d 1000 / naoVideoConfig.getCameraFps();\n         log.info(\"Cameras capture timer with period \u003d {}ms\", period);\n+        // RuntimeException: No native JavaCPP library in memory. (Has Loader.load() been called?) - https://github.com/bytedeco/javacpp/issues/44\n+        Loader.load(opencv_core.class);\n         from(\"timer:camera?period\u003d\" + period)\n                 .process(exchange -\u003e {\n                     final byte[] topYuv422;"
        },
        {
          "file_name": "src/test/java/org/lskk/lumen/avatar/nao/NaoTest.java",
          "patch": "@@ -0,0 +1,59 @@\n+package org.lskk.lumen.avatar.nao;\n+\n+import com.aldebaran.proxy.ALMotionProxy;\n+import com.aldebaran.proxy.ALRobotPostureProxy;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import javax.inject.Inject;\n+\n+/**\n+ * Created by aina on 18/11/2015.\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(classes \u003d NaoTest.Config.class)\n+public class NaoTest {\n+\n+    private static final Logger log \u003d LoggerFactory.getLogger(NaoTest.class);\n+\n+    @Configuration\n+    @Import({JacksonAutoConfiguration.class, NaoConfig.class})\n+    @PropertySource(value \u003d {\"classpath:application.properties\", \"file:config/application.properties\"},\n+            ignoreResourceNotFound \u003d true)\n+    //@ComponentScan(\"org.lskk.lumen.reasoner.quran\")\n+//    @EnableConfigurationProperties\n+    public static class Config {\n+\n+    }\n+\n+    @Inject\n+    private ALMotionProxy motion;\n+    @Inject\n+    private ALRobotPostureProxy robotPosture;\n+\n+    @Test\n+    public void rest() {\n+        log.info(\"Resting...\");\n+        motion.rest();\n+        log.info(\"Rested\");\n+    }\n+\n+    @Test\n+    public void stand() throws InterruptedException {\n+        log.info(\"Standing...\");\n+        motion.wakeUp();\n+        robotPosture.goToPosture(\"Stand\", 0.7f);\n+        log.info(\"Stood. (waiting)\");\n+        Thread.sleep(2000);\n+        log.info(\"Resting...\");\n+        motion.rest();\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "Feature/fix memory leaks",
    "url": "https://github.com/Microsoft/ApplicationInsights-Android/pull/34",
    "description": "As @RomainPiel points out in #33, we leak the context. We\u0027ve discussed it before, so here\u0027s the fix for leaking the context in ApplicationInsights.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Microsoft/ApplicationInsights-Android/commit/35f737fffef374202f16d195b8aa23b8f6048c92",
      "files": [
        {
          "file_name": "README.md",
          "patch": "@@ -98,7 +98,7 @@ import com.microsoft.applicationinsights.library.ApplicationInsights;\n and add \n \n ```java\n-ApplicationInsights.setup(this, getApplication());\n+ApplicationInsights.setup(this.getApplicationContext(), getApplication());\n ApplicationInsights.start();\n ```\n \n@@ -134,7 +134,7 @@ android {\n It is also possible to set the instrumentation key of your app in code. This will override the one you might have set in your gradle or manifest file. Setting the instrumentation key programmatically can be done while setting up Application Insights:\n \n ```java\r\n-ApplicationInsights.setup(this, getApplication(), \"\u003cYOUR-INSTRUMENTATION-KEY\u003e\");\n+ApplicationInsights.setup(this.getApplicationContext(), getApplication(), \"\u003cYOUR-INSTRUMENTATION-KEY\u003e\");\n ApplicationInsights.start();\n ```\n \n@@ -145,7 +145,7 @@ The **developer mode** is enabled automatically in case the debugger is attached\n You can explicitly enable/disable the developer mode like this:\n \n ```java\n-//do this after ApplicationInsights.setup(this, getApplication())\n+//do this after ApplicationInsights.setup(this.getApplicationContext(), getApplication())\n //and before ApplicationInsights.start()\n \n ApplicationInsights.setDeveloperMode(false);\n@@ -192,7 +192,7 @@ client.trackEvent(\"sample event\", properties);\n \r\n ## \u003ca name\u003d\"7\"\u003e\u003c/a\u003e7. Automatic collection of life-cycle events (Sessions \u0026 Page Views)\r\n \r\n-This only works in Android SDK version 15 and up (Ice Cream Sandwich+) and is **enabled by default**. Don\u0027t forget to set the Application instance when setting up Application Insights (otherwise auto collection will be disabled):\n+This only works in Android SDK version 15 and up (Ice Cream Sandwich+) and is **enabled by default**. Don\u0027t forget to provide an Application instance when setting up Application Insights (otherwise auto collection will be disabled):\n \n ```java\n ApplicationInsights.setup(this, getApplication());\n@@ -201,7 +201,7 @@ ApplicationInsights.setup(this, getApplication());\n If you want to explicitly **Disable** automatic collection of life-cycle events (auto session tracking and auto page view tracking), call ```setAutoCollectionDisabled``` inbetween setup and start of Application Insights. \r\n \n ```java\n-ApplicationInsights.setup(this);\r\n+ApplicationInsights.setup(this.getApplicationContext());\r\n ApplicationInsights.setAutoCollectionDisabled(true); //disable the auto-collection\n ApplicationInsights.start();\r\n ```"
        },
        {
          "file_name": "app-sample/src/main/java/com/microsoft/applicationinsights/appsample/ItemListActivity.java",
          "patch": "@@ -1,5 +1,6 @@\n package com.microsoft.applicationinsights.appsample;\n \n+import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n import android.support.v4.app.FragmentActivity;\n@@ -52,7 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {\n                     .findFragmentById(R.id.item_list))\n                     .setActivateOnItemClick(true);\n         }\n-        ApplicationInsights.setup(this, getApplication());\n+        ApplicationInsights.setup(this.getApplicationContext(), getApplication());\n \n         //ApplicationInsightsConfig config \u003d ApplicationInsights.getConfig();\n         //config.setSessionIntervalMs(30000);"
        },
        {
          "file_name": "applicationinsights-android/src/androidTest/java/com/microsoft/applicationinsights/library/ExceptionTrackingTest.java",
          "patch": "@@ -27,22 +27,22 @@ public void tearDown() throws Exception {\n     }\n \n     public void testRegisterExceptionHandler() throws Exception {\n-        ExceptionTracking.registerExceptionHandler(this.getActivity());\n+        ExceptionTracking.registerExceptionHandler();\n         Thread.UncaughtExceptionHandler handler \u003d\n                 Thread.getDefaultUncaughtExceptionHandler();\n         Assert.assertNotNull(\"handler is set\", handler);\n         Assert.assertEquals(\"handler is of correct type\", ExceptionTracking.class, handler.getClass());\n \n         // double register without debug mode\n         ApplicationInsights.setDeveloperMode(false);\n-        ExceptionTracking.registerExceptionHandler(this.getActivity());\n+        ExceptionTracking.registerExceptionHandler();\n         Assert.assertTrue(\"no exception for multiple registration without debug mode\", true);\n \n         // double register with debug mode and verify runtime exception\n         ApplicationInsights.setDeveloperMode(true);\n         RuntimeException exception \u003d null;\n         try {\n-            ExceptionTracking.registerExceptionHandler(this.getActivity());\n+            ExceptionTracking.registerExceptionHandler();\n         } catch (RuntimeException e) {\n             exception \u003d e;\n         }"
        },
        {
          "file_name": "applicationinsights-android/src/androidTest/java/com/microsoft/applicationinsights/library/MockExceptionTracking.java",
          "patch": "@@ -9,7 +9,7 @@\n     public MockExceptionTracking(Context context,\n                                  Thread.UncaughtExceptionHandler preexistingExceptionHandler,\n                                  boolean ignoreDefaultHandler) {\n-        super(context, preexistingExceptionHandler, ignoreDefaultHandler);\n+        super(preexistingExceptionHandler, ignoreDefaultHandler);\n         this.processKillCount \u003d 0;\n     }\n "
        },
        {
          "file_name": "applicationinsights-android/src/androidTest/java/com/microsoft/applicationinsights/library/TelemetryClientTest.java",
          "patch": "@@ -29,7 +29,7 @@ public void testRegister() throws Exception {\n     //TODO test at applicable location\n //    public void testGetContext() throws Exception {\n //        TelemetryClient client \u003d TelemetryClient.getInstance();\n-//        Assert.assertNotNull(\"context is initialized\", client.getContext());\n+//        Assert.assertNotNull(\"context is initialized\", client.getWeakContext());\n //    }\n \n     //TODO test at applicable location"
        },
        {
          "file_name": "applicationinsights-android/src/main/java/com/microsoft/applicationinsights/library/ApplicationInsights.java",
          "patch": "@@ -9,6 +9,7 @@\n import com.microsoft.applicationinsights.library.config.ApplicationInsightsConfig;\n import com.microsoft.applicationinsights.logging.InternalLogging;\n \n+import java.lang.ref.WeakReference;\n import java.util.Map;\n \n public enum ApplicationInsights {\n@@ -51,7 +52,7 @@\n     private String instrumentationKey;\n \n     /**\n-     * The context which contains additional information for the telemetry data sent out.\n+     * The weakContext which contains additional information for the telemetry data sent out.\n      */\n     private TelemetryContext telemetryContext;\n \n@@ -61,9 +62,9 @@\n     private String userId;\n \n     /**\n-     * The context associated with Application Insights.\n+     * The weakContext associated with Application Insights.\n      */\n-    private Context context;\n+    private WeakReference\u003cContext\u003e weakContext;\n \n     /**\n      * The application needed for auto collecting telemetry data\n@@ -93,7 +94,8 @@\n      * Configure Application Insights\n      * Note: This should be called before start\n      *\n-     * @param context the context associated with Application Insights\n+     * @param context     the context associated with Application Insights\n+     * @param context the application context associated with Application Insights\n      */\n     public static void setup(Context context) {\n         ApplicationInsights.INSTANCE.setupInstance(context, null, null);\n@@ -103,8 +105,7 @@ public static void setup(Context context) {\n      * Configure Application Insights\n      * Note: This should be called before start\n      *\n-     * @param context     the context associated with Application Insights\n-     * @param application the application needed for auto collecting telemetry data\n+     * @param application the application context the application needed for auto collecting telemetry data\n      */\n     public static void setup(Context context, Application application) {\n         ApplicationInsights.INSTANCE.setupInstance(context, application, null);\n@@ -114,7 +115,7 @@ public static void setup(Context context, Application application) {\n      * Configure Application Insights\n      * Note: This should be called before start\n      *\n-     * @param context            the context associated with Application Insights\n+     * @param context            the application context associated with Application Insights\n      * @param instrumentationKey the instrumentation key associated with the app\n      */\n     public static void setup(Context context, String instrumentationKey) {\n@@ -125,7 +126,7 @@ public static void setup(Context context, String instrumentationKey) {\n      * Configure Application Insights\n      * Note: This should be called before start\n      *\n-     * @param context            the context associated with Application Insights\n+     * @param context            the application context associated with Application Insights\n      * @param application        the application needed for auto collecting telemetry data\n      * @param instrumentationKey the instrumentation key associated with the app\n      */\n@@ -137,20 +138,20 @@ public static void setup(Context context, Application application, String instru\n      * Configure Application Insights\n      * Note: This should be called before start\n      *\n-     * @param context            the context associated with Application Insights\n+     * @param context            the application context associated with Application Insights\n      * @param instrumentationKey the instrumentation key associated with the app\n      */\n     public void setupInstance(Context context, Application application, String instrumentationKey) {\n         if (!isSetup) {\n             if (context !\u003d null) {\n-                this.context \u003d context;\n+                this.weakContext \u003d new WeakReference\u003cContext\u003e(context);\n                 this.instrumentationKey \u003d instrumentationKey;\n                 this.application \u003d application;\n                 isSetup \u003d true;\n                 InternalLogging.info(TAG, \"ApplicationInsights has been setup correctly.\", null);\n             } else {\n                 InternalLogging.warn(TAG, \"ApplicationInsights could not be setup correctly \" +\n-                      \"because the given context was null\");\n+                      \"because the given weakContext was null\");\n             }\n         }\n \n@@ -170,20 +171,27 @@ public static void start() {\n      */\n     public void startInstance() {\n         if (!isSetup) {\n-            InternalLogging.warn(TAG, \"Could not start ApplicationInsight since it has not been \" +\n+            InternalLogging.warn(TAG, \"Could not start Application Insights since it has not been \" +\n                   \"setup correctly.\");\n             return;\n         }\n         if (!isRunning) {\n+            Context context \u003d this.getContext();\n+\n+            if(context \u003d\u003d null) {\n+                InternalLogging.warn(TAG, \"Could not start Application Insights as context is null\");\n+                return;\n+            }\n+\n \n             if (this.instrumentationKey \u003d\u003d null) {\n-                this.instrumentationKey \u003d readInstrumentationKey(this.context);\n+                this.instrumentationKey \u003d readInstrumentationKey(context);\n             }\n \n-            this.telemetryContext \u003d new TelemetryContext(this.context, this.instrumentationKey, userId);\n+            this.telemetryContext \u003d new TelemetryContext(context, this.instrumentationKey, userId);\n             EnvelopeFactory.INSTANCE.configure(telemetryContext, this.commonProperties);\n \n-            Persistence.initialize(this.context);\n+            Persistence.initialize(context);\n             Sender.initialize(this.config);\n             Channel.initialize(this.config);\n \n@@ -200,7 +208,7 @@ public void startInstance() {\n \n             // Start crash reporting\n             if (!this.exceptionTrackingDisabled) {\n-                ExceptionTracking.registerExceptionHandler(this.context);\n+                ExceptionTracking.registerExceptionHandler();\n             }\n \n             isRunning \u003d true;\n@@ -414,7 +422,7 @@ public static boolean isDeveloperMode() {\n     /**\n      * Reads the instrumentation key from AndroidManifest.xml if it is available\n      *\n-     * @param context the application context to check the manifest from\n+     * @param context the application weakContext to check the manifest from\n      * @return the instrumentation key configured for the application\n      */\n     private String readInstrumentationKey(Context context) {\n@@ -440,14 +448,18 @@ private String readInstrumentationKey(Context context) {\n     }\n \n     /**\n-     * Returns the application context that Application Insights uses.\n+     * Returns the application weakContext that Application Insights uses.\n      *\n-     * @return context the Context that\u0027s used by the Application Insights SDK\n+     * @return weakContext the Context that\u0027s used by the Application Insights SDK\n      */\n     public Context getContext() {\n-        return this.context;\n-    }\n+        Context context \u003d null;\n+        if (weakContext !\u003d null) {\n+            context \u003d weakContext.get();\n+        }\n \n+        return context;\n+    }\n \n     /* Writes instructions on how to configure the instrumentation key.\n         */"
        },
        {
          "file_name": "applicationinsights-android/src/main/java/com/microsoft/applicationinsights/library/ExceptionTracking.java",
          "patch": "@@ -1,7 +1,5 @@\n package com.microsoft.applicationinsights.library;\n \n-import android.content.Context;\n-\n import com.microsoft.applicationinsights.logging.InternalLogging;\n \n import java.lang.Thread.UncaughtExceptionHandler;\n@@ -19,38 +17,29 @@\n     /**\n      * Constructs a new instance of the ExceptionTracking class\n      *\n-     * @param context                     The context associated with this tracker\n      * @param preexistingExceptionHandler the pre-existing exception handler\n      * @param ignoreDefaultHandler        indicates that the pre-existing handler should be ignored\n      */\n-    protected ExceptionTracking(Context context,\n-                                UncaughtExceptionHandler preexistingExceptionHandler,\n+    protected ExceptionTracking(UncaughtExceptionHandler preexistingExceptionHandler,\n                                 boolean ignoreDefaultHandler) {\n         this.preexistingExceptionHandler \u003d preexistingExceptionHandler;\n-        if (context !\u003d null) {\n-            this.ignoreDefaultHandler \u003d ignoreDefaultHandler;\n-        } else {\n-            InternalLogging.error(TAG, \"Failed to initialize ExceptionHandler because the provided Context was null\");\n-        }\n+        this.ignoreDefaultHandler \u003d ignoreDefaultHandler;\n     }\n \n     /**\n      * Registers the application insights exception handler to track uncaught exceptions\n      * {@code ignoreDefaulthandler} defaults to {@literal false}\n-     *\n-     * @param context the context associated with uncaught exceptions\n      */\n-    protected static void registerExceptionHandler(Context context) {\n-        ExceptionTracking.registerExceptionHandler(context, false);\n+    protected static void registerExceptionHandler() {\n+        ExceptionTracking.registerExceptionHandler(false);\n     }\n \n     /**\n      * Registers the application insights exception handler to track uncaught exceptions\n      *\n-     * @param context              the context associated with uncaught exceptions\n      * @param ignoreDefaultHandler if true the default exception handler will be ignored\n      */\n-    protected static void registerExceptionHandler(Context context, boolean ignoreDefaultHandler) {\n+    protected static void registerExceptionHandler(boolean ignoreDefaultHandler) {\n         synchronized (ExceptionTracking.LOCK) {\n             UncaughtExceptionHandler preexistingExceptionHandler \u003d\n                   Thread.getDefaultUncaughtExceptionHandler();\n@@ -60,7 +49,6 @@ protected static void registerExceptionHandler(Context context, boolean ignoreDe\n                       \"ExceptionHandler was already registered for this thread\");\n             } else {\n                 ExceptionTracking handler \u003d new ExceptionTracking(\n-                      context,\n                       preexistingExceptionHandler,\n                       ignoreDefaultHandler);\n "
        },
        {
          "file_name": "applicationinsights-android/src/main/java/com/microsoft/applicationinsights/library/Sender.java",
          "patch": "@@ -144,7 +144,7 @@ protected int runningRequestCount() {\n     }\n \n     /**\n-     * Handler for the http response from the sender\n+     * Callback for the http response from the sender\n      *\n      * @param connection   a connection containing a response\n      * @param responseCode the response code from the connection"
        },
        {
          "file_name": "applicationinsights-android/src/main/java/com/microsoft/applicationinsights/library/TelemetryContext.java",
          "patch": "@@ -100,24 +100,24 @@\n     /**\n      * Constructs a new INSTANCE of the Telemetry telemetryContext tag keys\n      *\n-     * @param appContext the context for this telemetryContext\n+     * @param context the context for this telemetryContext\n      */\n-    public TelemetryContext(Context appContext, String instrumentationKey, String userId) {\n+    public TelemetryContext(Context context, String instrumentationKey, String userId) {\n \n \n         // get an INSTANCE of the shared preferences manager for persistent context fields\n-        this.settings \u003d appContext.getSharedPreferences(SHARED_PREFERENCES_KEY, Context.MODE_PRIVATE);\n+        this.settings \u003d context.getSharedPreferences(SHARED_PREFERENCES_KEY, Context.MODE_PRIVATE);\n         this.operation \u003d new Operation();\n         this.device \u003d new Device();\n-        configDeviceContext(appContext);\n+        configDeviceContext(context);\n         this.session \u003d new Session();\n         configSessionContext();\n         this.user \u003d new User();\n         configUserContext(userId);\n         this.internal \u003d new Internal();\n-        configInternalContext(appContext);\n+        configInternalContext(context);\n         this.application \u003d new Application();\n-        configAppContext(appContext);\n+        configAppContext(context);\n \n         this.lastSessionId \u003d null;\n         this.instrumentationKey \u003d instrumentationKey;"
        }
      ]
    }
  },
  {
    "name": "Memory leak fix thanks to Leak Canary.",
    "url": "https://github.com/gdg-x/frisbee/pull/394",
    "description": "ListFragmentSwipeRefreshLayout is a static class now with a WeakReference of the RecyclerView in the Fragment.\nSince it was used in the inner class, RecyclerView was being leaked.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/gdg-x/frisbee/commit/1fb0a36a3e7c951411cc354b168c597e87f0ba47",
      "files": [
        {
          "file_name": "app/src/main/java/org/gdg/frisbee/android/fragment/SwipeRefreshRecyclerViewFragment.java",
          "patch": "@@ -17,13 +17,17 @@\n package org.gdg.frisbee.android.fragment;\n \n import android.content.Context;\n+import android.os.Bundle;\n import android.support.v4.widget.SwipeRefreshLayout;\n import android.support.v7.widget.LinearLayoutManager;\n import android.support.v7.widget.RecyclerView;\n import android.support.v7.widget.StaggeredGridLayoutManager;\n+import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n \n+import java.lang.ref.WeakReference;\n+\n import timber.log.Timber;\n \n /**\n@@ -33,7 +37,7 @@\n  */\n public class SwipeRefreshRecyclerViewFragment extends GdgRecyclerFragment {\n \n-    private SwipeRefreshLayout mSwipeRefreshLayout;\n+    private ListFragmentSwipeRefreshLayout mSwipeRefreshLayout;\n \n     public View createSwipeRefresh(final View listFragmentView) {\n \n@@ -55,6 +59,13 @@ public View createSwipeRefresh(final View listFragmentView) {\n         return mSwipeRefreshLayout;\n     }\n \n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        View view \u003d super.onCreateView(inflater, container, savedInstanceState);\n+        mSwipeRefreshLayout.setRecyclerView(getListView());\n+        return view;\n+    }\n+\n     /**\n      * Set the {@link android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener} to listen for\n      * initiated refreshes.\n@@ -113,12 +124,18 @@ public SwipeRefreshLayout getSwipeRefreshLayout() {\n      * override the default behavior and properly signal when a gesture is possible. This is done by\n      * overriding {@link #canChildScrollUp()}.\n      */\n-    private class ListFragmentSwipeRefreshLayout extends SwipeRefreshLayout {\n+    private static class ListFragmentSwipeRefreshLayout extends SwipeRefreshLayout {\n+\n+        private WeakReference\u003cRecyclerView\u003e recyclerView;\n \n         public ListFragmentSwipeRefreshLayout(Context context) {\n             super(context);\n         }\n \n+        public void setRecyclerView(RecyclerView recyclerView) {\n+            this.recyclerView \u003d new WeakReference\u003c\u003e(recyclerView);\n+        }\n+\n         /**\n          * As mentioned above, we need to override this method to properly signal when a\n          * \u0027swipe-to-refresh\u0027 is possible.\n@@ -127,34 +144,38 @@ public ListFragmentSwipeRefreshLayout(Context context) {\n          */\n         @Override\n         public boolean canChildScrollUp() {\n-            final RecyclerView recyclerView \u003d getListView();\n-            return recyclerView.getVisibility() \u003d\u003d View.VISIBLE \u0026\u0026 canListViewScrollUp(recyclerView);\n+            RecyclerView view \u003d recyclerView !\u003d null ? recyclerView.get() : null;\n+\n+            return view !\u003d null\n+                    \u0026\u0026 view.getVisibility() \u003d\u003d View.VISIBLE\n+                    \u0026\u0026 canListViewScrollUp(view);\n         }\n \n-    }\n-    /**\n-     * Utility method to check whether a {@link android.widget.ListView} can scroll up from it\u0027s current position.\n-     * Handles platform version differences, providing backwards compatible functionality where\n-     * needed.\n-     */\n-    private static boolean canListViewScrollUp(RecyclerView recyclerView) {\n-        try {\n-            RecyclerView.LayoutManager layoutManager \u003d recyclerView.getLayoutManager();\n-            if (layoutManager instanceof LinearLayoutManager) {\n-                int position \u003d ((LinearLayoutManager) layoutManager).findFirstCompletelyVisibleItemPosition();\n-                return position !\u003d 0;\n-            } else if (layoutManager instanceof StaggeredGridLayoutManager) {\n-                int[] positions \u003d ((StaggeredGridLayoutManager) layoutManager).findFirstCompletelyVisibleItemPositions(null);\n-                for (int i \u003d 0; i \u003c positions.length; i++) {\n-                    if (positions[i] \u003d\u003d 0) {\n-                        return false;\n+\n+        /**\n+         * Utility method to check whether a {@link android.widget.ListView} can scroll up from it\u0027s current position.\n+         * Handles platform version differences, providing backwards compatible functionality where\n+         * needed.\n+         */\n+        private boolean canListViewScrollUp(RecyclerView recyclerView) {\n+            try {\n+                RecyclerView.LayoutManager layoutManager \u003d recyclerView.getLayoutManager();\n+                if (layoutManager instanceof LinearLayoutManager) {\n+                    int position \u003d ((LinearLayoutManager) layoutManager).findFirstCompletelyVisibleItemPosition();\n+                    return position !\u003d 0;\n+                } else if (layoutManager instanceof StaggeredGridLayoutManager) {\n+                    int[] positions \u003d ((StaggeredGridLayoutManager) layoutManager).findFirstCompletelyVisibleItemPositions(null);\n+                    for (int i \u003d 0; i \u003c positions.length; i++) {\n+                        if (positions[i] \u003d\u003d 0) {\n+                            return false;\n+                        }\n                     }\n                 }\n+            } catch (NullPointerException exception) {\n+                Timber.e(exception, \"Exception in RecyclerView canListViewScrollUp.\");\n             }\n-        } catch (NullPointerException exception) {\n-            Timber.e(exception, \"Exception in RecyclerView canListViewScrollUp.\");\n+            return true;\n         }\n-        return true;\n     }\n \n }"
        }
      ]
    }
  },
  {
    "name": "Eventual consistency memory leak",
    "url": "https://github.com/ehcache/ehcache3/issues/1605",
    "description": "When performing a 90/10 get/put test using an eventually consistent clustered store with two or more clients, we have a memory leak in the \"clientsWaitingForInvalidation\" map in the \"org.ehcache.clustered.server.EhcacheActiveEntity\" object.  We do not run into this problem with only one client or when using a strongly consistent clustered store with any number of clients; it appears that the client may not be sending invalidation acks in an eventually consistent store which means that their entries are never removed from the \"clientsWaitingForInvalidation\" map.\r\n\r\nThe cache consisted of 16gb of clustered storage, Eventual consistency.  The server ran with 2gb min and max ram and the ConcurrentMarkSweep collector.  Contact me for test code / server config as well as a heap dump - github isn\u0027t allowing me to attach files.",
    "keywords": [
      "server",
      "clustered",
      "consistent",
      "store"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/ehcache/ehcache3/commit/516513bdac7e2baf5057d023d3ddd3c2c4463789",
      "files": [
        {
          "file_name": "clustered/client/src/main/java/org/ehcache/clustered/client/internal/store/CommonServerStoreProxy.java",
          "patch": "@@ -0,0 +1,221 @@\n+/*\n+ * Copyright Terracotta, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.ehcache.clustered.client.internal.store;\n+\n+import org.ehcache.clustered.client.internal.EhcacheClientEntity;\n+import org.ehcache.clustered.common.internal.messages.EhcacheEntityResponse;\n+import org.ehcache.clustered.common.internal.messages.ServerStoreMessageFactory;\n+import org.ehcache.clustered.common.internal.store.Chain;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.nio.ByteBuffer;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.TimeoutException;\n+\n+/**\n+ * Provides client-side access to the services of a {@code ServerStore}.\n+ */\n+class CommonServerStoreProxy implements ServerStoreProxy {\n+\n+  private static final Logger LOGGER \u003d LoggerFactory.getLogger(CommonServerStoreProxy.class);\n+\n+  private final ServerStoreMessageFactory messageFactory;\n+  private final EhcacheClientEntity entity;\n+\n+  private final List\u003cInvalidationListener\u003e invalidationListeners \u003d new CopyOnWriteArrayList\u003cInvalidationListener\u003e();\n+  private final Map\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e responseListeners\n+      \u003d new ConcurrentHashMap\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e();\n+\n+  CommonServerStoreProxy(final ServerStoreMessageFactory messageFactory, final EhcacheClientEntity entity) {\n+    this.messageFactory \u003d messageFactory;\n+    this.entity \u003d entity;\n+    this.responseListeners.put(EhcacheEntityResponse.ServerInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ServerInvalidateHash\u003e() {\n+      @Override\n+      public void onResponse(EhcacheEntityResponse.ServerInvalidateHash response) {\n+        if (response.getCacheId().equals(messageFactory.getCacheId())) {\n+          long key \u003d response.getKey();\n+          LOGGER.debug(\"CLIENT: on cache {}, server requesting hash {} to be invalidated\", messageFactory.getCacheId(), key);\n+          for (InvalidationListener listener : invalidationListeners) {\n+            listener.onInvalidateHash(key);\n+          }\n+        } else {\n+          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n+        }\n+      }\n+    });\n+    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateHash\u003e() {\n+      @Override\n+      public void onResponse(EhcacheEntityResponse.ClientInvalidateHash response) {\n+        final String cacheId \u003d response.getCacheId();\n+        final long key \u003d response.getKey();\n+        final int invalidationId \u003d response.getInvalidationId();\n+\n+        if (cacheId.equals(messageFactory.getCacheId())) {\n+          LOGGER.debug(\"CLIENT: doing work to invalidate hash {} from cache {} (ID {})\", key, cacheId, invalidationId);\n+          for (InvalidationListener listener : invalidationListeners) {\n+            listener.onInvalidateHash(key);\n+          }\n+\n+          try {\n+            LOGGER.debug(\"CLIENT: ack\u0027ing invalidation of hash {} from cache {} (ID {})\", key, cacheId, invalidationId);\n+            entity.invokeAsync(messageFactory.clientInvalidationAck(invalidationId), false);\n+          } catch (Exception e) {\n+            //TODO: what should be done here?\n+            LOGGER.error(\"error acking client invalidation of hash {} on cache {}\", key, cacheId, e);\n+          }\n+        } else {\n+          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n+        }\n+      }\n+    });\n+    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateAll.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateAll\u003e() {\n+      @Override\n+      public void onResponse(EhcacheEntityResponse.ClientInvalidateAll response) {\n+        final String cacheId \u003d response.getCacheId();\n+        final int invalidationId \u003d response.getInvalidationId();\n+\n+        if (cacheId.equals(messageFactory.getCacheId())) {\n+          LOGGER.debug(\"CLIENT: doing work to invalidate all from cache {} (ID {})\", cacheId, invalidationId);\n+          for (InvalidationListener listener : invalidationListeners) {\n+            listener.onInvalidateAll();\n+          }\n+\n+          try {\n+            LOGGER.debug(\"CLIENT: ack\u0027ing invalidation of all from cache {} (ID {})\", cacheId, invalidationId);\n+            entity.invokeAsync(messageFactory.clientInvalidationAck(invalidationId), false);\n+          } catch (Exception e) {\n+            //TODO: what should be done here?\n+            LOGGER.error(\"error acking client invalidation of all on cache {}\", cacheId, e);\n+          }\n+        } else {\n+          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n+        }\n+      }\n+    });\n+\n+    addResponseListenersToEntity();\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private void addResponseListenersToEntity() {\n+    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n+        this.responseListeners.entrySet()) {\n+      this.entity.addResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener)classResponseListenerEntry.getValue());\n+    }\n+  }\n+\n+  @Override\n+  public String getCacheId() {\n+    return messageFactory.getCacheId();\n+  }\n+\n+  @Override\n+  public void addInvalidationListener(InvalidationListener listener) {\n+    invalidationListeners.add(listener);\n+  }\n+\n+  @Override\n+  public boolean removeInvalidationListener(InvalidationListener listener) {\n+    return invalidationListeners.remove(listener);\n+  }\n+\n+  \u003cT extends EhcacheEntityResponse\u003e void addResponseListeners(Class\u003cT\u003e listenerClass, EhcacheClientEntity.ResponseListener\u003cT\u003e listener) {\n+    this.responseListeners.put(listenerClass, listener);\n+    this.entity.addResponseListener(listenerClass, listener);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public void close() {\n+    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n+        this.responseListeners.entrySet()) {\n+      this.entity.removeResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener) classResponseListenerEntry.getValue());\n+    }\n+  }\n+\n+  @Override\n+  public Chain get(long key) throws TimeoutException {\n+    EhcacheEntityResponse response;\n+    try {\n+      response \u003d entity.invoke(messageFactory.getOperation(key), false);\n+    } catch (TimeoutException e) {\n+      throw e;\n+    } catch (Exception e) {\n+      throw new ServerStoreProxyException(e);\n+    }\n+    if (response !\u003d null \u0026\u0026 response.getType() \u003d\u003d EhcacheEntityResponse.Type.GET_RESPONSE) {\n+      return ((EhcacheEntityResponse.GetResponse)response).getChain();\n+    } else {\n+      throw new ServerStoreProxyException(\"Response for get operation was invalid : \" +\n+                                          (response !\u003d null ? response.getType().toString() : \"null message\"));\n+    }\n+  }\n+\n+  @Override\n+  public void append(long key, ByteBuffer payLoad) throws TimeoutException {\n+    try {\n+      entity.invoke(messageFactory.appendOperation(key, payLoad), true);\n+    } catch (TimeoutException e) {\n+      throw e;\n+    } catch (Exception e) {\n+      throw new ServerStoreProxyException(e);\n+    }\n+  }\n+\n+  @Override\n+  public Chain getAndAppend(long key, ByteBuffer payLoad) throws TimeoutException {\n+    EhcacheEntityResponse response;\n+    try {\n+      response \u003d entity.invoke(messageFactory.getAndAppendOperation(key, payLoad), true);\n+    } catch (TimeoutException e) {\n+      throw e;\n+    } catch (Exception e) {\n+      throw new ServerStoreProxyException(e);\n+    }\n+    if (response !\u003d null \u0026\u0026 response.getType() \u003d\u003d EhcacheEntityResponse.Type.GET_RESPONSE) {\n+      return ((EhcacheEntityResponse.GetResponse)response).getChain();\n+    } else {\n+      throw new ServerStoreProxyException(\"Response for getAndAppend operation was invalid : \" +\n+                                          (response !\u003d null ? response.getType().toString() : \"null message\"));\n+    }\n+  }\n+\n+  @Override\n+  public void replaceAtHead(long key, Chain expect, Chain update) {\n+    // TODO: Optimize this method to just send sequences for expect Chain\n+    try {\n+      entity.invokeAsync(messageFactory.replaceAtHeadOperation(key, expect, update), true);\n+    } catch (Exception e) {\n+      throw new ServerStoreProxyException(e);\n+    }\n+  }\n+\n+  @Override\n+  public void clear() throws TimeoutException {\n+    try {\n+      entity.invoke(messageFactory.clearOperation(), true);\n+    } catch (TimeoutException e) {\n+      throw e;\n+    } catch (Exception e) {\n+      throw new ServerStoreProxyException(e);\n+    }\n+  }\n+}"
        },
        {
          "file_name": "clustered/client/src/main/java/org/ehcache/clustered/client/internal/store/EventualServerStoreProxy.java",
          "patch": "@@ -16,89 +16,18 @@\n package org.ehcache.clustered.client.internal.store;\n \n import org.ehcache.clustered.client.internal.EhcacheClientEntity;\n-import org.ehcache.clustered.common.internal.messages.EhcacheEntityResponse;\n import org.ehcache.clustered.common.internal.messages.ServerStoreMessageFactory;\n import org.ehcache.clustered.common.internal.store.Chain;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n import java.nio.ByteBuffer;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.TimeoutException;\n \n-/**\n- * @author Ludovic Orban\n- */\n public class EventualServerStoreProxy implements ServerStoreProxy {\n \n-  private static final Logger LOGGER \u003d LoggerFactory.getLogger(EventualServerStoreProxy.class);\n-\n   private final ServerStoreProxy delegate;\n-  private final List\u003cInvalidationListener\u003e invalidationListeners \u003d new CopyOnWriteArrayList\u003cInvalidationListener\u003e();\n-  private final EhcacheClientEntity entity;\n-  private final Map\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e responseListeners\n-    \u003d new ConcurrentHashMap\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e();\n \n-  @SuppressWarnings(\"unchecked\")\n   public EventualServerStoreProxy(final ServerStoreMessageFactory messageFactory, final EhcacheClientEntity entity) {\n-    this.entity \u003d entity;\n-    this.delegate \u003d new NoInvalidationServerStoreProxy(messageFactory, entity);\n-    this.responseListeners.put(EhcacheEntityResponse.ServerInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ServerInvalidateHash\u003e() {\n-      @Override\n-      public void onResponse(EhcacheEntityResponse.ServerInvalidateHash response) {\n-        if (response.getCacheId().equals(messageFactory.getCacheId())) {\n-          long key \u003d response.getKey();\n-          LOGGER.debug(\"CLIENT: on cache {}, server requesting hash {} to be invalidated\", messageFactory.getCacheId(), key);\n-          for (InvalidationListener listener : invalidationListeners) {\n-            listener.onInvalidateHash(key);\n-          }\n-        } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-        }\n-      }\n-    });\n-    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateHash\u003e() {\n-        @Override\n-        public void onResponse(EhcacheEntityResponse.ClientInvalidateHash response) {\n-          final String cacheId \u003d response.getCacheId();\n-          final long key \u003d response.getKey();\n-          final int invalidationId \u003d response.getInvalidationId();\n-\n-          if (cacheId.equals(messageFactory.getCacheId())) {\n-            LOGGER.debug(\"CLIENT: doing work to invalidate hash {} from cache {} (ID {})\", key, cacheId, invalidationId);\n-            for (InvalidationListener listener : invalidationListeners) {\n-              listener.onInvalidateHash(key);\n-            }\n-          } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-          }\n-        }\n-    });\n-    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateAll.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateAll\u003e() {\n-        @Override\n-        public void onResponse(EhcacheEntityResponse.ClientInvalidateAll response) {\n-          final String cacheId \u003d response.getCacheId();\n-          final int invalidationId \u003d response.getInvalidationId();\n-\n-          if (cacheId.equals(messageFactory.getCacheId())) {\n-            LOGGER.debug(\"CLIENT: doing work to invalidate all from cache {} (ID {})\", cacheId, invalidationId);\n-            for (InvalidationListener listener : invalidationListeners) {\n-              listener.onInvalidateAll();\n-            }\n-          } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-          }\n-        }\n-    });\n-\n-    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n-      this.responseListeners.entrySet()) {\n-      this.entity.addResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener) classResponseListenerEntry.getValue());\n-    }\n-\n+    this.delegate \u003d new CommonServerStoreProxy(messageFactory, entity);\n   }\n \n   @Override\n@@ -108,21 +37,17 @@ public String getCacheId() {\n \n   @Override\n   public void addInvalidationListener(InvalidationListener listener) {\n-    invalidationListeners.add(listener);\n+    delegate.addInvalidationListener(listener);\n   }\n \n   @Override\n   public boolean removeInvalidationListener(InvalidationListener listener) {\n-    return invalidationListeners.remove(listener);\n+    return delegate.removeInvalidationListener(listener);\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void close() {\n-    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n-      this.responseListeners.entrySet()) {\n-      this.entity.removeResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener) classResponseListenerEntry.getValue());\n-    }\n+    delegate.close();\n   }\n \n   @Override"
        },
        {
          "file_name": "clustered/client/src/main/java/org/ehcache/clustered/client/internal/store/NoInvalidationServerStoreProxy.java",
          "patch": "@@ -1,127 +0,0 @@\n-/*\n- * Copyright Terracotta, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.ehcache.clustered.client.internal.store;\n-\n-import org.ehcache.clustered.client.internal.EhcacheClientEntity;\n-import org.ehcache.clustered.common.internal.messages.EhcacheEntityResponse;\n-import org.ehcache.clustered.common.internal.messages.ServerStoreMessageFactory;\n-import org.ehcache.clustered.common.internal.store.Chain;\n-\n-import java.nio.ByteBuffer;\n-import java.util.concurrent.TimeoutException;\n-\n-/**\n- * Provides client-side access to the services of a {@code ServerStore}.\n- */\n-class NoInvalidationServerStoreProxy implements ServerStoreProxy {\n-\n-  private final ServerStoreMessageFactory messageFactory;\n-  private final EhcacheClientEntity entity;\n-\n-  NoInvalidationServerStoreProxy(ServerStoreMessageFactory messageFactory, final EhcacheClientEntity entity) {\n-    this.messageFactory \u003d messageFactory;\n-    this.entity \u003d entity;\n-  }\n-\n-  @Override\n-  public String getCacheId() {\n-    return messageFactory.getCacheId();\n-  }\n-\n-  @Override\n-  public void addInvalidationListener(InvalidationListener listener) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  @Override\n-  public boolean removeInvalidationListener(InvalidationListener listener) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  @Override\n-  public void close() {\n-    // No-op\n-  }\n-\n-  @Override\n-  public Chain get(long key) throws TimeoutException {\n-    EhcacheEntityResponse response;\n-    try {\n-      response \u003d entity.invoke(messageFactory.getOperation(key), false);\n-    } catch (TimeoutException e) {\n-      throw e;\n-    } catch (Exception e) {\n-      throw new ServerStoreProxyException(e);\n-    }\n-    if (response !\u003d null \u0026\u0026 response.getType() \u003d\u003d EhcacheEntityResponse.Type.GET_RESPONSE) {\n-      return ((EhcacheEntityResponse.GetResponse)response).getChain();\n-    } else {\n-      throw new ServerStoreProxyException(\"Response for get operation was invalid : \" +\n-                                          (response !\u003d null ? response.getType().toString() : \"null message\"));\n-    }\n-  }\n-\n-  @Override\n-  public void append(long key, ByteBuffer payLoad) throws TimeoutException {\n-    try {\n-      entity.invoke(messageFactory.appendOperation(key, payLoad), true);\n-    } catch (TimeoutException e) {\n-      throw e;\n-    } catch (Exception e) {\n-      throw new ServerStoreProxyException(e);\n-    }\n-  }\n-\n-  @Override\n-  public Chain getAndAppend(long key, ByteBuffer payLoad) throws TimeoutException {\n-    EhcacheEntityResponse response;\n-    try {\n-      response \u003d entity.invoke(messageFactory.getAndAppendOperation(key, payLoad), true);\n-    } catch (TimeoutException e) {\n-      throw e;\n-    } catch (Exception e) {\n-      throw new ServerStoreProxyException(e);\n-    }\n-    if (response !\u003d null \u0026\u0026 response.getType() \u003d\u003d EhcacheEntityResponse.Type.GET_RESPONSE) {\n-      return ((EhcacheEntityResponse.GetResponse)response).getChain();\n-    } else {\n-      throw new ServerStoreProxyException(\"Response for getAndAppend operation was invalid : \" +\n-                                          (response !\u003d null ? response.getType().toString() : \"null message\"));\n-    }\n-  }\n-\n-  @Override\n-  public void replaceAtHead(long key, Chain expect, Chain update) {\n-    // TODO: Optimize this method to just send sequences for expect Chain\n-    try {\n-      entity.invokeAsync(messageFactory.replaceAtHeadOperation(key, expect, update), true);\n-    } catch (Exception e) {\n-      throw new ServerStoreProxyException(e);\n-    }\n-  }\n-\n-  @Override\n-  public void clear() throws TimeoutException {\n-    try {\n-      entity.invoke(messageFactory.clearOperation(), true);\n-    } catch (TimeoutException e) {\n-      throw e;\n-    } catch (Exception e) {\n-      throw new ServerStoreProxyException(e);\n-    }\n-  }\n-}"
        },
        {
          "file_name": "clustered/client/src/main/java/org/ehcache/clustered/client/internal/store/StrongServerStoreProxy.java",
          "patch": "@@ -24,12 +24,10 @@\n import org.slf4j.LoggerFactory;\n \n import java.nio.ByteBuffer;\n-import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n@@ -40,20 +38,16 @@\n \n   private static final Logger LOGGER \u003d LoggerFactory.getLogger(StrongServerStoreProxy.class);\n \n-  private final ServerStoreProxy delegate;\n+  private final CommonServerStoreProxy delegate;\n   private final ConcurrentMap\u003cLong, CountDownLatch\u003e hashInvalidationsInProgress \u003d new ConcurrentHashMap\u003cLong, CountDownLatch\u003e();\n   private final Lock invalidateAllLock \u003d new ReentrantLock();\n   private volatile CountDownLatch invalidateAllLatch;\n-  private final List\u003cInvalidationListener\u003e invalidationListeners \u003d new CopyOnWriteArrayList\u003cInvalidationListener\u003e();\n-  private final Map\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e responseListeners\n-    \u003d new ConcurrentHashMap\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e();\n   private final EhcacheClientEntity entity;\n   private final EhcacheClientEntity.ReconnectListener reconnectListener;\n   private final EhcacheClientEntity.DisconnectionListener disconnectionListener;\n \n-  @SuppressWarnings(\"unchecked\")\n   public StrongServerStoreProxy(final ServerStoreMessageFactory messageFactory, final EhcacheClientEntity entity) {\n-    this.delegate \u003d new NoInvalidationServerStoreProxy(messageFactory, entity);\n+    this.delegate \u003d new CommonServerStoreProxy(messageFactory, entity);\n     this.entity \u003d entity;\n     this.reconnectListener \u003d new EhcacheClientEntity.ReconnectListener() {\n       @Override\n@@ -67,7 +61,7 @@ public void onHandleReconnect(ReconnectMessage reconnectMessage) {\n     };\n     entity.addReconnectListener(reconnectListener);\n \n-    this.responseListeners.put(EhcacheEntityResponse.HashInvalidationDone.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.HashInvalidationDone\u003e() {\n+    delegate.addResponseListeners(EhcacheEntityResponse.HashInvalidationDone.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.HashInvalidationDone\u003e() {\n       @Override\n       public void onResponse(EhcacheEntityResponse.HashInvalidationDone response) {\n         if (response.getCacheId().equals(messageFactory.getCacheId())) {\n@@ -82,7 +76,7 @@ public void onResponse(EhcacheEntityResponse.HashInvalidationDone response) {\n         }\n       }\n     });\n-    this.responseListeners.put(EhcacheEntityResponse.AllInvalidationDone.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.AllInvalidationDone\u003e() {\n+    delegate.addResponseListeners(EhcacheEntityResponse.AllInvalidationDone.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.AllInvalidationDone\u003e() {\n       @Override\n       public void onResponse(EhcacheEntityResponse.AllInvalidationDone response) {\n         if (response.getCacheId().equals(messageFactory.getCacheId())) {\n@@ -106,74 +100,6 @@ public void onResponse(EhcacheEntityResponse.AllInvalidationDone response) {\n         }\n       }\n     });\n-    this.responseListeners.put(EhcacheEntityResponse.ServerInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ServerInvalidateHash\u003e() {\n-      @Override\n-      public void onResponse(EhcacheEntityResponse.ServerInvalidateHash response) {\n-        if (response.getCacheId().equals(messageFactory.getCacheId())) {\n-          long key \u003d response.getKey();\n-          LOGGER.debug(\"CLIENT: on cache {}, server requesting hash {} to be invalidated\", messageFactory.getCacheId(), key);\n-          for (InvalidationListener listener : invalidationListeners) {\n-            listener.onInvalidateHash(key);\n-          }\n-        } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-        }\n-      }\n-    });\n-    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateHash.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateHash\u003e() {\n-      @Override\n-      public void onResponse(EhcacheEntityResponse.ClientInvalidateHash response) {\n-        final String cacheId \u003d response.getCacheId();\n-        final long key \u003d response.getKey();\n-        final int invalidationId \u003d response.getInvalidationId();\n-\n-        if (cacheId.equals(messageFactory.getCacheId())) {\n-          LOGGER.debug(\"CLIENT: doing work to invalidate hash {} from cache {} (ID {})\", key, cacheId, invalidationId);\n-          for (InvalidationListener listener : invalidationListeners) {\n-            listener.onInvalidateHash(key);\n-          }\n-\n-          try {\n-            LOGGER.debug(\"CLIENT: ack\u0027ing invalidation of hash {} from cache {} (ID {})\", key, cacheId, invalidationId);\n-            entity.invokeAsync(messageFactory.clientInvalidationAck(invalidationId), false);\n-          } catch (Exception e) {\n-            //TODO: what should be done here?\n-            LOGGER.error(\"error acking client invalidation of hash {} on cache {}\", key, cacheId, e);\n-          }\n-        } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-        }\n-      }\n-    });\n-    this.responseListeners.put(EhcacheEntityResponse.ClientInvalidateAll.class, new EhcacheClientEntity.ResponseListener\u003cEhcacheEntityResponse.ClientInvalidateAll\u003e() {\n-      @Override\n-      public void onResponse(EhcacheEntityResponse.ClientInvalidateAll response) {\n-        final String cacheId \u003d response.getCacheId();\n-        final int invalidationId \u003d response.getInvalidationId();\n-\n-        if (cacheId.equals(messageFactory.getCacheId())) {\n-          LOGGER.debug(\"CLIENT: doing work to invalidate all from cache {} (ID {})\", cacheId, invalidationId);\n-          for (InvalidationListener listener : invalidationListeners) {\n-            listener.onInvalidateAll();\n-          }\n-\n-          try {\n-            LOGGER.debug(\"CLIENT: ack\u0027ing invalidation of all from cache {} (ID {})\", cacheId, invalidationId);\n-            entity.invokeAsync(messageFactory.clientInvalidationAck(invalidationId), false);\n-          } catch (Exception e) {\n-            //TODO: what should be done here?\n-            LOGGER.error(\"error acking client invalidation of all on cache {}\", cacheId, e);\n-          }\n-        } else {\n-          LOGGER.debug(\"CLIENT: on cache {}, ignoring invalidation on unrelated cache : {}\", messageFactory.getCacheId(), response.getCacheId());\n-        }\n-      }\n-    });\n-\n-    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n-      this.responseListeners.entrySet()) {\n-      this.entity.addResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener) classResponseListenerEntry.getValue());\n-    }\n \n     this.disconnectionListener \u003d new EhcacheClientEntity.DisconnectionListener() {\n       @Override\n@@ -290,23 +216,19 @@ public String getCacheId() {\n \n   @Override\n   public void addInvalidationListener(InvalidationListener listener) {\n-    invalidationListeners.add(listener);\n+    delegate.addInvalidationListener(listener);\n   }\n \n   @Override\n   public boolean removeInvalidationListener(InvalidationListener listener) {\n-    return invalidationListeners.remove(listener);\n+    return delegate.removeInvalidationListener(listener);\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void close() {\n     this.entity.removeDisconnectionListener(this.disconnectionListener);\n     this.entity.removeReconnectListener(this.reconnectListener);\n-    for (Map.Entry\u003cClass\u003c? extends EhcacheEntityResponse\u003e, EhcacheClientEntity.ResponseListener\u003c? extends EhcacheEntityResponse\u003e\u003e classResponseListenerEntry :\n-      this.responseListeners.entrySet()) {\n-      this.entity.removeResponseListener(classResponseListenerEntry.getKey(), (EhcacheClientEntity.ResponseListener) classResponseListenerEntry.getValue());\n-    }\n+    delegate.close();\n   }\n \n   @Override"
        },
        {
          "file_name": "clustered/client/src/test/java/org/ehcache/clustered/client/internal/store/ClusteredStoreTest.java",
          "patch": "@@ -101,7 +101,7 @@ public void setup() throws Exception {\n     );\n     clientEntity.createCache(CACHE_IDENTIFIER, serverStoreConfiguration);\n     ServerStoreMessageFactory factory \u003d new ServerStoreMessageFactory(CACHE_IDENTIFIER, clientEntity.getClientId());\n-    ServerStoreProxy serverStoreProxy \u003d new NoInvalidationServerStoreProxy(factory, clientEntity);\n+    ServerStoreProxy serverStoreProxy \u003d new CommonServerStoreProxy(factory, clientEntity);\n \n     TestTimeSource testTimeSource \u003d new TestTimeSource();\n "
        },
        {
          "file_name": "clustered/client/src/test/java/org/ehcache/clustered/client/internal/store/CommonServerStoreProxyTest.java",
          "patch": "@@ -44,13 +44,13 @@\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertThat;\n \n-public class NoInvalidationServerStoreProxyTest {\n+public class CommonServerStoreProxyTest {\n \n   private static final String CACHE_IDENTIFIER \u003d \"testCache\";\n   private static final URI CLUSTER_URI \u003d URI.create(\"terracotta://localhost:9510\");\n \n   private static EhcacheClientEntity clientEntity;\n-  private static NoInvalidationServerStoreProxy serverStoreProxy;\n+  private static CommonServerStoreProxy serverStoreProxy;\n \n   @BeforeClass\n   public static void setUp() throws Exception {\n@@ -72,7 +72,7 @@ public static void setUp() throws Exception {\n     clientEntity.createCache(CACHE_IDENTIFIER, new ServerStoreConfiguration(resourcePool.getPoolAllocation(), Long.class.getName(),\n         Long.class.getName(), Long.class.getName(), Long.class.getName(), LongSerializer.class.getName(), LongSerializer.class\n         .getName(), null));\n-    serverStoreProxy \u003d new NoInvalidationServerStoreProxy(new ServerStoreMessageFactory(CACHE_IDENTIFIER, clientEntity.getClientId()), clientEntity);\n+    serverStoreProxy \u003d new CommonServerStoreProxy(new ServerStoreMessageFactory(CACHE_IDENTIFIER, clientEntity.getClientId()), clientEntity);\n   }\n \n   @AfterClass"
        },
        {
          "file_name": "clustered/client/src/test/java/org/ehcache/clustered/client/internal/store/EventualServerStoreProxyTest.java",
          "patch": "@@ -19,13 +19,17 @@\n import org.ehcache.clustered.client.config.builders.ClusteredResourcePoolBuilder;\n import org.ehcache.clustered.client.internal.EhcacheClientEntity;\n import org.ehcache.clustered.client.internal.EhcacheClientEntityFactory;\n+import org.ehcache.clustered.client.internal.EhcacheClientEntityService;\n import org.ehcache.clustered.client.internal.UnitTestConnectionService;\n import org.ehcache.clustered.client.internal.UnitTestConnectionService.PassthroughServerBuilder;\n+import org.ehcache.clustered.client.internal.lock.VoltronReadWriteLockEntityClientService;\n import org.ehcache.clustered.common.Consistency;\n import org.ehcache.clustered.common.ServerSideConfiguration;\n import org.ehcache.clustered.common.internal.ServerStoreConfiguration;\n import org.ehcache.clustered.common.internal.messages.ServerStoreMessageFactory;\n import org.ehcache.clustered.common.internal.store.Chain;\n+import org.ehcache.clustered.lock.server.VoltronReadWriteLockServerEntityService;\n+import org.ehcache.clustered.server.ObservableEhcacheServerEntityService;\n import org.ehcache.config.units.MemoryUnit;\n import org.ehcache.impl.serialization.LongSerializer;\n import org.junit.AfterClass;\n@@ -37,6 +41,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n+import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n@@ -60,11 +65,16 @@\n   private static EhcacheClientEntity clientEntity2;\n   private static EventualServerStoreProxy serverStoreProxy1;\n   private static EventualServerStoreProxy serverStoreProxy2;\n+  private static ObservableEhcacheServerEntityService observableEhcacheServerEntityService \u003d new ObservableEhcacheServerEntityService();\n \n   @BeforeClass\n   public static void setUp() throws Exception {\n     UnitTestConnectionService.add(CLUSTER_URI,\n         new PassthroughServerBuilder()\n+            .serverEntityService(observableEhcacheServerEntityService)\n+            .clientEntityService(new EhcacheClientEntityService())\n+            .serverEntityService(new VoltronReadWriteLockServerEntityService())\n+            .clientEntityService(new VoltronReadWriteLockEntityClientService())\n             .resource(\"defaultResource\", 128, MemoryUnit.MB)\n             .build());\n     UnitTestConnectionService unitTestConnectionService \u003d new UnitTestConnectionService();\n@@ -85,7 +95,7 @@ public static void setUp() throws Exception {\n \n     ServerStoreConfiguration serverStoreConfiguration \u003d new ServerStoreConfiguration(resourcePool.getPoolAllocation(), Long.class.getName(),\n         Long.class.getName(), Long.class.getName(), Long.class.getName(), LongSerializer.class.getName(), LongSerializer.class\n-        .getName(), Consistency.STRONG);\n+        .getName(), Consistency.EVENTUAL);\n     clientEntity1.createCache(CACHE_IDENTIFIER, serverStoreConfiguration);\n \n     // required to attach the store to the client\n@@ -168,6 +178,8 @@ public void onInvalidateAll() {\n     // test that each time the server evicted, the other client got notified on top of normal invalidations\n     assertThat(store2InvalidatedHashes.size(), is(ITERATIONS + evictionCount));\n \n+    assertThatClientsWaitingForInvalidationIsEmpty();\n+\n     serverStoreProxy1.removeInvalidationListener(listener1);\n     serverStoreProxy2.removeInvalidationListener(listener2);\n   }\n@@ -195,6 +207,7 @@ public void onInvalidateAll() {\n \n     latch.await(5, TimeUnit.SECONDS);\n     assertThat(invalidatedHash.get(), is(1L));\n+    assertThatClientsWaitingForInvalidationIsEmpty();\n     serverStoreProxy1.removeInvalidationListener(listener);\n   }\n \n@@ -221,6 +234,7 @@ public void onInvalidateAll() {\n \n     latch.await(5, TimeUnit.SECONDS);\n     assertThat(invalidatedHash.get(), is(1L));\n+    assertThatClientsWaitingForInvalidationIsEmpty();\n     serverStoreProxy1.removeInvalidationListener(listener);\n   }\n \n@@ -247,7 +261,23 @@ public void onInvalidateAll() {\n \n     latch.await(5, TimeUnit.SECONDS);\n     assertThat(invalidatedAll.get(), is(true));\n+    assertThatClientsWaitingForInvalidationIsEmpty();\n     serverStoreProxy1.removeInvalidationListener(listener);\n   }\n \n+  private static void assertThatClientsWaitingForInvalidationIsEmpty() throws Exception {\n+    ObservableEhcacheServerEntityService.ObservableEhcacheActiveEntity activeEntity \u003d observableEhcacheServerEntityService.getServedActiveEntities().get(0);\n+    CompletableFuture\u003cBoolean\u003e future \u003d CompletableFuture.supplyAsync(() -\u003e {\n+      while (true) {\n+      try {\n+        if (activeEntity.getClientsWaitingForInvalidation().size() \u003d\u003d 0) {\n+          return true;\n+        }\n+      } catch (Exception e) {\n+      }\n+    }\n+    });\n+    assertThat(future.get(5, TimeUnit.SECONDS), is(true));\n+  }\n+\n }"
        },
        {
          "file_name": "clustered/client/src/test/java/org/ehcache/clustered/server/ObservableEhcacheServerEntityService.java",
          "patch": "@@ -136,5 +136,11 @@ public String getDefaultServerResource() {\n     public Set\u003cString\u003e getDedicatedResourcePoolIds() {\n       return ehcacheStateService.getDedicatedResourcePoolIds();\n     }\n+\n+    public Map getClientsWaitingForInvalidation() throws Exception {\n+      Field field \u003d activeEntity.getClass().getDeclaredField(\"clientsWaitingForInvalidation\");\n+      field.setAccessible(true);\n+      return (Map)field.get(activeEntity);\n+    }\n   }\n }"
        }
      ]
    }
  },
  {
    "name": "Out of memory errors: potential memory leak",
    "url": "https://github.com/dadoonet/fscrawler/issues/196",
    "description": "Hi,\n\nI\u0027ve been trying to compile the master branch \u0026 run manually but I\u0027m getting out of memory errors:\n\n(I\u0027m running fscrawler with 8G heap)\n\n```\n10:12:35,510 WARN  [f.p.e.c.f.c.BulkProcessor] Error executing bulk\njava.io.IOException: insufficient data written\n    at sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream.close(HttpURLConnection.java:3501) ~[?:1.8.0_91]\n    at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:81) ~[google-http-client-1.20.0.jar:1.20.0]\n    at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972) ~[google-http-client-1.20.0.jar:1.20.0]\n    at fr.pilato.elasticsearch.crawler.fs.client.ElasticsearchClient.bulk(ElasticsearchClient.java:231) ~[fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.ElasticsearchClient.bulk(ElasticsearchClient.java:243) ~[fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.BulkProcessor.execute(BulkProcessor.java:136) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.BulkProcessor.executeIfNeeded(BulkProcessor.java:116) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.BulkProcessor.internalAdd(BulkProcessor.java:109) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.BulkProcessor.add(BulkProcessor.java:97) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.client.BulkProcessor.add(BulkProcessor.java:83) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.esIndex(FsCrawlerImpl.java:708) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.esIndex(FsCrawlerImpl.java:697) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.indexDirectory(FsCrawlerImpl.java:628) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.indexDirectory(FsCrawlerImpl.java:639) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.addFilesRecursively(FsCrawlerImpl.java:406) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.addFilesRecursively(FsCrawlerImpl.java:407) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.addFilesRecursively(FsCrawlerImpl.java:407) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at fr.pilato.elasticsearch.crawler.fs.FsCrawlerImpl$FSParser.run(FsCrawlerImpl.java:299) [fscrawler-2.1-SNAPSHOT.jar:?]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_91]\n```\n\nOur _settings.json\n\n```\n{\n  \"name\" : \"archive\",\n  \"fs\" : {\n    \"url\" : \"/media/raid/archive\",\n    \"update_rate\" : \"1h\",\n    \"includes\": [\n      \"*.*\"\n    ],\n    \"excludes\": [\n      \".git\",\n      \"node_modules\",\n      \"vendor\"\n    ],\n    \"json_support\" : true,\n    \"attributes_support\" : true,\n    \"raw_metadata\" : false,\n    \"filename_as_id\" : false,\n    \"add_filesize\" : true,\n    \"remove_deleted\" : true,\n    \"store_source\" : false,\n    \"indexed_chars\" : 10000,\n    \"checksum\" : \"MD5\",\n    \"index_content\" : true\n  },\n  \"elasticsearch\" : {\n    \"nodes\" : [ {\n      \"host\" : \"192.168.10.30\",\n      \"port\" : 9200\n    } ],\n    \"index\" : \"fscrawler_archive\",\n    \"type\" : \"doc\",\n    \"bulk_size\" : 100,\n    \"flush_interval\" : \"5s\"\n  }\n}\n```\n\nIt may be that the master branch is not stable right now? Any news on a 2.1 release date?\n",
    "keywords": [
      "fscrawlerimpl$fsparser",
      "client bulkprocessor",
      "memory",
      "1-snapshot jar",
      "bulkprocessor",
      "run",
      "fr",
      "fs",
      "addfilesrecursively",
      "jar: ]",
      "fs fscrawlerimpl$fsparser",
      "elasticsearch",
      "fr pilato",
      "client",
      "jar",
      "[",
      "]",
      "addfilesrecursively fscrawlerimpl",
      "crawler fs",
      "elasticsearch crawler",
      "false",
      "execute",
      "1-snapshot",
      "pilato",
      "pilato elasticsearch",
      "elasticsearchclient",
      "fscrawlerimpl",
      "crawler",
      "true",
      "http",
      "fs client",
      "bulk",
      "20",
      "[fscrawler-2"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/dadoonet/fscrawler/commit/c9c00f7da6ecdcc3bfc99bcd530ceb653088f3a4",
      "files": [
        {
          "file_name": "src/main/java/fr/pilato/elasticsearch/crawler/fs/FsCrawlerImpl.java",
          "patch": "@@ -42,11 +42,11 @@\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n \n-import java.io.ByteArrayOutputStream;\n+import java.io.BufferedReader;\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.nio.file.FileAlreadyExistsException;\n+import java.io.InputStreamReader;\n import java.nio.file.Files;\n import java.nio.file.NoSuchFileException;\n import java.nio.file.Path;\n@@ -57,10 +57,10 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import static fr.pilato.elasticsearch.crawler.fs.tika.TikaDocParser.generate;\n import static fr.pilato.elasticsearch.crawler.fs.util.FsCrawlerUtil.extractMajorVersionNumber;\n-import static fr.pilato.elasticsearch.crawler.fs.util.FsCrawlerUtil.moveLegacyResource;\n \n /**\n  * @author dadoonet (David Pilato)\n@@ -393,7 +393,7 @@ private void addFilesRecursively(FileAbstractor path, String filepath, Instant l\n                             if (lastScanDate \u003d\u003d null\n                                     || child.lastModifiedDate.isAfter(lastScanDate)\n                                     || (child.creationDate !\u003d null \u0026\u0026 child.creationDate.isAfter(lastScanDate))) {\n-                                indexFile(child, stats, filepath, path.getInputStream(child));\n+                                indexFile(child, stats, filepath, path.getInputStream(child), child.size);\n                                 stats.addFile();\n                             } else {\n                                 logger.debug(\"    - not modified: creation date {} , file date {}, last scan date {}\",\n@@ -539,7 +539,8 @@ private String getName(Object nameObject) {\n         /**\n          * Index a file\n          */\n-        private void indexFile(FileAbstractModel fileAbstractModel, ScanStatistic stats, String filepath, InputStream fileReader) throws Exception {\n+        private void indexFile(FileAbstractModel fileAbstractModel, ScanStatistic stats, String filepath, InputStream inputStream,\n+                               long filesize) throws Exception {\n             final String filename \u003d fileAbstractModel.name;\n             final Instant lastmodified \u003d fileAbstractModel.lastModifiedDate;\n             final long size \u003d fileAbstractModel.size;\n@@ -575,17 +576,6 @@ private void indexFile(FileAbstractModel fileAbstractModel, ScanStatistic stats,\n             // Attributes\n \n             if (fsSettings.getFs().isIndexContent()) {\n-                byte[] buffer \u003d new byte[1024];\n-                ByteArrayOutputStream bos \u003d new ByteArrayOutputStream();\n-                int i;\n-                while (-1 !\u003d (i \u003d fileReader.read(buffer))) {\n-                    bos.write(buffer, 0, i);\n-                }\n-                byte[] data \u003d bos.toByteArray();\n-\n-                fileReader.close();\n-                bos.close();\n-\n                 // https://github.com/dadoonet/fscrawler/issues/5 : Support JSon files\n                 if (fsSettings.getFs().isJsonSupport()) {\n                     String id;\n@@ -598,14 +588,15 @@ private void indexFile(FileAbstractModel fileAbstractModel, ScanStatistic stats,\n                     } else {\n                         id \u003d SignTool.sign((new File(filepath, filename)).toString());\n                     }\n+\n                     esIndex(fsSettings.getElasticsearch().getIndex(),\n                             fsSettings.getElasticsearch().getType(),\n                             id,\n-                            new String(data, \"UTF-8\"));\n+                            read(inputStream));\n                     return;\n                 } else {\n                     // Extracting content with Tika\n-                    generate(fsSettings, data, filename, doc, messageDigest);\n+                    generate(fsSettings, inputStream, filename, doc, messageDigest, filesize);\n                 }\n             }\n \n@@ -616,6 +607,12 @@ private void indexFile(FileAbstractModel fileAbstractModel, ScanStatistic stats,\n                     doc);\n         }\n \n+        private String read(InputStream input) throws IOException {\n+            try (BufferedReader buffer \u003d new BufferedReader(new InputStreamReader(input, \"UTF-8\"))) {\n+                return buffer.lines().collect(Collectors.joining(\"\\n\"));\n+            }\n+        }\n+\n         private void indexDirectory(String id, String name, String root, String virtual, String encoded)\n                 throws Exception {\n "
        },
        {
          "file_name": "src/main/java/fr/pilato/elasticsearch/crawler/fs/tika/TikaDocParser.java",
          "patch": "@@ -21,15 +21,14 @@\n \n import fr.pilato.elasticsearch.crawler.fs.meta.doc.Doc;\n import fr.pilato.elasticsearch.crawler.fs.meta.settings.FsSettings;\n+import org.apache.commons.io.input.TeeInputStream;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.apache.tika.metadata.Metadata;\n \n-import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n-import java.io.UnsupportedEncodingException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n import java.security.DigestInputStream;\n import java.security.MessageDigest;\n import java.util.ArrayList;\n@@ -45,13 +44,15 @@\n \n     private final static Logger logger \u003d LogManager.getLogger(TikaDocParser.class);\n \n-    public static void generate(FsSettings fsSettings, byte[] data, String filename, Doc doc, MessageDigest messageDigest) throws UnsupportedEncodingException {\n+    public static void generate(FsSettings fsSettings, InputStream inputStream, String filename, Doc doc, MessageDigest messageDigest,\n+                                long filesize) throws IOException {\n+        logger.trace(\"Generating document [{}]\", filename);\n         // Extracting content with Tika\n         // See #38: https://github.com/dadoonet/fscrawler/issues/38\n         int indexedChars \u003d 100000;\n         if (fsSettings.getFs().getIndexedChars() !\u003d null) {\n             if (fsSettings.getFs().getIndexedChars().percentage()) {\n-                indexedChars \u003d (int) Math.round(data.length * fsSettings.getFs().getIndexedChars().asDouble());\n+                indexedChars \u003d (int) Math.round(filesize * fsSettings.getFs().getIndexedChars().asDouble());\n                 logger.trace(\"using percentage [{}] to define indexed chars: [{}]\",\n                         fsSettings.getFs().getIndexedChars(), indexedChars);\n             } else {\n@@ -63,18 +64,24 @@ public static void generate(FsSettings fsSettings, byte[] data, String filename,\n         Metadata metadata \u003d new Metadata();\n \n         String parsedContent \u003d null;\n-        InputStream dataStream \u003d new ByteArrayInputStream(data);\n-        DigestInputStream dis \u003d null;\n \n         if (messageDigest !\u003d null) {\n             logger.trace(\"Generating hash with [{}]\", messageDigest.getAlgorithm());\n-            dis \u003d new DigestInputStream(dataStream, messageDigest);\n-            dataStream \u003d dis;\n+            inputStream \u003d new DigestInputStream(inputStream, messageDigest);\n+        }\n+\n+        ByteArrayOutputStream bos \u003d null;\n+        if (fsSettings.getFs().isStoreSource()) {\n+            logger.debug(\"Using a TeeInputStream as we need to store the source\");\n+            bos \u003d new ByteArrayOutputStream();\n+            inputStream \u003d new TeeInputStream(inputStream, bos);\n         }\n \n         try {\n             // Set the maximum length of strings returned by the parseToString method, -1 sets no limit\n-            parsedContent \u003d tika().parseToString(dataStream, metadata, indexedChars);\n+            logger.trace(\"Beginning Tika extraction\");\n+            parsedContent \u003d tika().parseToString(inputStream, metadata, indexedChars);\n+            logger.trace(\"End of Tika extraction\");\n         } catch (Throwable e) {\n             logger.debug(\"Failed to extract [\" + indexedChars + \"] characters of text for [\" + filename + \"]\", e);\n         }\n@@ -130,8 +137,9 @@ public static void generate(FsSettings fsSettings, byte[] data, String filename,\n \n         // Doc as binary attachment\n         if (fsSettings.getFs().isStoreSource()) {\n-            doc.setAttachment(new String(Base64.getEncoder().encode(data), \"UTF-8\"));\n+            doc.setAttachment(Base64.getEncoder().encodeToString(bos.toByteArray()));\n         }\n+        logger.trace(\"End document generation\");\n         // End of our document\n     }\n "
        },
        {
          "file_name": "src/test/java/fr/pilato/elasticsearch/crawler/fs/test/integration/AbstractITCase.java",
          "patch": "@@ -47,6 +47,7 @@\n  *\n  * You can run one by launching:\n  * bin/elasticsearch -Des.http.port\u003d9400\n+ * bin/elasticsearch -Ehttp.port\u003d9400\n  *\n  * The node can be run manually or when using maven, it\u0027s automatically started as\n  * during the pre-integration phase and stopped after the tests.\n@@ -106,8 +107,8 @@ public static SearchResponse countTestHelper(final String indexName, String quer\n         final SearchResponse[] response \u003d new SearchResponse[1];\n \n         // We wait up to 5 seconds before considering a failing test\n-        staticLogger.info(\"  ---\u003e Waiting up to 5 seconds for {} documents in index {}\", expected \u003d\u003d null ? \"some\" : expected, indexName);\n-        assertThat(\"We waited for 5 seconds but no document has been added\", awaitBusy(() -\u003e {\n+        staticLogger.info(\"  ---\u003e Waiting up to 20 seconds for {} documents in index {}\", expected \u003d\u003d null ? \"some\" : expected, indexName);\n+        assertThat(\"We waited for 20 seconds but no document has been added\", awaitBusy(() -\u003e {\n             long totalHits;\n \n             // Let\u0027s search for entries"
        },
        {
          "file_name": "src/test/java/fr/pilato/elasticsearch/crawler/fs/test/unit/tika/TikaDocParserTest.java",
          "patch": "@@ -20,15 +20,19 @@\n package fr.pilato.elasticsearch.crawler.fs.test.unit.tika;\n \n import fr.pilato.elasticsearch.crawler.fs.meta.doc.Doc;\n+import fr.pilato.elasticsearch.crawler.fs.meta.settings.Fs;\n import fr.pilato.elasticsearch.crawler.fs.meta.settings.FsSettings;\n import fr.pilato.elasticsearch.crawler.fs.test.AbstractFSCrawlerTestCase;\n import fr.pilato.elasticsearch.crawler.fs.tika.TikaDocParser;\n import org.junit.Test;\n \n import java.io.IOException;\n+import java.io.InputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n import java.util.Map;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n@@ -39,6 +43,8 @@\n import static org.hamcrest.Matchers.is;\n import static org.hamcrest.Matchers.notNullValue;\n import static org.hamcrest.Matchers.nullValue;\n+import static org.junit.Assert.fail;\n+import static org.junit.Assume.assumeNoException;\n \n public class TikaDocParserTest extends AbstractFSCrawlerTestCase {\n \n@@ -462,6 +468,9 @@ public void testExtractFromTxt() throws IOException {\n         assertThat(raw, hasEntry(\"X-Parsed-By\", \"org.apache.tika.parser.DefaultParser\"));\n         assertThat(raw, hasEntry(is(\"Content-Encoding\"), notNullValue()));\n         assertThat(raw, hasEntry(is(\"Content-Type\"), containsString(\"text/plain\")));\n+\n+        assertThat(doc.getAttachment(), nullValue());\n+        assertThat(doc.getFile().getChecksum(), nullValue());\n     }\n \n     @Test\n@@ -491,12 +500,58 @@ public void testExtractFromWav() throws IOException {\n         assertThat(raw, hasEntry(\"samplerate\", \"44100.0\"));\n     }\n \n-    private byte[] getBinaryContent(String filename) throws IOException {\n-        String url \u003d getUrl(\"documents\", filename);\n-        Path file \u003d Paths.get(url);\n-        byte[] data \u003d Files.readAllBytes(file);\n+    @Test\n+    public void testExtractFromTxtAndStoreSource() throws IOException {\n+        Doc doc \u003d extractFromFile(\"test.txt\",\n+                FsSettings.builder(getCurrentTestName())\n+                        .setFs(Fs.builder().setStoreSource(true).build())\n+                        .build());\n \n-        return data;\n+        // Extracted content\n+        assertThat(doc.getContent(), containsString(\"This file contains some words.\"));\n+        assertThat(doc.getAttachment(), notNullValue());\n+    }\n+\n+    @Test\n+    public void testExtractFromTxtAndStoreSourceWithDigest() throws IOException {\n+        try {\n+            MessageDigest.getInstance(\"MD5\");\n+        } catch (NoSuchAlgorithmException e) {\n+            assumeNoException(e);\n+        }\n+\n+        Doc doc \u003d extractFromFile(\"test.txt\",\n+                FsSettings.builder(getCurrentTestName())\n+                        .setFs(Fs.builder().setStoreSource(true).setChecksum(\"MD5\").build())\n+                        .build());\n+\n+        // Extracted content\n+        assertThat(doc.getContent(), containsString(\"This file contains some words.\"));\n+        assertThat(doc.getAttachment(), notNullValue());\n+        assertThat(doc.getFile().getChecksum(), notNullValue());\n+    }\n+\n+    @Test\n+    public void testExtractFromTxtWithDigest() throws IOException {\n+        try {\n+            MessageDigest.getInstance(\"MD5\");\n+        } catch (NoSuchAlgorithmException e) {\n+            assumeNoException(e);\n+        }\n+\n+        Doc doc \u003d extractFromFile(\"test.txt\",\n+                FsSettings.builder(getCurrentTestName())\n+                        .setFs(Fs.builder().setChecksum(\"MD5\").build())\n+                        .build());\n+\n+        // Extracted content\n+        assertThat(doc.getContent(), containsString(\"This file contains some words.\"));\n+        assertThat(doc.getAttachment(), nullValue());\n+        assertThat(doc.getFile().getChecksum(), notNullValue());\n+    }\n+\n+    private InputStream getBinaryContent(String filename) throws IOException {\n+        return Files.newInputStream(Paths.get(getUrl(\"documents\", filename)));\n     }\n \n     private Doc extractFromFileExtension(String extension) throws IOException {\n@@ -505,14 +560,28 @@ private Doc extractFromFileExtension(String extension) throws IOException {\n     }\n \n     private Doc extractFromFile(String filename) throws IOException {\n-        byte[] data \u003d getBinaryContent(filename);\n+        return extractFromFile(filename, FsSettings.builder(getCurrentTestName()).build());\n+    }\n+\n+    private Doc extractFromFile(String filename, FsSettings fsSettings) throws IOException {\n+        InputStream data \u003d getBinaryContent(filename);\n         Doc doc \u003d new Doc();\n+        MessageDigest messageDigest \u003d null;\n+        if (fsSettings.getFs() !\u003d null \u0026\u0026 fsSettings.getFs().getChecksum() !\u003d null) {\n+            try {\n+                messageDigest \u003d MessageDigest.getInstance(fsSettings.getFs().getChecksum());\n+            } catch (NoSuchAlgorithmException e) {\n+                fail(\"Algorithm [\" + fsSettings.getFs().getChecksum() + \"] not found: \" + e.getMessage());\n+            }\n+        }\n+\n         TikaDocParser.generate(\n-                FsSettings.builder(getCurrentTestName()).build(),\n+                fsSettings,\n                 data,\n                 filename,\n                 doc,\n-                null);\n+                messageDigest,\n+                0);\n \n         logger.debug(\"Generated Content: [{}]\", doc.getContent());\n         logger.debug(\"Generated Raw Metadata: [{}]\", doc.getMeta().getRaw());"
        }
      ]
    }
  },
  {
    "name": "Fix potential memory leak in Tools#decompressGzip() and Tools#decompressZlib()",
    "url": "https://github.com/Graylog2/graylog2-server/pull/1862",
    "description": "Properly close streams in `Tools#decompressGzip()` and `Tools#decompressZlib()` by using try-with-resources.\n\nFixes #1857\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Graylog2/graylog2-server/commit/aa24eb0f998bc8045b7e70e980b6c4fb2d28a71b",
      "files": [
        {
          "file_name": "graylog2-server/src/main/java/org/graylog2/plugin/Tools.java",
          "patch": "@@ -17,6 +17,7 @@\n package org.graylog2.plugin;\n \n import com.google.common.io.BaseEncoding;\n+import com.google.common.io.ByteStreams;\n import com.google.common.primitives.Doubles;\n import org.joda.time.DateTime;\n import org.joda.time.DateTimeZone;\n@@ -28,7 +29,6 @@\n import org.slf4j.Logger;\n \n import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.lang.management.ManagementFactory;\n import java.net.Inet4Address;\n@@ -185,13 +185,10 @@ public static String getSystemInformation() {\n      * @return A string containing the decompressed data\n      */\n     public static String decompressZlib(byte[] compressedData) throws IOException {\n-        byte[] buffer \u003d new byte[compressedData.length];\n-        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();\n-        InflaterInputStream in \u003d new InflaterInputStream(new ByteArrayInputStream(compressedData));\n-        for (int bytesRead \u003d 0; bytesRead !\u003d -1; bytesRead \u003d in.read(buffer)) {\n-            out.write(buffer, 0, bytesRead);\n+        try (final ByteArrayInputStream dataStream \u003d new ByteArrayInputStream(compressedData);\n+             final InflaterInputStream in \u003d new InflaterInputStream(dataStream)) {\n+            return new String(ByteStreams.toByteArray(in), StandardCharsets.UTF_8);\n         }\n-        return new String(out.toByteArray(), StandardCharsets.UTF_8);\n     }\n \n     /**\n@@ -200,13 +197,11 @@ public static String decompressZlib(byte[] compressedData) throws IOException {\n      * @return A string containing the decompressed data\n      */\n     public static String decompressGzip(byte[] compressedData) throws IOException {\n-        byte[] buffer \u003d new byte[compressedData.length];\n-        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();\n-        GZIPInputStream in \u003d new GZIPInputStream(new ByteArrayInputStream(compressedData));\n-        for (int bytesRead \u003d 0; bytesRead !\u003d -1; bytesRead \u003d in.read(buffer)) {\n-            out.write(buffer, 0, bytesRead);\n+        try (final ByteArrayInputStream dataStream \u003d new ByteArrayInputStream(compressedData);\n+             final GZIPInputStream in \u003d new GZIPInputStream(dataStream)) {\n+            return new String(ByteStreams.toByteArray(in), StandardCharsets.UTF_8);\n+\n         }\n-        return new String(out.toByteArray(), StandardCharsets.UTF_8);\n     }\n \n     /**"
        },
        {
          "file_name": "graylog2-server/src/test/java/org/graylog2/ToolsTest.java",
          "patch": "@@ -1,254 +0,0 @@\n-/**\n- * This file is part of Graylog.\n- *\n- * Graylog is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * Graylog is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License\n- * along with Graylog.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n- */\n-/**\n- * ToolsTest.java: Lennart Koopmann \u003clennart@scopeport.org\u003e | Aug 5, 2010 6:49:52 PM\n- */\n-\n-package org.graylog2;\n-\n-import com.google.common.collect.Lists;\n-import org.graylog2.plugin.Tools;\n-import org.joda.time.DateTime;\n-import org.junit.Test;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.EOFException;\n-import java.io.IOException;\n-import java.util.Calendar;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.zip.Deflater;\n-import java.util.zip.GZIPOutputStream;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-\n-/**\n- * @author lennart\n- */\n-public class ToolsTest {\n-\n-    @Test\n-    public void testGetPID() {\n-        String result \u003d Tools.getPID();\n-        assertTrue(Integer.parseInt(result) \u003e 0);\n-    }\n-\n-    @Test\n-    public void testGetUTCTimestamp() {\n-\n-        assertTrue(Tools.getUTCTimestamp() \u003e 0);\n-    }\n-\n-    @Test\n-    public void testGetUTCTimestampWithMilliseconds() {\n-\n-        assertTrue(Tools.getUTCTimestampWithMilliseconds() \u003e 0.0d);\n-        assertTrue(Tools.getUTCTimestampWithMilliseconds(Calendar.getInstance().getTimeInMillis()) \u003e 0.0d);\n-    }\n-\n-    @Test\n-    public void testGetLocalHostname() {\n-\n-        String hostname \u003d Tools.getLocalHostname();\n-\n-        assertFalse(hostname.isEmpty());\n-    }\n-\n-    @Test\n-    public void testSyslogLevelToReadable() {\n-        assertEquals(Tools.syslogLevelToReadable(1337), \"Invalid\");\n-        assertEquals(Tools.syslogLevelToReadable(0), \"Emergency\");\n-        assertEquals(Tools.syslogLevelToReadable(2), \"Critical\");\n-        assertEquals(Tools.syslogLevelToReadable(6), \"Informational\");\n-    }\n-\n-    @Test\n-    public void testSyslogFacilityToReadable() {\n-        assertEquals(Tools.syslogFacilityToReadable(9001), \"Unknown\");\n-        assertEquals(Tools.syslogFacilityToReadable(0), \"kernel\");\n-        assertEquals(Tools.syslogFacilityToReadable(11), \"FTP\");\n-        assertEquals(Tools.syslogFacilityToReadable(22), \"local6\");\n-    }\n-\n-    @Test\n-    public void testGetSystemInformation() {\n-        String result \u003d Tools.getSystemInformation();\n-        assertTrue(result.trim().length() \u003e 0);\n-    }\n-\n-    @Test\n-    public void testDecompressZlib() throws IOException {\n-\n-        String testString \u003d \"Teststring 123\";\n-        byte[] buffer \u003d new byte[100];\n-        Deflater deflater \u003d new Deflater();\n-\n-        deflater.setInput(testString.getBytes());\n-        deflater.finish();\n-        deflater.deflate(buffer);\n-        deflater.end();\n-\n-        assertEquals(testString, Tools.decompressZlib(buffer));\n-    }\n-\n-    @Test\n-    public void testDecompressGzip() throws IOException {\n-\n-        String testString \u003d \"Teststring 123\";\n-\n-        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();\n-        GZIPOutputStream gzip \u003d new GZIPOutputStream(out);\n-        gzip.write(testString.getBytes());\n-        gzip.close();\n-\n-        byte[] buffer \u003d out.toByteArray();\n-\n-        assertEquals(testString, Tools.decompressGzip(buffer));\n-    }\n-\n-    @Test(expected \u003d EOFException.class)\n-    public void testDecompressGzipEmptyInput() throws IOException {\n-\n-        Tools.decompressGzip(new byte[0]);\n-    }\n-\n-    /**\n-     * ruby-1.9.2-p136 :001 \u003e [Time.now.to_i, 2.days.ago.to_i]\n-     *  \u003d\u003e [1322063329, 1321890529]\n-     */\n-    @Test\n-    public void testGetTimestampDaysAgo() {\n-        assertEquals(1321890529, Tools.getTimestampDaysAgo(1322063329, 2));\n-    }\n-\n-    @Test\n-    public void testEncodeBase64() {\n-        assertEquals(\"bG9sd2F0LmVuY29kZWQ\u003d\", Tools.encodeBase64(\"lolwat.encoded\"));\n-    }\n-\n-    @Test\n-    public void testDecodeBase64() {\n-        assertEquals(\"lolwat.encoded\", Tools.decodeBase64(\"bG9sd2F0LmVuY29kZWQ\u003d\"));\n-    }\n-    \n-    @Test\n-    public void testGenerateServerId() {\n-        String id \u003d Tools.generateServerId();\n-\n-        /*\n-         * Make sure it has dashes in it. We need that to build a short ID later.\n-         * Short version: Everything falls apart if this is not an UUID-style ID.\n-         */\n-        assertTrue(id.contains(\"-\"));\n-    }\n-    \n-    @Test\n-    public void testAsSortedList() {\n-        List\u003cInteger\u003e sortMe \u003d Lists.newArrayList();\n-        sortMe.add(0);\n-        sortMe.add(2);\n-        sortMe.add(6);\n-        sortMe.add(1);\n-        sortMe.add(10);\n-        sortMe.add(25);\n-        sortMe.add(11);\n-        \n-        List\u003cInteger\u003e expected \u003d Lists.newArrayList();\n-        expected.add(0);\n-        expected.add(1);\n-        expected.add(2);\n-        expected.add(6);\n-        expected.add(10);\n-        expected.add(11);\n-        expected.add(25);\n-        \n-        assertEquals(expected, Tools.asSortedList(sortMe));\n-    }\n-\n-    @Test\n-    public void testSafeSubstring() {\n-        assertNull(Tools.safeSubstring(null, 10, 20));\n-        assertNull(Tools.safeSubstring(\"\", 10, 20));\n-        assertNull(Tools.safeSubstring(\"foo\", -1, 2));\n-        assertNull(Tools.safeSubstring(\"foo\", 1, 0));\n-        assertNull(Tools.safeSubstring(\"foo\", 5, 2));\n-        assertNull(Tools.safeSubstring(\"foo\", 1, 1));\n-        assertNull(Tools.safeSubstring(\"foo\", 2, 1));\n-\n-        assertEquals(\"justatest\", Tools.safeSubstring(\"justatest\", 0, 9));\n-        assertEquals(\"tat\", Tools.safeSubstring(\"justatest\", 3, 6));\n-        assertEquals(\"just\", Tools.safeSubstring(\"justatest\", 0, 4));\n-        assertEquals(\"atest\", Tools.safeSubstring(\"justatest\", 4, 9));\n-    }\n-\n-    @Test\n-    public void testGetInt() throws Exception {\n-        assertEquals(null, Tools.getDouble(null));\n-        assertEquals(null, Tools.getDouble(\"\"));\n-\n-        assertEquals(0.0, Tools.getDouble(0), 0);\n-        assertEquals(1.0, Tools.getDouble(1), 0);\n-        assertEquals(1.42, Tools.getDouble(1.42), 0);\n-        assertEquals(9001.0, Tools.getDouble(9001), 0);\n-        assertEquals(9001.23, Tools.getDouble(9001.23), 0);\n-\n-        assertEquals(1253453.0, Tools.getDouble((long) 1253453), 0);\n-\n-        assertEquals(88.0, Tools.getDouble(\"88\"), 0);\n-        assertEquals(1.42, Tools.getDouble(\"1.42\"), 0);\n-        assertEquals(null, Tools.getDouble(\"lol NOT A NUMBER\"));\n-\n-        assertEquals(null, Tools.getDouble(new HashMap\u003cString, String\u003e()));\n-\n-        assertEquals(42.23, Tools.getDouble(new Object() {\n-            @Override\n-            public String toString() {\n-                return \"42.23\";\n-            }\n-        }), 0);\n-    }\n-\n-    @Test\n-    public void testTimeFormatterWithOptionalMilliseconds() {\n-        /*\n-         * We can actually consider this working if it does not throw parser exceptions.\n-         * Check the toString() representation to make sure though. (using startsWith()\n-         * to avoid problems on test systems in other time zones, that are not CEST and do\n-         * not end with a +02:00 or shit.)\n-         */\n-        assertTrue(DateTime.parse(\"2013-09-15 02:21:02\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.000\"));\n-        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.123\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.123\"));\n-        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.12\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.120\"));\n-        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.1\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.100\"));\n-    }\n-\n-    @Test\n-    public void testElasticSearchTimeFormatToISO8601() {\n-        assertTrue(Tools.elasticSearchTimeFormatToISO8601(\"2014-07-31 14:21:02.000\").equals(\"2014-07-31T14:21:02.000Z\"));\n-    }\n-\n-    @Test\n-    public void testTimeFromDouble() {\n-        assertTrue(Tools.dateTimeFromDouble(1381076986.306509).toString().startsWith(\"2013-10-06T\"));\n-        assertTrue(Tools.dateTimeFromDouble(1381076986).toString().startsWith(\"2013-10-06T\"));\n-        assertTrue(Tools.dateTimeFromDouble(1381079085.6).toString().startsWith(\"2013-10-06T\"));\n-        assertTrue(Tools.dateTimeFromDouble(1381079085.06).toString().startsWith(\"2013-10-06T\"));\n-    }\n-}"
        },
        {
          "file_name": "graylog2-server/src/test/java/org/graylog2/plugin/ToolsTest.java",
          "patch": "@@ -16,12 +16,24 @@\n  */\n package org.graylog2.plugin;\n \n+import com.google.common.collect.Lists;\n+import org.joda.time.DateTime;\n import org.junit.Test;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.EOFException;\n+import java.io.IOException;\n import java.net.URI;\n+import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.zip.Deflater;\n+import java.util.zip.GZIPOutputStream;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n \n public class ToolsTest {\n \n@@ -39,4 +51,212 @@ public void testGetUriWithScheme() throws Exception {\n         assertEquals(Tools.getUriWithScheme(new URI(\"http://example.com\"), \"gopher\").getScheme(), \"gopher\");\n         assertNull(Tools.getUriWithScheme(new URI(\"http://example.com\"), null).getScheme());\n     }\n+\n+    @Test\n+    public void testGetPID() {\n+        String result \u003d Tools.getPID();\n+        assertTrue(Integer.parseInt(result) \u003e 0);\n+    }\n+\n+    @Test\n+    public void testGetUTCTimestamp() {\n+\n+        assertTrue(Tools.getUTCTimestamp() \u003e 0);\n+    }\n+\n+    @Test\n+    public void testGetUTCTimestampWithMilliseconds() {\n+\n+        assertTrue(Tools.getUTCTimestampWithMilliseconds() \u003e 0.0d);\n+        assertTrue(Tools.getUTCTimestampWithMilliseconds(Calendar.getInstance().getTimeInMillis()) \u003e 0.0d);\n+    }\n+\n+    @Test\n+    public void testGetLocalHostname() {\n+\n+        String hostname \u003d Tools.getLocalHostname();\n+\n+        assertFalse(hostname.isEmpty());\n+    }\n+\n+    @Test\n+    public void testSyslogLevelToReadable() {\n+        assertEquals(Tools.syslogLevelToReadable(1337), \"Invalid\");\n+        assertEquals(Tools.syslogLevelToReadable(0), \"Emergency\");\n+        assertEquals(Tools.syslogLevelToReadable(2), \"Critical\");\n+        assertEquals(Tools.syslogLevelToReadable(6), \"Informational\");\n+    }\n+\n+    @Test\n+    public void testSyslogFacilityToReadable() {\n+        assertEquals(Tools.syslogFacilityToReadable(9001), \"Unknown\");\n+        assertEquals(Tools.syslogFacilityToReadable(0), \"kernel\");\n+        assertEquals(Tools.syslogFacilityToReadable(11), \"FTP\");\n+        assertEquals(Tools.syslogFacilityToReadable(22), \"local6\");\n+    }\n+\n+    @Test\n+    public void testGetSystemInformation() {\n+        String result \u003d Tools.getSystemInformation();\n+        assertTrue(result.trim().length() \u003e 0);\n+    }\n+\n+    @Test\n+    public void testDecompressZlib() throws IOException {\n+\n+        String testString \u003d \"Teststring 123\";\n+        byte[] buffer \u003d new byte[100];\n+        Deflater deflater \u003d new Deflater();\n+\n+        deflater.setInput(testString.getBytes());\n+        deflater.finish();\n+        deflater.deflate(buffer);\n+        deflater.end();\n+\n+        assertEquals(testString, Tools.decompressZlib(buffer));\n+    }\n+\n+    @Test\n+    public void testDecompressGzip() throws IOException {\n+\n+        String testString \u003d \"Teststring 123\";\n+\n+        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();\n+        GZIPOutputStream gzip \u003d new GZIPOutputStream(out);\n+        gzip.write(testString.getBytes());\n+        gzip.close();\n+\n+        byte[] buffer \u003d out.toByteArray();\n+\n+        assertEquals(testString, Tools.decompressGzip(buffer));\n+    }\n+\n+    @Test(expected \u003d EOFException.class)\n+    public void testDecompressGzipEmptyInput() throws IOException {\n+\n+        Tools.decompressGzip(new byte[0]);\n+    }\n+\n+    /**\n+     * ruby-1.9.2-p136 :001 \u003e [Time.now.to_i, 2.days.ago.to_i]\n+     *  \u003d\u003e [1322063329, 1321890529]\n+     */\n+    @Test\n+    public void testGetTimestampDaysAgo() {\n+        assertEquals(1321890529, Tools.getTimestampDaysAgo(1322063329, 2));\n+    }\n+\n+    @Test\n+    public void testEncodeBase64() {\n+        assertEquals(\"bG9sd2F0LmVuY29kZWQ\u003d\", Tools.encodeBase64(\"lolwat.encoded\"));\n+    }\n+\n+    @Test\n+    public void testDecodeBase64() {\n+        assertEquals(\"lolwat.encoded\", Tools.decodeBase64(\"bG9sd2F0LmVuY29kZWQ\u003d\"));\n+    }\n+\n+    @Test\n+    public void testGenerateServerId() {\n+        String id \u003d Tools.generateServerId();\n+\n+        /*\n+         * Make sure it has dashes in it. We need that to build a short ID later.\n+         * Short version: Everything falls apart if this is not an UUID-style ID.\n+         */\n+        assertTrue(id.contains(\"-\"));\n+    }\n+\n+    @Test\n+    public void testAsSortedList() {\n+        List\u003cInteger\u003e sortMe \u003d Lists.newArrayList();\n+        sortMe.add(0);\n+        sortMe.add(2);\n+        sortMe.add(6);\n+        sortMe.add(1);\n+        sortMe.add(10);\n+        sortMe.add(25);\n+        sortMe.add(11);\n+\n+        List\u003cInteger\u003e expected \u003d Lists.newArrayList();\n+        expected.add(0);\n+        expected.add(1);\n+        expected.add(2);\n+        expected.add(6);\n+        expected.add(10);\n+        expected.add(11);\n+        expected.add(25);\n+\n+        assertEquals(expected, Tools.asSortedList(sortMe));\n+    }\n+\n+    @Test\n+    public void testSafeSubstring() {\n+        assertNull(Tools.safeSubstring(null, 10, 20));\n+        assertNull(Tools.safeSubstring(\"\", 10, 20));\n+        assertNull(Tools.safeSubstring(\"foo\", -1, 2));\n+        assertNull(Tools.safeSubstring(\"foo\", 1, 0));\n+        assertNull(Tools.safeSubstring(\"foo\", 5, 2));\n+        assertNull(Tools.safeSubstring(\"foo\", 1, 1));\n+        assertNull(Tools.safeSubstring(\"foo\", 2, 1));\n+\n+        assertEquals(\"justatest\", Tools.safeSubstring(\"justatest\", 0, 9));\n+        assertEquals(\"tat\", Tools.safeSubstring(\"justatest\", 3, 6));\n+        assertEquals(\"just\", Tools.safeSubstring(\"justatest\", 0, 4));\n+        assertEquals(\"atest\", Tools.safeSubstring(\"justatest\", 4, 9));\n+    }\n+\n+    @Test\n+    public void testGetInt() throws Exception {\n+        assertEquals(null, Tools.getDouble(null));\n+        assertEquals(null, Tools.getDouble(\"\"));\n+\n+        assertEquals(0.0, Tools.getDouble(0), 0);\n+        assertEquals(1.0, Tools.getDouble(1), 0);\n+        assertEquals(1.42, Tools.getDouble(1.42), 0);\n+        assertEquals(9001.0, Tools.getDouble(9001), 0);\n+        assertEquals(9001.23, Tools.getDouble(9001.23), 0);\n+\n+        assertEquals(1253453.0, Tools.getDouble((long) 1253453), 0);\n+\n+        assertEquals(88.0, Tools.getDouble(\"88\"), 0);\n+        assertEquals(1.42, Tools.getDouble(\"1.42\"), 0);\n+        assertEquals(null, Tools.getDouble(\"lol NOT A NUMBER\"));\n+\n+        assertEquals(null, Tools.getDouble(new HashMap\u003cString, String\u003e()));\n+\n+        assertEquals(42.23, Tools.getDouble(new Object() {\n+            @Override\n+            public String toString() {\n+                return \"42.23\";\n+            }\n+        }), 0);\n+    }\n+\n+    @Test\n+    public void testTimeFormatterWithOptionalMilliseconds() {\n+        /*\n+         * We can actually consider this working if it does not throw parser exceptions.\n+         * Check the toString() representation to make sure though. (using startsWith()\n+         * to avoid problems on test systems in other time zones, that are not CEST and do\n+         * not end with a +02:00 or shit.)\n+         */\n+        assertTrue(DateTime.parse(\"2013-09-15 02:21:02\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.000\"));\n+        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.123\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.123\"));\n+        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.12\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.120\"));\n+        assertTrue(DateTime.parse(\"2013-09-15 02:21:02.1\", Tools.timeFormatterWithOptionalMilliseconds()).toString().startsWith(\"2013-09-15T02:21:02.100\"));\n+    }\n+\n+    @Test\n+    public void testElasticSearchTimeFormatToISO8601() {\n+        assertTrue(Tools.elasticSearchTimeFormatToISO8601(\"2014-07-31 14:21:02.000\").equals(\"2014-07-31T14:21:02.000Z\"));\n+    }\n+\n+    @Test\n+    public void testTimeFromDouble() {\n+        assertTrue(Tools.dateTimeFromDouble(1381076986.306509).toString().startsWith(\"2013-10-06T\"));\n+        assertTrue(Tools.dateTimeFromDouble(1381076986).toString().startsWith(\"2013-10-06T\"));\n+        assertTrue(Tools.dateTimeFromDouble(1381079085.6).toString().startsWith(\"2013-10-06T\"));\n+        assertTrue(Tools.dateTimeFromDouble(1381079085.06).toString().startsWith(\"2013-10-06T\"));\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Memory Leak on Map Change",
    "url": "https://github.com/njdom24/FF/issues/3",
    "description": "Possibly to do with game.setScreen() (in futureScreen()?)",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/njdom24/FF/commit/dd3ce03a44c2967c192f1bacd4448f36c7abe158",
      "files": [
        {
          "file_name": "core/src/com/dommie/ffdemo/screens/MapScreen.java",
          "patch": "@@ -175,7 +175,7 @@ public void render(float delta) {\n             n.update(delta);\n             n.draw(game.batch);\n         }\n-        hud.draw(game.batch);\n+        //hud.draw(game.batch);\n \n         game.batch.end();\n \n@@ -187,7 +187,6 @@ public void render(float delta) {\n     @Override\n     public void resize(int width, int height) {\n         gamePort.update(width, height);\n-\n     }\n \n     public boolean isTooFarLeft()"
        },
        {
          "file_name": "core/src/com/dommie/ffdemo/sprites/InteractiveTileObject.java",
          "patch": "@@ -33,7 +33,7 @@ public InteractiveTileObject(World world, TiledMap map, Rectangle bounds, boolea\n \n         BodyDef bdef \u003d new BodyDef();\n         FixtureDef fdef \u003d new FixtureDef();\n-        PolygonShape shape \u003d new PolygonShape();\n+        PolygonShape shape \u003d new PolygonShape();    \n \n         if(isDynamic)\n             bdef.type \u003d BodyDef.BodyType.DynamicBody;\n@@ -46,6 +46,7 @@ public InteractiveTileObject(World world, TiledMap map, Rectangle bounds, boolea\n \n         shape.setAsBox(bounds.getWidth()/2, bounds.getHeight()/2);\n         fdef.shape \u003d shape;\n+        //shape.dispose();\n         fdef.isSensor \u003d true;\n         fixture \u003d body.createFixture(fdef);\n     }"
        },
        {
          "file_name": "core/src/com/dommie/ffdemo/sprites/NPC.java",
          "patch": "@@ -324,7 +324,9 @@ public void dispose()\n     {\n     \tspr.getTexture().dispose();\n     \t\n+    \t/*\n     \tfor(TextureRegion t : animFrames)\n     \t\tt.getTexture().dispose();\n+    \t*/\n     }\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "core/src/com/dommie/ffdemo/sprites/Player.java",
          "patch": "@@ -329,6 +329,7 @@ public void defineMario()\n         fdef.shape \u003d shape;\n         fdef.isSensor \u003d true;\n         b2body.createFixture(fdef);\n+        shape.dispose();\n \n \n         //bottom edge\n@@ -338,6 +339,7 @@ public void defineMario()\n         fdef.shape \u003d edge;\n         fdef.isSensor \u003d true;\n         b2body.createFixture(fdef).setUserData(\"bottom\");\n+        edge.dispose();\n \n         //top edge\n         fdef \u003d new FixtureDef();\n@@ -346,6 +348,7 @@ public void defineMario()\n         fdef.shape \u003d edge;\n         fdef.isSensor \u003d true;\n         b2body.createFixture(fdef).setUserData(\"top\");\n+        edge.dispose();\n \n         //left edge\n         fdef \u003d new FixtureDef();\n@@ -354,6 +357,7 @@ public void defineMario()\n         fdef.shape \u003d edge;\n         fdef.isSensor \u003d true;\n         b2body.createFixture(fdef).setUserData(\"left\");\n+        edge.dispose();\n \n         //right edge\n         fdef \u003d new FixtureDef();\n@@ -362,6 +366,7 @@ public void defineMario()\n         fdef.shape \u003d edge;\n         fdef.isSensor \u003d true;\n         b2body.createFixture(fdef).setUserData(\"right\");\n+        edge.dispose();\n \n     }\n \n@@ -385,7 +390,9 @@ public void dispose()\n     \t//stand.getTexture().dispose();\n     \t\n     \tsuper.getTexture().dispose();\n+    \t/*\n     \tfor(TextureRegion t : animFrames)\n     \t\tt.getTexture().dispose();\n+    \t*/\n     }\n }"
        },
        {
          "file_name": "core/src/com/dommie/ffdemo/sprites/TestBody.java",
          "patch": "@@ -44,6 +44,7 @@ public TestBody(World world, TiledMap map)\n         fdef.shape \u003d shape;\n         fdef.isSensor \u003d true;\n         fixture \u003d body.createFixture(fdef);\n+        shape.dispose();\n     }\n \n     public void update(float dt)"
        },
        {
          "file_name": "core/src/com/dommie/ffdemo/tools/B2WorldCreator.java",
          "patch": "@@ -26,10 +26,6 @@\n     public B2WorldCreator(World world, TiledMap map)\n     {\n         npcIndex \u003d 0;\n-        BodyDef bdef \u003d new BodyDef();\n-        PolygonShape shape \u003d new PolygonShape();\n-        FixtureDef fdef \u003d new FixtureDef();\n-        Body body;\n         this.world \u003d world;\n         this.map \u003d map;\n "
        }
      ]
    }
  },
  {
    "name": "Better handling of reconnect - fixed possible memory leak",
    "url": "https://github.com/openhab/openhab1-addons/pull/1048",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/openhab/openhab1-addons/commit/3ea5e88963d48e23cc5dfad985c1b6a1782f129d",
      "files": [
        {
          "file_name": "bundles/binding/org.openhab.binding.xbmc/src/main/java/org/openhab/binding/xbmc/rpc/XbmcConnector.java",
          "patch": "@@ -10,7 +10,6 @@\n \n import java.io.IOException;\n import java.net.ConnectException;\n-import java.net.URISyntaxException;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -65,14 +64,15 @@\n \tprivate final XbmcHost xbmc;\n \tprivate final EventPublisher eventPublisher;\n \n-\tprivate final String rsUri;\n+\tprivate final String httpUri;\n \tprivate final String wsUri;\n-\n+\tprivate final AsyncHttpClient client;\n+\tprivate final WebSocketUpgradeHandler handler;\n+\t\n \t// stores which property is associated with each item\n \tprivate final Map\u003cString, String\u003e watches \u003d new HashMap\u003cString, String\u003e();\n \n \t// the async connection to the XBMC instance\n-\tprivate AsyncHttpClient client;\n \tprivate WebSocket webSocket;\n \tprivate boolean connected \u003d false;\n \n@@ -96,8 +96,11 @@ public XbmcConnector(XbmcHost xbmc, EventPublisher eventPublisher) {\n \t\tthis.xbmc \u003d xbmc;\n \t\tthis.eventPublisher \u003d eventPublisher;\n \n-\t\trsUri \u003d String.format(\"http://%s:%d/jsonrpc\", xbmc.getHostname(), xbmc.getPort());\n-\t\twsUri \u003d String.format(\"ws://%s:%d/jsonrpc\", xbmc.getHostname(), xbmc.getWSPort());\n+\t\tthis.httpUri \u003d String.format(\"http://%s:%d/jsonrpc\", xbmc.getHostname(), xbmc.getPort());\n+\t\tthis.wsUri \u003d String.format(\"ws://%s:%d/jsonrpc\", xbmc.getHostname(), xbmc.getWSPort());\n+\t\t\n+\t\tthis.client \u003d new AsyncHttpClient(new NettyAsyncHttpProvider(createAsyncHttpClientConfig()));\n+\t\tthis.handler \u003d createWebSocketHandler();\n \t}\n \n \t/***\n@@ -116,29 +119,27 @@ public boolean isConnected() {\n \t * Attempts to create a connection to the XBMC host and begin listening\n \t * for updates over the async http web socket\n \t *  \n-\t * @throws URISyntaxException\n-\t *             If the result of adding protocol and port to the hostname is\n-\t *             not a valid uri\n \t * @throws ExecutionException \n \t * @throws InterruptedException \n \t * @throws IOException \n \t */\n-\tpublic void open() throws URISyntaxException, IOException, InterruptedException, ExecutionException {\n-\t\tAsyncHttpClientConfig config \u003d createAsyncHttpClientConfig();\n-\t\tWebSocketUpgradeHandler handler \u003d createWebSocketHandler();\n+\tpublic void open() throws IOException, InterruptedException, ExecutionException {\n+\t\t// cleanup any existing web socket left over from previous attempts\n+\t\tclose();\n \t\t\n-\t\tclient \u003d new AsyncHttpClient(new NettyAsyncHttpProvider(config));\n+\t\t// attempt to open the web socket connection to the XBMC instance\n \t\twebSocket \u003d client.prepareGet(wsUri).execute(handler).get();\n \t}\n \n \t/***\n \t * Close this connection to the XBMC instance\n \t */\n \tpublic void close() {\n-\t\tif (webSocket !\u003d null) \n+\t\t// if there is an old web socket then clean up and destroy\n+\t\tif (webSocket !\u003d null) { \n \t\t\twebSocket.close();\n-\t\tif (client !\u003d null) \n-\t\t\tclient.close();\n+\t\t\twebSocket \u003d null;\n+\t\t}\n \t}\n \t\t\n \tprivate AsyncHttpClientConfig createAsyncHttpClientConfig() {\n@@ -230,7 +231,7 @@ public void onFragment(String fragment, boolean last) {}\n \t * Send a ping to the XBMC host and wait for a \u0027pong\u0027.\n \t */\n \tpublic void ping() {\n-\t\tfinal JSONRPCPing ping \u003d new JSONRPCPing(client, rsUri);\n+\t\tfinal JSONRPCPing ping \u003d new JSONRPCPing(client, httpUri);\n \t\t\n \t\tping.execute(new Runnable() {\n \t\t\t@Override\n@@ -257,7 +258,7 @@ public void addItem(String itemName, String property) {\n \t}\n \t\n \tpublic void updatePlayerStatus() {\n-\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, rsUri);\n+\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, httpUri);\n \t\t\n \t\tactivePlayers.execute(new Runnable() {\n \t\t\t@Override\n@@ -273,31 +274,31 @@ public void run() {\n \t}\n \n \tpublic void playerPlayPause() {\n-\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, rsUri);\n+\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, httpUri);\n \t\t\n \t\tactivePlayers.execute(new Runnable() {\n \t\t\tpublic void run() {\n-\t\t\t\tPlayerPlayPause playPause \u003d new PlayerPlayPause(client, rsUri);\n+\t\t\t\tPlayerPlayPause playPause \u003d new PlayerPlayPause(client, httpUri);\n \t\t\t\tplayPause.setPlayerId(activePlayers.getPlayerId());\n \t\t\t\tplayPause.execute();\n \t\t\t}\n \t\t});\n \t}\n \t\n \tpublic void playerStop() {\n-\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, rsUri);\n+\t\tfinal PlayerGetActivePlayers activePlayers \u003d new PlayerGetActivePlayers(client, httpUri);\n \t\t\n \t\tactivePlayers.execute(new Runnable() {\n \t\t\tpublic void run() {\n-\t\t\t\tPlayerStop stop \u003d new PlayerStop(client, rsUri);\n+\t\t\t\tPlayerStop stop \u003d new PlayerStop(client, httpUri);\n \t\t\t\tstop.setPlayerId(activePlayers.getPlayerId());\n \t\t\t\tstop.execute();\n \t\t\t}\n \t\t});\n \t}\n \t\n \tpublic void showNotification(String title, String message) {\n-\t\tfinal GUIShowNotification showNotification \u003d new GUIShowNotification(client, rsUri);\n+\t\tfinal GUIShowNotification showNotification \u003d new GUIShowNotification(client, httpUri);\n \t\t\n \t\tshowNotification.setTitle(title);\n \t\tshowNotification.setMessage(message);\n@@ -360,7 +361,7 @@ private void requestPlayerUpdate(int playerId) {\n \t\tfinal List\u003cString\u003e properties \u003d getPlayerProperties();\n \t\t\n \t\t// make the request for the player item details\n-\t\tfinal PlayerGetItem item \u003d new PlayerGetItem(client, rsUri);\n+\t\tfinal PlayerGetItem item \u003d new PlayerGetItem(client, httpUri);\n \t\titem.setPlayerId(playerId);\n \t\titem.setProperties(properties);\n \t\t\n@@ -383,7 +384,7 @@ private void updateFanartUrl(final String property, String imagePath) {\n \t\tif (StringUtils.isEmpty(imagePath))\n \t\t\treturn;\n \t\t\n-\t\tfinal FilesPrepareDownload fanart \u003d new FilesPrepareDownload(client, rsUri);\n+\t\tfinal FilesPrepareDownload fanart \u003d new FilesPrepareDownload(client, httpUri);\n \t\tfanart.setImagePath(imagePath);\n \t\t\n \t\tfanart.execute(new Runnable() {"
        }
      ]
    }
  },
  {
    "name": "memory leak in cz.cuni.mff.been.logging.FilesystemLogStorage$FileOutputHandle#getLineCount()",
    "url": "https://github.com/ever-been/everBeen/issues/20",
    "description": "possible memory leak in cz.cuni.mff.been.logging.FilesystemLogStorage$FileOutputHandle#getLineCount()\nBuffered Reader is never closed\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ever-been/everBeen/commit/fa1dcb62ad6d7f9cbb6317ae8b71cd61df51deba",
      "files": [
        {
          "file_name": "service_interfaces/src/main/java/cz/cuni/mff/been/logging/FilesystemLogStorage.java",
          "patch": "@@ -120,6 +120,7 @@ public long getLineCount() throws RemoteException, IOException {\n \t\t\twhile (r.readLine() !\u003d null) {\n \t\t\t\tcount++;\n \t\t\t}\n+\t\t\tr.close();\n \t\t\treturn count;\n \t\t}\n \t}"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak on orientation change",
    "url": "https://github.com/JoaquimLey/avenging/pull/19",
    "description": "Noticed that when orientation is changed on ListActivity several times, LeakCanary finds a memory leak. Apperantly, RecyclerView in ListFragment leaks ListActivity. When adapter is detached from RecyclerView in onDestroyView(), the memory leak is fixed.\r\n\r\n![device-2016-11-04-010557](https://cloud.githubusercontent.com/assets/3411015/19989202/9bb5e0de-a22d-11e6-9ef0-f8d0705a1264.png)\r\n\r\n\r\n\r\n",
    "keywords": [
      "leak",
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/JoaquimLey/avenging/commit/14670fa46b86d1e7052632c7486bb8e2c90399cf",
      "files": [
        {
          "file_name": "mobile/src/main/java/com/joaquimley/avenging/ui/list/ListFragment.java",
          "patch": "@@ -316,6 +316,12 @@ public boolean onQueryTextChange(String queryText) {\n     }\n \n     @Override\n+    public void onDestroyView() {\n+        mCharactersRecycler.setAdapter(null);\n+        super.onDestroyView();\n+    }\n+\n+    @Override\n     public void onDestroy() {\n         mListPresenter.detachView();\n         super.onDestroy();"
        }
      ]
    }
  },
  {
    "name": "Fixed 5 possible memory leaks ",
    "url": "https://github.com/DV8FromTheWorld/JDA/pull/326",
    "description": "Many thanks to @napstr for help me with these",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/DV8FromTheWorld/JDA/commit/98bfcb963a6a25364f8bbddf210034723415a005",
      "files": [
        {
          "file_name": "src/main/java/net/dv8tion/jda/bot/entities/impl/JDABotImpl.java",
          "patch": "@@ -60,7 +60,7 @@ protected void handleResponse(Response response, Request\u003cApplicationInfo\u003e reques\n                     return;\n                 }\n \n-                ApplicationInfo info \u003d EntityBuilder.get(api).createApplicationInfo(response.getObject());\n+                ApplicationInfo info \u003d api.getEntityBuilder().createApplicationInfo(response.getObject());\n                 JDABotImpl.this.clientId \u003d info.getId();\n                 request.onSuccess(info);\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/entities/impl/JDAClientImpl.java",
          "patch": "@@ -267,7 +267,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cApplication\u003e\u003e requ\n                 {\n                     JSONArray array \u003d response.getArray();\n                     List\u003cApplication\u003e applications \u003d new ArrayList\u003c\u003e(array.length());\n-                    EntityBuilder entityBuilder \u003d EntityBuilder.get(getJDA());\n+                    EntityBuilder entityBuilder \u003d api.getEntityBuilder();\n \n                     for (int i \u003d 0; i \u003c array.length(); i++)\n                         applications.add(entityBuilder.createApplication(array.getJSONObject(i)));\n@@ -294,7 +294,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cApplication\u003e\u003e requ\n             protected void handleResponse(Response response, Request\u003cApplication\u003e request)\n             {\n                 if (response.isOk())\n-                    request.onSuccess(EntityBuilder.get(getJDA()).createApplication(response.getObject()));\n+                    request.onSuccess(api.getEntityBuilder().createApplication(response.getObject()));\n                 else\n                     request.onFailure(response);\n             }\n@@ -314,7 +314,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cAuthorizedApplicat\n                 {\n                     JSONArray array \u003d response.getArray();\n                     List\u003cAuthorizedApplication\u003e applications \u003d new ArrayList\u003c\u003e(array.length());\n-                    EntityBuilder entityBuilder \u003d EntityBuilder.get(getJDA());\n+                    EntityBuilder entityBuilder \u003d api.getEntityBuilder();\n \n                     for (int i \u003d 0; i \u003c array.length(); i++)\n                         applications.add(entityBuilder.createAuthorizedApplication(array.getJSONObject(i)));\n@@ -341,7 +341,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cAuthorizedApplicat\n             protected void handleResponse(Response response, Request\u003cAuthorizedApplication\u003e request)\n             {\n                 if (response.isOk())\n-                    request.onSuccess(EntityBuilder.get(getJDA()).createAuthorizedApplication(response.getObject()));\n+                    request.onSuccess(api.getEntityBuilder().createAuthorizedApplication(response.getObject()));\n                 else\n                     request.onFailure(response);\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/CallCreateHandler.java",
          "patch": "@@ -51,7 +51,7 @@ protected Long handleInternally(JSONObject content)\n             channel \u003d api.getPrivateChannelMap().get(channelId);\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CALL_CREATE for a Group/PrivateChannel that is not yet cached. JSON: \" + content);\n             return null;\n         }\n@@ -108,7 +108,7 @@ protected Long handleInternally(JSONObject content)\n \n             ((JDAClientImpl) api.asClient()).getCallUserMap().put(userId, cUser);\n         }\n-        EventCache.get(api).playbackCache(EventCache.Type.CALL, channelId);\n+        api.getEventCache().playbackCache(EventCache.Type.CALL, channelId);\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/CallDeleteHandler.java",
          "patch": "@@ -44,15 +44,15 @@ protected Long handleInternally(JSONObject content)\n             channel \u003d api.getPrivateChannelMap().get(channelId);\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received CALL_DELETE for a Group/PrivateChannel that is not yet cached. JSON: \" + content);\n             return null;\n         }\n \n         CallImpl call \u003d (CallImpl) channel.getCurrentCall();\n         if (call \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CALL_DELETE for a Call that is not yet cached. JSON: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/CallUpdateHandler.java",
          "patch": "@@ -52,15 +52,15 @@ protected Long handleInternally(JSONObject content)\n             channel \u003d api.getPrivateChannelMap().get(channelId);\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CALL_UPDATE for a Group/PrivateChannel that has not yet been cached. JSON: \" + content);\n             return null;\n         }\n \n         CallImpl call \u003d (CallImpl) channel.getCurrentCall();\n         if (call \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CALL_UPDATE for a Call that has not yet been cached. JSON: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/ChannelRecipientAddHandler.java",
          "patch": "@@ -43,12 +43,12 @@ protected Long handleInternally(JSONObject content)\n         GroupImpl group \u003d (GroupImpl) api.asClient().getGroupById(groupId);\n         if (group \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CHANNEL_RECIPIENT_ADD for a group that is not yet cached! JSON: \" + content);\n             return null;\n         }\n \n-        User user \u003d EntityBuilder.get(api).createFakeUser(userJson, true);\n+        User user \u003d api.getEntityBuilder().createFakeUser(userJson, true);\n         group.getUserMap().put(user.getIdLong(), user);\n \n         CallImpl call \u003d (CallImpl) group.getCurrentCall();\n@@ -62,7 +62,7 @@ protected Long handleInternally(JSONObject content)\n                         api, responseNumber,\n                         group, user));\n \n-        EventCache.get(api).playbackCache(EventCache.Type.USER, user.getIdLong());\n+        api.getEventCache().playbackCache(EventCache.Type.USER, user.getIdLong());\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/ChannelRecipientRemoveHandler.java",
          "patch": "@@ -41,15 +41,15 @@ protected Long handleInternally(JSONObject content)\n         GroupImpl group \u003d (GroupImpl) api.asClient().getGroupById(groupId);\n         if (group \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CHANNEL_RECIPIENT_REMOVE for a group that is not yet cached! JSON: \" + content);\n             return null;\n         }\n \n         User user \u003d group.getUserMap().remove(userId);\n         if (user \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a CHANNEL_RECIPIENT_REMOVE for a user that is not yet cached in the group! JSON: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/RelationshipAddHandler.java",
          "patch": "@@ -38,7 +38,7 @@ public RelationshipAddHandler(JDAImpl api)\n     @Override\n     protected Long handleInternally(JSONObject content)\n     {\n-        Relationship relationship \u003d EntityBuilder.get(api).createRelationship(content);\n+        Relationship relationship \u003d api.getEntityBuilder().createRelationship(content);\n         if (relationship \u003d\u003d null)\n         {\n             WebSocketClient.LOG.warn(\"Received a RELATIONSHIP_ADD with an unknown type! JSON: \" + content);\n@@ -74,8 +74,8 @@ protected Long handleInternally(JSONObject content)\n                 WebSocketClient.LOG.warn(\"Received a RELATIONSHIP_ADD with an unknown type! JSON: \" + content);\n                 return null;\n         }\n-        EventCache.get(api).playbackCache(EventCache.Type.RELATIONSHIP, relationship.getUser().getIdLong());\n-        EventCache.get(api).playbackCache(EventCache.Type.USER, relationship.getUser().getIdLong());\n+        api.getEventCache().playbackCache(EventCache.Type.RELATIONSHIP, relationship.getUser().getIdLong());\n+        api.getEventCache().playbackCache(EventCache.Type.USER, relationship.getUser().getIdLong());\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/handle/RelationshipRemoveHandler.java",
          "patch": "@@ -57,7 +57,7 @@ protected Long handleInternally(JSONObject content)\n         Relationship relationship \u003d api.asClient().getRelationshipById(userId, type);\n         if (relationship \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.RELATIONSHIP, userId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.RELATIONSHIP, userId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a RELATIONSHIP_REMOVE for a relationship that was not yet cached! JSON: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/requests/restaction/ApplicationAction.java",
          "patch": "@@ -67,7 +67,7 @@ protected void handleResponse(final Response response, final Request\u003cApplication\n     {\n         if (response.isOk())\n         {\n-            request.onSuccess(EntityBuilder.get(api).createApplication(response.getObject()));\n+            request.onSuccess(api.getEntityBuilder().createApplication(response.getObject()));\n         }\n         else\n             request.onFailure(response);"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/client/requests/restaction/pagination/MentionPaginationAction.java",
          "patch": "@@ -155,7 +155,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cMessage\u003e\u003e request)\n             return;\n         }\n \n-        EntityBuilder builder \u003d EntityBuilder.get(api);\n+        EntityBuilder builder \u003d api.getEntityBuilder();;\n         List\u003cMessage\u003e mentions \u003d new LinkedList\u003c\u003e();\n         JSONArray arr \u003d response.getArray();\n         for (int i \u003d 0; i \u003c arr.length(); i++)"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/audio/AudioWebSocket.java",
          "patch": "@@ -20,7 +20,6 @@\n import com.neovisionaries.ws.client.WebSocketAdapter;\n import com.neovisionaries.ws.client.WebSocketException;\n import com.neovisionaries.ws.client.WebSocketFrame;\n-import net.dv8tion.jda.core.JDA;\n import net.dv8tion.jda.core.audio.hooks.ConnectionListener;\n import net.dv8tion.jda.core.audio.hooks.ConnectionStatus;\n import net.dv8tion.jda.core.entities.Guild;\n@@ -37,7 +36,6 @@\n import java.net.*;\n import java.nio.ByteBuffer;\n import java.util.Arrays;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.RejectedExecutionException;\n@@ -49,7 +47,6 @@\n public class AudioWebSocket extends WebSocketAdapter\n {\n     public static final SimpleLog LOG \u003d SimpleLog.getLog(\"JDAAudioSocket\");\n-    public static final HashMap\u003cJDA, ScheduledThreadPoolExecutor\u003e KEEP_ALIVE_POOLS \u003d new HashMap\u003c\u003e();\n     public static final int DISCORD_SECRET_KEY_LENGTH \u003d 32;\n \n     public static final int INITIAL_CONNECTION_RESPONSE \u003d 2;\n@@ -92,13 +89,7 @@ public AudioWebSocket(ConnectionListener listener, String endpoint, JDAImpl api,\n         this.token \u003d token;\n         this.shouldReconnect \u003d shouldReconnect;\n \n-        synchronized (KEEP_ALIVE_POOLS)\n-        {\n-            KEEP_ALIVE_POOLS.computeIfAbsent(api, jda -\u003e\n-                    new ScheduledThreadPoolExecutor(1, new KeepAliveThreadFactory(api)));\n-        }\n-\n-        keepAlivePool \u003d KEEP_ALIVE_POOLS.get(api);\n+        keepAlivePool \u003d api.getAudioKeepAlivePool();\n \n         //Append the Secure Websocket scheme so that our websocket library knows how to connect\n         if (!endpoint.startsWith(\"wss://\"))\n@@ -517,7 +508,7 @@ public void setAutoReconnect(boolean shouldReconnect)\n         this.shouldReconnect \u003d shouldReconnect;\n     }\n \n-    private class KeepAliveThreadFactory implements ThreadFactory\n+    public static class KeepAliveThreadFactory implements ThreadFactory\n     {\n         final String identifier;\n         AtomicInteger threadCount \u003d new AtomicInteger(1);"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/EntityBuilder.java",
          "patch": "@@ -50,25 +50,13 @@\n     public static final String MISSING_CHANNEL \u003d \"MISSING_CHANNEL\";\n     public static final String MISSING_USER \u003d \"MISSING_USER\";\n \n-    private static final HashMap\u003cJDA, EntityBuilder\u003e builders \u003d new HashMap\u003c\u003e();\n     private static final Pattern channelMentionPattern \u003d Pattern.compile(\"\u003c#(\\\\d+)\u003e\");\n \n     protected final JDAImpl api;\n     protected final TLongObjectMap\u003cJSONObject\u003e cachedGuildJsons \u003d MiscUtil.newLongMap();\n     protected final TLongObjectMap\u003cConsumer\u003cGuild\u003e\u003e cachedGuildCallbacks \u003d MiscUtil.newLongMap();\n \n-    public static EntityBuilder get(JDA api)\n-    {\n-        EntityBuilder builder \u003d builders.get(api);\n-        if (builder \u003d\u003d null)\n-        {\n-            builder \u003d new EntityBuilder(api);\n-            builders.put(api, builder);\n-        }\n-        return builder;\n-    }\n-\n-    private EntityBuilder(JDA api)\n+    public EntityBuilder(JDA api)\n     {\n         this.api \u003d (JDAImpl) api;\n     }\n@@ -113,7 +101,7 @@ public void createGuildFirstPass(JSONObject guild, Consumer\u003cGuild\u003e secondPassCal\n             // be null.\n             if (secondPassCallback !\u003d null)\n                 secondPassCallback.accept(guildObj);\n-            GuildLock.get(api).lock(id);\n+            api.getGuildLock().lock(id);\n             return;\n         }\n \n@@ -281,7 +269,7 @@ else if (type \u003d\u003d ChannelType.VOICE)\n                 readyHandler.acknowledgeGuild(guildObj, true, true, api.getAccountType() \u003d\u003d AccountType.CLIENT);\n             }\n \n-            GuildLock.get(api).lock(id);\n+            api.getGuildLock().lock(id);\n             return;\n         }\n \n@@ -296,7 +284,7 @@ else if (type \u003d\u003d ChannelType.VOICE)\n         JSONArray voiceStates \u003d guild.getJSONArray(\"voice_states\");\n         createGuildVoiceStatePass(guildObj, voiceStates);\n \n-        GuildLock.get(api).unlock(guildObj.getIdLong());\n+        api.getGuildLock().unlock(guildObj.getIdLong());\n         if (secondPassCallback !\u003d null)\n             secondPassCallback.accept(guildObj);\n     }\n@@ -335,15 +323,15 @@ public void createGuildSecondPass(long guildId, List\u003cJSONArray\u003e memberChunks)\n         createGuildVoiceStatePass(guildObj, voiceStates);\n \n         secondPassCallback.accept(guildObj);\n-        GuildLock.get(api).unlock(guildId);\n+        api.getGuildLock().unlock(guildId);\n     }\n \n     public void handleGuildSync(GuildImpl guild, JSONArray members, JSONArray presences)\n     {\n         for (int i \u003d 0; i \u003c members.length(); i++)\n         {\n             JSONObject memberJson \u003d members.getJSONObject(i);\n-            Member member \u003d createMember(guild, memberJson);\n+            createMember(guild, memberJson);\n         }\n \n         for (int i \u003d 0; i \u003c presences.length(); i++)\n@@ -364,7 +352,7 @@ private void createGuildMemberPass(GuildImpl guildObj, JSONArray members)\n         for (int i \u003d 0; i \u003c members.length(); i++)\n         {\n             JSONObject memberJson \u003d members.getJSONObject(i);\n-            Member member \u003d createMember(guildObj, memberJson);\n+            createMember(guildObj, memberJson);\n         }\n     }\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/MessageChannel.java",
          "patch": "@@ -20,6 +20,7 @@\n import net.dv8tion.jda.core.AccountType;\n import net.dv8tion.jda.core.JDA;\n import net.dv8tion.jda.core.MessageBuilder;\n+import net.dv8tion.jda.core.entities.impl.JDAImpl;\n import net.dv8tion.jda.core.entities.impl.MessageImpl;\n import net.dv8tion.jda.core.exceptions.AccountTypeException;\n import net.dv8tion.jda.core.requests.*;\n@@ -349,7 +350,7 @@ protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             {\n                 if (response.isOk())\n                 {\n-                    Message m \u003d EntityBuilder.get(getJDA()).createMessage(response.getObject(), MessageChannel.this, false);\n+                    Message m \u003d api.getEntityBuilder().createMessage(response.getObject(), MessageChannel.this, false);\n                     request.onSuccess(m);\n                 }\n                 else\n@@ -551,7 +552,7 @@ protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             {\n                 if (response.isOk())\n-                    request.onSuccess(EntityBuilder.get(api).createMessage(response.getObject(), MessageChannel.this, false));\n+                    request.onSuccess(api.getEntityBuilder().createMessage(response.getObject(), MessageChannel.this, false));\n                 else\n                     request.onFailure(response);\n             }\n@@ -628,7 +629,7 @@ protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             {\n                 if (response.isOk())\n-                    request.onSuccess(EntityBuilder.get(api).createMessage(response.getObject(), MessageChannel.this, false));\n+                    request.onSuccess(api.getEntityBuilder().createMessage(response.getObject(), MessageChannel.this, false));\n                 else\n                     request.onFailure(response);\n             }\n@@ -688,7 +689,7 @@ protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             {\n                 if (response.isOk())\n                 {\n-                    Message m \u003d EntityBuilder.get(getJDA()).createMessage(response.getObject(), MessageChannel.this, false);\n+                    Message m \u003d api.getEntityBuilder().createMessage(response.getObject(), MessageChannel.this, false);\n                     request.onSuccess(m);\n                 }\n                 else\n@@ -956,7 +957,7 @@ protected void handleResponse(Response response, Request\u003cMessageHistory\u003e request\n \n                 MessageHistory mHistory \u003d new MessageHistory(MessageChannel.this);\n \n-                EntityBuilder builder \u003d EntityBuilder.get(api);\n+                EntityBuilder builder \u003d api.getEntityBuilder();;\n                 LinkedList\u003cMessage\u003e msgs  \u003d new LinkedList\u003c\u003e();\n                 JSONArray historyJson \u003d response.getArray();\n \n@@ -1587,7 +1588,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cMessage\u003e\u003e request)\n                 if (response.isOk())\n                 {\n                     LinkedList\u003cMessage\u003e pinnedMessages \u003d new LinkedList\u003c\u003e();\n-                    EntityBuilder builder \u003d EntityBuilder.get(getJDA());\n+                    EntityBuilder builder \u003d api.getEntityBuilder();\n                     JSONArray pins \u003d response.getArray();\n \n                     for (int i \u003d 0; i \u003c pins.length(); i++)\n@@ -1720,7 +1721,7 @@ protected void handleResponse(Response response, Request\u003cMessage\u003e request)\n             {\n                 if (response.isOk())\n                 {\n-                    Message m \u003d EntityBuilder.get(api).createMessage(response.getObject(), MessageChannel.this, false);\n+                    Message m \u003d api.getEntityBuilder().createMessage(response.getObject(), MessageChannel.this, false);\n                     request.onSuccess(m);\n                 }\n                 else"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/MessageHistory.java",
          "patch": "@@ -149,7 +149,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cMessage\u003e\u003e request)\n                     return;\n                 }\n \n-                EntityBuilder builder \u003d EntityBuilder.get(api);\n+                EntityBuilder builder \u003d api.getEntityBuilder();;\n                 LinkedList\u003cMessage\u003e msgs  \u003d new LinkedList\u003c\u003e();\n                 JSONArray historyJson \u003d response.getArray();\n \n@@ -226,7 +226,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cMessage\u003e\u003e request)\n                     return;\n                 }\n \n-                EntityBuilder builder \u003d EntityBuilder.get(api);\n+                EntityBuilder builder \u003d api.getEntityBuilder();;\n                 LinkedList\u003cMessage\u003e msgs  \u003d new LinkedList\u003c\u003e();\n                 JSONArray historyJson \u003d response.getArray();\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/EmoteImpl.java",
          "patch": "@@ -47,8 +47,8 @@\n {\n \n     private final long id;\n-    private final Guild guild;\n-    private final JDA api;\n+    private final GuildImpl guild;\n+    private final JDAImpl api;\n     private final HashSet\u003cRole\u003e roles;\n \n     private final Object mngLock \u003d new Object();\n@@ -58,15 +58,15 @@\n     private boolean managed \u003d false;\n     private String name;\n \n-    public EmoteImpl(long id,  Guild guild)\n+    public EmoteImpl(long id, GuildImpl guild)\n     {\n         this.id \u003d id;\n         this.guild \u003d guild;\n         this.api \u003d guild.getJDA();\n         this.roles \u003d new HashSet\u003c\u003e();\n     }\n \n-    public EmoteImpl(long id,  JDA api)\n+    public EmoteImpl(long id, JDAImpl api)\n     {\n         this.id \u003d id;\n         this.api \u003d api;"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/GuildImpl.java",
          "patch": "@@ -141,7 +141,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cWebhook\u003e\u003e request)\n \n                 List\u003cWebhook\u003e webhooks \u003d new LinkedList\u003c\u003e();\n                 JSONArray array \u003d response.getArray();\n-                EntityBuilder builder \u003d EntityBuilder.get(getJDA());\n+                EntityBuilder builder \u003d api.getEntityBuilder();\n \n                 for (Object object : array)\n                 {\n@@ -547,7 +547,7 @@ public AudioManager getAudioManager()\n     }\n \n     @Override\n-    public JDA getJDA()\n+    public JDAImpl getJDA()\n     {\n         return api;\n     }\n@@ -766,7 +766,7 @@ protected void handleResponse(final Response response, final Request\u003cList\u003cInvite\n             {\n                 if (response.isOk())\n                 {\n-                    EntityBuilder entityBuilder \u003d EntityBuilder.get(this.api);\n+                    EntityBuilder entityBuilder \u003d this.api.getEntityBuilder();\n                     JSONArray array \u003d response.getArray();\n                     List\u003cInvite\u003e invites \u003d new ArrayList\u003c\u003e(array.length());\n                     for (int i \u003d 0; i \u003c array.length(); i++)"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/GuildVoiceStateImpl.java",
          "patch": "@@ -16,12 +16,11 @@\n \n package net.dv8tion.jda.core.entities.impl;\n \n-import net.dv8tion.jda.core.JDA;\n import net.dv8tion.jda.core.entities.*;\n \n public class GuildVoiceStateImpl implements GuildVoiceState\n {\n-    private final Guild guild;\n+    private final GuildImpl guild;\n     private final Member member;\n \n     private VoiceChannel connectedChannel;\n@@ -32,7 +31,7 @@\n     private boolean guildDeafened \u003d false;\n     private boolean suppressed \u003d false;\n \n-    public GuildVoiceStateImpl(Guild guild, Member member)\n+    public GuildVoiceStateImpl(GuildImpl guild, Member member)\n     {\n         this.guild \u003d guild;\n         this.member \u003d member;\n@@ -51,7 +50,7 @@ public boolean isSelfDeafened()\n     }\n \n     @Override\n-    public JDA getJDA()\n+    public JDAImpl getJDA()\n     {\n         return guild.getJDA();\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/InviteImpl.java",
          "patch": "@@ -76,7 +76,7 @@ protected void handleResponse(final Response response, final Request\u003cInvite\u003e req\n             {\n                 if (response.isOk())\n                 {\n-                    final Invite invite \u003d EntityBuilder.get(this.api).createInvite(response.getObject());\n+                    final Invite invite \u003d this.api.getEntityBuilder().createInvite(response.getObject());\n                     request.onSuccess(invite);\n                 }\n                 else\n@@ -99,7 +99,7 @@ protected void handleResponse(final Response response, final Request\u003cInvite\u003e req\n             {\n                 if (response.isOk())\n                 {\n-                    final Invite invite \u003d EntityBuilder.get(this.api).createInvite(response.getObject());\n+                    final Invite invite \u003d this.api.getEntityBuilder().createInvite(response.getObject());\n                     request.onSuccess(invite);\n                 }\n                 else\n@@ -149,7 +149,7 @@ protected void handleResponse(final Response response, final Request\u003cInvite\u003e req\n             {\n                 if (response.isOk())\n                 {\n-                    final EntityBuilder entityBuilder \u003d EntityBuilder.get(this.api);\n+                    final EntityBuilder entityBuilder \u003d this.api.getEntityBuilder();\n                     final JSONArray array \u003d response.getArray();\n                     for (int i \u003d 0; i \u003c array.length(); i++)\n                     {"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/JDAImpl.java",
          "patch": "@@ -32,6 +32,7 @@\n import net.dv8tion.jda.core.events.StatusChangeEvent;\n import net.dv8tion.jda.core.exceptions.AccountTypeException;\n import net.dv8tion.jda.core.exceptions.RateLimitedException;\n+import net.dv8tion.jda.core.handle.EventCache;\n import net.dv8tion.jda.core.hooks.IEventManager;\n import net.dv8tion.jda.core.hooks.InterfacedEventManager;\n import net.dv8tion.jda.core.managers.AudioManager;\n@@ -49,6 +50,7 @@\n import java.util.*;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n import java.util.concurrent.ThreadFactory;\n import java.util.stream.Collectors;\n \n@@ -76,17 +78,22 @@\n     protected final JDAClient jdaClient;\n     protected final JDABot jdaBot;\n     protected final int maxReconnectDelay;\n+    protected final Thread shutdownHook;\n+    protected final EntityBuilder entityBuilder \u003d new EntityBuilder(this);\n+    protected final EventCache eventCache \u003d new EventCache();\n+    protected final GuildLock guildLock \u003d new GuildLock(this);\n+    protected final Object akapLock \u003d new Object();\n \n     protected WebSocketClient client;\n     protected Requester requester;\n     protected IEventManager eventManager \u003d new InterfacedEventManager();\n     protected IAudioSendFactory audioSendFactory \u003d new DefaultSendFactory();\n+    protected ScheduledThreadPoolExecutor audioKeepAlivePool;\n     protected Status status \u003d Status.INITIALIZING;\n     protected SelfUser selfUser;\n     protected ShardInfo shardInfo;\n     protected String token \u003d null;\n     protected boolean audioEnabled;\n-    protected boolean useShutdownHook;\n     protected boolean bulkDeleteSplittingEnabled;\n     protected boolean autoReconnect;\n     protected long responseTotal;\n@@ -103,7 +110,7 @@ public JDAImpl(AccountType accountType, HttpHost proxy, WebSocketFactory wsFacto\n         this.wsFactory \u003d wsFactory;\n         this.autoReconnect \u003d autoReconnect;\n         this.audioEnabled \u003d audioEnabled;\n-        this.useShutdownHook \u003d useShutdownHook;\n+        this.shutdownHook \u003d useShutdownHook ? new Thread(() -\u003e JDAImpl.this.shutdown(true), \"JDA Shutdown Hook\") : null;\n         this.bulkDeleteSplittingEnabled \u003d bulkDeleteSplittingEnabled;\n         this.pool \u003d Executors.newScheduledThreadPool(corePoolSize, new JDAThreadFactory());\n         this.maxReconnectDelay \u003d maxReconnectDelay;\n@@ -125,16 +132,9 @@ public void login(String token, ShardInfo shardInfo) throws LoginException, Rate\n \n         client \u003d new WebSocketClient(this);\n \n-        if (useShutdownHook)\n+        if (shutdownHook !\u003d null)\n         {\n-            Runtime.getRuntime().addShutdownHook(new Thread(\"JDA Shutdown Hook\")\n-            {\n-                @Override\n-                public void run()\n-                {\n-                    JDAImpl.this.shutdown(true);\n-                }\n-            });\n+            Runtime.getRuntime().addShutdownHook(shutdownHook);\n         }\n     }\n \n@@ -384,7 +384,7 @@ protected void handleResponse(Response response, Request\u003cUser\u003e request)\n                     return;\n                 }\n                 JSONObject user \u003d response.getObject();\n-                request.onSuccess(EntityBuilder.get(api).createFakeUser(user, false));\n+                request.onSuccess(getEntityBuilder().createFakeUser(user, false));\n             }\n         };\n     }\n@@ -575,13 +575,25 @@ public void shutdown(boolean free)\n     {\n         setStatus(Status.SHUTTING_DOWN);\n         audioManagers.valueCollection().forEach(AudioManager::closeAudioConnection);\n-        if (AudioWebSocket.KEEP_ALIVE_POOLS.containsKey(this))\n-            AudioWebSocket.KEEP_ALIVE_POOLS.get(this).shutdownNow();\n+        if (audioKeepAlivePool !\u003d null)\n+            audioKeepAlivePool.shutdownNow();\n         getClient().setAutoReconnect(false);\n         getClient().close();\n         getRequester().shutdown();\n         pool.shutdown();\n \n+        if (shutdownHook !\u003d null)\n+        {\n+            try\n+            {\n+                Runtime.getRuntime().removeShutdownHook(shutdownHook);\n+            }\n+            catch (Exception e)\n+            {\n+                e.printStackTrace();\n+            }\n+        }\n+\n         if (free)\n         {\n             try\n@@ -673,6 +685,16 @@ public void removeEventListener(Object... listeners)\n         return Collections.unmodifiableList(eventManager.getRegisteredListeners());\n     }\n \n+    public EntityBuilder getEntityBuilder()\n+    {\n+        return entityBuilder;\n+    }\n+\n+    public GuildLock getGuildLock()\n+    {\n+        return this.guildLock;\n+    }\n+\n     public IAudioSendFactory getAudioSendFactory()\n     {\n         return audioSendFactory;\n@@ -777,4 +799,24 @@ public Thread newThread(Runnable r)\n             return thread;\n         }\n     }\n+\n+    public ScheduledThreadPoolExecutor getAudioKeepAlivePool()\n+    {\n+        ScheduledThreadPoolExecutor akap \u003d audioKeepAlivePool;\n+        if (akap \u003d\u003d null)\n+        {\n+            synchronized (akapLock)\n+            {\n+                akap \u003d audioKeepAlivePool;\n+                if (akap \u003d\u003d null)\n+                    akap \u003d audioKeepAlivePool \u003d new ScheduledThreadPoolExecutor(1, new AudioWebSocket.KeepAliveThreadFactory(this));\n+            }\n+        }\n+        return akap;\n+    }\n+\n+    public EventCache getEventCache()\n+    {\n+        return eventCache;\n+    }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/MemberImpl.java",
          "patch": "@@ -29,7 +29,7 @@\n \n public class MemberImpl implements Member\n {\n-    private final Guild guild;\n+    private final GuildImpl guild;\n     private final User user;\n     private final HashSet\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();\n     private final GuildVoiceState voiceState;\n@@ -39,7 +39,7 @@\n     private Game game;\n     private OnlineStatus onlineStatus \u003d OnlineStatus.OFFLINE;\n \n-    public MemberImpl(Guild guild, User user)\n+    public MemberImpl(GuildImpl guild, User user)\n     {\n         this.guild \u003d guild;\n         this.user \u003d user;"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/TextChannelImpl.java",
          "patch": "@@ -133,7 +133,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cWebhook\u003e\u003e request)\n \n                 List\u003cWebhook\u003e webhooks \u003d new LinkedList\u003c\u003e();\n                 JSONArray array \u003d response.getArray();\n-                EntityBuilder builder \u003d EntityBuilder.get(getJDA());\n+                EntityBuilder builder \u003d api.getEntityBuilder();\n \n                 for (Object object : array)\n                 {\n@@ -622,7 +622,7 @@ protected void handleResponse(final Response response, final Request\u003cList\u003cInvite\n             {\n                 if (response.isOk())\n                 {\n-                    EntityBuilder entityBuilder \u003d EntityBuilder.get(this.api);\n+                    EntityBuilder entityBuilder \u003d this.api.getEntityBuilder();\n                     JSONArray array \u003d response.getArray();\n                     List\u003cInvite\u003e invites \u003d new ArrayList\u003c\u003e(array.length());\n                     for (int i \u003d 0; i \u003c array.length(); i++)"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/UserImpl.java",
          "patch": "@@ -17,7 +17,6 @@\n package net.dv8tion.jda.core.entities.impl;\n \n import net.dv8tion.jda.core.JDA;\n-import net.dv8tion.jda.core.entities.EntityBuilder;\n import net.dv8tion.jda.core.entities.Guild;\n import net.dv8tion.jda.core.entities.PrivateChannel;\n import net.dv8tion.jda.core.entities.User;\n@@ -118,7 +117,7 @@ protected void handleResponse(Response response, Request\u003cPrivateChannel\u003e request\n             {\n                 if (response.isOk())\n                 {\n-                    PrivateChannel priv \u003d EntityBuilder.get(api).createPrivateChannel(response.getObject());\n+                    PrivateChannel priv \u003d api.getEntityBuilder().createPrivateChannel(response.getObject());\n                     UserImpl.this.privateChannel \u003d priv;\n                     request.onSuccess(priv);\n                 }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/entities/impl/VoiceChannelImpl.java",
          "patch": "@@ -347,7 +347,7 @@ protected void handleResponse(final Response response, final Request\u003cList\u003cInvite\n             {\n                 if (response.isOk())\n                 {\n-                    EntityBuilder entityBuilder \u003d EntityBuilder.get(this.api);\n+                    EntityBuilder entityBuilder \u003d this.api.getEntityBuilder();\n                     JSONArray array \u003d response.getArray();\n                     List\u003cInvite\u003e invites \u003d new ArrayList\u003c\u003e(array.length());\n                     for (int i \u003d 0; i \u003c array.length(); i++)"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/ChannelCreateHandler.java",
          "patch": "@@ -42,7 +42,7 @@ protected Long handleInternally(JSONObject content)\n         if (type.isGuild())\n         {\n             guildId \u003d content.getLong(\"guild_id\");\n-            if (GuildLock.get(api).isLocked(guildId))\n+            if (api.getGuildLock().isLocked(guildId))\n                 return guildId;\n         }\n \n@@ -53,37 +53,37 @@ protected Long handleInternally(JSONObject content)\n                 api.getEventManager().handle(\n                         new TextChannelCreateEvent(\n                                 api, responseNumber,\n-                                EntityBuilder.get(api).createTextChannel(content, guildId)));\n+                                api.getEntityBuilder().createTextChannel(content, guildId)));\n                 break;\n             }\n             case VOICE:\n             {\n                 api.getEventManager().handle(\n                         new VoiceChannelCreateEvent(\n                                 api, responseNumber,\n-                                EntityBuilder.get(api).createVoiceChannel(content, guildId)));\n+                                api.getEntityBuilder().createVoiceChannel(content, guildId)));\n                 break;\n             }\n             case PRIVATE:\n             {\n                 api.getEventManager().handle(\n                         new PrivateChannelCreateEvent(\n                                 api, responseNumber,\n-                                EntityBuilder.get(api).createPrivateChannel(content)));\n+                                api.getEntityBuilder().createPrivateChannel(content)));\n                 break;\n             }\n             case GROUP:\n             {\n                 api.getEventManager().handle(\n                         new GroupJoinEvent(\n                                 api, responseNumber,\n-                                EntityBuilder.get(api).createGroup(content)));\n+                                api.getEntityBuilder().createGroup(content)));\n                 break;\n             }\n             default:\n                 throw new IllegalArgumentException(\"Discord provided an CREATE_CHANNEL event with an unknown channel type! JSON: \" + content);\n         }\n-        EventCache.get(api).playbackCache(EventCache.Type.CHANNEL, content.getLong(\"id\"));\n+        api.getEventCache().playbackCache(EventCache.Type.CHANNEL, content.getLong(\"id\"));\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/ChannelDeleteHandler.java",
          "patch": "@@ -50,7 +50,7 @@ protected Long handleInternally(JSONObject content)\n         if (type.isGuild())\n         {\n             guildId \u003d content.getLong(\"guild_id\");\n-            if (GuildLock.get(api).isLocked(guildId))\n+            if (api.getGuildLock().isLocked(guildId))\n                 return guildId;\n         }\n \n@@ -64,7 +64,7 @@ protected Long handleInternally(JSONObject content)\n                 TextChannel channel \u003d api.getTextChannelMap().remove(channelId);\n                 if (channel \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_DELETE attempted to delete a text channel that is not yet cached. JSON: \" + content);\n                     return null;\n                 }\n@@ -82,7 +82,7 @@ protected Long handleInternally(JSONObject content)\n                 VoiceChannel channel \u003d guild.getVoiceChannelMap().remove(channelId);\n                 if (channel \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_DELETE attempted to delete a voice channel that is not yet cached. JSON: \" + content);\n                     return null;\n                 }\n@@ -109,7 +109,7 @@ protected Long handleInternally(JSONObject content)\n                     channel \u003d api.getFakePrivateChannelMap().remove(channelId);\n                 if (channel \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_DELETE attempted to delete a private channel that is not yet cached. JSON: \" + content);\n                     return null;\n                 }\n@@ -132,7 +132,7 @@ protected Long handleInternally(JSONObject content)\n                 GroupImpl group \u003d (GroupImpl) ((JDAClientImpl) api.asClient()).getGroupMap().remove(groupId);\n                 if (group \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_DELETE attempted to delete a group that is not yet cached. JSON: \" + content);\n                     return null;\n                 }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/ChannelUpdateHandler.java",
          "patch": "@@ -70,7 +70,7 @@ protected Long handleInternally(JSONObject content)\n                 TextChannelImpl channel \u003d (TextChannelImpl) api.getTextChannelMap().get(channelId);\n                 if (channel \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_UPDATE attempted to update a TextChannel that does not exist. JSON: \" + content);\n                     return null;\n                 }\n@@ -145,7 +145,7 @@ protected Long handleInternally(JSONObject content)\n                 int bitrate \u003d content.getInt(\"bitrate\");\n                 if (channel \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"CHANNEL_UPDATE attempted to update a VoiceChannel that does not exist. JSON: \" + content);\n                     return null;\n                 }\n@@ -241,7 +241,7 @@ private void handlePermissionOverride(JSONObject override, Channel channel, JSON\n                 Role role \u003d ((GuildImpl) channel.getGuild()).getRolesMap().get(id);\n                 if (role \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.ROLE, id, () -\u003e\n+                    api.getEventCache().cache(EventCache.Type.ROLE, id, () -\u003e\n                     {\n                         handlePermissionOverride(override, channel, content, changedRoles, containedRoles, changedMembers, containedMembers);\n                     });\n@@ -257,7 +257,7 @@ private void handlePermissionOverride(JSONObject override, Channel channel, JSON\n \n                 if (permOverride \u003d\u003d null)    //Created\n                 {\n-                    EntityBuilder.get(api).createPermissionOverride(override, channel);\n+                    api.getEntityBuilder().createPermissionOverride(override, channel);\n                     changedRoles.add(role);\n                 }\n                 else if (permOverride.getAllowedRaw() !\u003d allow || permOverride.getDeniedRaw() !\u003d deny) //Updated\n@@ -274,7 +274,7 @@ else if (permOverride.getAllowedRaw() !\u003d allow || permOverride.getDeniedRaw() !\u003d\n                 Member member \u003d channel.getGuild().getMemberById(override.getLong(\"id\"));\n                 if (member \u003d\u003d null)\n                 {\n-                    EventCache.get(api).cache(EventCache.Type.USER, id, () -\u003e\n+                    api.getEventCache().cache(EventCache.Type.USER, id, () -\u003e\n                     {\n                         handlePermissionOverride(override, channel, content, changedRoles, containedRoles, changedMembers, containedMembers);\n                     });\n@@ -290,7 +290,7 @@ else if (permOverride.getAllowedRaw() !\u003d allow || permOverride.getDeniedRaw() !\u003d\n \n                 if (permOverride \u003d\u003d null)    //Created\n                 {\n-                    EntityBuilder.get(api).createPermissionOverride(override, channel);\n+                    api.getEntityBuilder().createPermissionOverride(override, channel);\n                     changedMembers.add(member);\n                 }\n                 else if (permOverride.getAllowedRaw() !\u003d allow || permOverride.getDeniedRaw() !\u003d deny)  //Updated\n@@ -317,7 +317,7 @@ private void handleGroup(JSONObject content)\n         GroupImpl group \u003d (GroupImpl) api.asClient().getGroupById(groupId);\n         if (group \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, groupId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received CHANNEL_UPDATE for a group that was not yet cached. JSON: \" + content);\n             return;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/EventCache.java",
          "patch": "@@ -17,7 +17,6 @@\n \n import gnu.trove.map.TLongObjectMap;\n import gnu.trove.map.hash.TLongObjectHashMap;\n-import net.dv8tion.jda.core.JDA;\n import net.dv8tion.jda.core.utils.SimpleLog;\n \n import java.util.HashMap;\n@@ -28,14 +27,8 @@\n public class EventCache\n {\n     public static final SimpleLog LOG \u003d SimpleLog.getLog(\"EventCache\");\n-    private static Map\u003cJDA, EventCache\u003e caches \u003d new HashMap\u003c\u003e();\n     private Map\u003cType, TLongObjectMap\u003cList\u003cRunnable\u003e\u003e\u003e eventCache \u003d new HashMap\u003c\u003e();\n \n-    public static EventCache get(JDA jda)\n-    {\n-        return caches.computeIfAbsent(jda, k -\u003e new EventCache());\n-    }\n-\n     public void cache(Type type, long triggerId, Runnable handler)\n     {\n         TLongObjectMap\u003cList\u003cRunnable\u003e\u003e triggerCache \u003d"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildBanHandler.java",
          "patch": "@@ -38,22 +38,22 @@ public GuildBanHandler(JDAImpl api, boolean banned)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long id \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         JSONObject userJson \u003d content.getJSONObject(\"user\");\n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(id);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, id, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, id, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n             EventCache.LOG.debug(\"Received Guild Member \" + (banned ? \"Ban\" : \"Unban\") + \" event for a Guild not yet cached.\");\n             return null;\n         }\n \n-        User user \u003d EntityBuilder.get(api).createFakeUser(userJson, false);\n+        User user \u003d api.getEntityBuilder().createFakeUser(userJson, false);\n \n         if (banned)\n         {"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildCreateHandler.java",
          "patch": "@@ -36,7 +36,7 @@ protected Long handleInternally(JSONObject content)\n     {\n         Guild g \u003d api.getGuildById(content.getLong(\"id\"));\n         Boolean wasAvail \u003d (g \u003d\u003d null || g.getName() \u003d\u003d null) ? null : g.isAvailable();\n-        EntityBuilder.get(api).createGuildFirstPass(content, guild -\u003e\n+        api.getEntityBuilder().createGuildFirstPass(content, guild -\u003e\n         {\n             if (guild.isAvailable())\n             {\n@@ -52,7 +52,7 @@ protected Long handleInternally(JSONObject content)\n                                 new GuildJoinEvent(\n                                         api, responseNumber,\n                                         guild));\n-                        EventCache.get(api).playbackCache(EventCache.Type.GUILD, guild.getIdLong());\n+                        api.getEventCache().playbackCache(EventCache.Type.GUILD, guild.getIdLong());\n                     }\n                     else if (!wasAvail)                     //was previously unavailable\n                     {"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildDeleteHandler.java",
          "patch": "@@ -55,7 +55,7 @@ protected Long handleInternally(JSONObject content)\n         if ((guild \u003d\u003d null || !guild.isAvailable()) \u0026\u0026 content.has(\"unavailable\") \u0026\u0026 content.getBoolean(\"unavailable\"))\n             return null;\n \n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         AudioManagerImpl manager \u003d (AudioManagerImpl) api.getAudioManagerMap().get(guild.getIdLong());"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildEmojisUpdateHandler.java",
          "patch": "@@ -44,13 +44,13 @@ public GuildEmojisUpdateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long guildId \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(guildId))\n+        if (api.getGuildLock().isLocked(guildId))\n             return guildId;\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(guildId);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, guildId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, guildId, () -\u003e\n                     handle(responseNumber, allContent));\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildMemberAddHandler.java",
          "patch": "@@ -35,25 +35,25 @@ public GuildMemberAddHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long id \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(id);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, id, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, id, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n             return null;\n         }\n \n-        Member member \u003d EntityBuilder.get(api).createMember(guild, content);\n+        Member member \u003d api.getEntityBuilder().createMember(guild, content);\n         api.getEventManager().handle(\n                 new GuildMemberJoinEvent(\n                         api, responseNumber,\n                         guild, member));\n-        EventCache.get(api).playbackCache(EventCache.Type.USER, member.getUser().getIdLong());\n+        api.getEventCache().playbackCache(EventCache.Type.USER, member.getUser().getIdLong());\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildMemberRemoveHandler.java",
          "patch": "@@ -37,7 +37,7 @@ public GuildMemberRemoveHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long id \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(id);"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildMemberUpdateHandler.java",
          "patch": "@@ -44,15 +44,15 @@ public GuildMemberUpdateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long id \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         JSONObject userJson \u003d content.getJSONObject(\"user\");\n         final long userId \u003d userJson.getLong(\"id\");\n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(id);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, userId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, userId, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n@@ -63,7 +63,7 @@ protected Long handleInternally(JSONObject content)\n         MemberImpl member \u003d (MemberImpl) guild.getMembersMap().get(userId);\n         if (member \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n@@ -145,7 +145,7 @@ protected Long handleInternally(JSONObject content)\n             }\n             else\n             {\n-                EventCache.get(api).cache(EventCache.Type.ROLE, id, () -\u003e\n+                api.getEventCache().cache(EventCache.Type.ROLE, id, () -\u003e\n                 {\n                     handle(responseNumber, allContent);\n                 });"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildMembersChunkHandler.java",
          "patch": "@@ -58,7 +58,7 @@ protected Long handleInternally(JSONObject content)\n         if (currentTotal \u003e\u003d expectMemberCount)\n         {\n             JDAImpl.LOG.debug(\"Finished chunking for: \" + guildId);\n-            EntityBuilder.get(api).createGuildSecondPass(guildId, memberChunks);\n+            api.getEntityBuilder().createGuildSecondPass(guildId, memberChunks);\n             memberChunksCache.remove(guildId);\n             expectedGuildMembers.remove(guildId);\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildRoleCreateHandler.java",
          "patch": "@@ -35,28 +35,28 @@ public GuildRoleCreateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long guildId \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(guildId))\n+        if (api.getGuildLock().isLocked(guildId))\n         {\n             return guildId;\n         }\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(guildId);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, guildId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, guildId, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n             EventCache.LOG.debug(\"GUILD_ROLE_CREATE was received for a Guild that is not yet cached: \" + content);\n             return null;\n         }\n \n-        Role newRole \u003d EntityBuilder.get(api).createRole(content.getJSONObject(\"role\"), guild.getIdLong());\n+        Role newRole \u003d api.getEntityBuilder().createRole(content.getJSONObject(\"role\"), guild.getIdLong());\n         api.getEventManager().handle(\n                 new RoleCreateEvent(\n                         api, responseNumber,\n                         newRole));\n-        EventCache.get(api).playbackCache(EventCache.Type.ROLE, newRole.getIdLong());\n+        api.getEventCache().playbackCache(EventCache.Type.ROLE, newRole.getIdLong());\n         return null;\n     }\n }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildRoleDeleteHandler.java",
          "patch": "@@ -36,13 +36,13 @@ public GuildRoleDeleteHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long guildId \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(guildId))\n+        if (api.getGuildLock().isLocked(guildId))\n             return guildId;\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(guildId);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, guildId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.GUILD, guildId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"GUILD_ROLE_DELETE was received for a Guild that is not yet cached: \" + content);\n             return null;\n         }\n@@ -51,7 +51,7 @@ protected Long handleInternally(JSONObject content)\n         Role removedRole \u003d guild.getRolesMap().remove(roleId);\n         if (removedRole \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.ROLE, roleId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.ROLE, roleId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"GUILD_ROLE_DELETE was received for a Role that is not yet cached: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildRoleUpdateHandler.java",
          "patch": "@@ -36,14 +36,14 @@ public GuildRoleUpdateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long guildId \u003d content.getLong(\"guild_id\");\n-        if (GuildLock.get(api).isLocked(guildId))\n+        if (api.getGuildLock().isLocked(guildId))\n             return guildId;\n \n         JSONObject rolejson \u003d content.getJSONObject(\"role\");\n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(guildId);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, guildId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.GUILD, guildId, () -\u003e\n                     handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a Role Update for a Guild that is not yet cached: \" + content);\n             return null;\n@@ -53,7 +53,7 @@ protected Long handleInternally(JSONObject content)\n         RoleImpl role \u003d (RoleImpl) guild.getRolesMap().get(roleId);\n         if (role \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.ROLE, roleId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.ROLE, roleId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a Role Update for Role that is not yet cached: \" + content);\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildSyncHandler.java",
          "patch": "@@ -42,7 +42,7 @@ protected Long handleInternally(JSONObject content)\n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(guildId);\n         JSONArray members \u003d content.getJSONArray(\"members\");\n         JSONArray presences \u003d content.getJSONArray(\"presences\");\n-        EntityBuilder.get(api).handleGuildSync(guild, members, presences);\n+        api.getEntityBuilder().handleGuildSync(guild, members, presences);\n \n         return null;\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/GuildUpdateHandler.java",
          "patch": "@@ -39,7 +39,7 @@ public GuildUpdateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final long id \u003d content.getLong(\"id\");\n-        if (GuildLock.get(api).isLocked(id))\n+        if (api.getGuildLock().isLocked(id))\n             return id;\n \n         GuildImpl guild \u003d (GuildImpl) api.getGuildMap().get(id);"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageBulkDeleteHandler.java",
          "patch": "@@ -52,12 +52,12 @@ protected Long handleInternally(JSONObject content)\n             TextChannel channel \u003d api.getTextChannelMap().get(channelId);\n             if (channel \u003d\u003d null)\n             {\n-                EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                 EventCache.LOG.debug(\"Received a Bulk Message Delete for a TextChannel that is not yet cached.\");\n                 return null;\n             }\n \n-            if (GuildLock.get(api).isLocked(channel.getGuild().getIdLong()))\n+            if (api.getGuildLock().isLocked(channel.getGuild().getIdLong()))\n             {\n                 return channel.getGuild().getIdLong();\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageCreateHandler.java",
          "patch": "@@ -59,7 +59,7 @@ private Long handleDefaultMessage(JSONObject content)\n         Message message;\n         try\n         {\n-            message \u003d EntityBuilder.get(api).createMessage(content, true);\n+            message \u003d api.getEntityBuilder().createMessage(content, true);\n         }\n         catch (IllegalArgumentException e)\n         {\n@@ -68,14 +68,14 @@ private Long handleDefaultMessage(JSONObject content)\n                 case EntityBuilder.MISSING_CHANNEL:\n                 {\n                     final long channelId \u003d content.getLong(\"channel_id\");\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"Received a message for a channel that JDA does not currently have cached\");\n                     return null;\n                 }\n                 case EntityBuilder.MISSING_USER:\n                 {\n                     final long authorId \u003d content.getJSONObject(\"author\").getLong(\"id\");\n-                    EventCache.get(api).cache(EventCache.Type.USER, authorId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.USER, authorId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"Received a message for a user that JDA does not currently have cached\");\n                     return null;\n                 }\n@@ -89,7 +89,7 @@ private Long handleDefaultMessage(JSONObject content)\n             case TEXT:\n             {\n                 TextChannelImpl channel \u003d (TextChannelImpl) message.getTextChannel();\n-                if (GuildLock.get(api).isLocked(channel.getGuild().getIdLong()))\n+                if (api.getGuildLock().isLocked(channel.getGuild().getIdLong()))\n                 {\n                     return channel.getGuild().getIdLong();\n                 }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageDeleteHandler.java",
          "patch": "@@ -59,15 +59,15 @@ protected Long handleInternally(JSONObject content)\n         }\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Got message delete for a channel/group that is not yet cached. ChannelId: \" + channelId);\n             return null;\n         }\n \n         if (channel instanceof TextChannel)\n         {\n             TextChannelImpl tChan \u003d (TextChannelImpl) channel;\n-            if (GuildLock.get(api).isLocked(tChan.getGuild().getIdLong()))\n+            if (api.getGuildLock().isLocked(tChan.getGuild().getIdLong()))\n             {\n                 return tChan.getGuild().getIdLong();\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageReactionBulkRemoveHandler.java",
          "patch": "@@ -56,7 +56,7 @@ protected Long handleInternally(JSONObject content)\n         }\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a reaction for a channel that JDA does not currently have cached\");\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageReactionHandler.java",
          "patch": "@@ -69,7 +69,7 @@ protected Long handleInternally(JSONObject content)\n             user \u003d api.getFakeUserMap().get(userId);\n         if (user \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a reaction for a user that JDA does not currently have cached\");\n             return null;\n         }\n@@ -89,7 +89,7 @@ protected Long handleInternally(JSONObject content)\n         }\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a reaction for a channel that JDA does not currently have cached\");\n             return null;\n         }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/MessageUpdateHandler.java",
          "patch": "@@ -81,7 +81,7 @@ private Long handleDefaultMessage(JSONObject content)\n         Message message;\n         try\n         {\n-            message \u003d EntityBuilder.get(api).createMessage(content);\n+            message \u003d api.getEntityBuilder().createMessage(content);\n         }\n         catch (IllegalArgumentException e)\n         {\n@@ -90,14 +90,14 @@ private Long handleDefaultMessage(JSONObject content)\n                 case EntityBuilder.MISSING_CHANNEL:\n                 {\n                     final long channelId \u003d content.getLong(\"channel_id\");\n-                    EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"Received a message update for a channel that JDA does not currently have cached\");\n                     return null;\n                 }\n                 case EntityBuilder.MISSING_USER:\n                 {\n                     final long authorId \u003d content.getJSONObject(\"author\").getLong(\"id\");\n-                    EventCache.get(api).cache(EventCache.Type.USER, authorId, () -\u003e handle(responseNumber, allContent));\n+                    api.getEventCache().cache(EventCache.Type.USER, authorId, () -\u003e handle(responseNumber, allContent));\n                     EventCache.LOG.debug(\"Received a message update for a user that JDA does not currently have cached\");\n                     return null;\n                 }\n@@ -111,7 +111,7 @@ private Long handleDefaultMessage(JSONObject content)\n             case TEXT:\n             {\n                 TextChannel channel \u003d message.getTextChannel();\n-                if (GuildLock.get(api).isLocked(channel.getGuild().getIdLong()))\n+                if (api.getGuildLock().isLocked(channel.getGuild().getIdLong()))\n                 {\n                     return channel.getGuild().getIdLong();\n                 }\n@@ -152,7 +152,7 @@ private Long handleDefaultMessage(JSONObject content)\n \n     private Long handleMessageEmbed(JSONObject content)\n     {\n-        EntityBuilder builder \u003d EntityBuilder.get(api);\n+        EntityBuilder builder \u003d api.getEntityBuilder();;\n         final long messageId \u003d content.getLong(\"id\");\n         final long channelId \u003d content.getLong(\"channel_id\");\n         LinkedList\u003cMessageEmbed\u003e embeds \u003d new LinkedList\u003c\u003e();\n@@ -165,7 +165,7 @@ private Long handleMessageEmbed(JSONObject content)\n             channel \u003d api.asClient().getGroupById(channelId);\n         if (channel \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e\n             {\n                 handle(responseNumber, allContent);\n             });\n@@ -182,7 +182,7 @@ private Long handleMessageEmbed(JSONObject content)\n         if (channel instanceof TextChannel)\n         {\n             TextChannel tChannel \u003d (TextChannel) channel;\n-            if (GuildLock.get(api).isLocked(tChannel.getGuild().getIdLong()))\n+            if (api.getGuildLock().isLocked(tChannel.getGuild().getIdLong()))\n             {\n                 return tChannel.getGuild().getIdLong();\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/PresenceUpdateHandler.java",
          "patch": "@@ -41,7 +41,7 @@ protected Long handleInternally(JSONObject content)\n         if (content.has(\"guild_id\"))\n         {\n             final long guildId \u003d content.getLong(\"guild_id\");\n-            if (GuildLock.get(api).isLocked(guildId))\n+            if (api.getGuildLock().isLocked(guildId))\n                 return guildId;\n         }\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/ReadyHandler.java",
          "patch": "@@ -49,7 +49,7 @@ public ReadyHandler(JDAImpl api)\n     @Override\n     protected Long handleInternally(JSONObject content)\n     {\n-        EntityBuilder builder \u003d EntityBuilder.get(api);\n+        EntityBuilder builder \u003d api.getEntityBuilder();;\n \n         //Core\n         JSONArray guilds \u003d content.getJSONArray(\"guilds\");\n@@ -112,7 +112,7 @@ protected Long handleInternally(JSONObject content)\n     public void guildLoadComplete(JSONObject content)\n     {\n         api.getClient().setChunkingAndSyncing(false);\n-        EntityBuilder builder \u003d EntityBuilder.get(api);\n+        EntityBuilder builder \u003d api.getEntityBuilder();;\n         JSONArray privateChannels \u003d content.getJSONArray(\"private_channels\");\n \n         if (api.getAccountType() \u003d\u003d AccountType.CLIENT)"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/SocketHandler.java",
          "patch": "@@ -37,7 +37,7 @@ public final void handle(long responseTotal, JSONObject o)\n         this.responseNumber \u003d responseTotal;\n         final Long guildId \u003d handleInternally(o.getJSONObject(\"d\"));\n         if (guildId !\u003d null)\n-            GuildLock.get(api).queue(guildId, o);\n+            api.getGuildLock().queue(guildId, o);\n     }\n \n     /**"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/TypingStartHandler.java",
          "patch": "@@ -58,7 +58,7 @@ protected Long handleInternally(JSONObject content)\n         if (channel instanceof TextChannel)\n         {\n             final long guildId \u003d ((TextChannel) channel).getGuild().getIdLong();\n-            if (GuildLock.get(api).isLocked(guildId))\n+            if (api.getGuildLock().isLocked(guildId))\n                 return guildId;\n         }\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/VoiceServerUpdateHandler.java",
          "patch": "@@ -41,7 +41,7 @@ protected Long handleInternally(JSONObject content)\n         final long guildId \u003d content.getLong(\"guild_id\");\n         api.getClient().getQueuedAudioConnectionMap().remove(guildId);\n \n-        if (GuildLock.get(api).isLocked(guildId))\n+        if (api.getGuildLock().isLocked(guildId))\n             return guildId;\n \n         if (content.isNull(\"endpoint\"))"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/handle/VoiceStateUpdateHandler.java",
          "patch": "@@ -50,7 +50,7 @@ public VoiceStateUpdateHandler(JDAImpl api)\n     protected Long handleInternally(JSONObject content)\n     {\n         final Long guildId \u003d content.has(\"guild_id\") ? content.getLong(\"guild_id\") : null;\n-        if (guildId !\u003d null \u0026\u0026 GuildLock.get(api).isLocked(guildId))\n+        if (guildId !\u003d null \u0026\u0026 api.getGuildLock().isLocked(guildId))\n             return guildId;\n \n         if (guildId !\u003d null)\n@@ -75,15 +75,15 @@ private void handleGuildVoiceState(JSONObject content)\n         Guild guild \u003d api.getGuildById(guildId);\n         if (guild \u003d\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.GUILD, guildId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.GUILD, guildId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received a VOICE_STATE_UPDATE for a Guild that has yet to be cached. JSON: \" + content);\n             return;\n         }\n \n         VoiceChannelImpl channel \u003d channelId !\u003d null ? (VoiceChannelImpl) guild.getVoiceChannelById(channelId) : null;\n         if (channel \u003d\u003d null \u0026\u0026 channelId !\u003d null)\n         {\n-            EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received VOICE_STATE_UPDATE for a VoiceChannel that has yet to be cached. JSON: \" + content);\n             return;\n         }\n@@ -101,7 +101,7 @@ private void handleGuildVoiceState(JSONObject content)\n             // in fact the issue was that the VOICE_STATE_UPDATE was sent after they had left, however, by caching\n             // it we will preserve the integrity of the cache in the event that it was actually a mis-ordering of\n             // GUILD_MEMBER_ADD and VOICE_STATE_UPDATE. I\u0027ll take some bad-data events over an invalid cache.\n-            EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n+            api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n             EventCache.LOG.debug(\"Received VOICE_STATE_UPDATE for a Member that has yet to be cached. JSON: \" + content);\n             return;\n         }\n@@ -203,15 +203,15 @@ private void handleCallVoiceState(JSONObject content)\n \n             if (channel \u003d\u003d null)\n             {\n-                EventCache.get(api).cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n+                api.getEventCache().cache(EventCache.Type.CHANNEL, channelId, () -\u003e handle(responseNumber, allContent));\n                 EventCache.LOG.debug(\"Received a VOICE_STATE_UPDATE for a Group/PrivateChannel that was not yet cached! JSON: \" + content);\n                 return;\n             }\n \n             CallImpl call \u003d (CallImpl) channel.getCurrentCall();\n             if (call \u003d\u003d null)\n             {\n-                EventCache.get(api).cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n+                api.getEventCache().cache(EventCache.Type.CALL, channelId, () -\u003e handle(responseNumber, allContent));\n                 EventCache.LOG.debug(\"Received a VOICE_STATE_UPDATE for a Call that is not yet cached. JSON: \" + content);\n                 return;\n             }\n@@ -226,7 +226,7 @@ private void handleCallVoiceState(JSONObject content)\n             cUser \u003d call.getCallUserMap().get(userId);\n             if (cUser \u003d\u003d null)\n             {\n-                EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n+                api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n                 EventCache.LOG.debug(\"Received a VOICE_STATE_UPDATE for a user that is not yet a a cached CallUser for the call. (groups only). JSON: \" + content);\n                 return;\n             }\n@@ -246,7 +246,7 @@ private void handleCallVoiceState(JSONObject content)\n             CallUser cUser \u003d ((JDAClientImpl) api.asClient()).getCallUserMap().remove(userId);\n             if (cUser \u003d\u003d null)\n             {\n-                EventCache.get(api).cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n+                api.getEventCache().cache(EventCache.Type.USER, userId, () -\u003e handle(responseNumber, allContent));\n                 EventCache.LOG.debug(\"Received a VOICE_STATE_UPDATE for a User leaving a Call, but the Call was not yet cached! JSON: \" + content);\n                 return;\n             }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/managers/AccountManagerUpdatable.java",
          "patch": "@@ -270,7 +270,7 @@ protected void handleResponse(Response response, Request\u003cVoid\u003e request)\n                 String newToken \u003d response.getObject().getString(\"token\");\n                 newToken \u003d newToken.replace(\"Bot \", \"\");\n \n-                ((JDAImpl) getJDA()).setToken(newToken);\n+                api.setToken(newToken);\n                 request.onSuccess(null);\n             }\n         };"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/managers/GuildController.java",
          "patch": "@@ -20,9 +20,7 @@\n import net.dv8tion.jda.core.JDA;\n import net.dv8tion.jda.core.Permission;\n import net.dv8tion.jda.core.entities.*;\n-import net.dv8tion.jda.core.entities.impl.EmoteImpl;\n-import net.dv8tion.jda.core.entities.impl.GuildImpl;\n-import net.dv8tion.jda.core.entities.impl.MemberImpl;\n+import net.dv8tion.jda.core.entities.impl.*;\n import net.dv8tion.jda.core.exceptions.AccountTypeException;\n import net.dv8tion.jda.core.exceptions.GuildUnavailableException;\n import net.dv8tion.jda.core.exceptions.PermissionException;\n@@ -52,7 +50,7 @@\n  */\n public class GuildController\n {\n-    protected final Guild guild;\n+    protected final GuildImpl guild;\n \n     /**\n      * Creates a new GuildController instance\n@@ -64,7 +62,7 @@\n      */\n     public GuildController(Guild guild)\n     {\n-        this.guild \u003d guild;\n+        this.guild \u003d (GuildImpl) guild;\n     }\n \n     /**\n@@ -928,7 +926,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cUser\u003e\u003e request)\n                     return;\n                 }\n \n-                EntityBuilder builder \u003d EntityBuilder.get(guild.getJDA());\n+                EntityBuilder builder \u003d guild.getJDA().getEntityBuilder();\n                 List\u003cUser\u003e bans \u003d new LinkedList\u003c\u003e();\n                 JSONArray bannedArr \u003d response.getArray();\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/managers/impl/AudioManagerImpl.java",
          "patch": "@@ -27,6 +27,7 @@\n import net.dv8tion.jda.core.entities.Guild;\n import net.dv8tion.jda.core.entities.Member;\n import net.dv8tion.jda.core.entities.VoiceChannel;\n+import net.dv8tion.jda.core.entities.impl.GuildImpl;\n import net.dv8tion.jda.core.entities.impl.JDAImpl;\n import net.dv8tion.jda.core.exceptions.GuildUnavailableException;\n import net.dv8tion.jda.core.exceptions.PermissionException;\n@@ -48,7 +49,7 @@\n     public final Object CONNECTION_LOCK \u003d new Object();\n \n     protected final JDAImpl api;\n-    protected final Guild guild;\n+    protected final GuildImpl guild;\n     protected AudioConnection audioConnection \u003d null;\n     protected VoiceChannel queuedAudioConnection \u003d null;\n \n@@ -65,8 +66,8 @@\n \n     public AudioManagerImpl(Guild guild)\n     {\n-        this.guild \u003d guild;\n-        this.api \u003d (JDAImpl) guild.getJDA();\n+        this.guild \u003d (GuildImpl) guild;\n+        this.api \u003d this.guild.getJDA();\n         init(); //Just to make sure that the audio libs have been initialized.\n     }\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/GuildLock.java",
          "patch": "@@ -32,16 +32,6 @@\n public class GuildLock\n {\n     public static final SimpleLog LOG \u003d SimpleLog.getLog(\"JDAGuildLock\");\n-    private static final Map\u003cJDA, GuildLock\u003e locks \u003d new HashMap\u003c\u003e();\n-\n-    public static synchronized GuildLock get(JDA jda)\n-    {\n-        if (!locks.containsKey(jda))\n-        {\n-            locks.put(jda, new GuildLock(jda));\n-        }\n-        return locks.get(jda);\n-    }\n \n     private final JDA api;\n     private final TLongObjectMap\u003cList\u003cJSONObject\u003e\u003e cache \u003d new TLongObjectHashMap\u003c\u003e();\n@@ -91,7 +81,7 @@ public void clear()\n         cached.clear();\n     }\n \n-    private GuildLock(JDA api)\n+    public GuildLock(JDA api)\n     {\n         this.api \u003d api;\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/WebSocketClient.java",
          "patch": "@@ -593,9 +593,9 @@ protected void invalidate()\n         api.getPrivateChannelMap().clear();\n         api.getFakeUserMap().clear();\n         api.getFakePrivateChannelMap().clear();\n-        EntityBuilder.get(api).clearCache();\n-        EventCache.get(api).clear();\n-        GuildLock.get(api).clear();\n+        api.getEntityBuilder().clearCache();\n+        api.getEventCache().clear();\n+        api.getGuildLock().clear();\n         this.\u003cReadyHandler\u003egetHandler(\"READY\").clearCache();\n         this.\u003cGuildMembersChunkHandler\u003egetHandler(\"GUILD_MEMBERS_CHUNK\").clearCache();\n "
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/restaction/ChannelAction.java",
          "patch": "@@ -334,7 +334,7 @@ protected void handleResponse(Response response, Request\u003cChannel\u003e request)\n             return;\n         }\n \n-        EntityBuilder builder \u003d EntityBuilder.get(api);\n+        EntityBuilder builder \u003d api.getEntityBuilder();;\n         Channel channel \u003d voice\n                 ? builder.createVoiceChannel(response.getObject(), guild.getIdLong())\n                 : builder.createTextChannel(response.getObject(),  guild.getIdLong());"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/restaction/InviteAction.java",
          "patch": "@@ -65,7 +65,7 @@ protected void finalizeData()\n     protected void handleResponse(final Response response, final Request\u003cInvite\u003e request)\n     {\n         if (response.isOk())\n-            request.onSuccess(EntityBuilder.get(this.api).createInvite(response.getObject()));\n+            request.onSuccess(this.api.getEntityBuilder().createInvite(response.getObject()));\n         else\n             request.onFailure(response);\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/restaction/RoleAction.java",
          "patch": "@@ -249,7 +249,7 @@ protected void finalizeData()\n     protected void handleResponse(Response response, Request\u003cRole\u003e request)\n     {\n         if (response.isOk())\n-            request.onSuccess(EntityBuilder.get(api).createRole(response.getObject(), guild.getIdLong()));\n+            request.onSuccess(api.getEntityBuilder().createRole(response.getObject(), guild.getIdLong()));\n         else\n             request.onFailure(response);\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/restaction/WebhookAction.java",
          "patch": "@@ -98,7 +98,7 @@ protected void handleResponse(Response response, Request\u003cWebhook\u003e request)\n             return;\n         }\n         JSONObject json \u003d response.getObject();\n-        Webhook webhook \u003d EntityBuilder.get(api).createWebhook(json);\n+        Webhook webhook \u003d api.getEntityBuilder().createWebhook(json);\n \n         request.onSuccess(webhook);\n     }"
        },
        {
          "file_name": "src/main/java/net/dv8tion/jda/core/requests/restaction/pagination/ReactionPaginationAction.java",
          "patch": "@@ -102,7 +102,7 @@ protected void handleResponse(Response response, Request\u003cList\u003cUser\u003e\u003e request)\n             return;\n         }\n \n-        final EntityBuilder builder \u003d EntityBuilder.get(api);\n+        final EntityBuilder builder \u003d api.getEntityBuilder();;\n         final JSONArray array \u003d response.getArray();\n         final List\u003cUser\u003e users \u003d new LinkedList\u003c\u003e();\n         for (int i \u003d 0; i \u003c array.length(); i++)"
        }
      ]
    }
  },
  {
    "name": "Usage of msgpack leaks memory into PermGen",
    "url": "https://github.com/Graylog2/graylog2-server/issues/907",
    "description": "Each new `RadioMessageCodec` gets a new `MessagePack` instance via injection. This results in new classes generated for each message that is processed and eventually leads to PermGen exhaustion.\n\n![yk](https://cloud.githubusercontent.com/assets/461/5818527/8556bc2a-a0b6-11e4-9582-970020895e86.png)\n",
    "keywords": [
      "new"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/Graylog2/graylog2-server/commit/d9d4ef8590b8ad7f49f45413399bb06909aaee04",
      "files": [
        {
          "file_name": "graylog2-shared/src/main/java/org/graylog2/shared/bindings/GenericBindings.java",
          "patch": "@@ -30,16 +30,18 @@\n import org.graylog2.plugin.inputs.MessageInput;\n import org.graylog2.plugin.inputs.util.ThroughputCounter;\n import org.graylog2.plugin.system.NodeId;\n-import org.graylog2.shared.buffers.InputBufferImpl;\n-import org.graylog2.shared.buffers.ProcessBuffer;\n-import org.graylog2.shared.buffers.processors.DecodingProcessor;\n import org.graylog2.shared.bindings.providers.EventBusProvider;\n+import org.graylog2.shared.bindings.providers.MessagePackProvider;\n import org.graylog2.shared.bindings.providers.MetricRegistryProvider;\n import org.graylog2.shared.bindings.providers.NodeIdProvider;\n import org.graylog2.shared.bindings.providers.ServiceManagerProvider;\n+import org.graylog2.shared.buffers.InputBufferImpl;\n+import org.graylog2.shared.buffers.ProcessBuffer;\n+import org.graylog2.shared.buffers.processors.DecodingProcessor;\n import org.graylog2.shared.inputs.InputRegistry;\n import org.graylog2.shared.stats.ThroughputStats;\n import org.jboss.netty.util.HashedWheelTimer;\n+import org.msgpack.MessagePack;\n \n import java.util.concurrent.Semaphore;\n \n@@ -77,5 +79,7 @@ protected void configure() {\n         install(new FactoryModuleBuilder().build(new TypeLiteral\u003cIOState.Factory\u003cMessageInput\u003e\u003e(){}));\n \n         bind(InputRegistry.class).asEagerSingleton();\n+\n+        bind(MessagePack.class).toProvider(MessagePackProvider.class).in(Scopes.SINGLETON);\n     }\n }"
        },
        {
          "file_name": "graylog2-shared/src/main/java/org/graylog2/shared/bindings/providers/MessagePackProvider.java",
          "patch": "@@ -0,0 +1,50 @@\n+/**\n+ * This file is part of Graylog2.\n+ *\n+ * Graylog2 is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog2 is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog2.  If not, see \u003chttp://www.gnu.org/licenses/\u003e.\n+ */\n+\n+package org.graylog2.shared.bindings.providers;\n+\n+import org.graylog2.plugin.RadioMessage;\n+import org.msgpack.MessagePack;\n+\n+import javax.inject.Provider;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * MessagePack generates classes for each new instance and message type which can leak into PermGen.\n+ *\n+ * Must be a singleton provider!\n+ */\n+public class MessagePackProvider implements Provider\u003cMessagePack\u003e {\n+    @Override\n+    public MessagePack get() {\n+        final MessagePack messagePack \u003d new MessagePack();\n+\n+        try {\n+            // Eagerly generate RadioMessage classes in the MessagePack object to avoid doing it on runtime.\n+            // The generated code is thread-safe, but generating it is not.\n+            final RadioMessage radioMessage \u003d new RadioMessage();\n+            final ByteArrayOutputStream stream \u003d new ByteArrayOutputStream();\n+            messagePack.write(stream, radioMessage);\n+            final byte[] bytes \u003d stream.toByteArray();\n+            messagePack.read(bytes, RadioMessage.class);\n+        } catch (IOException ignore) {\n+        }\n+\n+        return messagePack;\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "Possible memory leak due to usage of ThreadLocals",
    "url": "https://github.com/brettwooldridge/HikariCP/issues/148",
    "description": "I am using HikariCP 2.0.1 with Tomcat 8.0.12. The latter keeps complaining about non-cleared ConcurrentBag threadlocal:\n\n27-Sep-2014 00:14:49.001 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks The web application [/medex] created a ThreadLocal with key of type [java.lang.ThreadLocal](value [java.lang.ThreadLocal@4437ca25]) and a value of type [com.zaxxer.hikari.util.FastList](value [com.zaxxer.hikari.util.FastList@62b24a7b]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\n\nConcurrentBag uses FastList threadlocal but never removes it. Consequently, this thread cannot be processed by garbage collector.\n\nThe easiest and most obvious fix is to provide some shutdown hook for ConcurrentBag allowing to remove it\u0027s threadlocal and then use it in pool shutdown routine. As ConcurrentBag will get \"corrupted\" after shutdown call, it makes sense to track it\u0027s state in some property and throw IllegalStateException on subsequent attempts to use this concurrent bag (if necessary).\n\nBest regards, Arthur\n",
    "keywords": [
      "value",
      "shutdown",
      "concurrentbag",
      "threadlocal"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/brettwooldridge/HikariCP/commit/3b7095b4778598b36141e6ce9777afe1ee3bbf30",
      "files": [
        {
          "file_name": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java",
          "patch": "@@ -19,6 +19,7 @@\n \n import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.TimeUnit;\n@@ -76,17 +77,17 @@\n       void addBagItem();\n    }\n \n-   private static final ThreadLocal\u003cFastList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e threadList;\n+   private static final ThreadLocal\u003cLinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e threadList;\n    private final CopyOnWriteArrayList\u003cT\u003e sharedList;\n    private final Synchronizer synchronizer;\n    private final AtomicLong sequence;\n    private final IBagStateListener listener;\n \n    static {\n-      threadList \u003d new ThreadLocal\u003cFastList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e() {\n+      threadList \u003d new ThreadLocal\u003cLinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e() {\n          @Override\n-         protected FastList\u003cWeakReference\u003cBagEntry\u003e\u003e initialValue() {\n-            return new FastList\u003cWeakReference\u003cBagEntry\u003e\u003e(WeakReference.class);\n+         protected LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e initialValue() {\n+            return new LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e();\n          }\n       };\n    }\n@@ -126,7 +127,7 @@ public ConcurrentBag(IBagStateListener listener)\n    public T borrow(long timeout, final TimeUnit timeUnit) throws InterruptedException\n    {\n       // Try the thread-local list first\n-      final FastList\u003cWeakReference\u003cBagEntry\u003e\u003e list \u003d threadList.get();\n+      final LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e list \u003d threadList.get();\n       for (int i \u003d list.size(); i \u003e 0; i--) {\n          final BagEntry element \u003d list.removeLast().get();\n          if (element !\u003d null \u0026\u0026 element.state.compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE)) {"
        },
        {
          "file_name": "hikaricp/src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java",
          "patch": "@@ -17,6 +17,7 @@\n \n import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.TimeUnit;\n@@ -75,17 +76,17 @@\n       void addBagItem();\n    }\n \n-   private static final ThreadLocal\u003cFastList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e threadList;\n+   private static final ThreadLocal\u003cLinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e threadList;\n    private final CopyOnWriteArrayList\u003cT\u003e sharedList;\n    private final Synchronizer synchronizer;\n    private final AtomicLong sequence;\n    private final IBagStateListener listener;\n \n    static {\n-      threadList \u003d new ThreadLocal\u003cFastList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e() {\n+      threadList \u003d new ThreadLocal\u003cLinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e\u003e() {\n          @Override\n-         protected FastList\u003cWeakReference\u003cBagEntry\u003e\u003e initialValue() {\n-            return new FastList\u003cWeakReference\u003cBagEntry\u003e\u003e(WeakReference.class);\n+         protected LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e initialValue() {\n+            return new LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e();\n          }\n       };\n    }\n@@ -125,7 +126,7 @@ public ConcurrentBag(IBagStateListener listener)\n    public T borrow(long timeout, final TimeUnit timeUnit) throws InterruptedException\n    {\n       // Try the thread-local list first\n-      final FastList\u003cWeakReference\u003cBagEntry\u003e\u003e list \u003d threadList.get();\n+      final LinkedList\u003cWeakReference\u003cBagEntry\u003e\u003e list \u003d threadList.get();\n       for (int i \u003d list.size(); i \u003e 0; i--) {\n          final BagEntry element \u003d list.removeLast().get();\n          if (element !\u003d null \u0026\u0026 element.state.compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE)) {"
        }
      ]
    }
  },
  {
    "name": "Fixes a thread leak in the polling delay code.  Fixes a memory issues fo...",
    "url": "https://github.com/openhab/openhab1-addons/pull/2213",
    "description": "...r long polling requests to a sitemap by enforcing a single sitemap based cache. This is in reference to #765 and #1961 \n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/openhab/openhab1-addons/commit/d57510f8fc95f4b360b7672212c6127179dfc44c",
      "files": [
        {
          "file_name": "bundles/io/org.openhab.io.rest/src/main/java/org/openhab/io/rest/internal/cache/SingleMessageBroadcastCache.java",
          "patch": "@@ -0,0 +1,33 @@\n+package org.openhab.io.rest.internal.cache;\n+\n+import org.atmosphere.cache.BroadcastMessage;\n+import org.atmosphere.cache.CacheMessage;\n+import org.atmosphere.cache.UUIDBroadcasterCache;\n+import org.openhab.io.rest.internal.resources.beans.PageBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * UUIDBroadcasterCache that will enforce that only a single sitemap will exist\n+ * in the cache for any given resource.  This prevents leaks and other bad things\n+ * from happening.\n+ * @author Dan Cunningham\n+ * @since 1.7.0\n+ */\n+public class SingleMessageBroadcastCache extends UUIDBroadcasterCache {\n+\n+\tprivate final static Logger logger \u003d LoggerFactory.getLogger(SingleMessageBroadcastCache.class);\n+\t\n+\t@Override\n+    public CacheMessage addToCache(String broadcasterId, String uuid, BroadcastMessage message) {\n+\t\tif(uuid !\u003d null \u0026\u0026 message.message() instanceof PageBean){\n+\t\t\t//remove previous message\n+\t\t\tretrieveFromCache(broadcasterId, uuid);\n+\t\t\t//add the new message\n+\t\t\treturn super.addToCache(broadcasterId, uuid, message);\n+\t\t} else {\n+\t\t\tlogger.trace(\"Not caching {}\", message.message().getClass().getName());\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "bundles/io/org.openhab.io.rest/src/main/java/org/openhab/io/rest/internal/filter/PollingDelayFilter.java",
          "patch": "@@ -9,6 +9,8 @@\n package org.openhab.io.rest.internal.filter;\n \n import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n \n import javax.servlet.http.HttpServletRequest;\n \n@@ -34,6 +36,8 @@\n public class PollingDelayFilter implements PerRequestBroadcastFilter {\n \tprivate static final Logger logger \u003d LoggerFactory.getLogger(PollingDelayFilter.class);\n \t\n+\tScheduledExecutorService executor \u003d Executors.newSingleThreadScheduledExecutor();\n+\t\n \t@Override\n \tpublic BroadcastAction filter(String broadcasterId, Object originalMessage, Object message) {\n \t\treturn new BroadcastAction(message);\n@@ -47,12 +51,18 @@ public BroadcastAction filter(String broadcasterId, final AtmosphereResource res\n \t\t\tboolean isItemMessage \u003d originalMessage instanceof Item || originalMessage instanceof GroupItem;\n \t\t\tboolean isStreamingTransport \u003d ResponseTypeHelper.isStreamingTransport(request);\n \t\t\t\n+\t\t\t//strange atmosphere bug, seems harmless, but pollutes the logs\n+\t\t\t//so lets see if this fails or not first before we call it again.\n+\t\t\ttry {\n+\t\t\t\tresource.getRequest().getPathInfo();\n+\t\t\t} catch (Exception e) {\n+\t\t\t\treturn new BroadcastAction(ACTION.ABORT, message);\n+\t\t\t}\n \t\t\tif(!isStreamingTransport \u0026\u0026 message instanceof PageBean \u0026\u0026 isItemMessage) {\n \t\t\t\tfinal String delayedBroadcasterName \u003d resource.getRequest().getPathInfo();\n-\t\t\t\tExecutors.newSingleThreadExecutor().submit(new Runnable() {\n+\t\t\t\texecutor.schedule(new Runnable() {\n \t\t            public void run() {\n \t\t                try {\n-\t\t                    Thread.sleep(300);\n \t\t                    BroadcasterFactory broadcasterFactory \u003d resource.getAtmosphereConfig().getBroadcasterFactory();\n \t\t\t\t\t\t\tGeneralBroadcaster delayedBroadcaster \u003d broadcasterFactory.lookup(GeneralBroadcaster.class, delayedBroadcasterName);\n \t\t\t\t\t\t\tif(delayedBroadcaster !\u003d null)\n@@ -61,7 +71,7 @@ public void run() {\n \t\t\t\t\t\t\tlogger.error(\"Could not broadcast message\", e);\n \t\t\t\t\t\t} \n \t\t            }\n-\t\t        });\n+\t\t        }, 300, TimeUnit.MILLISECONDS);\n \t\t\t} else {\n \t\t\t\t//pass message to next filter\n \t\t\t\treturn new BroadcastAction(ACTION.CONTINUE, message);\n@@ -73,4 +83,4 @@ public void run() {\n \t\treturn new BroadcastAction(ACTION.ABORT, message);\n \t}\n \t\n-}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "bundles/io/org.openhab.io.rest/src/main/java/org/openhab/io/rest/internal/listeners/ResourceStateChangeListener.java",
          "patch": "@@ -79,13 +79,21 @@ public void setBroadcaster(GeneralBroadcaster broadcaster) {\n \t\treturn cachedEntries;\n \t}\n \t\n+\t/**\n+\t * Configure what cache we want to use\n+\t * @param config\n+\t */\n+\tpublic void configureCache(BroadcasterConfig config){\n+\t\tconfig.setBroadcasterCache(new UUIDBroadcasterCache());\n+\t\tconfig.getBroadcasterCache().configure(broadcaster.getBroadcasterConfig());\n+\t\tconfig.getBroadcasterCache().start();\n+\t}\n+\t\n \tpublic void registerItems(){\n \t\tStartCacheExecutor();\n \t\tBroadcasterConfig config \u003d broadcaster.getBroadcasterConfig();\n \t\t\n-\t\tconfig.setBroadcasterCache(new UUIDBroadcasterCache());\n-\t\tconfig.getBroadcasterCache().configure(broadcaster.getBroadcasterConfig());\n-\t\tconfig.getBroadcasterCache().start();\n+\t\tconfigureCache(config);\n \n \t\taddBroadcastFilter(config, new PerRequestBroadcastFilter() {\n "
        },
        {
          "file_name": "bundles/io/org.openhab.io.rest/src/main/java/org/openhab/io/rest/internal/listeners/SitemapStateChangeListener.java",
          "patch": "@@ -17,12 +17,10 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.UriBuilder;\n \n-import org.atmosphere.cpr.AtmosphereResource;\n-import org.atmosphere.cpr.BroadcasterCache;\n-import org.atmosphere.cpr.PerRequestBroadcastFilter;\n-import org.atmosphere.cpr.BroadcastFilter.BroadcastAction.ACTION;\n+import org.atmosphere.cpr.BroadcasterConfig;\n import org.openhab.core.items.Item;\n import org.openhab.io.rest.RESTApplication;\n+import org.openhab.io.rest.internal.cache.SingleMessageBroadcastCache;\n import org.openhab.io.rest.internal.resources.ResponseTypeHelper;\n import org.openhab.io.rest.internal.resources.SitemapResource;\n import org.openhab.io.rest.internal.resources.beans.PageBean;\n@@ -50,29 +48,10 @@\n \tprivate static final Logger logger \u003d LoggerFactory.getLogger(SitemapStateChangeListener.class);\n \t\n \t@Override\n-\tpublic void registerItems() {\n-\t\tsuper.registerItems();\n-\t\t//if other filters have let this through then clear out any cached messages for the client.\n-\t\t//There should at most be only one message (version of the sitemap) in the cache for a client.\n-\t\tbroadcaster.getBroadcasterConfig().addFilter(new PerRequestBroadcastFilter() {\n-\t\t\t\n-\t\t\t@Override\n-\t\t\tpublic BroadcastAction filter(String broadcasterId,\n-\t\t\t\t\tObject originalMessage, Object message) {\n-\t\t\t\treturn new BroadcastAction(message);\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic BroadcastAction filter(String broadcasterId,\n-\t\t\t\t\tAtmosphereResource resource, Object originalMessage, Object message) {\n-\t\t\t\t//this will clear any cached messages before we add the new one\n-\t\t\t\tBroadcasterCache uuidCache \u003d broadcaster.getBroadcasterConfig().getBroadcasterCache();\n-\t\t\t\tList\u003cObject\u003e entries \u003d uuidCache.retrieveFromCache(broadcasterId, resource.uuid());\n-\t\t\t\tif(entries !\u003d null)\n-\t\t\t\t\tlogger.trace(\"UUID {} had {} previous messages\", resource.uuid(), entries.size());\n-\t\t\t\treturn new BroadcastAction(ACTION.CONTINUE, message);\n-\t\t\t}\n-\t\t});\n+\tpublic void configureCache(BroadcasterConfig config){\n+\t\tconfig.setBroadcasterCache(new SingleMessageBroadcastCache());\n+\t\tconfig.getBroadcasterCache().configure(broadcaster.getBroadcasterConfig());\n+\t\tconfig.getBroadcasterCache().start();\n \t}\n \t\n \t@Override"
        }
      ]
    }
  },
  {
    "name": "Add tests that revealed the memory leak in HashBiMap fixed in the previous commits.",
    "url": "https://github.com/eclipse/eclipse-collections/pull/51",
    "description": "",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/eclipse/eclipse-collections/commit/612f0dfb139e3e127d445a45e0c10a917084f93e",
      "files": [
        {
          "file_name": "unit-tests/src/test/java/org/eclipse/collections/impl/bimap/mutable/HashBiMapTest.java",
          "patch": "@@ -10,6 +10,7 @@\n \n package org.eclipse.collections.impl.bimap.mutable;\n \n+import org.eclipse.collections.api.bimap.MutableBiMap;\n import org.eclipse.collections.impl.map.mutable.UnifiedMap;\n import org.eclipse.collections.impl.test.Verify;\n import org.eclipse.collections.impl.test.domain.Key;\n@@ -106,6 +107,29 @@ public void withKeysValues()\n     }\n \n     @Test\n+    public void inverseKeyPreservation()\n+    {\n+        Key key \u003d new Key(\"key\");\n+        Key duplicateKey \u003d new Key(\"key\");\n+\n+        MutableBiMap\u003cKey, Integer\u003e biMap \u003d this.newMapWithKeysValues(key, 1, duplicateKey, 2);\n+        Assert.assertSame(key, Iterate.getFirst(biMap.entrySet()).getKey());\n+        Assert.assertSame(key, Iterate.getFirst(biMap.inverse().entrySet()).getValue());\n+    }\n+\n+    @Test\n+    public void valuePreservation()\n+    {\n+        Key value \u003d new Key(\"value\");\n+        Key duplicateValue \u003d new Key(\"value\");\n+\n+        MutableBiMap\u003cInteger, Key\u003e biMap \u003d this.newMapWithKeyValue(1, value);\n+        biMap.forcePut(2, duplicateValue);\n+        Assert.assertSame(value, Iterate.getFirst(biMap.entrySet()).getValue());\n+        Assert.assertSame(value, Iterate.getFirst(biMap.inverse().entrySet()).getKey());\n+    }\n+\n+    @Test\n     public void forcePut_inverseKeyAndValuePreservation()\n     {\n         Key key1 \u003d new Key(\"1\");"
        }
      ]
    }
  },
  {
    "name": "Native (java) process memory leak",
    "url": "https://github.com/elastic/elasticsearch/issues/1118",
    "description": "An internal memory leak when using GarbageCollectorMXBean#getLastGcInfo in the JVM. Disable using it...\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/1033249f0c971ea099ccbce6d9fe3cd720c7c800",
      "files": [
        {
          "file_name": "modules/elasticsearch/src/main/java/org/elasticsearch/monitor/jvm/JvmMonitorService.java",
          "patch": "@@ -61,9 +61,11 @@\n         this.threadPool \u003d threadPool;\n         this.dumpMonitorService \u003d dumpMonitorService;\n \n-        this.enabled \u003d componentSettings.getAsBoolean(\"enabled\", true);\n+        this.enabled \u003d componentSettings.getAsBoolean(\"enabled\", JvmStats.isLastGcEnabled());\n         this.interval \u003d componentSettings.getAsTime(\"interval\", timeValueSeconds(1));\n         this.gcThreshold \u003d componentSettings.getAsTime(\"gc_threshold\", timeValueMillis(5000));\n+\n+        logger.debug(\"enabled [{}], last_gc_enabled [{}], interval [{}], gc_threshold [{}]\", enabled, JvmStats.isLastGcEnabled(), interval, gcThreshold);\n     }\n \n     @Override protected void doStart() throws ElasticSearchException {"
        },
        {
          "file_name": "modules/elasticsearch/src/main/java/org/elasticsearch/monitor/jvm/JvmStats.java",
          "patch": "@@ -19,6 +19,7 @@\n \n package org.elasticsearch.monitor.jvm;\n \n+import org.elasticsearch.common.Booleans;\n import org.elasticsearch.common.collect.Iterators;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n@@ -47,11 +48,16 @@\n  */\n public class JvmStats implements Streamable, Serializable, ToXContent {\n \n+    private static boolean enableLastGc;\n+\n+    public static boolean isLastGcEnabled() {\n+        return enableLastGc;\n+    }\n+\n     private final static RuntimeMXBean runtimeMXBean;\n     private final static MemoryMXBean memoryMXBean;\n     private final static ThreadMXBean threadMXBean;\n \n-    private static boolean sunGc;\n     private static Method getLastGcInfoMethod;\n     private static Method getMemoryUsageBeforeGcMethod;\n     private static Method getMemoryUsageAfterGcMethod;\n@@ -64,28 +70,32 @@\n         memoryMXBean \u003d ManagementFactory.getMemoryMXBean();\n         threadMXBean \u003d ManagementFactory.getThreadMXBean();\n \n-        try {\n-            Class sunGcClass \u003d Class.forName(\"com.sun.management.GarbageCollectorMXBean\");\n-            Class gcInfoClass \u003d Class.forName(\"com.sun.management.GcInfo\");\n-\n-            getLastGcInfoMethod \u003d sunGcClass.getDeclaredMethod(\"getLastGcInfo\");\n-            getLastGcInfoMethod.setAccessible(true);\n-\n-            getMemoryUsageBeforeGcMethod \u003d gcInfoClass.getDeclaredMethod(\"getMemoryUsageBeforeGc\");\n-            getMemoryUsageBeforeGcMethod.setAccessible(true);\n-            getMemoryUsageAfterGcMethod \u003d gcInfoClass.getDeclaredMethod(\"getMemoryUsageAfterGc\");\n-            getMemoryUsageAfterGcMethod.setAccessible(true);\n-            getStartTimeMethod \u003d gcInfoClass.getDeclaredMethod(\"getStartTime\");\n-            getStartTimeMethod.setAccessible(true);\n-            getEndTimeMethod \u003d gcInfoClass.getDeclaredMethod(\"getEndTime\");\n-            getEndTimeMethod.setAccessible(true);\n-            getDurationMethod \u003d gcInfoClass.getDeclaredMethod(\"getDuration\");\n-            getDurationMethod.setAccessible(true);\n-\n-            sunGc \u003d true;\n-        } catch (Throwable ex) {\n-            sunGc \u003d false;\n+        boolean enableLastGc \u003d Booleans.parseBoolean(System.getProperty(\"monitory.jvm.enable_last_gc\"), false);\n+        if (enableLastGc) {\n+            try {\n+                Class sunGcClass \u003d Class.forName(\"com.sun.management.GarbageCollectorMXBean\");\n+                Class gcInfoClass \u003d Class.forName(\"com.sun.management.GcInfo\");\n+\n+                getLastGcInfoMethod \u003d sunGcClass.getDeclaredMethod(\"getLastGcInfo\");\n+                getLastGcInfoMethod.setAccessible(true);\n+\n+                getMemoryUsageBeforeGcMethod \u003d gcInfoClass.getDeclaredMethod(\"getMemoryUsageBeforeGc\");\n+                getMemoryUsageBeforeGcMethod.setAccessible(true);\n+                getMemoryUsageAfterGcMethod \u003d gcInfoClass.getDeclaredMethod(\"getMemoryUsageAfterGc\");\n+                getMemoryUsageAfterGcMethod.setAccessible(true);\n+                getStartTimeMethod \u003d gcInfoClass.getDeclaredMethod(\"getStartTime\");\n+                getStartTimeMethod.setAccessible(true);\n+                getEndTimeMethod \u003d gcInfoClass.getDeclaredMethod(\"getEndTime\");\n+                getEndTimeMethod.setAccessible(true);\n+                getDurationMethod \u003d gcInfoClass.getDeclaredMethod(\"getDuration\");\n+                getDurationMethod.setAccessible(true);\n+\n+            } catch (Throwable ex) {\n+                enableLastGc \u003d false;\n+            }\n         }\n+\n+        JvmStats.enableLastGc \u003d false;\n     }\n \n     public static JvmStats jvmStats() {\n@@ -111,7 +121,7 @@ public static JvmStats jvmStats() {\n             stats.gc.collectors[i].name \u003d gcMxBean.getName();\n             stats.gc.collectors[i].collectionCount \u003d gcMxBean.getCollectionCount();\n             stats.gc.collectors[i].collectionTime \u003d gcMxBean.getCollectionTime();\n-            if (sunGc) {\n+            if (enableLastGc) {\n                 try {\n                     Object lastGcInfo \u003d getLastGcInfoMethod.invoke(gcMxBean);\n                     if (lastGcInfo !\u003d null) {"
        },
        {
          "file_name": "modules/test/integration/src/test/java/org/elasticsearch/test/stress/leaks/GenericStatsLeak.java",
          "patch": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to Elastic Search and Shay Banon under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. Elastic Search licenses this\n+ * file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.test.stress.leaks;\n+\n+import org.elasticsearch.monitor.jvm.JvmService;\n+import org.elasticsearch.monitor.network.NetworkService;\n+import org.elasticsearch.monitor.os.OsService;\n+import org.elasticsearch.monitor.process.ProcessService;\n+import org.elasticsearch.node.NodeBuilder;\n+import org.elasticsearch.node.internal.InternalNode;\n+\n+public class GenericStatsLeak {\n+\n+    public static void main(String[] args) {\n+        InternalNode node \u003d (InternalNode) NodeBuilder.nodeBuilder().node();\n+\n+        JvmService jvmService \u003d node.injector().getInstance(JvmService.class);\n+        OsService osService \u003d node.injector().getInstance(OsService.class);\n+        ProcessService processService \u003d node.injector().getInstance(ProcessService.class);\n+        NetworkService networkService \u003d node.injector().getInstance(NetworkService.class);\n+\n+        while (true) {\n+            jvmService.stats();\n+            osService.stats();\n+            processService.stats();\n+            networkService.stats();\n+        }\n+    }\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "modules/test/integration/src/test/java/org/elasticsearch/test/stress/leaks/JvmStatsLeak.java",
          "patch": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to Elastic Search and Shay Banon under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. Elastic Search licenses this\n+ * file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.test.stress.leaks;\n+\n+import org.elasticsearch.monitor.jvm.JvmStats;\n+\n+/**\n+ * This test mainly comes to check the native memory leak with getLastGCInfo (which is now\n+ * disabled by default).\n+ */\n+public class JvmStatsLeak {\n+\n+    public static void main(String[] args) {\n+        while (true) {\n+            JvmStats.jvmStats();\n+        }\n+    }\n+}\n\\ No newline at end of file"
        }
      ]
    }
  },
  {
    "name": "MER-127/Memory Leaks!",
    "url": "https://github.com/novoda/merlin/pull/131",
    "description": "## Problem\r\nAs per #127 \"Add dispose method\" we need to track down memory leaks in the app and patch them. This one started by looking into the `LocalBinder`. \r\n\r\n**Memory Analyzer starting leak:**\r\n![27391161-17cfe3c8-569b-11e7-873a-1e28772042be](https://user-images.githubusercontent.com/3380092/27407614-007d0e2c-56d1-11e7-8900-e05307f6990f.png)\r\n\r\n1. `Registerable`s keep a list of callbacks which can be a callback directly to the activity, leaking that activity 😬 \r\n\r\n2. We don\u0027t actually tell the service to stop when telling it to unbind 🤕  \r\n\r\n3. `Binder` keeps a reference to the outer `MerlinService`.\r\n\r\n## Solution\r\n\r\n1. **Clear** the `Registerable`s when unbinding from an activity.\r\n\r\n2. Tell the service to **stop** when we unbind.\r\n\r\n3. Remove the reference to the `LocalBinder` when unbinding the `MerlinService`.\r\n\r\n**Memory Analyzer allocations after patches:**\r\n![screen shot 2017-06-21 at 22 11 45](https://user-images.githubusercontent.com/3380092/27407620-0a12e1f0-56d1-11e7-91a7-6cca2e6d12e1.png)\r\n\r\n### Test(s) added\r\nYes! Updated necessary tests to verify the additional method calls.\r\n\r\n### Screenshots\r\nNo UI changes.\r\n\r\n### Paired with\r\nNobody.\r\n",
    "keywords": [
      "###",
      "activity"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/novoda/merlin/commit/899f5ba726108626ac1e7026f73dc06a50927a61",
      "files": [
        {
          "file_name": "core/src/main/java/com/novoda/merlin/Merlin.java",
          "patch": "@@ -27,6 +27,7 @@ public void bind() {\n \n     public void unbind() {\n         merlinServiceBinder.unbind();\n+        registrar.clearRegistrations();\n     }\n \n     public void registerConnectable(Connectable connectable) {"
        },
        {
          "file_name": "core/src/main/java/com/novoda/merlin/registerable/Register.java",
          "patch": "@@ -21,4 +21,7 @@ public void register(T registerable) {\n         return registerables;\n     }\n \n+    public void clear() {\n+        registerables.clear();\n+    }\n }"
        },
        {
          "file_name": "core/src/main/java/com/novoda/merlin/registerable/Registrar.java",
          "patch": "@@ -60,4 +60,9 @@ public void registerBindable(Bindable bindable) {\n         return bindables;\n     }\n \n+    public void clearRegistrations() {\n+        connectables.clear();\n+        disconnectables.clear();\n+        bindables.clear();\n+    }\n }"
        },
        {
          "file_name": "core/src/main/java/com/novoda/merlin/service/MerlinService.java",
          "patch": "@@ -12,7 +12,7 @@\n \n     private static boolean isBound;\n \n-    private final IBinder binder \u003d new LocalBinder();\n+    private IBinder binder \u003d new LocalBinder();\n \n     private ConnectivityChangesRegister connectivityChangesRegister;\n     private ConnectivityChangesForwarder connectivityChangesForwarder;\n@@ -30,15 +30,36 @@ public IBinder onBind(Intent intent) {\n     @Override\n     public boolean onUnbind(Intent intent) {\n         isBound \u003d false;\n-        connectivityChangesRegister.unregister();\n+        if (connectivityChangesRegister !\u003d null) {\n+            connectivityChangesRegister.unregister();\n+            connectivityChangesRegister \u003d null;\n+\n+        }\n+\n+        if (connectivityChangesForwarder !\u003d null) {\n+            connectivityChangesForwarder \u003d null;\n+        }\n+\n+        binder \u003d null;\n         return super.onUnbind(intent);\n     }\n \n     private void start() {\n+        assertDependenciesBound();\n         connectivityChangesForwarder.forwardInitialNetworkStatus();\n         connectivityChangesRegister.register(connectivityChangesListener);\n     }\n \n+    private void assertDependenciesBound() {\n+        if (MerlinService.this.connectivityChangesRegister \u003d\u003d null) {\n+            throw MerlinServiceDependencyMissingException.missing(ConnectivityChangesRegister.class);\n+        }\n+\n+        if (MerlinService.this.connectivityChangesForwarder \u003d\u003d null) {\n+            throw MerlinServiceDependencyMissingException.missing(ConnectivityChangesForwarder.class);\n+        }\n+    }\n+\n     private final ConnectivityChangesListener connectivityChangesListener \u003d new ConnectivityChangesListener() {\n         @Override\n         public void onConnectivityChanged(ConnectivityChangeEvent connectivityChangeEvent) {"
        },
        {
          "file_name": "core/src/main/java/com/novoda/merlin/service/MerlinServiceBinder.java",
          "patch": "@@ -48,6 +48,7 @@ public void bindService() {\n     public void unbind() {\n         if (MerlinService.isBound()) {\n             context.unbindService(merlinServiceConnection);\n+            context.stopService(new Intent(context, MerlinService.class));\n             merlinServiceConnection \u003d null;\n         }\n     }"
        },
        {
          "file_name": "core/src/main/java/com/novoda/merlin/service/MerlinServiceDependencyMissingException.java",
          "patch": "@@ -0,0 +1,22 @@\n+package com.novoda.merlin.service;\n+\n+import java.util.Locale;\n+\n+class MerlinServiceDependencyMissingException extends IllegalStateException {\n+\n+    private static final String DEPENDENCY_ASSERT_FORMAT \u003d \"%s must be bound to %s.\";\n+\n+    static MerlinServiceDependencyMissingException missing(Class dependency) {\n+        String message \u003d String.format(\n+                Locale.ENGLISH,\n+                DEPENDENCY_ASSERT_FORMAT,\n+                dependency,\n+                MerlinService.class\n+        );\n+        return new MerlinServiceDependencyMissingException(message);\n+    }\n+\n+    private MerlinServiceDependencyMissingException(String message) {\n+        super(message);\n+    }\n+}"
        },
        {
          "file_name": "core/src/test/java/com/novoda/merlin/MerlinTest.java",
          "patch": "@@ -65,6 +65,13 @@ public void whenUnbinding_thenUnbindsService() {\n     }\n \n     @Test\n+    public void whenUnbinding_thenClearsRegistrations() {\n+        merlin.unbind();\n+\n+        verify(registrar).clearRegistrations();\n+    }\n+\n+    @Test\n     public void whenRegisteringConnectable_thenRegistersConnectable() {\n         Connectable connectable \u003d mock(Connectable.class);\n "
        },
        {
          "file_name": "core/src/test/java/com/novoda/merlin/registerable/RegistrarTest.java",
          "patch": "@@ -21,68 +21,77 @@\n     public MockitoRule mockitoRule \u003d MockitoJUnit.rule();\n \n     @Mock\n-    private Register\u003cConnectable\u003e connector;\n+    private Register\u003cConnectable\u003e connectables;\n     @Mock\n-    private Register\u003cDisconnectable\u003e disconnector;\n+    private Register\u003cDisconnectable\u003e disconnectables;\n     @Mock\n-    private Register\u003cBindable\u003e binder;\n+    private Register\u003cBindable\u003e bindables;\n \n     private Registrar registrar;\n \n     @Before\n     public void setUp() {\n-        registrar \u003d new Registrar(connector, disconnector, binder);\n+        registrar \u003d new Registrar(connectables, disconnectables, bindables);\n     }\n \n     @Test(expected \u003d MerlinException.class)\n-    public void givenMissingConnector_whenRegisteringConnectable_thenThrowsDeveloperException() {\n+    public void givenMissingRegister_whenRegisteringConnectable_thenThrowsDeveloperException() {\n         registrar \u003d new Registrar(null, null, null);\n \n         Connectable connectable \u003d mock(Connectable.class);\n         registrar.registerConnectable(connectable);\n     }\n \n     @Test(expected \u003d MerlinException.class)\n-    public void givenMissingDisconnector_thenRegisteringDisconnectable_thenThrowsDeveloperException() {\n+    public void givenMissingRegister_thenRegisteringDisconnectable_thenThrowsDeveloperException() {\n         registrar \u003d new Registrar(null, null, null);\n \n         Disconnectable disconnectable \u003d mock(Disconnectable.class);\n         registrar.registerDisconnectable(disconnectable);\n     }\n \n     @Test(expected \u003d MerlinException.class)\n-    public void givenMissingBinder_whenRegisteringBindable_thenThrowsDeveloperException() {\n+    public void givenMissingRegister_whenRegisteringBindable_thenThrowsDeveloperException() {\n         registrar \u003d new Registrar(null, null, null);\n \n         Bindable bindable \u003d mock(Bindable.class);\n         registrar.registerBindable(bindable);\n     }\n \n     @Test\n-    public void givenConnector_whenRegisteringConnectable_thenRegistersConnectableWithConnector() {\n+    public void givenRegister_whenRegisteringConnectable_thenRegistersConnectableWithConnector() {\n         Connectable connectable \u003d mock(Connectable.class);\n \n         registrar.registerConnectable(connectable);\n \n-        verify(connector).register(connectable);\n+        verify(connectables).register(connectable);\n     }\n \n     @Test\n-    public void givenDisconnector_whenRegisteringDisconnectable_thenRegistersDisconnectableWithDisconnector() {\n+    public void givenRegister_whenRegisteringDisconnectable_thenRegistersDisconnectableWithDisconnector() {\n         Disconnectable disconnectable \u003d mock(Disconnectable.class);\n \n         registrar.registerDisconnectable(disconnectable);\n \n-        verify(disconnector).register(disconnectable);\n+        verify(this.disconnectables).register(disconnectable);\n     }\n \n     @Test\n-    public void givenBinder_whenRegisteringBindable_thenRegistersBindableWithBinder() {\n+    public void givenRegister_whenRegisteringBindable_thenRegistersBindableWithBinder() {\n         Bindable bindable \u003d mock(Bindable.class);\n \n         registrar.registerBindable(bindable);\n \n-        verify(binder).register(bindable);\n+        verify(bindables).register(bindable);\n+    }\n+\n+    @Test\n+    public void whenClearingRegistrations_thenDelegatesClearingToRegisters() {\n+        registrar.clearRegistrations();\n+\n+        verify(connectables).clear();\n+        verify(disconnectables).clear();\n+        verify(bindables).clear();\n     }\n \n }"
        },
        {
          "file_name": "core/src/test/java/com/novoda/merlin/service/MerlinServiceDependencyMissingExceptionMatcher.java",
          "patch": "@@ -0,0 +1,71 @@\n+package com.novoda.merlin.service;\n+\n+import org.hamcrest.BaseMatcher;\n+import org.hamcrest.Description;\n+\n+class MerlinServiceDependencyMissingExceptionMatcher extends BaseMatcher\u003cMerlinServiceDependencyMissingException\u003e {\n+\n+    private String expectedMessage;\n+    private Throwable expectedCause;\n+\n+    public static MerlinServiceDependencyMissingExceptionMatcher from(Class expectedDependency) {\n+        MerlinServiceDependencyMissingException expectedException \u003d MerlinServiceDependencyMissingException.missing(expectedDependency);\n+        return new MerlinServiceDependencyMissingExceptionMatcher(expectedException);\n+    }\n+\n+    private MerlinServiceDependencyMissingExceptionMatcher(MerlinServiceDependencyMissingException exception) {\n+        this.expectedMessage \u003d exception.getMessage();\n+        this.expectedCause \u003d exception.getCause();\n+    }\n+\n+    @Override\n+    public boolean matches(Object o) {\n+        MerlinServiceDependencyMissingException exception \u003d (MerlinServiceDependencyMissingException) o;\n+        return messageMatches(exception) \u0026\u0026 causeMatches(exception);\n+    }\n+\n+    private boolean messageMatches(MerlinServiceDependencyMissingException exception) {\n+        return expectedMessage.equals(exception.getMessage());\n+    }\n+\n+    private boolean causeMatches(MerlinServiceDependencyMissingException exception) {\n+        if (expectedCause \u003d\u003d null) {\n+            return exception.getCause() \u003d\u003d null;\n+        } else {\n+            return expectedCause.equals(exception.getCause());\n+        }\n+    }\n+\n+    @Override\n+    public void describeTo(Description description) {\n+        String message \u003d String.format(\n+                \"%s: %s, cause: %s\",\n+                MerlinServiceDependencyMissingException.class.getSimpleName(),\n+                expectedMessage,\n+                expectedCause\n+        );\n+\n+        description.appendText(message);\n+    }\n+\n+    @Override\n+    public void describeMismatch(Object item, Description description) {\n+        if (item instanceof Throwable) {\n+            Throwable throwable \u003d (Throwable) item;\n+            String message \u003d String.format(\n+                    \"was: %s: %s, cause: %s\",\n+                    MerlinServiceDependencyMissingException.class.getSimpleName(),\n+                    throwable.getMessage(),\n+                    throwable.getCause()\n+            );\n+\n+            description.appendText(message);\n+        } else {\n+            super.describeMismatch(item, description);\n+        }\n+    }\n+\n+}\n+\n+\n+"
        },
        {
          "file_name": "core/src/test/java/com/novoda/merlin/service/MerlinServiceTest.java",
          "patch": "@@ -8,6 +8,7 @@\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n import org.mockito.ArgumentCaptor;\n import org.mockito.Mock;\n import org.mockito.junit.MockitoJUnit;\n@@ -16,6 +17,7 @@\n import static org.fest.assertions.api.Assertions.assertThat;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyZeroInteractions;\n \n public class MerlinServiceTest {\n \n@@ -25,6 +27,8 @@\n \n     @Rule\n     public MockitoRule mockitoRule \u003d MockitoJUnit.rule();\n+    @Rule\n+    public ExpectedException thrown \u003d ExpectedException.none();\n \n     @Mock\n     private Intent intent;\n@@ -94,6 +98,32 @@ public void givenRegisteredMerlinService_whenConnectivityChangeOccurs_thenNotifi\n         verify(connectivityChangesForwarder).forward(ANY_CONNECTIVITY_CHANGE_EVENT);\n     }\n \n+    @Test\n+    public void givenConnectivityChangesRegisterIsNotBound_whenBindCompletes_thenThrowsException_andStopsWorkOnService() {\n+        thrown.expect(MerlinServiceDependencyMissingExceptionMatcher.from(ConnectivityChangesRegister.class));\n+\n+        MerlinService.LocalBinder binder \u003d (MerlinService.LocalBinder) merlinService.onBind(intent);\n+        binder.setConnectivityChangesForwarder(connectivityChangesForwarder);\n+\n+        binder.onBindComplete();\n+\n+        verifyZeroInteractions(connectivityChangesRegister);\n+        verifyZeroInteractions(connectivityChangesForwarder);\n+    }\n+\n+    @Test\n+    public void givenConnectivityChangesForwarderIsNotBound_whenBindCompletes_thenThrowsException_andStopsWorkOnService() {\n+        thrown.expect(MerlinServiceDependencyMissingExceptionMatcher.from(ConnectivityChangesForwarder.class));\n+\n+        MerlinService.LocalBinder binder \u003d (MerlinService.LocalBinder) merlinService.onBind(intent);\n+        binder.setConnectivityChangesRegister(connectivityChangesRegister);\n+\n+        binder.onBindComplete();\n+\n+        verifyZeroInteractions(connectivityChangesRegister);\n+        verifyZeroInteractions(connectivityChangesForwarder);\n+    }\n+\n     private MerlinService.LocalBinder givenBoundMerlinService() {\n         MerlinService.LocalBinder binder \u003d ((MerlinService.LocalBinder) merlinService.onBind(intent));\n         binder.setConnectivityChangesRegister(connectivityChangesRegister);"
        },
        {
          "file_name": "demo/src/main/java/com/novoda/merlin/demo/connectivity/display/MerlinSnackbar.java",
          "patch": "@@ -2,6 +2,7 @@\n \n import android.content.res.Resources;\n import android.support.annotation.IntegerRes;\n+import android.support.annotation.NonNull;\n import android.support.annotation.StringRes;\n import android.support.design.widget.Snackbar;\n import android.view.View;\n@@ -11,6 +12,7 @@\n     private static final String EMPTY_MESSAGE \u003d \"\";\n     private final Snackbar snackbar;\n \n+    @NonNull\n     static MerlinSnackbar withDuration(Resources resources, View attachTo, @IntegerRes int durationResource) {\n         int duration \u003d resources.getInteger(durationResource);\n         Snackbar snackbar \u003d Snackbar.make(attachTo, EMPTY_MESSAGE, duration);\n@@ -36,10 +38,11 @@ MerlinSnackbar withText(@StringRes int messageResource) {\n         return this;\n     }\n \n-    void show() {\n+    MerlinSnackbar show() {\n         if (!snackbar.isShown()) {\n             snackbar.show();\n         }\n+        return this;\n     }\n \n     void dismiss() {"
        },
        {
          "file_name": "demo/src/main/java/com/novoda/merlin/demo/connectivity/display/NetworkStatusDisplayer.java",
          "patch": "@@ -1,6 +1,7 @@\n package com.novoda.merlin.demo.connectivity.display;\n \n import android.content.res.Resources;\n+import android.support.annotation.Nullable;\n import android.support.annotation.StringRes;\n import android.view.View;\n \n@@ -12,6 +13,7 @@\n     private final Resources resources;\n     private final MerlinsBeard merlinsBeard;\n \n+    @Nullable\n     private MerlinSnackbar snackbar;\n \n     public NetworkStatusDisplayer(Resources resources, MerlinsBeard merlinsBeard) {\n@@ -20,31 +22,42 @@ public NetworkStatusDisplayer(Resources resources, MerlinsBeard merlinsBeard) {\n     }\n \n     public void displayPositiveMessage(@StringRes int messageResource, View attachTo) {\n-        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration);\n-        snackbar.withText(messageResource)\n+        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration)\n+                .withText(messageResource)\n                 .withTheme(new PositiveThemer())\n                 .show();\n     }\n \n     public void displayNegativeMessage(@StringRes int messageResource, View attachTo) {\n-        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration);\n-        snackbar.withText(messageResource)\n+        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration)\n+                .withText(messageResource)\n                 .withTheme(new NegativeThemer())\n                 .show();\n     }\n \n     public void displayNetworkSubtype(View attachTo) {\n         String subtype \u003d merlinsBeard.getMobileNetworkSubtypeName();\n-        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration);\n+        snackbar \u003d MerlinSnackbar.withDuration(resources, attachTo, R.integer.snackbar_duration)\n+                .withText(subtypeMessageFrom(subtype))\n+                .withTheme(subtypeThemerFrom(subtype))\n+                .show();\n+\n+    }\n+\n+    @StringRes\n+    private int subtypeMessageFrom(String subtype) {\n+        if (subtypeAbsent(subtype)) {\n+            return R.string.subtype_not_available;\n+        } else {\n+            return R.string.subtype_value;\n+        }\n+    }\n \n+    private Themer subtypeThemerFrom(String subtype) {\n         if (subtypeAbsent(subtype)) {\n-            snackbar.withText(R.string.subtype_not_available)\n-                    .withTheme(new NegativeThemer())\n-                    .show();\n+            return new NegativeThemer();\n         } else {\n-            snackbar.withText(resources.getString(R.string.subtype_value, subtype))\n-                    .withTheme(new PositiveThemer())\n-                    .show();\n+            return new PositiveThemer();\n         }\n     }\n "
        }
      ]
    }
  },
  {
    "name": "5202 snmp memory leak fix",
    "url": "https://github.com/openhab/openhab1-addons/pull/5208",
    "description": "Fixed Memory leak in SNMP Binding",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/openhab/openhab1-addons/commit/4ed5f59a5783b099accbf7256a628e891077a771",
      "files": [
        {
          "file_name": "bundles/binding/org.openhab.binding.snmp/src/main/java/org/openhab/binding/snmp/internal/SnmpBinding.java",
          "patch": "@@ -206,6 +206,12 @@ public void processPdu(CommandResponderEvent event) {\n      */\n     @Override\n     public void onResponse(ResponseEvent event) {\n+        // Always cancel async request when response has been received\n+        // otherwise a memory leak is created! Not canceling a request\n+        // immediately can be useful when sending a request to a broadcast\n+        // address.\n+        ((Snmp) event.getSource()).cancel(event.getRequest(), this);\n+\n         dispatchPdu(event.getPeerAddress(), event.getResponse());\n     }\n "
        }
      ]
    }
  },
  {
    "name": "Memory leak in user info or achievements view",
    "url": "https://github.com/FAForever/downlords-faf-client/issues/241",
    "description": "After opening userinfo/achievements 2-3 times the VM runs out of memory\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/FAForever/downlords-faf-client/commit/1966dbff7affd4a500b6e32be49970ce0372705a",
      "files": [
        {
          "file_name": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java",
          "patch": "@@ -147,7 +147,7 @@ public Number fromString(String string) {\n   @FXML\n   ImageView countryImageView;\n   @FXML\n-  Region userInfoRoot;\n+  Pane userInfoRoot;\n \n   @Resource\n   StatisticsService statisticsService;\n@@ -202,6 +202,21 @@ void initialize() {\n     );\n \n     rating90DaysXAxis.setTickLabelFormatter(DAY_AXIS_FORMATTER);\n+\n+    getRoot().sceneProperty().addListener((observable, oldValue, newValue) -\u003e {\n+      if (newValue !\u003d null) {\n+        newValue.getWindow().showingProperty().addListener((observable11, oldValue11, newValue11) -\u003e {\n+          if (!newValue11) {\n+            // Fixes #241\n+            userInfoRoot.getChildren().clear();\n+          }\n+        });\n+      }\n+    });\n+  }\n+\n+  public Region getRoot() {\n+    return userInfoRoot;\n   }\n \n   private void displayAvailableAchievements(List\u003cAchievementDefinition\u003e achievementDefinitions) {\n@@ -386,10 +401,6 @@ private static boolean isUnlocked(PlayerAchievement playerAchievement) {\n     return UNLOCKED.equals(playerAchievement.getState());\n   }\n \n-  public Region getRoot() {\n-    return userInfoRoot;\n-  }\n-\n   @FXML\n   void onRatingOver90DaysButtonClicked() {\n     loadStatistics(StatisticsType.GLOBAL_90_DAYS);"
        },
        {
          "file_name": "src/main/java/com/faforever/client/events/EventServiceImpl.java",
          "patch": "@@ -2,11 +2,13 @@\n \n import com.faforever.client.api.FafApiAccessor;\n import com.faforever.client.api.PlayerEvent;\n+import com.faforever.client.chat.PlayerInfoBean;\n import com.faforever.client.player.PlayerService;\n import com.faforever.client.task.AbstractPrioritizedTask;\n import com.faforever.client.task.TaskService;\n \n import javax.annotation.Resource;\n+import java.util.Collections;\n import java.util.Map;\n import java.util.concurrent.CompletableFuture;\n import java.util.stream.Collectors;\n@@ -25,7 +27,11 @@\n \n   @Override\n   public CompletableFuture\u003cMap\u003cString, PlayerEvent\u003e\u003e getPlayerEvents(String username) {\n-    int playerId \u003d playerService.getPlayerForUsername(username).getId();\n+    PlayerInfoBean playerForUsername \u003d playerService.getPlayerForUsername(username);\n+    if (playerForUsername \u003d\u003d null) {\n+      return CompletableFuture.completedFuture(Collections.emptyMap());\n+    }\n+    int playerId \u003d playerForUsername.getId();\n \n     return taskService.submitTask(new AbstractPrioritizedTask\u003cMap\u003cString, PlayerEvent\u003e\u003e(HIGH) {\n       @Override"
        },
        {
          "file_name": "src/main/java/com/faforever/client/legacy/StatisticsServerAccessorImpl.java",
          "patch": "@@ -1,6 +1,5 @@\n package com.faforever.client.legacy;\n \n-import com.faforever.client.config.CacheNames;\n import com.faforever.client.remote.AbstractServerAccessor;\n import com.faforever.client.remote.ClientMessageSerializer;\n import com.faforever.client.remote.ServerWriter;\n@@ -25,7 +24,6 @@\n import org.apache.commons.compress.utils.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.cache.annotation.Cacheable;\n import org.springframework.core.env.Environment;\n \n import javax.annotation.PreDestroy;\n@@ -62,7 +60,6 @@ public StatisticsServerAccessorImpl() {\n   }\n \n   @Override\n-  @Cacheable(value \u003d CacheNames.STATISTICS, key \u003d \"#type + #username\")\n   public CompletableFuture\u003cPlayerStatisticsMessage\u003e requestPlayerStatistics(StatisticsType type, String username) {\n     // FIXME this is not safe (as well aren\u0027t similar implementations in other accessors)\n     playerStatisticsFuture \u003d new CompletableFuture\u003c\u003e();"
        },
        {
          "file_name": "src/main/java/com/faforever/client/mod/ModServiceImpl.java",
          "patch": "@@ -1,7 +1,6 @@\n package com.faforever.client.mod;\n \n import com.faforever.client.api.FafApiAccessor;\n-import com.faforever.client.config.CacheNames;\n import com.faforever.client.preferences.PreferencesService;\n import com.faforever.client.remote.FafService;\n import com.faforever.client.task.TaskService;\n@@ -18,7 +17,6 @@\n import org.jetbrains.annotations.Nullable;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.cache.annotation.Cacheable;\n import org.springframework.context.ApplicationContext;\n \n import javax.annotation.PostConstruct;\n@@ -241,7 +239,6 @@ public Path getPathForMod(ModInfoBean mod) {\n   }\n \n   @Override\n-  @Cacheable(CacheNames.MODS)\n   public CompletableFuture\u003cList\u003cModInfoBean\u003e\u003e getAvailableMods() {\n     return CompletableFuture.supplyAsync(() -\u003e {\n           List\u003cModInfoBean\u003e availableMods \u003d fafApiAccessor.getMods();\n@@ -282,7 +279,6 @@ public Path getPathForMod(ModInfoBean mod) {\n   }\n \n   @Override\n-  @Cacheable(CacheNames.MODS)\n   public CompletableFuture\u003cList\u003cModInfoBean\u003e\u003e lookupMod(String string, int maxResults) {\n     return CompletableFuture.supplyAsync(() -\u003e {\n       try {"
        }
      ]
    }
  },
  {
    "name": "Memory leak",
    "url": "https://github.com/Harlber/Moose/issues/67",
    "description": "`UncaughtHandler` in `BaseActivity`",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Harlber/Moose/commit/f0d72d28728fc8cb8c6fafdc3854e76c167d7eae",
      "files": [
        {
          "file_name": "app/src/main/java/moose/com/ac/AppApplication.java",
          "patch": "@@ -2,11 +2,18 @@\n \n import android.app.Application;\n import android.content.Context;\n+import android.content.Intent;\n+import android.os.Build;\n \n import com.facebook.stetho.Stetho;\n import com.squareup.leakcanary.LeakCanary;\n import com.squareup.leakcanary.RefWatcher;\n \n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import moose.com.ac.common.Config;\n+import moose.com.ac.crash.CrashActivity;\n import moose.com.ac.data.DbHelper;\n import moose.com.ac.util.PreferenceUtil;\n /*\n@@ -34,11 +41,13 @@\n     private static DbHelper dbHelper;\n \n     private static RefWatcher refWatcher;\n+    private final UncaughtHandler mUncaughtHandler \u003d new UncaughtHandler();\n \n     @Override\n     public void onCreate() {\n         super.onCreate();\n         context \u003d this;\n+        Thread.setDefaultUncaughtExceptionHandler(mUncaughtHandler);\n         new PreferenceUtil(this);\n         dbHelper \u003d new DbHelper(this);\n         if (!isInUnitTests()) {\n@@ -68,4 +77,51 @@ public static DbHelper getDbHelper() {\n         return dbHelper \u003d\u003d null ? new DbHelper(context) : dbHelper;\n     }\n \n+    protected class UncaughtHandler implements Thread.UncaughtExceptionHandler {\n+        private final String LINE_SEPARATOR \u003d \"\\n\";\n+\n+        public UncaughtHandler() {\n+        }\n+\n+        @Override\n+        public void uncaughtException(Thread thread, Throwable exception) {\n+            StringWriter stackTrace \u003d new StringWriter();\n+            exception.printStackTrace(new PrintWriter(stackTrace));\n+            String errorReport \u003d \"******** CAUSE OF ERROR ********\\n\\n\" +\n+                    stackTrace.toString() +\n+                    \"\\n******** DEVICE INFORMATION ********\\n\" +\n+                    \"Brand: \" +\n+                    Build.BRAND +\n+                    LINE_SEPARATOR +\n+                    \"Device: \" +\n+                    Build.DEVICE +\n+                    LINE_SEPARATOR +\n+                    \"Model: \" +\n+                    Build.MODEL +\n+                    LINE_SEPARATOR +\n+                    \"Id: \" +\n+                    Build.ID +\n+                    LINE_SEPARATOR +\n+                    \"Product: \" +\n+                    Build.PRODUCT +\n+                    LINE_SEPARATOR +\n+                    \"\\n******** FIRMWARE ********\\n\" +\n+                    \"SDK: \" +\n+                    Build.VERSION.SDK +\n+                    LINE_SEPARATOR +\n+                    \"Release: \" +\n+                    Build.VERSION.RELEASE +\n+                    LINE_SEPARATOR +\n+                    \"Incremental: \" +\n+                    Build.VERSION.INCREMENTAL +\n+                    LINE_SEPARATOR;\n+\n+            Intent intent \u003d new Intent(context, CrashActivity.class);\n+            intent.putExtra(Config.CRASH, errorReport);\n+            startActivity(intent);\n+            android.os.Process.killProcess(android.os.Process.myPid());\n+            System.exit(10);\n+        }\n+    }\n+\n }"
        },
        {
          "file_name": "app/src/main/java/moose/com/ac/MainActivity.java",
          "patch": "@@ -26,6 +26,7 @@\n import android.view.MenuInflater;\n import android.view.MenuItem;\n import android.view.View;\n+import android.widget.FrameLayout;\n import android.widget.LinearLayout;\n import android.widget.TextView;\n \n@@ -69,7 +70,7 @@\n     private SearchView searchView;\n     private AppCompatTextView userName;\n     private CircleImageView logo;\n-    private LinearLayout linearLayout;\n+    private FrameLayout frame_layout;\n \n     private boolean searchShow \u003d false;\n \n@@ -179,7 +180,7 @@ private void initView() {\n         }\n         logo \u003d (CircleImageView) drawerHeader.findViewById(R.id.login_userimg);\n         userName \u003d (AppCompatTextView) drawerHeader.findViewById(R.id.login_username);\n-        linearLayout \u003d (LinearLayout) findViewById(R.id.linear_layout);\n+        frame_layout \u003d (FrameLayout) findViewById(R.id.frame_layout);\n \n         TextView textViewComplex \u003d (TextView) findViewById(R.id.tv_complex);\n         TextView textViewHot \u003d (TextView) findViewById(R.id.tv_hot);\n@@ -362,7 +363,7 @@ private void fetchDialog() {\n \n     @Deprecated\n     public void snack(String msg) {\n-        Snackbar snackBar \u003d Snackbar.make(linearLayout, msg, Snackbar.LENGTH_SHORT);\n+        Snackbar snackBar \u003d Snackbar.make(frame_layout, msg, Snackbar.LENGTH_SHORT);\n         snackBar.setAction(R.string.snackbar_action, v -\u003e {\n             snackBar.dismiss();\n         });"
        },
        {
          "file_name": "app/src/main/java/moose/com/ac/ui/BaseActivity.java",
          "patch": "@@ -46,60 +46,11 @@\n public abstract class BaseActivity extends RxAppCompatActivity {\n \n     protected Context mContext;\n-    protected final UncaughtHandler mUncaughtHandler \u003d new UncaughtHandler();\n-\n-    protected class UncaughtHandler implements Thread.UncaughtExceptionHandler {\n-        private final String LINE_SEPARATOR \u003d \"\\n\";\n-\n-        public UncaughtHandler() {\n-        }\n-\n-        @Override\n-        public void uncaughtException(Thread thread, Throwable exception) {\n-            StringWriter stackTrace \u003d new StringWriter();\n-            exception.printStackTrace(new PrintWriter(stackTrace));\n-            String errorReport \u003d \"******** CAUSE OF ERROR ********\\n\\n\" +\n-                    stackTrace.toString() +\n-                    \"\\n******** DEVICE INFORMATION ********\\n\" +\n-                    \"Brand: \" +\n-                    Build.BRAND +\n-                    LINE_SEPARATOR +\n-                    \"Device: \" +\n-                    Build.DEVICE +\n-                    LINE_SEPARATOR +\n-                    \"Model: \" +\n-                    Build.MODEL +\n-                    LINE_SEPARATOR +\n-                    \"Id: \" +\n-                    Build.ID +\n-                    LINE_SEPARATOR +\n-                    \"Product: \" +\n-                    Build.PRODUCT +\n-                    LINE_SEPARATOR +\n-                    \"\\n******** FIRMWARE ********\\n\" +\n-                    \"SDK: \" +\n-                    Build.VERSION.SDK +\n-                    LINE_SEPARATOR +\n-                    \"Release: \" +\n-                    Build.VERSION.RELEASE +\n-                    LINE_SEPARATOR +\n-                    \"Incremental: \" +\n-                    Build.VERSION.INCREMENTAL +\n-                    LINE_SEPARATOR;\n-\n-            Intent intent \u003d new Intent(mContext, CrashActivity.class);\n-            intent.putExtra(Config.CRASH, errorReport);\n-            mContext.startActivity(intent);\n-            android.os.Process.killProcess(android.os.Process.myPid());\n-            System.exit(10);\n-        }\n-    }\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         mContext \u003d this;\n-        Thread.setDefaultUncaughtExceptionHandler(mUncaughtHandler);\n         onInitView(savedInstanceState);\n     }\n "
        },
        {
          "file_name": "app/src/main/res/layout/activity_article_view.xml",
          "patch": "@@ -31,7 +31,7 @@\n         android:layout_marginTop\u003d\"?attr/actionBarSize\"\u003e--\u003e\n \n     \u003cFrameLayout\n-        android:id\u003d\"@+id/linear_layout\"\n+        android:id\u003d\"@+id/frame_layout\"\n         android:layout_width\u003d\"match_parent\"\n         android:layout_height\u003d\"match_parent\"\n         android:layout_marginBottom\u003d\"8dp\""
        }
      ]
    }
  },
  {
    "name": "Resource and memory leak when clicking \"Setup User Account\" more than once",
    "url": "https://github.com/Gocnak/Botnak/issues/116",
    "description": "The console will spew \"Address currently in use\" indefinitely until the process exhausts all memory. It also causes a ridiculous spike in CPU usage.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/Gocnak/Botnak/commit/76130ce07c185b8b0b435602e5719fc60076460d",
      "files": [
        {
          "file_name": "src/main/java/face/FaceManager.java",
          "patch": "@@ -188,13 +188,12 @@ public static void loadDefaultFaces() {\n             GUIMain.log(\"Loaded Twitch faces!\");\n             GUIMain.currentSettings.saveTwitchFaces();\n             doneWithTwitchFaces \u003d true;\n-\n-            //TODO if currentSettings.FFZFacesEnable\n-            handleFFZChannel(\"global\");//this corrects the global emotes and downloads them if we don\u0027t have them\n-            GUIMain.channelSet.stream().forEach(s -\u003e handleFFZChannel(s.replaceAll(\"#\", \"\")));\n-            doneWithFrankerFaces \u003d true;\n-            GUIMain.log(\"Loaded FrankerFaceZ faces!\");\n-            // END TODO\n+            if (GUIMain.currentSettings.ffzFacesEnable) {\n+                handleFFZChannel(\"global\");//this corrects the global emotes and downloads them if we don\u0027t have them\n+                GUIMain.channelSet.stream().forEach(s -\u003e handleFFZChannel(s.replaceAll(\"#\", \"\")));\n+                doneWithFrankerFaces \u003d true;\n+                GUIMain.log(\"Loaded FrankerFaceZ faces!\");\n+            }\n         });\n     }\n \n@@ -228,23 +227,24 @@ public static Response toggleFace(String faceName) {\n                 return toReturn;\n             }\n         }\n-        String errorMessage \u003d \"Could not find face \" + faceName + \" in the loaded Twitch faces \";\n-        //TODO if currentSettings.ffzEnable\n-        Set\u003cString\u003e channels \u003d ffzFaceMap.keySet();\n-        for (String chan : channels) {\n-            ArrayList\u003cFrankerFaceZ\u003e faces \u003d ffzFaceMap.get(chan);\n-            for (FrankerFaceZ f : faces) {\n-                if (f.getRegex().equalsIgnoreCase(faceName)) {\n-                    boolean newStatus \u003d !f.isEnabled();\n-                    f.setEnabled(newStatus);\n-                    toReturn.setResponseText(\"Toggled the FrankerFaceZ face \" + f.getRegex() + (newStatus ? \" ON\" : \" OFF\"));\n-                    toReturn.wasSuccessful();\n-                    return toReturn;\n+        String errorMessage \u003d \"Could not find face \" + faceName + \" in the loaded Twitch faces\";\n+        if (GUIMain.currentSettings.ffzFacesEnable) {\n+            Set\u003cString\u003e channels \u003d ffzFaceMap.keySet();\n+            for (String chan : channels) {\n+                ArrayList\u003cFrankerFaceZ\u003e faces \u003d ffzFaceMap.get(chan);\n+                for (FrankerFaceZ f : faces) {\n+                    if (f.getRegex().equalsIgnoreCase(faceName)) {\n+                        boolean newStatus \u003d !f.isEnabled();\n+                        f.setEnabled(newStatus);\n+                        toReturn.setResponseText(\"Toggled the FrankerFaceZ face \" + f.getRegex() + (newStatus ? \" ON\" : \" OFF\"));\n+                        toReturn.wasSuccessful();\n+                        return toReturn;\n+                    }\n                 }\n             }\n+            errorMessage +\u003d \" or loaded FrankerFaceZ faces\";\n         }\n-        errorMessage +\u003d \"or loaded FrankerFaceZ faces!\";\n-        //end TODO\n+        errorMessage +\u003d \"!\";\n         toReturn.setResponseText(errorMessage);\n         return toReturn;\n     }\n@@ -385,9 +385,9 @@ public static void handleFaces(Map\u003cInteger, Integer\u003e ranges, Map\u003cInteger, Simple\n                 break;\n             case FRANKER_FACE:\n                 if (doneWithFrankerFaces) {\n-                    //TODO check the option to loop through all the loaded ones, as per issue #81\n-                    //right now we just do loaded specific channel (if existing) \u0026 global\n-                    String[] channels \u003d {\"global\", channel};\n+                    String[] channels \u003d GUIMain.currentSettings.ffzFacesUseAll ?\n+                            ffzFaceMap.keySet().toArray(new String[ffzFaceMap.keySet().size()]) :\n+                            new String[]{\"global\", channel};\n                     for (String currentChannel : channels) {\n                         ArrayList\u003cFrankerFaceZ\u003e faces \u003d ffzFaceMap.get(currentChannel);\n                         if (faces !\u003d null) {"
        },
        {
          "file_name": "src/main/java/gui/AuthorizeAccountGUI.java",
          "patch": "@@ -16,7 +16,10 @@\n  * @author Nick K\n  */\n public class AuthorizeAccountGUI extends JFrame {\n+    private TokenListener listener;\n+\n     public AuthorizeAccountGUI() {\n+        listener \u003d null;\n         initComponents();\n         if (GUIMain.currentSettings.accountManager.getUserAccount() !\u003d null) {\n             accountNameField.setText(GUIMain.currentSettings.accountManager.getUserAccount().getName());\n@@ -36,8 +39,10 @@ private void authorizeButtonActionPerformed() {\n             if (boxEditStream.isSelected()) URL +\u003d \"+channel_editor\";\n             if (boxFollowed.isSelected()) URL +\u003d \"+user_follows_edit\";\n             Utils.openWebPage(URL);\n-            TokenListener tl \u003d new TokenListener(this);\n-            tl.start();\n+            if (listener \u003d\u003d null || !listener.isAlive()) {\n+                listener \u003d new TokenListener(this);\n+                listener.start();\n+            }\n         }\n     }\n \n@@ -107,7 +112,7 @@ private void initComponents() {\n         closeButton.setText(\"Close\");\n         closeButton.setFocusable(false);\n         closeButton.addActionListener(e -\u003e closeButtonActionPerformed());\n-\n+        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n         GroupLayout contentPaneLayout \u003d new GroupLayout(contentPane);\n         contentPane.setLayout(contentPaneLayout);\n         contentPaneLayout.setHorizontalGroup("
        },
        {
          "file_name": "src/main/java/gui/ChatPane.java",
          "patch": "@@ -103,14 +103,17 @@ public String getViewerCountString() {\n      * This is the main boolean to check to see if this tab should pulse.\n      * \u003cp\u003e\n      * This boolean checks to see if the tab wasn\u0027t toggled, if it\u0027s visible (not in a combined tab),\n-     * and if it\u0027s not selected. TODO check for global setting of pulsing tabs\n+     * and if it\u0027s not selected.\n+     *\n+     * The global setting will override this.\n      *\n      * @return True if this tab should pulse, else false.\n      */\n     public boolean shouldPulse() {\n         boolean shouldPulseLocal \u003d (this instanceof CombinedChatPane) ?\n                 ((CombinedChatPane) this).getActiveChatPane().shouldPulseLoc() : shouldPulseLoc;\n-        return shouldPulseLocal \u0026\u0026 isTabVisible() \u0026\u0026 GUIMain.channelPane.getSelectedIndex() !\u003d index \u0026\u0026 index !\u003d 0;\n+        return GUIMain.currentSettings.showTabPulses \u0026\u0026 shouldPulseLocal \u0026\u0026 isTabVisible() \u0026\u0026\n+                GUIMain.channelPane.getSelectedIndex() !\u003d index \u0026\u0026 index !\u003d 0;\n     }\n \n     private boolean shouldPulseLoc \u003d true;\n@@ -358,9 +361,10 @@ public void onMessage(MessageWrapper m, boolean showChannel) {\n             if (u.isGlobalMod()) {\n                 insertIcon(m, IconEnum.GLOBALMOD, null);\n             }\n-            //TODO if GUIMain.currentSettings.donorsEnabled\n-            if (u.isDonor()) {\n-                insertIcon(m, u.getDonationStatus(), null);\n+            if (GUIMain.currentSettings.showDonorIcons) {\n+                if (u.isDonor()) {\n+                    insertIcon(m, u.getDonationStatus(), null);\n+                }\n             }\n             if (u.isStaff()) {\n                 insertIcon(m, IconEnum.STAFF, null);\n@@ -465,8 +469,9 @@ private void findEmoticons(String text, Map\u003cInteger, Integer\u003e ranges, Map\u003cIntege\n         if (u !\u003d null \u0026\u0026 u.getEmotes() !\u003d null) {\n             FaceManager.handleFaces(ranges, rangesStyle, text, FaceManager.FACE_TYPE.TWITCH_FACE, null, u.getEmotes());\n         }\n-        //TODO if (currentSettings.FFZFaceEnabled)\n-        FaceManager.handleFaces(ranges, rangesStyle, text, FaceManager.FACE_TYPE.FRANKER_FACE, channel, null);\n+        if (GUIMain.currentSettings.ffzFacesEnable) {\n+            FaceManager.handleFaces(ranges, rangesStyle, text, FaceManager.FACE_TYPE.FRANKER_FACE, channel, null);\n+        }\n     }\n \n     protected void print(MessageWrapper wrapper, String string, SimpleAttributeSet set) {\n@@ -491,11 +496,11 @@ public void onIconMessage(MessageWrapper m, IconEnum status) {\n         try {\n             Message message \u003d m.getLocal();\n             print(m, \"\\n\", GUIMain.norm);\n-            for (int i \u003d 0; i \u003c 5; i++) {\n+            for (int i \u003d 0; i \u003c 3; i++) {\n                 insertIcon(m, status, (status \u003d\u003d IconEnum.SUBSCRIBER ? message.getChannel() : null));\n             }\n             print(m, \" \" + message.getContent() + (status \u003d\u003d IconEnum.SUBSCRIBER ? (\" (\" + (subCount + 1) + \") \") : \" \"), GUIMain.norm);\n-            for (int i \u003d 0; i \u003c 5; i++) {\n+            for (int i \u003d 0; i \u003c 3; i++) {\n                 insertIcon(m, status, (status \u003d\u003d IconEnum.SUBSCRIBER ? message.getChannel() : null));\n             }\n         } catch (Exception e) {\n@@ -592,7 +597,10 @@ public void deletePane() {\n         if (GUIMain.currentSettings.logChat) {\n             Utils.logChat(getText().split(\"\\\\n\"), chan, 2);\n         }\n-        //TODO ensure the viewer list \u0026 other popped out GUIs are deleted\n+        GUIViewerList list \u003d GUIMain.viewerLists.get(chan);\n+        if (list !\u003d null) {\n+            list.dispose();\n+        }\n         if (getPoppedOutPane() !\u003d null) {\n             getPoppedOutPane().dispose();\n         }"
        },
        {
          "file_name": "src/main/java/gui/DraggableTabbedPane.java",
          "patch": "@@ -186,11 +186,13 @@ public void mouseReleased(MouseEvent e) {\n                             menuItem.addActionListener(listener);\n                             popupMenu.add(menuItem);\n \n-                            //TODO if (GUIMain.currentSettings.pulseTabs) {\n-                            menuItem \u003d new JMenuItem(\"Toggle Tab Pulsing \" + (first ? (detected.shouldPulseLoc() ? \"OFF\" : \"ON\") : (detectedCombo.shouldPulseLoc() ? \"OFF\" : \"ON\")));\n-                            menuItem.addActionListener(listener);\n-                            popupMenu.add(menuItem);\n-                            //}\n+                            if (GUIMain.currentSettings.showTabPulses) {\n+                                menuItem \u003d new JMenuItem(\"Toggle Tab Pulsing \" +\n+                                        (first ? (detected.shouldPulseLoc() ? \"OFF\" : \"ON\") :\n+                                                (detectedCombo.shouldPulseLoc() ? \"OFF\" : \"ON\")));\n+                                menuItem.addActionListener(listener);\n+                                popupMenu.add(menuItem);\n+                            }\n                             if (first) {\n                                 menuItem \u003d new JMenuItem(\"Go to \" + detected.getChannel() + \"\u0027s channel\");\n                                 menuItem.addActionListener(listener);"
        },
        {
          "file_name": "src/main/java/gui/GUIAbout.java",
          "patch": "@@ -73,7 +73,7 @@ private void initComponents() {\n \n         //---- label4 ----\n         label4.setIcon(new ImageIcon(getClass().getResource(\"/image/icon70.png\")));\n-\n+        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n         GroupLayout contentPaneLayout \u003d new GroupLayout(contentPane);\n         contentPane.setLayout(contentPaneLayout);\n         contentPaneLayout.setHorizontalGroup("
        },
        {
          "file_name": "src/main/java/gui/GUIMain.java",
          "patch": "@@ -95,8 +95,9 @@ public GUIMain() {\n         heartbeat.addHeartbeatThread(new ViewerCount());\n         heartbeat.addHeartbeatThread(new UserManager());\n         heartbeat.addHeartbeatThread(new BanQueue());\n-        //TODO if (GUISettings.trackDonations)\n-        heartbeat.addHeartbeatThread(new DonationCheck());\n+        if (currentSettings.trackDonations) {\n+            heartbeat.addHeartbeatThread(new DonationCheck());\n+        }\n         heartbeat.start();\n     }\n "
        },
        {
          "file_name": "src/main/java/gui/GUISettings.java",
          "patch": "@@ -32,8 +32,8 @@\n \n     private static String lastSoundDir \u003d \"\";\n \n-    GUISounds_2 s2;\n-    AuthorizeAccountGUI mainAccGUI;\n+    private GUISounds_2 s2;\n+    private AuthorizeAccountGUI mainAccGUI;\n \n     public GUISettings() {\n         initComponents();"
        },
        {
          "file_name": "src/main/java/gui/GUIStreams.java",
          "patch": "@@ -115,7 +115,7 @@ public void keyReleased(KeyEvent e) {\n             label1.setOpaque(false);\n             scrollPane2.setViewportView(label1);\n         }\n-\n+        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n         GroupLayout contentPaneLayout \u003d new GroupLayout(contentPane);\n         contentPane.setLayout(contentPaneLayout);\n         contentPaneLayout.setHorizontalGroup(\n@@ -159,5 +159,4 @@ public void keyReleased(KeyEvent e) {\n     public static JScrollPane scrollPane2;\n     public static JTextArea label1;\n     // JFormDesigner - End of variables declaration  //GEN-END:variables\n-\n-}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "src/main/java/gui/GUIUpdate.java",
          "patch": "@@ -93,6 +93,7 @@ private void initComponents() {\n         skipButton.setFocusable(false);\n         skipButton.addActionListener(e -\u003e skipButtonActionPerformed());\n \n+        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n         GroupLayout contentPaneLayout \u003d new GroupLayout(contentPane);\n         contentPane.setLayout(contentPaneLayout);\n         contentPaneLayout.setHorizontalGroup(\n@@ -127,6 +128,4 @@ private void initComponents() {\n     public static JButton downloadButton;\n     public static JButton skipButton;\n     // JFormDesigner - End of variables declaration  //GEN-END:variables\n-\n-\n-}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "src/main/java/gui/GUIViewerList.java",
          "patch": "@@ -44,6 +44,7 @@ public GUIViewerList(String channel) {\n     public synchronized void updateCategory(ViewerType type, HashSet\u003cString\u003e names) {\n         final DefaultMutableTreeNode node;\n         Enumeration\u003cTreePath\u003e userPath \u003d getExpandedDescendants();\n+        int scrollAmount \u003d scrollPane.getVerticalScrollBar().getValue();\n         switch (type) {\n             case STAFF:\n                 staff.removeAllChildren();\n@@ -73,11 +74,11 @@ public synchronized void updateCategory(ViewerType type, HashSet\u003cString\u003e names)\n             if (!names.isEmpty()) {\n                 names.stream().sorted().forEach(s -\u003e node.add(new DefaultMutableTreeNode(s)));\n             }\n-            updateRoot(userPath);\n+            updateRoot(userPath, scrollAmount);\n         }\n     }\n \n-    private synchronized void updateRoot(Enumeration\u003cTreePath\u003e userPath) {\n+    private synchronized void updateRoot(Enumeration\u003cTreePath\u003e userPath, int scrollAmount) {\n         DefaultMutableTreeNode root \u003d default_root;\n         root.removeAllChildren();\n         if (staff.getChildCount() \u003e 0) root.add(staff);\n@@ -91,6 +92,7 @@ private synchronized void updateRoot(Enumeration\u003cTreePath\u003e userPath) {\n                 viewerTree.expandPath(userPath.nextElement());\n             }\n         }\n+        scrollPane.getVerticalScrollBar().setValue(scrollAmount);\n     }\n \n     private void setViewerTreeModel(DefaultTreeModel model) {\n@@ -161,7 +163,7 @@ private void initComponents(String channel) {\n         // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents\n         // Generated using JFormDesigner Evaluation license - Nick K\n         searchBar \u003d new JTextField();\n-        JScrollPane scrollPane2 \u003d new JScrollPane();\n+        scrollPane \u003d new JScrollPane();\n         viewerTree \u003d new JTree();\n \n         //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d this \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n@@ -220,22 +222,22 @@ public void mouseReleased(MouseEvent e) {\n                     }\n                 }\n             });\n-            scrollPane2.setViewportView(viewerTree);\n+            scrollPane.setViewportView(viewerTree);\n         }\n         setMinimumSize(new Dimension(250, 490));\n         GroupLayout contentPaneLayout \u003d new GroupLayout(contentPane);\n         contentPane.setLayout(contentPaneLayout);\n         contentPaneLayout.setHorizontalGroup(\n                 contentPaneLayout.createParallelGroup()\n                         .addComponent(searchBar, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)\n-                        .addComponent(scrollPane2, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)\n+                        .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)\n         );\n         contentPaneLayout.setVerticalGroup(\n                 contentPaneLayout.createParallelGroup()\n                         .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()\n                                 .addComponent(searchBar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                                 .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)\n-                                .addComponent(scrollPane2, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))\n+                                .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))\n         );\n         addWindowListener(new WindowAdapter() {\n             @Override\n@@ -252,4 +254,5 @@ public void windowClosing(WindowEvent e) {\n     // Generated using JFormDesigner Evaluation license - Nick K\n     private JTextField searchBar;\n     private JTree viewerTree;\n+    private JScrollPane scrollPane;\n }\n\\ No newline at end of file"
        },
        {
          "file_name": "src/main/java/gui/TokenListener.java",
          "patch": "@@ -41,6 +41,7 @@ public void run() {\n                 }\n             } catch (Exception e) {\n                 GUIMain.log(e);\n+                break;\n             }\n         }\n     }\n@@ -73,4 +74,4 @@ private String makeHeader() {\n         header +\u003d \"Content-Type: text/html; charset\u003dUTF-8\\n\\n\";\n         return header;\n     }\n-}\n+}\n\\ No newline at end of file"
        },
        {
          "file_name": "src/main/java/irc/IRCBot.java",
          "patch": "@@ -309,7 +309,7 @@ public void onMessage(String channel, String sender, String message) {\n                             break;\n                         case PLAY_ADVERT:\n                             if (key !\u003d null) {\n-                                playAdvert(key, first, channel);\n+                                commandResponse \u003d playAdvert(key, first, channel);\n                             }\n                             break;\n                         case START_RAFFLE:\n@@ -437,14 +437,16 @@ public void onMessage(String channel, String sender, String message) {\n                             commandResponse \u003d APIRequests.Twitch.getUptimeString(channel.substring(1));\n                             break;\n                         case SEE_PREV_SOUND_DON:\n-                            //TODO if currentSettings.seePreviousDonEnable\n-                            if (GUIMain.currentSettings.loadedDonationSounds)\n-                                commandResponse \u003d SoundEngine.getEngine().getLastDonationSound();\n+                            if (GUIMain.currentSettings.showPreviousDonSound) {\n+                                if (GUIMain.currentSettings.loadedDonationSounds)\n+                                    commandResponse \u003d SoundEngine.getEngine().getLastDonationSound();\n+                            }\n                             break;\n                         case SEE_PREV_SOUND_SUB:\n-                            //TODO if currentSettings.seePreviousSubEnable\n-                            if (GUIMain.currentSettings.loadedSubSounds)\n-                                commandResponse \u003d SoundEngine.getEngine().getLastSubSound();\n+                            if (GUIMain.currentSettings.showPreviousSubSound) {\n+                                if (GUIMain.currentSettings.loadedSubSounds)\n+                                    commandResponse \u003d SoundEngine.getEngine().getLastSubSound();\n+                            }\n                             break;\n                         case SEE_OR_SET_REPLY_TYPE:\n                             commandResponse \u003d parseReplyType(first, botnakUserName);\n@@ -529,7 +531,7 @@ public Response playAdvert(Oauth key, String first, String channel) {\n                     SimpleDateFormat sdf \u003d new SimpleDateFormat(\"m:ss\");\n                     Date d \u003d new Date(diff);\n                     Date toPlay \u003d new Date(480000 - diff);\n-                    r.setResponseText(\"Error playing last ad! Last ad was was only \" + sdf.format(d)\n+                    r.setResponseText(\"Error playing advertisement! Last ad was was only \" + sdf.format(d)\n                             + \" ago! You must wait \" + sdf.format(toPlay) + \" to play another ad!\");\n                 }\n             }"
        },
        {
          "file_name": "src/main/java/irc/IRCViewer.java",
          "patch": "@@ -25,9 +25,10 @@ public void doConnect(String channel) {\n         GUIMain.currentSettings.accountManager.addTask(new Task(getViewer(), Task.Type.JOIN_CHANNEL, channel));\n         if (GUIMain.currentSettings.logChat) Utils.logChat(null, channel, 0);\n         if (!GUIMain.channelSet.contains(channel)) GUIMain.channelSet.add(channel);\n-        //TODO if currentSettings.FFZFacesEnable\n-        if (FaceManager.doneWithFrankerFaces)\n-            FaceManager.handleFFZChannel(channel.substring(1));\n+        if (GUIMain.currentSettings.ffzFacesEnable) {\n+            if (FaceManager.doneWithFrankerFaces)\n+                FaceManager.handleFFZChannel(channel.substring(1));\n+        }\n     }\n \n     /**\n@@ -126,7 +127,9 @@ public synchronized void onClearChat(String channel, String name) {\n         if (name !\u003d null) {\n             BanQueue.addToMap(channel, name);\n         } else {\n-            //TODO perhaps add the option to actually clear the chat based on user setting?\n+            if (GUIMain.currentSettings.actuallyClearChat) {\n+                GUIMain.getChatPane(channel).cleanupChat();\n+            }\n             MessageQueue.addMessage(new Message().setChannel(channel).setType(Message.MessageType.BAN_NOTIFY)\n                     .setContent(\"The chat was cleared by a moderator. (Prevented by Botnak)\"));\n         }"
        },
        {
          "file_name": "src/main/java/thread/heartbeat/UserManager.java",
          "patch": "@@ -53,45 +53,22 @@ public void beat() {\n                     Utils.parseBufferedReader(br, stanSB, false);\n                     JSONObject site \u003d new JSONObject(stanSB.toString());\n                     JSONObject chatters \u003d site.getJSONObject(\"chatters\");\n+\n                     JSONArray mods \u003d chatters.getJSONArray(\"moderators\");\n-                    for (int i \u003d 0; i \u003c mods.length(); i++) {\n-                        collectedUsers.add(mods.getString(i));\n-                    }\n-                    list.updateCategory(GUIViewerList.ViewerType.MOD, collectedUsers);\n-                    collectedUsers.clear();\n+                    readAndUpdate(mods, list, GUIViewerList.ViewerType.MOD);\n+\n                     JSONArray staff \u003d chatters.getJSONArray(\"staff\");\n-                    for (int i \u003d 0; i \u003c staff.length(); i++) {\n-                        User u \u003d new User(staff.getString(i));\n-                        u.setStaff(true);\n-                        addUser(u);\n-                        collectedUsers.add(staff.getString(i));\n-                    }\n-                    list.updateCategory(GUIViewerList.ViewerType.STAFF, collectedUsers);\n-                    collectedUsers.clear();\n+                    readAndUpdate(staff, list, GUIViewerList.ViewerType.STAFF);\n+\n                     JSONArray admins \u003d chatters.getJSONArray(\"admins\");\n-                    for (int i \u003d 0; i \u003c admins.length(); i++) {\n-                        User u \u003d new User(admins.getString(i));\n-                        u.setAdmin(true);\n-                        addUser(u);\n-                        collectedUsers.add(admins.getString(i));\n-                    }\n-                    list.updateCategory(GUIViewerList.ViewerType.ADMIN, collectedUsers);\n-                    collectedUsers.clear();\n+                    readAndUpdate(admins, list, GUIViewerList.ViewerType.ADMIN);\n+\n                     JSONArray global_mods \u003d chatters.getJSONArray(\"global_mods\");\n-                    for (int i \u003d 0; i \u003c global_mods.length(); i++) {\n-                        User u \u003d new User(global_mods.getString(i));\n-                        u.setGlobalMod(true);\n-                        addUser(u);\n-                        collectedUsers.add(global_mods.getString(i));\n-                    }\n-                    list.updateCategory(GUIViewerList.ViewerType.GLOBAL_MOD, collectedUsers);\n-                    collectedUsers.clear();\n+                    readAndUpdate(global_mods, list, GUIViewerList.ViewerType.GLOBAL_MOD);\n+\n                     JSONArray viewers \u003d chatters.getJSONArray(\"viewers\");\n-                    for (int i \u003d 0; i \u003c viewers.length(); i++) {\n-                        collectedUsers.add(viewers.getString(i));\n-                    }\n-                    list.updateCategory(GUIViewerList.ViewerType.VIEWER, collectedUsers);\n-                    collectedUsers.clear();\n+                    readAndUpdate(viewers, list, GUIViewerList.ViewerType.VIEWER);\n+\n                     Thread.sleep(750);\n                 } catch (Exception e) {\n                     e.printStackTrace();\n@@ -100,6 +77,29 @@ public void beat() {\n         }\n     }\n \n+    private void readAndUpdate(JSONArray toRead, GUIViewerList list, GUIViewerList.ViewerType type) {\n+        for (int i \u003d 0; i \u003c toRead.length(); i++) {\n+            User u \u003d new User(toRead.getString(i));\n+            switch (type) {\n+                case GLOBAL_MOD:\n+                    u.setGlobalMod(true);\n+                    break;\n+                case ADMIN:\n+                    u.setAdmin(true);\n+                    break;\n+                case STAFF:\n+                    u.setStaff(true);\n+                    break;\n+                default:\n+                    break;\n+            }\n+            addUser(u);\n+            collectedUsers.add(toRead.getString(i));\n+        }\n+        list.updateCategory(type, collectedUsers);\n+        collectedUsers.clear();\n+    }\n+\n     private void addUser(User u) {\n         if (getChannelManager().getUser(u.getNick(), false) \u003d\u003d null)\n             getChannelManager().addUser(u);"
        },
        {
          "file_name": "src/main/java/util/Utils.java",
          "patch": "@@ -197,7 +197,7 @@ public static void checkAndAdd(ArrayList\u003cString\u003e list, String... toAdd) {\n     }\n \n     /**\n-     * Checks to see if the file(s)  is (are) actually existing and non-blank.\n+     * Checks to see if the file(s) is (are) actually existing and non-blank.\n      *\n      * @param files The path(s) to the file(s) to check.\n      * @return true if (all) the file(s) exist(s)\n@@ -247,7 +247,11 @@ public static void logChat(String[] message, String channel, int type) {\n     }\n \n     /**\n-     * Removes a file extension from a path.\n+     * Removes the last file extension from a path.\n+     *\n+     * Note that if the string contains multiple extensions, this will only remove the last one.\n+     *\n+     * Ex: \"portal.png.exe.java\" becomes \"portal.png.exe\" after this method returns.\n      *\n      * @param s The path to a file, or the file name with its extension.\n      * @return The file/path name without the extension."
        },
        {
          "file_name": "src/main/java/util/settings/Settings.java",
          "patch": "@@ -111,6 +111,19 @@\n     public String date;\n     public float soundVolumeGain \u003d 100;\n \n+\n+    //NEW SETTINGS, TODO categorize later\n+    public boolean ffzFacesEnable \u003d true;//TODO incorporate\n+    public boolean ffzFacesUseAll \u003d false;//TODO implement\n+    public boolean actuallyClearChat \u003d true;//TODO incorporate\n+    public boolean showDonorIcons \u003d true; //TODO incorporate\n+    public boolean showTabPulses \u003d true;//TODO implement\n+    public boolean showPreviousSubSound \u003d true;\n+    public boolean showPreviousDonSound \u003d true;\n+    public boolean botAnnounceSubscribers \u003d true;\n+    public boolean trackDonations \u003d true;\n+\n+\n     public Settings() {//default account\n         modIcon \u003d Settings.class.getResource(\"/image/mod.png\");\n         broadIcon \u003d Settings.class.getResource(\"/image/broad.png\");\n@@ -120,7 +133,6 @@ public Settings() {//default account\n         long time \u003d System.currentTimeMillis();\n         SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yy\");\n         date \u003d sdf.format(new Date(time));\n-        logDir.mkdirs();\n         font \u003d new Font(\"Calibri\", Font.PLAIN, 18);\n         defaultDir.mkdirs();\n         faceDir.mkdirs();\n@@ -129,8 +141,6 @@ public Settings() {//default account\n         subIconsDir.mkdirs();\n         subSoundDir.mkdirs();\n         donationSoundDir.mkdirs();\n-        //TODO if frankerFaceZEnable\n-        frankerFaceZDir.mkdirs();\n     }\n \n     /**\n@@ -210,10 +220,13 @@ public void load() {\n                 GUIMain.log(\"Loading name faces...\");\n                 loadNameFaces();\n             }\n-            //TODO if frankerFaceZEnable\n-            if (frankerFaceZDir.exists() \u0026\u0026 frankerFaceZDir.length() \u003e 0) {\n-                GUIMain.log(\"Loading FrankerFaceZ faces...\");\n-                loadFFZFaces();\n+            if (ffzFacesEnable) {\n+                frankerFaceZDir.mkdirs();\n+                File[] files \u003d frankerFaceZDir.listFiles();\n+                if (files !\u003d null \u0026\u0026 files.length \u003e 0) {\n+                    GUIMain.log(\"Loading FrankerFaceZ faces...\");\n+                    loadFFZFaces();\n+                }\n             }\n             GUIMain.log(\"Loading keywords...\");\n             loadKeywords();//first time boot adds the username\n@@ -323,6 +336,7 @@ public void loadPropData(int type) {\n                 }\n                 cleanupChat \u003d Boolean.parseBoolean(p.getProperty(\"ClearChat\", \"true\"));\n                 logChat \u003d Boolean.parseBoolean(p.getProperty(\"LogChat\", \"false\"));\n+                if (logChat) logDir.mkdirs();\n                 chatMax \u003d Integer.parseInt(p.getProperty(\"MaxChat\", \"100\"));\n                 faceMaxHeight \u003d Integer.parseInt(p.getProperty(\"FaceMaxHeight\", \"20\"));\n                 font \u003d Utils.stringToFont(p.getProperty(\"Font\").split(\",\"));"
        },
        {
          "file_name": "src/main/java/util/settings/SubscriberManager.java",
          "patch": "@@ -118,8 +118,9 @@ public void updateSubscriber(User u, String channel, boolean currentlyActive) {\n \n                     //or twitchnotify could have been a douchenozzle and did not send the message\n                     String content \u003d s.get().getName() + \" has RE-subscribed offline!\";\n-                    //TODO if currentSettings.sendSubMessages {\n-                    GUIMain.currentSettings.accountManager.getBot().sendMessage(channel, \".me \" + u.getNick() + \" has just RE-subscribed!\");\n+                    if (GUIMain.currentSettings.botAnnounceSubscribers) {\n+                        GUIMain.currentSettings.accountManager.getBot().sendMessage(channel, \".me \" + u.getNick() + \" has just RE-subscribed!\");\n+                    }\n                     MessageQueue.addMessage(new Message().setContent(content).setType(Message.MessageType.SUB_NOTIFY).setChannel(channel));\n                     s.get().resetStreak();\n                     s.get().setStarted(LocalDateTime.now());\n@@ -133,8 +134,9 @@ public void updateSubscriber(User u, String channel, boolean currentlyActive) {\n                 // this is a new, offline sub. Botnak is going to throw a new sub message just\n                 // as if they had subbed the instant they sent the message\n                 //or twitchnotify could have been a douchenozzle and did not send the message\n-                //TODO if currentSettings.sendSubMessages {\n-                GUIMain.currentSettings.accountManager.getBot().sendMessage(channel, \".me \" + u.getNick() + \" has just subscribed!\");\n+                if (GUIMain.currentSettings.botAnnounceSubscribers) {\n+                    GUIMain.currentSettings.accountManager.getBot().sendMessage(channel, \".me \" + u.getNick() + \" has just subscribed!\");\n+                }\n                 String content \u003d u.getNick().toLowerCase() + \" has subscribed offline!\";\n                 MessageQueue.addMessage(new Message().setContent(content).setType(Message.MessageType.SUB_NOTIFY).setChannel(channel));\n                 addSub(new Subscriber(u.getNick().toLowerCase(), LocalDateTime.now(), true, 0));"
        }
      ]
    }
  },
  {
    "name": "Avoid Memory Leak",
    "url": "https://github.com/clintonhealthaccess/chailmis-android/pull/189",
    "description": "1. Change DbUtils to share a connection between DAO. Then the DAO can be cached and reused.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/clintonhealthaccess/chailmis-android/commit/8797db146d836484190c8fe4d1a34188d84dec88",
      "files": [
        {
          "file_name": "app/src/main/java/org/clintonhealthaccess/lmis/app/persistence/DbUtil.java",
          "patch": "@@ -115,7 +115,13 @@ public ReturnType call() throws Exception {\n     }\n \n     public static \u003cT\u003e Dao\u003cT, String\u003e initialiseDao(SQLiteOpenHelper openHelper, Class\u003cT\u003e domainClass) throws SQLException {\n-        ConnectionSource connectionSource \u003d new AndroidConnectionSource(openHelper);\n+        ConnectionSource connectionSource;\n+        if(openHelper instanceof  LmisSqliteOpenHelper){\n+            LmisSqliteOpenHelper helper \u003d (LmisSqliteOpenHelper) openHelper;\n+            connectionSource \u003d helper.getConnectionSource();\n+        }else{\n+            connectionSource \u003d new AndroidConnectionSource(openHelper);\n+        }\n         return createDao(connectionSource, domainClass);\n     }\n }"
        }
      ]
    }
  },
  {
    "name": "Memory leak from assigning listeners",
    "url": "https://github.com/josephroque/bowling-companion/issues/36",
    "description": "In most of the fragments, a listener is assigned when the fragment is attached to the activity, but the references are never released. This causes a potential memory leak if the system cannot gc.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/josephroque/bowling-companion/commit/061b05edf84da4bb1b8531534ee43496d2dd4dd3",
      "files": [
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/MainActivity.java",
          "patch": "@@ -90,10 +90,10 @@\n         implements\n         FragmentManager.OnBackStackChangedListener,\n         Theme.ChangeableTheme,\n-        BowlerFragment.OnBowlerSelectedListener,\n-        LeagueEventFragment.OnLeagueSelectedListener,\n-        SeriesFragment.SeriesListener,\n-        GameFragment.GameFragmentCallbacks,\n+        BowlerFragment.BowlerCallback,\n+        LeagueEventFragment.LeagueEventCallback,\n+        SeriesFragment.SeriesCallback,\n+        GameFragment.GameFragmentCallback,\n         NavigationDrawerAdapter.NavigationCallback\n {\n "
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/BowlerFragment.java",
          "patch": "@@ -49,7 +49,8 @@\n /**\n  * Created by Joseph Roque on 15-03-13. Manages the UI to display information about the bowlers\n  * being tracked by the application, and offers a callback interface {@link\n- * BowlerFragment.OnBowlerSelectedListener} for handling interactions.\n+ * ca.josephroque.bowlingcompanion.fragment.BowlerFragment.BowlerCallback} for handling\n+ * interactions.\n  */\n @SuppressWarnings(\"Convert2Lambda\")\n public class BowlerFragment\n@@ -69,11 +70,11 @@\n     private NameAverageAdapter\u003cBowler\u003e mAdapterBowlers;\n \n     /** Callback listener for user events related to bowlers. */\n-    private OnBowlerSelectedListener mBowlerSelectedListener;\n+    private BowlerCallback mBowlerCallback;\n     /** Callback listener for user events related to leagues. */\n-    private LeagueEventFragment.OnLeagueSelectedListener mLeagueSelectedListener;\n+    private LeagueEventFragment.LeagueEventCallback mLeagueSelectedCallback;\n     /** Callback listener for user events related to series. */\n-    private SeriesFragment.SeriesListener mSeriesListener;\n+    private SeriesFragment.SeriesCallback mSeriesCallback;\n \n     /** List to store bowler data from bowler table in database. */\n     private List\u003cBowler\u003e mListBowlers;\n@@ -119,9 +120,9 @@ public void onAttach(Activity activity)\n          */\n         try\n         {\n-            mBowlerSelectedListener \u003d (OnBowlerSelectedListener) activity;\n-            mLeagueSelectedListener \u003d (LeagueEventFragment.OnLeagueSelectedListener) activity;\n-            mSeriesListener \u003d (SeriesFragment.SeriesListener) activity;\n+            mBowlerCallback \u003d (BowlerCallback) activity;\n+            mLeagueSelectedCallback \u003d (LeagueEventFragment.LeagueEventCallback) activity;\n+            mSeriesCallback \u003d (SeriesFragment.SeriesCallback) activity;\n         }\n         catch (ClassCastException ex)\n         {\n@@ -132,6 +133,15 @@ public void onAttach(Activity activity)\n     }\n \n     @Override\n+    public void onDetach()\n+    {\n+        super.onDetach();\n+        mBowlerCallback \u003d null;\n+        mLeagueSelectedCallback \u003d null;\n+        mSeriesCallback \u003d null;\n+    }\n+\n+    @Override\n     public View onCreateView(LayoutInflater inflater,\n                              ViewGroup container,\n                              Bundle savedInstanceState)\n@@ -375,28 +385,42 @@ public void onClick(DialogInterface dialog, int which)\n                                 Bowler quickBowler \u003d new Bowler(mQuickBowlerId,\n                                         mQuickBowlerName,\n                                         (short) 0);\n-                                mBowlerSelectedListener.onBowlerSelected(quickBowler, false, true);\n-                                mLeagueSelectedListener.onLeagueSelected(new LeagueEvent(\n-                                                mQuickLeagueId,\n-                                                mQuickLeagueName,\n-                                                (short) 0,\n-                                                mQuickNumberOfGames),\n-                                        false);\n-                                mSeriesListener.onCreateNewSeries(false);\n+                                if (mBowlerCallback !\u003d null\n+                                        \u0026\u0026 mLeagueSelectedCallback !\u003d null\n+                                        \u0026\u0026 mSeriesCallback !\u003d null)\n+                                {\n+                                    mBowlerCallback.onBowlerSelected(quickBowler,\n+                                            false,\n+                                            true);\n+                                    mLeagueSelectedCallback.onLeagueSelected(new LeagueEvent(\n+                                                    mQuickLeagueId,\n+                                                    mQuickLeagueName,\n+                                                    (short) 0,\n+                                                    mQuickNumberOfGames),\n+                                            false);\n+                                    mSeriesCallback.onCreateNewSeries(false);\n+                                }\n                             }\n                             else\n                             {\n                                 Bowler recentBowler \u003d new Bowler(mRecentBowlerId,\n                                         mRecentBowlerName,\n                                         (short) 0);\n-                                mBowlerSelectedListener.onBowlerSelected(recentBowler, false, true);\n-                                mLeagueSelectedListener.onLeagueSelected(new LeagueEvent(\n-                                                mRecentLeagueId,\n-                                                mRecentLeagueName,\n-                                                (short) 0,\n-                                                mRecentNumberOfGames),\n-                                        false);\n-                                mSeriesListener.onCreateNewSeries(false);\n+                                if (mBowlerCallback !\u003d null\n+                                        \u0026\u0026 mLeagueSelectedCallback !\u003d null\n+                                        \u0026\u0026 mSeriesCallback !\u003d null)\n+                                {\n+                                    mBowlerCallback.onBowlerSelected(recentBowler,\n+                                            false,\n+                                            true);\n+                                    mLeagueSelectedCallback.onLeagueSelected(new LeagueEvent(\n+                                                    mRecentLeagueId,\n+                                                    mRecentLeagueName,\n+                                                    (short) 0,\n+                                                    mRecentNumberOfGames),\n+                                            false);\n+                                    mSeriesCallback.onCreateNewSeries(false);\n+                                }\n                             }\n                             dialog.dismiss();\n                         }\n@@ -760,7 +784,8 @@ protected void onPostExecute(Bowler result)\n                 return;\n \n             //Creates new instance of LeagueEventFragment for bowler\n-            fragment.mBowlerSelectedListener.onBowlerSelected(result, true, false);\n+            if (fragment.mBowlerCallback !\u003d null)\n+                fragment.mBowlerCallback.onBowlerSelected(result, true, false);\n         }\n     }\n \n@@ -860,7 +885,7 @@ protected void onPostExecute(Bowler newBowler)\n      * Container Activity must implement this interface to allow LeagueEventFragment to be loaded\n      * when a bowler is selected.\n      */\n-    public interface OnBowlerSelectedListener\n+    public interface BowlerCallback\n     {\n \n         /**"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/GameFragment.java",
          "patch": "@@ -49,7 +49,8 @@\n /**\n  * Created by Joseph Roque on 15-03-18. Manages the UI to display information about the games being\n  * tracked by the application, and offers a callback interface {@link\n- * GameFragment.GameFragmentCallbacks} for handling interactions.\n+ * ca.josephroque.bowlingcompanion.fragment.GameFragment.GameFragmentCallback} for handling\n+ * interactions.\n  */\n @SuppressWarnings({\"Convert2Lambda\", \"CheckStyle\"})\n public class GameFragment\n@@ -112,7 +113,7 @@\n     private TextView mTextViewAutoAdvance;\n \n     /** Instance of callback interface for handling user events. */\n-    private GameFragmentCallbacks mCallback;\n+    private GameFragmentCallback mGameCallback;\n \n     /** Ids which represent current games that are available to be edited. */\n     private long[] mGameIds;\n@@ -258,7 +259,8 @@ public void run()\n                                 alterPinState((byte) i, false);\n                         }\n                     }\n-                    mCallback.resetAutoAdvanceTimer();\n+                    if (mGameCallback !\u003d null)\n+                        mGameCallback.resetAutoAdvanceTimer();\n                     break;\n                 default:\n                     // does nothing\n@@ -277,7 +279,7 @@ public void onAttach(Activity activity)\n          */\n         try\n         {\n-            mCallback \u003d (GameFragmentCallbacks) activity;\n+            mGameCallback \u003d (GameFragmentCallback) activity;\n         }\n         catch (ClassCastException ex)\n         {\n@@ -287,6 +289,13 @@ public void onAttach(Activity activity)\n     }\n \n     @Override\n+    public void onDetach()\n+    {\n+        super.onDetach();\n+        mGameCallback \u003d null;\n+    }\n+\n+    @Override\n     public void onCreate(Bundle savedInstanceState)\n     {\n         super.onCreate(savedInstanceState);\n@@ -532,17 +541,20 @@ public void onResume()\n                 ? Integer.valueOf(strDelay.substring(0, strDelay.indexOf(\" \")))\n                 : 0;\n \n-        mCallback.setAutoAdvanceConditions(mImageViewNextBall,\n-                mTextViewAutoAdvance,\n-                autoAdvanceEnabled,\n-                autoAdvanceDelay);\n-        mCallback.stopAutoAdvanceTimer();\n-\n-        //Loads scores of games being edited from database\n-        loadInitialScores();\n-        //Loads first game to edit\n-        loadGameFromDatabase(mCurrentGame);\n-        mCallback.loadGameScoresForDrawer(mGameIds);\n+        if (mGameCallback !\u003d null)\n+        {\n+            mGameCallback.setAutoAdvanceConditions(mImageViewNextBall,\n+                    mTextViewAutoAdvance,\n+                    autoAdvanceEnabled,\n+                    autoAdvanceDelay);\n+            mGameCallback.stopAutoAdvanceTimer();\n+\n+            //Loads scores of games being edited from database\n+            loadInitialScores();\n+            //Loads first game to edit\n+            loadGameFromDatabase(mCurrentGame);\n+            mGameCallback.loadGameScoresForDrawer(mGameIds);\n+        }\n     }\n \n     @Override\n@@ -639,7 +651,8 @@ public boolean onOptionsItemSelected(MenuItem item)\n \n             case R.id.action_series_stats:\n                 //Displays all stats related to series of games\n-                mCallback.onSeriesStatsOpened();\n+                if (mGameCallback !\u003d null)\n+                    mGameCallback.onSeriesStatsOpened();\n                 return true;\n \n             case R.id.action_reset_game:\n@@ -658,7 +671,9 @@ public boolean onOptionsItemSelected(MenuItem item)\n \n             case R.id.action_stats:\n                 //Displays all stats related to current game\n-                mCallback.onGameStatsOpened(mGameIds[mCurrentGame], (byte) (mCurrentGame + 1));\n+                if (mGameCallback !\u003d null)\n+                    mGameCallback.onGameStatsOpened(mGameIds[mCurrentGame],\n+                            (byte) (mCurrentGame + 1));\n                 return true;\n \n             default:\n@@ -708,8 +723,9 @@ public void onClick(DialogInterface dialog, int which)\n         mGameScoresMinusFouls[mCurrentGame] \u003d scoreToSet;\n         clearAllText(false);\n         getActivity().supportInvalidateOptionsMenu();\n-        mCallback.updateGameScore((byte) (mCurrentGame + 1),\n-                mGameScoresMinusFouls[mCurrentGame]);\n+        if (mGameCallback !\u003d null)\n+            mGameCallback.updateGameScore((byte) (mCurrentGame + 1),\n+                    mGameScoresMinusFouls[mCurrentGame]);\n         saveGame(true);\n     }\n \n@@ -767,7 +783,8 @@ public void onClick(View v)\n                             updateBalls(mCurrentFrame, (byte) 0);\n                         updateScore();\n                         updateFrameColor(false);\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n                     default:\n                         throw new RuntimeException(\"Invalid frame id\");\n@@ -789,7 +806,8 @@ public void onClick(View v)\n                             showSetMatchPlayLockedDialog();\n                         else\n                             showSetMatchPlayDialog();\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_lock:\n@@ -798,7 +816,8 @@ public void onClick(View v)\n                         if (mManualScoreSet[mCurrentGame])\n                             return;\n                         setGameLocked(!mGameLocked[mCurrentGame]);\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_foul:\n@@ -807,7 +826,8 @@ public void onClick(View v)\n                             return;\n                         mFouls[mCurrentFrame][mCurrentBall] \u003d !mFouls[mCurrentFrame][mCurrentBall];\n                         updateFouls();\n-                        mCallback.resetAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.resetAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_reset_frame:\n@@ -826,12 +846,14 @@ public void onClick(View v)\n                         updateFrameColor(false);\n                         updateBalls(mCurrentFrame, (byte) 0);\n                         updateScore();\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_clear:\n                         clearPins();\n-                        mCallback.resetAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.resetAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_next_ball:\n@@ -862,7 +884,8 @@ else if (++mCurrentBall \u003d\u003d 3)\n                         mHasFrameBeenAccessed[mCurrentFrame] \u003d true;\n                         setVisibilityOfNextAndPrevItems();\n                         updateFrameColor(false);\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n \n                     case R.id.iv_prev_ball:\n@@ -884,7 +907,8 @@ else if (++mCurrentBall \u003d\u003d 3)\n                         }\n                         setVisibilityOfNextAndPrevItems();\n                         updateFrameColor(false);\n-                        mCallback.stopAutoAdvanceTimer();\n+                        if (mGameCallback !\u003d null)\n+                            mGameCallback.stopAutoAdvanceTimer();\n                         break;\n \n                     default:\n@@ -931,7 +955,8 @@ public void onClick(View v)\n                                 updateBalls(mCurrentFrame, (byte) 0);\n                             updateScore();\n                             updateFrameColor(false);\n-                            mCallback.stopAutoAdvanceTimer();\n+                            if (mGameCallback !\u003d null)\n+                                mGameCallback.stopAutoAdvanceTimer();\n                             break;\n                         }\n                     }\n@@ -1837,8 +1862,9 @@ public void run()\n                         .setText(mFouls[mCurrentFrame][mCurrentBall]\n                                 ? \"F\"\n                                 : \"\");\n-                mCallback.updateGameScore((byte) (mCurrentGame + 1),\n-                        mGameScoresMinusFouls[mCurrentGame]);\n+                if (mGameCallback !\u003d null)\n+                    mGameCallback.updateGameScore((byte) (mCurrentGame + 1),\n+                            mGameScoresMinusFouls[mCurrentGame]);\n             }\n         });\n     }\n@@ -2205,7 +2231,8 @@ private void loadGameFromDatabase(final byte newGame)\n             public void run()\n             {\n                 mCurrentGame \u003d newGame;\n-                mCallback.onGameChanged(mCurrentGame);\n+                if (mGameCallback !\u003d null)\n+                    mGameCallback.onGameChanged(mCurrentGame);\n                 SQLiteDatabase database \u003d\n                         DatabaseHelper.getInstance(getActivity()).getReadableDatabase();\n \n@@ -2373,7 +2400,7 @@ public byte getCurrentGame()\n     /**\n      * Callback interface offers methods upon user interaction.\n      */\n-    public interface GameFragmentCallbacks\n+    public interface GameFragmentCallback\n     {\n \n         /**"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/LeagueEventFragment.java",
          "patch": "@@ -49,7 +49,8 @@\n /**\n  * Created by Joseph Roque on 15-03-15. Manages the UI to display information about the leagues\n  * being tracked by the application, and offers a callback interface {@link\n- * LeagueEventFragment.OnLeagueSelectedListener} for handling interactions.\n+ * ca.josephroque.bowlingcompanion.fragment.LeagueEventFragment.LeagueEventCallback} for handling\n+ * interactions.\n  */\n @SuppressWarnings(\"Convert2Lambda\")\n public class LeagueEventFragment\n@@ -69,9 +70,9 @@\n     private NameAverageAdapter\u003cLeagueEvent\u003e mAdapterLeagueEvents;\n \n     /** Callback listener for user events related to leagues. */\n-    private OnLeagueSelectedListener mLeagueSelectedListener;\n+    private LeagueEventCallback mLeagueCallback;\n     /** Callback listener for user events related to series. */\n-    private SeriesFragment.SeriesListener mSeriesListener;\n+    private SeriesFragment.SeriesCallback mSeriesCallback;\n \n     /** List to store league / event data from league / event table in database. */\n     private List\u003cLeagueEvent\u003e mListLeaguesEvents;\n@@ -94,8 +95,8 @@ public void onAttach(Activity activity)\n          */\n         try\n         {\n-            mLeagueSelectedListener \u003d (OnLeagueSelectedListener) activity;\n-            mSeriesListener \u003d (SeriesFragment.SeriesListener) activity;\n+            mLeagueCallback \u003d (LeagueEventCallback) activity;\n+            mSeriesCallback \u003d (SeriesFragment.SeriesCallback) activity;\n         }\n         catch (ClassCastException ex)\n         {\n@@ -105,6 +106,14 @@ public void onAttach(Activity activity)\n     }\n \n     @Override\n+    public void onDetach()\n+    {\n+        super.onDetach();\n+        mLeagueCallback \u003d null;\n+        mSeriesCallback \u003d null;\n+    }\n+\n+    @Override\n     public View onCreateView(LayoutInflater inflater,\n                              ViewGroup container,\n                              Bundle savedInstanceState)\n@@ -206,7 +215,8 @@ public boolean onOptionsItemSelected(MenuItem item)\n         {\n             case R.id.action_stats:\n                 //Displays stats of current bowler in a new StatsFragment\n-                mLeagueSelectedListener.onBowlerStatsOpened();\n+                if (mLeagueCallback !\u003d null)\n+                    mLeagueCallback.onBowlerStatsOpened();\n                 return true;\n             default:\n                 return super.onOptionsItemSelected(item);\n@@ -521,7 +531,7 @@ private OpenLeagueEventSeriesTask(LeagueEventFragment fragment)\n                 }\n                 else\n                     cursor.close();\n-                    throw new RuntimeException(\"Event series id could not be loaded from database\");\n+                throw new RuntimeException(\"Event series id could not be loaded from database\");\n             }\n             else\n                 return Pair.create(selectedLeagueEvent, new Series(-1, null, null));\n@@ -546,8 +556,12 @@ protected void onPostExecute(Pair\u003cLeagueEvent, Series\u003e result)\n                  * displaying the event\u0027s corresponding series\n                  */\n \n-                fragment.mLeagueSelectedListener.onLeagueSelected(result.first, false);\n-                fragment.mSeriesListener.onSeriesSelected(result.second, true);\n+                if (fragment.mLeagueCallback !\u003d null\n+                        \u0026\u0026 fragment.mSeriesCallback !\u003d null)\n+                {\n+                    fragment.mLeagueCallback.onLeagueSelected(result.first, false);\n+                    fragment.mSeriesCallback.onSeriesSelected(result.second, true);\n+                }\n             }\n             else\n             {\n@@ -568,7 +582,8 @@ protected void onPostExecute(Pair\u003cLeagueEvent, Series\u003e result)\n                             .apply();\n                 }\n \n-                fragment.mLeagueSelectedListener.onLeagueSelected(result.first, true);\n+                if (fragment.mLeagueCallback !\u003d null)\n+                    fragment.mLeagueCallback.onLeagueSelected(result.first, true);\n             }\n         }\n     }\n@@ -775,7 +790,7 @@ protected void onPostExecute(LeagueEvent result)\n      * Container Activity must implement this interface to allow SeriesFragment/GameFragment to be\n      * loaded when a league/event is selected.\n      */\n-    public interface OnLeagueSelectedListener\n+    public interface LeagueEventCallback\n     {\n \n         /**"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/SeriesFragment.java",
          "patch": "@@ -43,8 +43,9 @@\n \n /**\n  * Created by Joseph Roque on 15-03-17. Manages the UI to display information about the series being\n- * tracked by the application, and offers a callback interface {@link SeriesFragment.SeriesListener}\n- * for handling interactions.\n+ * tracked by the application, and offers a callback interface {@link\n+ * ca.josephroque.bowlingcompanion.fragment.SeriesFragment.SeriesCallback} for handling\n+ * interactions.\n  */\n @SuppressWarnings(\"Convert2Lambda\")\n public class SeriesFragment\n@@ -64,7 +65,7 @@\n     private SeriesAdapter mAdapterSeries;\n \n     /** Callback listener for user events related to series. */\n-    private SeriesListener mSeriesListener;\n+    private SeriesCallback mSeriesCallback;\n \n     /** List to store series data from series table in database. */\n     private List\u003cSeries\u003e mListSeries;\n@@ -80,14 +81,13 @@ public void onCreate(Bundle savedInstaceState)\n     public void onAttach(Activity activity)\n     {\n         super.onAttach(activity);\n-\n         /*\n          * This makes sure the container Activity has implemented\n          * the callback interface. If not, an exception is thrown\n          */\n         try\n         {\n-            mSeriesListener \u003d (SeriesListener) activity;\n+            mSeriesCallback \u003d (SeriesCallback) activity;\n         }\n         catch (ClassCastException ex)\n         {\n@@ -97,6 +97,13 @@ public void onAttach(Activity activity)\n     }\n \n     @Override\n+    public void onDetach()\n+    {\n+        super.onDetach();\n+        mSeriesCallback \u003d null;\n+    }\n+\n+    @Override\n     public View onCreateView(LayoutInflater inflater,\n                              ViewGroup container,\n                              Bundle savedInstanceState)\n@@ -194,7 +201,8 @@ public boolean onOptionsItemSelected(MenuItem item)\n                 showEditDateDialog();\n                 return true;\n             case R.id.action_stats:\n-                mSeriesListener.onLeagueStatsOpened();\n+                if (mSeriesCallback !\u003d null)\n+                    mSeriesCallback.onLeagueStatsOpened();\n                 return true;\n             default:\n                 return super.onOptionsItemSelected(item);\n@@ -211,7 +219,8 @@ public void updateTheme()\n     public void onSItemClick(final int position)\n     {\n         //When series is clicked, its games are displayed in a new GameFragment\n-        mSeriesListener.onSeriesSelected(mListSeries.get(position), false);\n+        if (mSeriesCallback !\u003d null)\n+            mSeriesCallback.onSeriesSelected(mListSeries.get(position), false);\n     }\n \n     @Override\n@@ -307,7 +316,8 @@ public void run()\n     @Override\n     public void onFabClick()\n     {\n-        mSeriesListener.onCreateNewSeries(false);\n+        if (mSeriesCallback !\u003d null)\n+            mSeriesCallback.onCreateNewSeries(false);\n     }\n \n     /**\n@@ -471,7 +481,7 @@ protected void onPostExecute(List\u003cSeries\u003e listSeries)\n      * Container Activity must implement this interface to allow GameFragment/StatsFragment to be\n      * loaded when a series is selected.\n      */\n-    public interface SeriesListener\n+    public interface SeriesCallback\n     {\n \n         /**"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak when percolator uses bitset or field data cache",
    "url": "https://github.com/elastic/elasticsearch/pull/24115",
    "description": "The percolator doesn\u0027t close the IndexReader of the memory index any more.\r\nPrior to 2.x the percolator had its own SearchContext (PercolatorContext) that did this,\r\nbut that was removed when the percolator was refactored as part of the 5.0 release.\r\n\r\nI think an alternative way to fix this is to let percolator not use the bitset and fielddata caches,\r\nthat way we prevent the memory leak.\r\n\r\nAdding a WIP label to this as I\u0027m not happy with the current test. It is not easy to test that we don\u0027t use the bitset or fielddata cache for the percolator, because non percolator operations may use these caches, which is valid.\r\n\r\nPR for #24108",
    "keywords": [
      "percolator",
      "not",
      "memory",
      "use",
      "bitset"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/c17de49a6dc1d54fcfee3754211ae67a06bdcec7",
      "files": [
        {
          "file_name": "core/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java",
          "patch": "@@ -121,8 +121,7 @@ private BitSet getAndLoadIfNotPresent(final Query query, final LeafReaderContext\n         }\n         final IndexReader.CacheKey coreCacheReader \u003d cacheHelper.getKey();\n         final ShardId shardId \u003d ShardUtils.extractShardId(context.reader());\n-        if (shardId !\u003d null // can\u0027t require it because of the percolator\n-                \u0026\u0026 indexSettings.getIndex().equals(shardId.getIndex()) \u003d\u003d false) {\n+        if (indexSettings.getIndex().equals(shardId.getIndex()) \u003d\u003d false) {\n             // insanity\n             throw new IllegalStateException(\"Trying to load bit set for index \" + shardId.getIndex()\n                     + \" with cache of index \" + indexSettings.getIndex());"
        },
        {
          "file_name": "core/src/test/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java",
          "patch": "@@ -19,6 +19,7 @@\n package org.elasticsearch.search.aggregations;\n \n import org.apache.lucene.index.CompositeReaderContext;\n+import org.apache.lucene.index.DirectoryReader;\n import org.apache.lucene.index.IndexReaderContext;\n import org.apache.lucene.index.LeafReaderContext;\n import org.apache.lucene.search.Collector;\n@@ -31,8 +32,10 @@\n import org.elasticsearch.cluster.metadata.IndexMetaData;\n import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.lease.Releasables;\n+import org.elasticsearch.common.lucene.index.ElasticsearchDirectoryReader;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.util.MockBigArrays;\n+import org.elasticsearch.index.Index;\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.index.cache.bitset.BitsetFilterCache;\n import org.elasticsearch.index.cache.bitset.BitsetFilterCache.Listener;\n@@ -48,6 +51,7 @@\n import org.elasticsearch.index.mapper.ObjectMapper.Nested;\n import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.index.query.support.NestedScope;\n+import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.indices.breaker.CircuitBreakerService;\n import org.elasticsearch.indices.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;\n@@ -289,4 +293,8 @@ public String toString() {\n             return \"ShardSearcher(\" + ctx.get(0) + \")\";\n         }\n     }\n+\n+    protected static DirectoryReader wrap(DirectoryReader directoryReader) throws IOException {\n+        return ElasticsearchDirectoryReader.wrap(directoryReader, new ShardId(new Index(\"_index\", \"_na_\"), 0));\n+    }\n }"
        },
        {
          "file_name": "core/src/test/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregatorTests.java",
          "patch": "@@ -65,7 +65,7 @@ public void testNoDocs() throws IOException {\n             try (RandomIndexWriter iw \u003d new RandomIndexWriter(random(), directory)) {\n                 // intentionally not writing any docs\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                     NESTED_OBJECT);\n                 MaxAggregationBuilder maxAgg \u003d new MaxAggregationBuilder(MAX_AGG_NAME)\n@@ -112,7 +112,7 @@ public void testSingleNestingMax() throws IOException {\n                 }\n                 iw.commit();\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                     NESTED_OBJECT);\n                 MaxAggregationBuilder maxAgg \u003d new MaxAggregationBuilder(MAX_AGG_NAME)\n@@ -160,7 +160,7 @@ public void testDoubleNestingMax() throws IOException {\n                 }\n                 iw.commit();\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                     NESTED_OBJECT + \".\" + NESTED_OBJECT2);\n                 MaxAggregationBuilder maxAgg \u003d new MaxAggregationBuilder(MAX_AGG_NAME)\n@@ -213,7 +213,7 @@ public void testOrphanedDocs() throws IOException {\n                 iw.addDocuments(documents);\n                 iw.commit();\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                     NESTED_OBJECT);\n                 SumAggregationBuilder sumAgg \u003d new SumAggregationBuilder(SUM_AGG_NAME)\n@@ -292,7 +292,7 @@ public void testResetRootDocId() throws Exception {\n                 iw.commit();\n                 iw.close();\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n \n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                     \"nested_field\");"
        },
        {
          "file_name": "core/src/test/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregatorTests.java",
          "patch": "@@ -54,7 +54,7 @@ public void testNoDocs() throws IOException {\n             try (RandomIndexWriter iw \u003d new RandomIndexWriter(random(), directory)) {\n                 // intentionally not writing any docs\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                         NESTED_OBJECT);\n                 ReverseNestedAggregationBuilder reverseNestedBuilder\n@@ -117,7 +117,7 @@ public void testMaxFromParentDocs() throws IOException {\n                 }\n                 iw.commit();\n             }\n-            try (IndexReader indexReader \u003d DirectoryReader.open(directory)) {\n+            try (IndexReader indexReader \u003d wrap(DirectoryReader.open(directory))) {\n                 NestedAggregationBuilder nestedBuilder \u003d new NestedAggregationBuilder(NESTED_AGG,\n                         NESTED_OBJECT);\n                 ReverseNestedAggregationBuilder reverseNestedBuilder"
        },
        {
          "file_name": "modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java",
          "patch": "@@ -23,16 +23,22 @@\n import org.apache.lucene.analysis.DelegatingAnalyzerWrapper;\n import org.apache.lucene.index.BinaryDocValues;\n import org.apache.lucene.index.DirectoryReader;\n+import org.apache.lucene.index.IndexReaderContext;\n import org.apache.lucene.index.IndexWriter;\n import org.apache.lucene.index.IndexWriterConfig;\n import org.apache.lucene.index.LeafReader;\n+import org.apache.lucene.index.ReaderUtil;\n import org.apache.lucene.index.memory.MemoryIndex;\n import org.apache.lucene.search.BooleanClause;\n import org.apache.lucene.search.BooleanQuery;\n import org.apache.lucene.search.IndexSearcher;\n import org.apache.lucene.search.Query;\n+import org.apache.lucene.search.Scorer;\n import org.apache.lucene.search.Weight;\n+import org.apache.lucene.search.join.BitSetProducer;\n import org.apache.lucene.store.RAMDirectory;\n+import org.apache.lucene.util.BitDocIdSet;\n+import org.apache.lucene.util.BitSet;\n import org.apache.lucene.util.BytesRef;\n import org.elasticsearch.ElasticsearchException;\n import org.elasticsearch.ResourceNotFoundException;\n@@ -51,6 +57,8 @@\n import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.common.xcontent.XContentType;\n import org.elasticsearch.index.analysis.FieldNameAnalyzer;\n+import org.elasticsearch.index.fielddata.IndexFieldData;\n+import org.elasticsearch.index.fielddata.IndexFieldDataCache;\n import org.elasticsearch.index.mapper.DocumentMapper;\n import org.elasticsearch.index.mapper.DocumentMapperForType;\n import org.elasticsearch.index.mapper.MappedFieldType;\n@@ -62,6 +70,8 @@\n import org.elasticsearch.index.query.QueryRewriteContext;\n import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.index.query.QueryShardException;\n+import org.elasticsearch.indices.breaker.CircuitBreakerService;\n+import org.elasticsearch.indices.breaker.NoneCircuitBreakerService;\n \n import java.io.IOException;\n import java.util.Objects;\n@@ -412,12 +422,9 @@ protected Analyzer getWrappedAnalyzer(String fieldName) {\n             docSearcher.setQueryCache(null);\n         }\n \n-        Version indexVersionCreated \u003d context.getIndexSettings().getIndexVersionCreated();\n         boolean mapUnmappedFieldsAsString \u003d context.getIndexSettings()\n                 .getValue(PercolatorFieldMapper.INDEX_MAP_UNMAPPED_FIELDS_AS_STRING_SETTING);\n-        // We have to make a copy of the QueryShardContext here so we can have a unfrozen version for parsing the legacy\n-        // percolator queries\n-        QueryShardContext percolateShardContext \u003d new QueryShardContext(context);\n+        QueryShardContext percolateShardContext \u003d wrap(context);\n         MappedFieldType fieldType \u003d context.fieldMapper(field);\n         if (fieldType \u003d\u003d null) {\n             throw new QueryShardException(context, \"field [\" + field + \"] does not exist\");\n@@ -503,4 +510,36 @@ public Weight createNormalizedWeight(Query query, boolean needsScores) throws IO\n         };\n     }\n \n+    static QueryShardContext wrap(QueryShardContext shardContext) {\n+        return new QueryShardContext(shardContext) {\n+\n+            @Override\n+            public BitSetProducer bitsetFilter(Query query) {\n+                return context -\u003e {\n+                    final IndexReaderContext topLevelContext \u003d ReaderUtil.getTopLevelContext(context);\n+                    final IndexSearcher searcher \u003d new IndexSearcher(topLevelContext);\n+                    searcher.setQueryCache(null);\n+                    final Weight weight \u003d searcher.createNormalizedWeight(query, false);\n+                    final Scorer s \u003d weight.scorer(context);\n+\n+                    if (s !\u003d null) {\n+                        return new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc())).bits();\n+                    } else {\n+                        return null;\n+                    }\n+                };\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public \u003cIFD extends IndexFieldData\u003c?\u003e\u003e IFD getForField(MappedFieldType fieldType) {\n+                IndexFieldData.Builder builder \u003d fieldType.fielddataBuilder();\n+                IndexFieldDataCache cache \u003d new IndexFieldDataCache.None();\n+                CircuitBreakerService circuitBreaker \u003d new NoneCircuitBreakerService();\n+                return (IFD) builder.build(shardContext.getIndexSettings(), fieldType, cache, circuitBreaker,\n+                        shardContext.getMapperService());\n+            }\n+        };\n+    }\n+\n }"
        },
        {
          "file_name": "modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java",
          "patch": "@@ -26,9 +26,12 @@\n import org.elasticsearch.action.support.WriteRequest;\n import org.elasticsearch.common.bytes.BytesArray;\n import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentFactory;\n import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.cache.bitset.BitsetFilterCache;\n+import org.elasticsearch.index.fielddata.ScriptDocValues;\n import org.elasticsearch.index.mapper.MapperParsingException;\n import org.elasticsearch.index.query.MatchPhraseQueryBuilder;\n import org.elasticsearch.index.query.MultiMatchQueryBuilder;\n@@ -39,6 +42,7 @@\n import org.elasticsearch.script.Script;\n import org.elasticsearch.script.ScriptType;\n import org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;\n+import org.elasticsearch.search.lookup.LeafDocLookup;\n import org.elasticsearch.search.sort.SortOrder;\n import org.elasticsearch.test.ESSingleNodeTestCase;\n \n@@ -83,6 +87,11 @@\n         protected Map\u003cString, Function\u003cMap\u003cString, Object\u003e, Object\u003e\u003e pluginScripts() {\n             Map\u003cString, Function\u003cMap\u003cString, Object\u003e, Object\u003e\u003e scripts \u003d new HashMap\u003c\u003e();\n             scripts.put(\"1\u003d\u003d1\", vars -\u003e Boolean.TRUE);\n+            scripts.put(\"use_fielddata_please\", vars -\u003e {\n+                LeafDocLookup leafDocLookup \u003d (LeafDocLookup) vars.get(\"_doc\");\n+                ScriptDocValues scriptDocValues \u003d leafDocLookup.get(\"employees.name\");\n+                return \"virginia_potts\".equals(scriptDocValues.get(0));\n+            });\n             return scripts;\n         }\n     }\n@@ -606,6 +615,119 @@ public void testPercolateQueryWithNestedDocuments() throws Exception {\n         assertHitCount(response, 0);\n     }\n \n+    public void testPercolateQueryWithNestedDocuments_doNotLeakBitsetCacheEntries() throws Exception {\n+        XContentBuilder mapping \u003d XContentFactory.jsonBuilder();\n+        mapping.startObject().startObject(\"properties\").startObject(\"companyname\").field(\"type\", \"text\").endObject()\n+            .startObject(\"employee\").field(\"type\", \"nested\").startObject(\"properties\")\n+            .startObject(\"name\").field(\"type\", \"text\").endObject().endObject().endObject().endObject()\n+            .endObject();\n+        createIndex(\"test\", client().admin().indices().prepareCreate(\"test\")\n+            // to avoid normal document from being cached by BitsetFilterCache\n+            .setSettings(Settings.builder().put(BitsetFilterCache.INDEX_LOAD_RANDOM_ACCESS_FILTERS_EAGERLY_SETTING.getKey(), false))\n+            .addMapping(\"employee\", mapping)\n+            .addMapping(\"queries\", \"query\", \"type\u003dpercolator\")\n+        );\n+        client().prepareIndex(\"test\", \"queries\", \"q1\").setSource(jsonBuilder().startObject()\n+            .field(\"query\", QueryBuilders.nestedQuery(\"employee\",\n+                QueryBuilders.matchQuery(\"employee.name\", \"virginia potts\").operator(Operator.AND), ScoreMode.Avg)\n+            ).endObject())\n+            .get();\n+        client().admin().indices().prepareRefresh().get();\n+\n+        for (int i \u003d 0; i \u003c 32; i++) {\n+            SearchResponse response \u003d client().prepareSearch()\n+                .setQuery(new PercolateQueryBuilder(\"query\", \"employee\",\n+                    XContentFactory.jsonBuilder()\n+                        .startObject().field(\"companyname\", \"stark\")\n+                        .startArray(\"employee\")\n+                        .startObject().field(\"name\", \"virginia potts\").endObject()\n+                        .startObject().field(\"name\", \"tony stark\").endObject()\n+                        .endArray()\n+                        .endObject().bytes(), XContentType.JSON))\n+                .addSort(\"_doc\", SortOrder.ASC)\n+                // size 0, because other wise load bitsets for normal document in FetchPhase#findRootDocumentIfNested(...)\n+                .setSize(0)\n+                .get();\n+            assertHitCount(response, 1);\n+        }\n+\n+        // We can\u0027t check via api... because BitsetCacheListener requires that it can extract shardId from index reader\n+        // and for percolator it can\u0027t do that, but that means we don\u0027t keep track of\n+        // memory for BitsetCache in case of percolator\n+        long bitsetSize \u003d client().admin().cluster().prepareClusterStats().get()\n+            .getIndicesStats().getSegments().getBitsetMemoryInBytes();\n+        assertEquals(\"The percolator works with in-memory index and therefor shouldn\u0027t use bitset cache\", 0L, bitsetSize);\n+    }\n+\n+    public void testPercolateQueryWithNestedDocuments_doLeakFieldDataCacheEntries() throws Exception {\n+        XContentBuilder mapping \u003d XContentFactory.jsonBuilder();\n+        mapping.startObject();\n+        {\n+            mapping.startObject(\"properties\");\n+            {\n+                mapping.startObject(\"companyname\");\n+                mapping.field(\"type\", \"text\");\n+                mapping.endObject();\n+            }\n+            {\n+                mapping.startObject(\"employees\");\n+                mapping.field(\"type\", \"nested\");\n+                {\n+                    mapping.startObject(\"properties\");\n+                    {\n+                        mapping.startObject(\"name\");\n+                        mapping.field(\"type\", \"text\");\n+                        mapping.field(\"fielddata\", true);\n+                        mapping.endObject();\n+                    }\n+                    mapping.endObject();\n+                }\n+                mapping.endObject();\n+            }\n+            mapping.endObject();\n+        }\n+        mapping.endObject();\n+        createIndex(\"test\", client().admin().indices().prepareCreate(\"test\")\n+            .addMapping(\"employee\", mapping)\n+            .addMapping(\"queries\", \"query\", \"type\u003dpercolator\")\n+        );\n+        Script script \u003d new Script(ScriptType.INLINE, MockScriptPlugin.NAME, \"use_fielddata_please\", Collections.emptyMap());\n+        client().prepareIndex(\"test\", \"queries\", \"q1\").setSource(jsonBuilder().startObject()\n+            .field(\"query\", QueryBuilders.nestedQuery(\"employees\",\n+                QueryBuilders.scriptQuery(script), ScoreMode.Avg)\n+            ).endObject()).get();\n+        client().admin().indices().prepareRefresh().get();\n+        XContentBuilder doc \u003d jsonBuilder();\n+        doc.startObject();\n+        {\n+            doc.field(\"companyname\", \"stark\");\n+            doc.startArray(\"employees\");\n+            {\n+                doc.startObject();\n+                doc.field(\"name\", \"virginia_potts\");\n+                doc.endObject();\n+            }\n+            {\n+                doc.startObject();\n+                doc.field(\"name\", \"tony_stark\");\n+                doc.endObject();\n+            }\n+            doc.endArray();\n+        }\n+        doc.endObject();\n+        for (int i \u003d 0; i \u003c 32; i++) {\n+            SearchResponse response \u003d client().prepareSearch()\n+                .setQuery(new PercolateQueryBuilder(\"query\", \"employee\", doc.bytes(), XContentType.JSON))\n+                .addSort(\"_doc\", SortOrder.ASC)\n+                .get();\n+            assertHitCount(response, 1);\n+        }\n+\n+        long fieldDataSize \u003d client().admin().cluster().prepareClusterStats().get()\n+            .getIndicesStats().getFieldData().getMemorySizeInBytes();\n+        assertEquals(\"The percolator works with in-memory index and therefor shouldn\u0027t use field-data cache\", 0L, fieldDataSize);\n+    }\n+\n     public void testPercolatorQueryViaMultiSearch() throws Exception {\n         createIndex(\"test\", client().admin().indices().prepareCreate(\"test\")\n             .addMapping(\"type\", \"field1\", \"type\u003dtext\")"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak in ViewGroupDescriptor",
    "url": "https://github.com/facebook/stetho/pull/206",
    "description": "This switches ViewGroupDescriptor to using a WeakHashMap for the View -\u003e [View or Element] cache.\n\nI also moved this cache out of ViewGroupDescriptor.ElementContext and into ViewGroupDescriptor because we don\u0027t really need to cache this per-ViewGroup. Why not save a few allocations per ViewGroup?\n\nCloses #203 \n",
    "keywords": [
      "cache",
      "viewgroupdescriptor"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/facebook/stetho/commit/588785973f4eb36097a092d772bc01f929b8bbdb",
      "files": [
        {
          "file_name": "stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewGroupDescriptor.java",
          "patch": "@@ -20,11 +20,21 @@\n import java.util.Collections;\n import java.util.IdentityHashMap;\n import java.util.Map;\n+import java.util.WeakHashMap;\n \n final class ViewGroupDescriptor extends ChainedDescriptor\u003cViewGroup\u003e {\n   private final Map\u003cViewGroup, ElementContext\u003e mElementToContextMap \u003d\n       Collections.synchronizedMap(new IdentityHashMap\u003cViewGroup, ElementContext\u003e());\n \n+  /**\n+   * This is a cache that maps from a View to the Fragment that contains it. If the View isn\u0027t\n+   * contained by a Fragment, then this maps the View to itself. For Views contained by Fragments,\n+   * we emit the Fragment instead, and then let the Fragment\u0027s descriptor emit the View as its sole\n+   * child. This allows us to see Fragments in the inspector as part of the UI tree.\n+   */\n+  private final Map\u003cView, Object\u003e mViewToElementMap \u003d\n+      Collections.synchronizedMap(new WeakHashMap\u003cView, Object\u003e());\n+\n   public ViewGroupDescriptor() {\n   }\n \n@@ -54,21 +64,32 @@ protected void onUnhook(ViewGroup element) {\n     context.unhook();\n   }\n \n+  private Object getElementForView(ViewGroup parentView, View view) {\n+    Object element \u003d mViewToElementMap.get(view);\n+    if (element !\u003d null) {\n+      if (view.getParent() \u003d\u003d parentView) {\n+        return element;\n+      }\n+      mViewToElementMap.remove(view);\n+    }\n+\n+    Object fragment \u003d FragmentCompatUtil.findFragmentForView(view);\n+    if (fragment !\u003d null) {\n+      mViewToElementMap.put(view, fragment);\n+      return fragment;\n+    } else {\n+      mViewToElementMap.put(view, view);\n+      return view;\n+    }\n+  }\n+\n   @Override\n   protected void onGetChildren(ViewGroup element, Accumulator\u003cObject\u003e children) {\n     ElementContext context \u003d mElementToContextMap.get(element);\n     context.getChildren(children);\n   }\n \n   private final class ElementContext {\n-    // This is a cache that maps from a View to the Fragment that contains it. If the\n-    // View isn\u0027t contained by a Fragment, then this maps the View to itself.\n-    // For Views contained by Fragments, we emit the Fragment instead, and then let\n-    // the Fragment\u0027s descriptor emit the View as its sole child. This allows us to\n-    // see Fragments in the inspector as part of the UI tree.\n-    private final Map\u003cView, Object\u003e mViewToElementMap \u003d\n-        Collections.synchronizedMap(new IdentityHashMap\u003cView, Object\u003e());\n-\n     private ViewGroup mElement;\n     private boolean mIsDecorView;\n \n@@ -79,7 +100,6 @@ public void hook(ViewGroup element) {\n     public void unhook() {\n       if (mElement !\u003d null) {\n         mElement \u003d null;\n-        mViewToElementMap.clear();\n       }\n     }\n \n@@ -91,7 +111,7 @@ public void getChildren(Accumulator\u003cObject\u003e children) {\n       for (int i \u003d 0, N \u003d mElement.getChildCount(); i \u003c N; ++i) {\n         final View child \u003d mElement.getChildAt(i);\n         if (isChildVisible(child)) {\n-          final Object element \u003d getElementForView(child);\n+          final Object element \u003d getElementForView(mElement, child);\n           children.store(element);\n         }\n       }\n@@ -100,25 +120,5 @@ public void getChildren(Accumulator\u003cObject\u003e children) {\n     private boolean isChildVisible(View child) {\n       return !mIsDecorView || !(child instanceof DOMHiddenView);\n     }\n-\n-    private Object getElementForView(View view) {\n-      if (view \u003d\u003d null) {\n-        return null;\n-      }\n-\n-      Object element \u003d mViewToElementMap.get(view);\n-      if (element !\u003d null) {\n-        return element;\n-      }\n-\n-      Object fragment \u003d FragmentCompatUtil.findFragmentForView(view);\n-      if (fragment !\u003d null) {\n-        mViewToElementMap.put(view, fragment);\n-        return fragment;\n-      } else {\n-        mViewToElementMap.put(view, view);\n-        return view;\n-      }\n-    }\n   }\n }"
        }
      ]
    }
  },
  {
    "name": "fix memory leak caused by re-wrapping DelegatedProtocol",
    "url": "https://github.com/elastic/elasticsearch-hadoop/pull/823",
    "description": "When SSL is used to communicate with elasticsearch, we replace the Protocol for\n`https` with a custom protocol that uses a custom created SSLSocketFactory. The\nDelegatedProtocol we create wraps the existing protocol, which is fine if we only\nwrap a single time. However if the http transport is instantiated multiple times,\nthe protocol that is wrapped will be the DelegatedProtocol that we created previously\nand this causes the existing SSLSocketFactory to be retained indefinitely.\n\nThis change adds a check to see if the existing Protocol is a DelegatedProtocol and\nif so the original Protocol is retrieved so that we do not retain a reference to the\nDelegatedProtocol and its SSLSocketFactory.\n",
    "keywords": [
      "existing",
      "protocol",
      "delegatedprotocol",
      "sslsocketfactory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch-hadoop/commit/35ecfee0debec93680e177271aadb0f817d51cf0",
      "files": [
        {
          "file_name": "mr/src/main/java/org/elasticsearch/hadoop/rest/commonshttp/CommonsHttpTransport.java",
          "patch": "@@ -217,7 +217,7 @@ private HostConfiguration setupSSLIfNeeded(Settings settings, HostConfiguration\n         int port \u003d 443;\n         SecureProtocolSocketFactory sslFactory \u003d new SSLSocketFactory(settings);\n \n-        replaceProtocol(hostConfig, sslFactory, schema, port);\n+        replaceProtocol(sslFactory, schema, port);\n \n         return hostConfig;\n     }\n@@ -375,21 +375,24 @@ private HostConfiguration setupSocksProxy(Settings settings, HostConfiguration h\n             String schema \u003d sslEnabled ? \"https\" : \"http\";\n             int port \u003d sslEnabled ? 443 : 80;\n             SocksSocketFactory socketFactory \u003d new SocksSocketFactory(proxyHost, proxyPort, proxyUser, proxyPass);\n-            replaceProtocol(hostConfig, socketFactory, schema, port);\n+            replaceProtocol(socketFactory, schema, port);\n         }\n \n         return hostConfig;\n     }\n \n-    private void replaceProtocol(HostConfiguration hostConfig, ProtocolSocketFactory socketFactory, String schema, int defaultPort) {\n+    static void replaceProtocol(ProtocolSocketFactory socketFactory, String schema, int defaultPort) {\n         //\n         // switch protocol\n         // due to how HttpCommons work internally this dance is best to be kept as is\n         //\n \n-        // NB: not really needed (see below that the protocol is reseted) but in place just in case\n-        hostConfig \u003d new ProtocolAwareHostConfiguration(hostConfig);\n         Protocol directHttp \u003d Protocol.getProtocol(schema);\n+        if (directHttp instanceof DelegatedProtocol) {\n+            // unwrap the original\n+            directHttp \u003d ((DelegatedProtocol)directHttp).getOriginal();\n+            assert directHttp instanceof DelegatedProtocol \u003d\u003d false;\n+        }\n         Protocol proxiedHttp \u003d new DelegatedProtocol(socketFactory, directHttp, schema, defaultPort);\n         // NB: register the new protocol since when using absolute URIs, HttpClient#executeMethod will override the configuration (#387)\n         // NB: hence why the original/direct http protocol is saved - as otherwise the connection is not closed since it is considered different"
        },
        {
          "file_name": "mr/src/main/java/org/elasticsearch/hadoop/rest/commonshttp/DelegatedProtocol.java",
          "patch": "@@ -41,4 +41,8 @@ public boolean equals(Object obj) {\n     public int hashCode() {\n         return original.hashCode();\n     }\n+\n+    Protocol getOriginal() {\n+        return original;\n+    }\n }"
        },
        {
          "file_name": "mr/src/test/java/org/elasticsearch/hadoop/rest/commonshttp/CommonsHttpTransportTests.java",
          "patch": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.hadoop.rest.commonshttp;\n+\n+import org.apache.commons.httpclient.ConnectTimeoutException;\n+import org.apache.commons.httpclient.params.HttpConnectionParams;\n+import org.apache.commons.httpclient.protocol.Protocol;\n+import org.apache.commons.httpclient.protocol.ProtocolSocketFactory;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSocketFactory;\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.Socket;\n+import java.net.UnknownHostException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.sameInstance;\n+\n+public class CommonsHttpTransportTests {\n+\n+    private Protocol original;\n+\n+    @Before\n+    public void setup() {\n+        original \u003d Protocol.getProtocol(\"https\");\n+    }\n+\n+    @After\n+    public void reset() {\n+        Protocol.registerProtocol(\"https\", original);\n+    }\n+\n+    @Test\n+    public void testProtocolReplacement() throws Exception {\n+        final ProtocolSocketFactory socketFactory \u003d getSocketFactory();\n+        CommonsHttpTransport.replaceProtocol(socketFactory, \"https\", 443);\n+\n+        Protocol protocol \u003d Protocol.getProtocol(\"https\");\n+        assertThat(protocol, instanceOf(DelegatedProtocol.class));\n+\n+        DelegatedProtocol delegatedProtocol \u003d (DelegatedProtocol) protocol;\n+        assertThat(delegatedProtocol.getSocketFactory(), sameInstance(socketFactory));\n+        assertThat(delegatedProtocol.getOriginal(), sameInstance(original));\n+\n+        // ensure we do not re-wrap a delegated protocol\n+        CommonsHttpTransport.replaceProtocol(socketFactory, \"https\", 443);\n+        protocol \u003d Protocol.getProtocol(\"https\");\n+        assertThat(protocol, instanceOf(DelegatedProtocol.class));\n+\n+        delegatedProtocol \u003d (DelegatedProtocol) protocol;\n+        assertThat(delegatedProtocol.getSocketFactory(), sameInstance(socketFactory));\n+        assertThat(delegatedProtocol.getOriginal(), sameInstance(original));\n+    }\n+\n+    private ProtocolSocketFactory getSocketFactory() throws Exception {\n+        final SSLSocketFactory delegate \u003d SSLContext.getDefault().getSocketFactory();\n+        return new ProtocolSocketFactory() {\n+\n+            @Override\n+            public Socket createSocket(String host, int port, InetAddress localAddress, int localPort) throws IOException, UnknownHostException {\n+                return delegate.createSocket(host, port, localAddress, localPort);\n+            }\n+\n+            @Override\n+            public Socket createSocket(String host, int port, InetAddress localAddress, int localPort, HttpConnectionParams params) throws IOException, UnknownHostException, ConnectTimeoutException {\n+                return this.createSocket(host, port, localAddress, localPort);\n+            }\n+\n+            @Override\n+            public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n+                return delegate.createSocket(host, port);\n+            }\n+        };\n+    }\n+}"
        }
      ]
    }
  },
  {
    "name": "Chat user item memory leak",
    "url": "https://github.com/FAForever/downlords-faf-client/issues/207",
    "description": "Chat user items register listeners to services, those listeners are not removed when the user disconnects.\n",
    "keywords": [
      "user"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/FAForever/downlords-faf-client/commit/0c12256da162a917082a5477d7617559c650b174",
      "files": [
        {
          "file_name": "src/main/java/com/faforever/client/chat/ChannelTabController.java",
          "patch": "@@ -55,7 +55,7 @@\n   /**\n    * Keeps track of which ChatUserControl in which pane belongs to which user.\n    */\n-  private final Map\u003cString, Map\u003cPane, ChatUserControl\u003e\u003e userToChatUserControls;\n+  private final Map\u003cString, Map\u003cPane, ChatUserItemController\u003e\u003e userToChatUserControls;\n   @FXML\n   Button advancedUserFilter;\n   @FXML\n@@ -112,7 +112,7 @@ public ChannelTabController() {\n   }\n \n   // TODO clean this up\n-  public Map\u003cString, Map\u003cPane, ChatUserControl\u003e\u003e getUserToChatUserControls() {\n+  public Map\u003cString, Map\u003cPane, ChatUserItemController\u003e\u003e getUserToChatUserControls() {\n     return userToChatUserControls;\n   }\n \n@@ -198,20 +198,18 @@ void initialize() {\n    */\n   private void filterChatUserControlsBySearchString() {\n     synchronized (userToChatUserControls) {\n-      for (Map\u003cPane, ChatUserControl\u003e chatUserControlMap : userToChatUserControls.values()) {\n-        for (Map.Entry\u003cPane, ChatUserControl\u003e chatUserControlEntry : chatUserControlMap.entrySet()) {\n-          ChatUserControl chatUserControl \u003d chatUserControlEntry.getValue();\n-          boolean display \u003d isUsernameMatch(chatUserControl);\n-          chatUserControl.setVisible(display);\n-          chatUserControl.setManaged(display);\n+      for (Map\u003cPane, ChatUserItemController\u003e chatUserControlMap : userToChatUserControls.values()) {\n+        for (Map.Entry\u003cPane, ChatUserItemController\u003e chatUserControlEntry : chatUserControlMap.entrySet()) {\n+          ChatUserItemController chatUserItemController \u003d chatUserControlEntry.getValue();\n+          chatUserItemController.setVisible(isUsernameMatch(chatUserItemController));\n         }\n       }\n     }\n   }\n \n   //TODO: I don\u0027t like how this is public\n-  public boolean isUsernameMatch(ChatUserControl chatUserControl) {\n-    String lowerCaseSearchString \u003d chatUserControl.getPlayerInfoBean().getUsername().toLowerCase();\n+  public boolean isUsernameMatch(ChatUserItemController chatUserItemController) {\n+    String lowerCaseSearchString \u003d chatUserItemController.getPlayerInfoBean().getUsername().toLowerCase();\n     return lowerCaseSearchString.contains(userSearchTextField.getText().toLowerCase());\n   }\n \n@@ -289,12 +287,12 @@ private void onUserJoinedChannel(ChatUser chatUser) {\n \n     player.moderatorForChannelsProperty().bind(chatUser.moderatorInChannelsProperty());\n     player.usernameProperty().addListener((observable, oldValue, newValue) -\u003e {\n-      for (Map.Entry\u003cPane, ChatUserControl\u003e entry : userToChatUserControls.get(oldValue).entrySet()) {\n+      for (Map.Entry\u003cPane, ChatUserItemController\u003e entry : userToChatUserControls.get(oldValue).entrySet()) {\n         Pane pane \u003d entry.getKey();\n-        ChatUserControl chatUserControl \u003d entry.getValue();\n+        ChatUserItemController chatUserItemController \u003d entry.getValue();\n \n-        pane.getChildren().remove(chatUserControl);\n-        addChatUserControlSorted(pane, chatUserControl);\n+        pane.getChildren().remove(chatUserItemController.getRoot());\n+        addChatUserItemSorted(pane, chatUserItemController);\n       }\n     });\n     player.usernameProperty().bind(chatUser.usernameProperty());\n@@ -390,102 +388,91 @@ private Pane getPaneForSocialStatus(SocialStatus socialStatus) {\n   private void onUserLeft(String username) {\n     JavaFxUtil.assertBackgroundThread();\n \n-    Map\u003cPane, ChatUserControl\u003e paneToChatUserControlMap \u003d userToChatUserControls.get(username);\n+    Map\u003cPane, ChatUserItemController\u003e paneToChatUserControlMap \u003d userToChatUserControls.get(username);\n     if (paneToChatUserControlMap \u003d\u003d null) {\n       return;\n     }\n \n-    for (Map.Entry\u003cPane, ChatUserControl\u003e entry : paneToChatUserControlMap.entrySet()) {\n-      Platform.runLater(() -\u003e entry.getKey().getChildren().remove(entry.getValue()));\n+    for (Map.Entry\u003cPane, ChatUserItemController\u003e entry : paneToChatUserControlMap.entrySet()) {\n+      Platform.runLater(() -\u003e entry.getKey().getChildren().remove(entry.getValue().getRoot()));\n     }\n     paneToChatUserControlMap.clear();\n     userToChatUserControls.remove(username);\n   }\n \n-  private ChatUserControl addToPane(PlayerInfoBean playerInfoBean, Pane pane) {\n+  private ChatUserItemController addToPane(PlayerInfoBean playerInfoBean, Pane pane) {\n     return createChatUserControlForPlayerIfNecessary(pane, playerInfoBean);\n   }\n \n   private void removeFromPane(PlayerInfoBean playerInfoBean, Pane pane) {\n-    // Re-add Plateform.runLater() as soon as RT-40417 is fixed\n-//        Platform.runLater(() -\u003e {\n-    Map\u003cPane, ChatUserControl\u003e paneChatUserControlMap \u003d userToChatUserControls.get(playerInfoBean.getUsername());\n+    Map\u003cPane, ChatUserItemController\u003e paneChatUserControlMap \u003d userToChatUserControls.get(playerInfoBean.getUsername());\n     if (paneChatUserControlMap \u003d\u003d null) {\n       // User has not yet been added to this pane; no need to remove him\n       return;\n     }\n     Platform.runLater(() -\u003e {\n-      ChatUserControl chatUserControl \u003d paneChatUserControlMap.remove(pane);\n-      pane.getChildren().remove(chatUserControl);\n+      ChatUserItemController chatUserItemController \u003d paneChatUserControlMap.remove(pane);\n+      pane.getChildren().remove(chatUserItemController.getRoot());\n     });\n-//        });\n   }\n \n   /**\n-   * Creates a {@link com.faforever.client.chat.ChatUserControl} for the given playerInfoBean and adds it to the given\n-   * pane if there isn\u0027t already such a control in this pane. After the control has been added, the user search filter\n-   * is applied.\n+   * Creates a {@link ChatUserItemController} for the given playerInfoBean and adds it to the given pane if there isn\u0027t\n+   * already such a control in this pane. After the control has been added, the user search filter is applied.\n    */\n-  private ChatUserControl createChatUserControlForPlayerIfNecessary(Pane pane, PlayerInfoBean playerInfoBean) {\n+  private ChatUserItemController createChatUserControlForPlayerIfNecessary(Pane pane, PlayerInfoBean playerInfoBean) {\n     String username \u003d playerInfoBean.getUsername();\n     if (!userToChatUserControls.containsKey(username)) {\n       userToChatUserControls.put(username, new HashMap\u003c\u003e(1, 1));\n     }\n \n-    Map\u003cPane, ChatUserControl\u003e paneToChatUserControlMap \u003d userToChatUserControls.get(username);\n+    Map\u003cPane, ChatUserItemController\u003e paneToChatUserControlMap \u003d userToChatUserControls.get(username);\n \n-    ChatUserControl existingChatUserControl \u003d paneToChatUserControlMap.get(pane);\n-    if (existingChatUserControl !\u003d null) {\n-      return existingChatUserControl;\n+    ChatUserItemController existingChatUserItemController \u003d paneToChatUserControlMap.get(pane);\n+    if (existingChatUserItemController !\u003d null) {\n+      return existingChatUserItemController;\n     }\n \n     if (!applicationContext.isActive()) {\n       logger.warn(\"Application context has been closed, not creating control for player {}\", playerInfoBean.getUsername());\n     }\n-    ChatUserControl chatUserControl \u003d applicationContext.getBean(ChatUserControl.class);\n-    chatUserControl.setPlayerInfoBean(playerInfoBean);\n-    paneToChatUserControlMap.put(pane, chatUserControl);\n+    ChatUserItemController chatUserItemController \u003d applicationContext.getBean(ChatUserItemController.class);\n+    chatUserItemController.setPlayerInfoBean(playerInfoBean);\n+    paneToChatUserControlMap.put(pane, chatUserItemController);\n \n-    chatUserControl.setColorsAllowedInPane((pane \u003d\u003d othersPane || pane \u003d\u003d chatOnlyPane) \u0026\u0026 playerInfoBean.getSocialStatus() !\u003d SELF);\n+    chatUserItemController.setColorsAllowedInPane((pane \u003d\u003d othersPane || pane \u003d\u003d chatOnlyPane) \u0026\u0026 playerInfoBean.getSocialStatus() !\u003d SELF);\n \n     Platform.runLater(() -\u003e {\n-      addChatUserControlSorted(pane, chatUserControl);\n-      isUsernameMatch(chatUserControl);\n+      addChatUserItemSorted(pane, chatUserItemController);\n+      isUsernameMatch(chatUserItemController);\n     });\n \n-    return chatUserControl;\n+    return chatUserItemController;\n   }\n \n   /**\n    * Inserts the given ChatUserControl into the given Pane such that it is correctly sorted alphabetically.\n    */\n-  private void addChatUserControlSorted(Pane pane, ChatUserControl chatUserControl) {\n+  private void addChatUserItemSorted(Pane pane, ChatUserItemController chatUserItemController) {\n     ObservableList\u003cNode\u003e children \u003d pane.getChildren();\n \n-    if (chatUserControl.getPlayerInfoBean().getSocialStatus() \u003d\u003d SELF) {\n-      children.add(0, chatUserControl);\n+    Pane chatUserItemRoot \u003d chatUserItemController.getRoot();\n+    if (chatUserItemController.getPlayerInfoBean().getSocialStatus() \u003d\u003d SELF) {\n+      children.add(0, chatUserItemRoot);\n       return;\n     }\n \n+    String thisUsername \u003d chatUserItemController.getPlayerInfoBean().getUsername();\n     for (Node child : children) {\n-      if (!(child instanceof ChatUserControl)) {\n-        continue;\n-      }\n-\n-      String newUser \u003d chatUserControl.getPlayerInfoBean().getUsername();\n-      String nextUser \u003d ((ChatUserControl) child).getPlayerInfoBean().getUsername();\n-\n-      if (nextUser.equals(userService.getUsername())) {\n-        continue;\n-      }\n+      String otherUsername \u003d ((ChatUserItemController) child.getUserData()).getPlayerInfoBean().getUsername();\n \n-      if (newUser.compareToIgnoreCase(nextUser) \u003c 0) {\n-        children.add(children.indexOf(child), chatUserControl);\n+      if (thisUsername.compareToIgnoreCase(otherUsername) \u003c 0) {\n+        children.add(children.indexOf(child), chatUserItemRoot);\n         return;\n       }\n     }\n \n-    children.add(chatUserControl);\n+    children.add(chatUserItemRoot);\n   }\n \n   private Collection\u003cPane\u003e getTargetPanesForUser(PlayerInfoBean playerInfoBean) {"
        },
        {
          "file_name": "src/main/java/com/faforever/client/chat/ChatUserItemController.java",
          "patch": "@@ -1,6 +1,5 @@\n package com.faforever.client.chat;\n \n-import com.faforever.client.fx.FxmlLoader;\n import com.faforever.client.fx.JavaFxUtil;\n import com.faforever.client.game.GameInfoBean;\n import com.faforever.client.game.GameService;\n@@ -16,13 +15,12 @@\n import com.faforever.client.replay.ReplayService;\n import com.faforever.client.reporting.ReportingService;\n import com.faforever.client.theme.ThemeService;\n-import com.faforever.client.user.UserService;\n-import com.faforever.client.util.RatingUtil;\n import javafx.application.Platform;\n-import javafx.beans.property.FloatProperty;\n+import javafx.beans.binding.Bindings;\n import javafx.beans.value.ChangeListener;\n import javafx.beans.value.WeakChangeListener;\n import javafx.collections.MapChangeListener;\n+import javafx.collections.WeakMapChangeListener;\n import javafx.fxml.FXML;\n import javafx.scene.control.Label;\n import javafx.scene.control.Tooltip;\n@@ -31,7 +29,7 @@\n import javafx.scene.input.ContextMenuEvent;\n import javafx.scene.input.MouseButton;\n import javafx.scene.input.MouseEvent;\n-import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Pane;\n import javafx.scene.paint.Color;\n import javafx.stage.PopupWindow;\n import org.springframework.context.ApplicationContext;\n@@ -43,14 +41,17 @@\n \n import static com.faforever.client.chat.ChatColorMode.CUSTOM;\n import static com.faforever.client.chat.SocialStatus.SELF;\n+import static com.faforever.client.util.RatingUtil.getGlobalRating;\n+import static com.faforever.client.util.RatingUtil.getLeaderboardRating;\n import static java.util.Collections.singletonList;\n \n-public class ChatUserControl extends HBox {\n-\n+public class ChatUserItemController {\n \n   private static final String CLAN_TAG_FORMAT \u003d \"[%s]\";\n \n   @FXML\n+  Pane chatUserItemRoot;\n+  @FXML\n   ImageView countryImageView;\n   @FXML\n   ImageView avatarImageView;\n@@ -64,8 +65,6 @@\n   @Resource\n   ApplicationContext applicationContext;\n   @Resource\n-  FxmlLoader fxmlLoader;\n-  @Resource\n   AvatarService avatarService;\n   @Resource\n   CountryFlagService countryFlagService;\n@@ -76,8 +75,6 @@\n   @Resource\n   PreferencesService preferencesService;\n   @Resource\n-  UserService userService;\n-  @Resource\n   ChatService chatService;\n   @Resource\n   GamesController gamesController;\n@@ -95,12 +92,22 @@\n   private PlayerInfoBean playerInfoBean;\n   private boolean colorsAllowedInPane;\n   private ChangeListener\u003cChatColorMode\u003e colorModeChangeListener;\n+  private MapChangeListener\u003c? super String, ? super Color\u003e colorPerUserMapChangeListener;\n+  private ChangeListener\u003cString\u003e avatarChangeListener;\n+  private ChangeListener\u003cString\u003e clanChangeListener;\n+  private ChangeListener\u003cGameStatus\u003e gameStatusChangeListener;\n+  private Tooltip tooltip;\n+\n+  @FXML\n+  void initialize() {\n+    chatUserItemRoot.setUserData(this);\n+  }\n \n   @FXML\n   void onContextMenuRequested(ContextMenuEvent event) {\n     ChatUserContextMenuController contextMenuController \u003d applicationContext.getBean(ChatUserContextMenuController.class);\n     contextMenuController.setPlayerInfoBean(playerInfoBean);\n-    contextMenuController.getContextMenu().show(getScene().getWindow(), event.getScreenX(), event.getScreenY());\n+    contextMenuController.getContextMenu().show(chatUserItemRoot.getScene().getWindow(), event.getScreenX(), event.getScreenY());\n   }\n \n   @FXML\n@@ -111,15 +118,24 @@ void onUsernameClicked(MouseEvent mouseEvent) {\n   }\n \n   @PostConstruct\n-  void init() {\n-    // TODO clean up FXML loading\n-    fxmlLoader.loadCustomControl(\"chat_user_control.fxml\", this);\n+  void postConstruct() {\n+    ChatPrefs chatPrefs \u003d preferencesService.getPreferences().getChat();\n \n     colorModeChangeListener \u003d (observable, oldValue, newValue) -\u003e configureColor();\n+    colorPerUserMapChangeListener \u003d change -\u003e {\n+      if (playerInfoBean.getUsername().equals(change.getKey())) {\n+        Color newColor \u003d chatPrefs.getUserToColor().get(playerInfoBean.getUsername());\n+        assignColor(newColor);\n+      }\n+    };\n+    avatarChangeListener \u003d (observable, oldValue, newValue) -\u003e Platform.runLater(() -\u003e setAvatarUrl(newValue));\n+    clanChangeListener \u003d (observable, oldValue, newValue) -\u003e Platform.runLater(() -\u003e setClanTag(newValue));\n+    gameStatusChangeListener \u003d (observable, oldValue, newValue) -\u003e Platform.runLater(() -\u003e setGameStatus(newValue));\n   }\n \n   private void configureColor() {\n     ChatPrefs chatPrefs \u003d preferencesService.getPreferences().getChat();\n+    chatPrefs.getUserToColor().removeListener(colorPerUserMapChangeListener);\n \n     if (playerInfoBean.getSocialStatus() \u003d\u003d SELF) {\n       usernameLabel.getStyleClass().add(SELF.getCssClass());\n@@ -135,13 +151,7 @@ private void configureColor() {\n         color \u003d chatPrefs.getUserToColor().get(playerInfoBean.getUsername());\n       }\n \n-      //FIXME: something here returned NPE when starting chat and users starting messaging aeolus on non-dev server\n-      chatPrefs.getUserToColor().addListener((MapChangeListener\u003c? super String, ? super Color\u003e) change -\u003e {\n-        if (playerInfoBean.getUsername().equals(change.getKey())) {\n-          Color newColor \u003d chatPrefs.getUserToColor().get(playerInfoBean.getUsername());\n-          assignColor(newColor);\n-        }\n-      });\n+      chatPrefs.getUserToColor().addListener(new WeakMapChangeListener\u003c\u003e(colorPerUserMapChangeListener));\n     } else if (chatPrefs.getChatColorMode().equals(ChatColorMode.RANDOM) \u0026\u0026 colorsAllowedInPane) {\n       color \u003d ColorGeneratorUtil.generateRandomColor(chatUser.getUsername().hashCode());\n     }\n@@ -160,6 +170,41 @@ private void assignColor(Color color) {\n     }\n   }\n \n+  private void setAvatarUrl(String avatarUrl) {\n+    if (StringUtils.isEmpty(avatarUrl)) {\n+      avatarImageView.setVisible(false);\n+    } else {\n+      avatarImageView.setImage(avatarService.loadAvatar(avatarUrl));\n+      avatarImageView.setVisible(true);\n+    }\n+  }\n+\n+  private void setClanTag(String newValue) {\n+    if (StringUtils.isEmpty(newValue)) {\n+      clanLabel.setVisible(false);\n+    } else {\n+      clanLabel.setText(String.format(CLAN_TAG_FORMAT, newValue));\n+      clanLabel.setVisible(true);\n+    }\n+  }\n+\n+  public void setGameStatus(GameStatus gameStatus) {\n+    switch (gameStatus) {\n+      case PLAYING:\n+        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.PLAYING_STATUS_IMAGE)));\n+        break;\n+      case HOST:\n+        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.HOSTING_STATUS_IMAGE)));\n+        break;\n+      case LOBBY:\n+        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.LOBBY_STATUS_IMAGE)));\n+        break;\n+      default:\n+        statusImageView.setImage(null);\n+    }\n+    statusImageView.setVisible(true);\n+  }\n+\n   public PlayerInfoBean getPlayerInfoBean() {\n     return playerInfoBean;\n   }\n@@ -173,7 +218,7 @@ public void setPlayerInfoBean(PlayerInfoBean playerInfoBean) {\n     configureAvatarImageView();\n     configureClanLabel();\n     configureGameStatusView();\n-    configureRatingTooltip();\n+    configureTooltip();\n \n     usernameLabel.setText(playerInfoBean.getUsername());\n   }\n@@ -193,9 +238,7 @@ private void configureCountryImageView() {\n   }\n \n   private void configureAvatarImageView() {\n-    playerInfoBean.avatarUrlProperty().addListener((observable, oldValue, newValue) -\u003e {\n-      Platform.runLater(() -\u003e setAvatarUrl(newValue));\n-    });\n+    playerInfoBean.avatarUrlProperty().addListener(new WeakChangeListener\u003c\u003e(avatarChangeListener));\n     setAvatarUrl(playerInfoBean.getAvatarUrl());\n \n     Tooltip avatarTooltip \u003d new Tooltip(playerInfoBean.getAvatarTooltip());\n@@ -207,32 +250,28 @@ private void configureAvatarImageView() {\n \n   private void configureClanLabel() {\n     setClanTag(playerInfoBean.getClan());\n-    playerInfoBean.clanProperty().addListener((observable, oldValue, newValue) -\u003e {\n-      Platform.runLater(() -\u003e setClanTag(newValue));\n-    });\n+    playerInfoBean.clanProperty().addListener(new WeakChangeListener\u003c\u003e(clanChangeListener));\n   }\n \n   private void configureGameStatusView() {\n     setGameStatus(playerInfoBean.getGameStatus());\n-    playerInfoBean.gameStatusProperty().addListener((observable, oldValue, newValue) -\u003e {\n-      Platform.runLater(() -\u003e setGameStatus(newValue));\n-    });\n-\n+    playerInfoBean.gameStatusProperty().addListener(new WeakChangeListener\u003c\u003e(gameStatusChangeListener));\n   }\n \n-  private void configureRatingTooltip() {\n-    if (!playerInfoBean.getChatOnly()) {\n-      Tooltip userRatingTooltip \u003d new Tooltip();\n-\n-      String rating \u003d i18n.get(\"userInfo.ratingFormat\", RatingUtil.getRoundedGlobalRating(playerInfoBean), RatingUtil.getLeaderboardRating(playerInfoBean));\n-      userRatingTooltip.setText(rating);\n+  private void configureTooltip() {\n+    if (playerInfoBean.getChatOnly()) {\n+      return;\n+    }\n \n-      addRatingListenerToTooltip(playerInfoBean.leaderboardRatingMeanProperty(), userRatingTooltip);\n-      addRatingListenerToTooltip(playerInfoBean.globalRatingMeanProperty(), userRatingTooltip);\n+    tooltip \u003d new Tooltip();\n+    Tooltip.install(clanLabel, tooltip);\n+    Tooltip.install(usernameLabel, tooltip);\n \n-      Tooltip.install(clanLabel, userRatingTooltip);\n-      Tooltip.install(usernameLabel, userRatingTooltip);\n-    }\n+    Bindings.createStringBinding(\n+        () -\u003e i18n.get(\"userInfo.ratingFormat\", getGlobalRating(playerInfoBean), getLeaderboardRating(playerInfoBean)),\n+        playerInfoBean.leaderboardRatingMeanProperty(), playerInfoBean.leaderboardRatingDeviationProperty(),\n+        playerInfoBean.globalRatingMeanProperty(), playerInfoBean.globalRatingDeviationProperty()\n+    );\n   }\n \n   private void setCountry(String country) {\n@@ -244,48 +283,6 @@ private void setCountry(String country) {\n     }\n   }\n \n-  private void setAvatarUrl(String avatarUrl) {\n-    if (StringUtils.isEmpty(avatarUrl)) {\n-      avatarImageView.setVisible(false);\n-    } else {\n-      avatarImageView.setImage(avatarService.loadAvatar(avatarUrl));\n-      avatarImageView.setVisible(true);\n-    }\n-  }\n-\n-  private void setClanTag(String newValue) {\n-    if (StringUtils.isEmpty(newValue)) {\n-      clanLabel.setVisible(false);\n-    } else {\n-      clanLabel.setText(String.format(CLAN_TAG_FORMAT, newValue));\n-      clanLabel.setVisible(true);\n-    }\n-  }\n-\n-  public void setGameStatus(GameStatus gameStatus) {\n-    switch (gameStatus) {\n-      case PLAYING:\n-        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.PLAYING_STATUS_IMAGE)));\n-        break;\n-      case HOST:\n-        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.HOSTING_STATUS_IMAGE)));\n-        break;\n-      case LOBBY:\n-        statusImageView.setImage(new Image(themeService.getThemeFile(ThemeService.LOBBY_STATUS_IMAGE)));\n-        break;\n-      default:\n-        statusImageView.setImage(null);\n-    }\n-    statusImageView.setVisible(true);\n-  }\n-\n-  private void addRatingListenerToTooltip(FloatProperty ratingProperty, Tooltip tooltip) {\n-    ratingProperty.addListener((observable, oldValue, newValue) -\u003e {\n-      String updatedRating \u003d i18n.get(\"userInfo.ratingFormat\", RatingUtil.getGlobalRating(playerInfoBean), RatingUtil.getLeaderboardRating(playerInfoBean));\n-      tooltip.setText(updatedRating);\n-    });\n-  }\n-\n   @FXML\n   void onMouseEnterGameStatus() {\n     if (playerInfoBean.getGameStatus() \u003d\u003d GameStatus.NONE) {\n@@ -328,4 +325,13 @@ public void setColorsAllowedInPane(boolean colorsAllowedInPane) {\n     this.colorsAllowedInPane \u003d colorsAllowedInPane;\n     configureColor();\n   }\n+\n+  public Pane getRoot() {\n+    return chatUserItemRoot;\n+  }\n+\n+  public void setVisible(boolean visible) {\n+    chatUserItemRoot.setVisible(visible);\n+    chatUserItemRoot.setManaged(visible);\n+  }\n }"
        },
        {
          "file_name": "src/main/java/com/faforever/client/chat/FilterUserController.java",
          "patch": "@@ -60,32 +60,31 @@ void init() {\n   }\n \n   private void filterUsers() {\n-    Map\u003cString, Map\u003cPane, ChatUserControl\u003e\u003e userToChatUserControls \u003d channelTabController.getUserToChatUserControls();\n-    for (Map\u003cPane, ChatUserControl\u003e chatUserControlMap : userToChatUserControls.values()) {\n-      for (Map.Entry\u003cPane, ChatUserControl\u003e chatUserControlEntry : chatUserControlMap.entrySet()) {\n-        ChatUserControl chatUserControl \u003d chatUserControlEntry.getValue();\n+    Map\u003cString, Map\u003cPane, ChatUserItemController\u003e\u003e userToChatUserControls \u003d channelTabController.getUserToChatUserControls();\n+    for (Map\u003cPane, ChatUserItemController\u003e chatUserControlMap : userToChatUserControls.values()) {\n+      for (Map.Entry\u003cPane, ChatUserItemController\u003e chatUserControlEntry : chatUserControlMap.entrySet()) {\n+        ChatUserItemController chatUserItemController \u003d chatUserControlEntry.getValue();\n         boolean display;\n-        display \u003d filterUser(chatUserControl);\n-        chatUserControl.setVisible(display);\n-        chatUserControl.setManaged(display);\n+        display \u003d filterUser(chatUserItemController);\n+        chatUserItemController.setVisible(display);\n       }\n     }\n   }\n \n-  private boolean filterUser(ChatUserControl chatUserControl) {\n-    return channelTabController.isUsernameMatch(chatUserControl)\n-        \u0026\u0026 isInClan(chatUserControl)\n-        \u0026\u0026 isBoundedByRating(chatUserControl)\n-        \u0026\u0026 isGameStatusMatch(chatUserControl);\n+  private boolean filterUser(ChatUserItemController chatUserItemController) {\n+    return channelTabController.isUsernameMatch(chatUserItemController)\n+        \u0026\u0026 isInClan(chatUserItemController)\n+        \u0026\u0026 isBoundedByRating(chatUserItemController)\n+        \u0026\u0026 isGameStatusMatch(chatUserItemController);\n   }\n \n   @VisibleForTesting\n-  boolean isInClan(ChatUserControl chatUserControl) {\n+  boolean isInClan(ChatUserItemController chatUserItemController) {\n     if (clanFilterField.getText().isEmpty()) {\n       return true;\n     }\n \n-    String clan \u003d chatUserControl.getPlayerInfoBean().getClan();\n+    String clan \u003d chatUserItemController.getPlayerInfoBean().getClan();\n     if (clan \u003d\u003d null) {\n       return false;\n     } else {\n@@ -95,8 +94,8 @@ boolean isInClan(ChatUserControl chatUserControl) {\n   }\n \n   @VisibleForTesting\n-  boolean isBoundedByRating(ChatUserControl chatUserControl) {\n-    int globalRating \u003d RatingUtil.getGlobalRating(chatUserControl.getPlayerInfoBean());\n+  boolean isBoundedByRating(ChatUserItemController chatUserItemController) {\n+    int globalRating \u003d RatingUtil.getGlobalRating(chatUserItemController.getPlayerInfoBean());\n     int minRating;\n     int maxRating;\n \n@@ -115,12 +114,12 @@ boolean isBoundedByRating(ChatUserControl chatUserControl) {\n   }\n \n   @VisibleForTesting\n-  boolean isGameStatusMatch(ChatUserControl chatUserControl) {\n+  boolean isGameStatusMatch(ChatUserItemController chatUserItemController) {\n     if (gameStatusFilter \u003d\u003d null) {\n       return true;\n     }\n \n-    GameStatus gameStatus \u003d chatUserControl.getPlayerInfoBean().getGameStatus();\n+    GameStatus gameStatus \u003d chatUserItemController.getPlayerInfoBean().getGameStatus();\n     if (gameStatusFilter \u003d\u003d LOBBY) {\n       return LOBBY \u003d\u003d gameStatus || HOST \u003d\u003d gameStatus;\n     } else {"
        },
        {
          "file_name": "src/main/java/com/faforever/client/config/UiConfig.java",
          "patch": "@@ -11,7 +11,7 @@\n import com.faforever.client.chat.ChannelTabController;\n import com.faforever.client.chat.ChatController;\n import com.faforever.client.chat.ChatUserContextMenuController;\n-import com.faforever.client.chat.ChatUserControl;\n+import com.faforever.client.chat.ChatUserItemController;\n import com.faforever.client.chat.CountryFlagService;\n import com.faforever.client.chat.CountryFlagServiceImpl;\n import com.faforever.client.chat.FilterUserController;\n@@ -282,12 +282,6 @@ PersistentNotificationController persistentNotificationController() {\n \n   @Bean\n   @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n-  ChatUserControl chatUserControl() {\n-    return new ChatUserControl();\n-  }\n-\n-  @Bean\n-  @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n   ChatUserContextMenuController chatUserContextMenuController() {\n     return loadController(\"chat_user_context_menu.fxml\");\n   }\n@@ -384,4 +378,10 @@ TransientNotificationsController transientNotificationsController() {\n   TransientNotificationController transientNotificationController() {\n     return loadController(\"transient_notification.fxml\");\n   }\n+\n+  @Bean\n+  @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n+  ChatUserItemController chatUserItemController() {\n+    return loadController(\"chat_user_item.fxml\");\n+  }\n }"
        },
        {
          "file_name": "src/main/resources/theme/chat_user_item.fxml",
          "patch": "@@ -3,9 +3,11 @@\n \u003c?import javafx.scene.control.Label?\u003e\n \u003c?import javafx.scene.image.ImageView?\u003e\n \u003c?import javafx.scene.layout.HBox?\u003e\n-\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER_LEFT\" maxWidth\u003d\"1.7976931348623157E308\"\n-         minWidth\u003d\"-Infinity\" onContextMenuRequested\u003d\"#onContextMenuRequested\" spacing\u003d\"5.0\"\n-         styleClass\u003d\"chat-user-control-root\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.40\"\u003e\n+\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"chatUserItemRoot\" alignment\u003d\"CENTER_LEFT\"\n+      maxWidth\u003d\"1.7976931348623157E308\"\n+      fx:controller\u003d\"com.faforever.client.chat.ChatUserItemController\"\n+      minWidth\u003d\"-Infinity\" onContextMenuRequested\u003d\"#onContextMenuRequested\" spacing\u003d\"5.0\"\n+      styleClass\u003d\"chat-user-control-root\" xmlns\u003d\"http://javafx.com/javafx/8.0.40\"\u003e\n   \u003cImageView fx:id\u003d\"avatarImageView\" fitHeight\u003d\"20.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"chat-user-control-avatar\" HBox.hgrow\u003d\"NEVER\" /\u003e\n   \u003cImageView fx:id\u003d\"countryImageView\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\n              styleClass\u003d\"chat-user-control-country\" HBox.hgrow\u003d\"NEVER\"/\u003e\n@@ -15,4 +17,4 @@\n   \u003cImageView fx:id\u003d\"statusImageView\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" onMouseClicked\u003d\"#onMouseClickGameStatus\"\n              onMouseEntered\u003d\"#onMouseEnterGameStatus\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\n              styleClass\u003d\"chat-user-control-status\" HBox.hgrow\u003d\"NEVER\"/\u003e\n-\u003c/fx:root\u003e\n+\u003c/HBox\u003e"
        },
        {
          "file_name": "src/test/java/com/faforever/client/chat/ChatControllerTest.java",
          "patch": "@@ -28,6 +28,7 @@\n import static org.hamcrest.Matchers.empty;\n import static org.hamcrest.Matchers.hasSize;\n import static org.junit.Assert.*;\n+import static org.mockito.Matchers.anyString;\n import static org.mockito.Matchers.eq;\n import static org.mockito.Mockito.doAnswer;\n import static org.mockito.Mockito.mock;\n@@ -109,45 +110,6 @@ public void testOnDisconnected() throws Exception {\n   }\n \n   @Test\n-  @SuppressWarnings(\"unchecked\")\n-  public void testOnUserJoinedChannel() throws Exception {\n-    channelJoined(TEST_CHANNEL_NAME);\n-\n-    ChatUser chatUser \u003d mock(ChatUser.class);\n-\n-    verify(chatService).addUsersListener(eq(TEST_CHANNEL_NAME), onUsersListenerCaptor.capture());\n-\n-    MapChangeListener.Change\u003c? extends String, ? extends ChatUser\u003e usersChange \u003d mock(MapChangeListener.Change.class);\n-    when(usersChange.wasAdded()).thenReturn(true);\n-    when(usersChange.getValueAdded()).thenReturn(chatUser);\n-    onUsersListenerCaptor.getValue().onChanged(usersChange);\n-    // TODO assert something useful\n-  }\n-\n-  @SuppressWarnings(\"unchecked\")\n-  private void channelJoined(String channel) {\n-    MapChangeListener.Change\u003c? extends String, ? extends Channel\u003e testChannelChange \u003d mock(MapChangeListener.Change.class);\n-    when(testChannelChange.getKey()).thenReturn(channel);\n-    channelsListener.getValue().onChanged(testChannelChange);\n-  }\n-\n-  @Test\n-  @SuppressWarnings(\"unchecked\")\n-  public void testOnChatUserLeftChannel() throws Exception {\n-    channelJoined(TEST_CHANNEL_NAME);\n-\n-    ChatUser chatUser \u003d mock(ChatUser.class);\n-\n-    verify(chatService).addUsersListener(eq(TEST_CHANNEL_NAME), onUsersListenerCaptor.capture());\n-\n-    MapChangeListener.Change\u003c? extends String, ? extends ChatUser\u003e change \u003d mock(MapChangeListener.Change.class);\n-    when(change.wasRemoved()).thenReturn(true);\n-    when(change.getValueRemoved()).thenReturn(chatUser);\n-    onUsersListenerCaptor.getValue().onChanged(change);\n-    // TODO assert something useful\n-  }\n-\n-  @Test\n   public void testOnPrivateMessage() throws Exception {\n     ChatMessage chatMessage \u003d mock(ChatMessage.class);\n \n@@ -190,30 +152,43 @@ public void testOnChannelsJoinedRequest() throws Exception {\n     connectionState.set(ConnectionState.DISCONNECTED);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  private void channelJoined(String channel) {\n+    MapChangeListener.Change\u003c? extends String, ? extends Channel\u003e testChannelChange \u003d mock(MapChangeListener.Change.class);\n+    when(testChannelChange.getKey()).thenReturn(channel);\n+    channelsListener.getValue().onChanged(testChannelChange);\n+  }\n+\n   @Test\n   @SuppressWarnings(\"unchecked\")\n   public void testOnJoinChannelButtonClicked() throws Exception {\n+    assertThat(instance.chatsTabPane.getTabs(), is(empty()));\n+\n     Tab tab \u003d new Tab();\n     tab.setId(TEST_CHANNEL_NAME);\n \n     when(channelTabController.getRoot()).thenReturn(tab);\n     when(userService.getUsername()).thenReturn(TEST_USER_NAME);\n     when(chatService.isDefaultChannel(TEST_CHANNEL_NAME)).thenReturn(false);\n+    doAnswer(invocation -\u003e {\n+      MapChangeListener.Change\u003c? extends String, ? extends Channel\u003e change \u003d mock(MapChangeListener.Change.class);\n+      when(change.wasAdded()).thenReturn(true);\n+      when(change.getValueAdded()).thenReturn(new Channel(invocation.getArgumentAt(0, String.class)));\n+      channelsListener.getValue().onChanged(change);\n+      return null;\n+    }).when(chatService).joinChannel(anyString());\n \n     instance.channelNameTextField.setText(TEST_CHANNEL_NAME);\n     instance.onJoinChannelButtonClicked();\n \n     verify(chatService).joinChannel(TEST_CHANNEL_NAME);\n-    assertThat(instance.chatsTabPane.getTabs(), is(empty()));\n-\n     verify(chatService).addUsersListener(eq(TEST_CHANNEL_NAME), onUsersListenerCaptor.capture());\n \n     MapChangeListener.Change\u003c? extends String, ? extends ChatUser\u003e change \u003d mock(MapChangeListener.Change.class);\n     when(change.wasAdded()).thenReturn(true);\n     when(change.getValueAdded()).thenReturn(new ChatUser(TEST_USER_NAME, null));\n     onUsersListenerCaptor.getValue().onChanged(change);\n \n-\n     CountDownLatch tabAddedLatch \u003d new CountDownLatch(1);\n     instance.chatsTabPane.getTabs().addListener((InvalidationListener) observable -\u003e tabAddedLatch.countDown());\n     tabAddedLatch.await(2, TimeUnit.SECONDS);"
        },
        {
          "file_name": "src/test/java/com/faforever/client/chat/FilterUserControllerTest.java",
          "patch": "@@ -18,7 +18,7 @@\n public class FilterUserControllerTest extends AbstractPlainJavaFxTest {\n \n   @Mock\n-  ChatUserControl chatUserControl;\n+  ChatUserItemController chatUserItemController;\n \n   @Mock\n   PlayerInfoBean playerInfoBean;\n@@ -37,7 +37,7 @@ public void setUp() throws Exception {\n     instance.channelTabController \u003d loadController(\"channel_tab.fxml\");\n     instance.i18n \u003d i18n;\n \n-    when(chatUserControl.getPlayerInfoBean()).thenReturn(playerInfoBean);\n+    when(chatUserItemController.getPlayerInfoBean()).thenReturn(playerInfoBean);\n   }\n \n   @Test\n@@ -52,7 +52,7 @@ public void testIsInClan() throws Exception {\n     when(playerInfoBean.getClan()).thenReturn(testClan);\n     instance.clanFilterField.setText(testClan);\n \n-    assertTrue(instance.isInClan(chatUserControl));\n+    assertTrue(instance.isInClan(chatUserItemController));\n   }\n \n   @Test\n@@ -62,7 +62,7 @@ public void testIsBoundedByRatingWithinBounds() throws Exception {\n     instance.minRatingFilterField.setText(\"300\");\n     instance.maxRatingFilterField.setText(\"700\");\n \n-    assertTrue(instance.isBoundedByRating(chatUserControl));\n+    assertTrue(instance.isBoundedByRating(chatUserItemController));\n   }\n \n   @Test\n@@ -72,28 +72,28 @@ public void testIsBoundedByRatingNotWithinBounds() throws Exception {\n     instance.minRatingFilterField.setText(\"600\");\n     instance.maxRatingFilterField.setText(\"300\");\n \n-    assertFalse(instance.isBoundedByRating(chatUserControl));\n+    assertFalse(instance.isBoundedByRating(chatUserItemController));\n   }\n \n   @Test\n   public void testIsGameStatusMatchPlaying() throws Exception {\n     when(playerInfoBean.getGameStatus()).thenReturn(PLAYING);\n     instance.gameStatusFilter \u003d PLAYING;\n \n-    assertTrue(instance.isGameStatusMatch(chatUserControl));\n+    assertTrue(instance.isGameStatusMatch(chatUserItemController));\n   }\n \n   @Test\n   public void testIsGameStatusMatchLobby() throws Exception {\n     when(playerInfoBean.getGameStatus()).thenReturn(HOST);\n     instance.gameStatusFilter \u003d HOST;\n \n-    assertTrue(instance.isGameStatusMatch(chatUserControl));\n+    assertTrue(instance.isGameStatusMatch(chatUserItemController));\n \n     when(playerInfoBean.getGameStatus()).thenReturn(LOBBY);\n     instance.gameStatusFilter \u003d LOBBY;\n \n-    assertTrue(instance.isGameStatusMatch(chatUserControl));\n+    assertTrue(instance.isGameStatusMatch(chatUserItemController));\n   }\n \n   @Test"
        },
        {
          "file_name": "src/test/java/com/faforever/client/chat/PircBotXChatServiceTest.java",
          "patch": "@@ -84,6 +84,7 @@\n import static org.mockito.Matchers.eq;\n import static org.mockito.Mockito.doAnswer;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.reset;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n@@ -189,9 +190,21 @@ public void setUp() throws Exception {\n     when(pircBotX.getUserChannelDao()).thenReturn(userChannelDao);\n \n     doAnswer(\n-        invocation -\u003e WaitForAsyncUtils.async(() -\u003e invocation.getArgumentAt(0, Task.class).run())\n+        invocation -\u003e {\n+          WaitForAsyncUtils.async(() -\u003e invocation.getArgumentAt(0, Task.class).run());\n+          return null;\n+        }\n     ).when(threadPoolExecutor).execute(any(Task.class));\n \n+    doAnswer((InvocationOnMock invocation) -\u003e {\n+      @SuppressWarnings(\"unchecked\")\n+      PrioritizedTask\u003cBoolean\u003e prioritizedTask \u003d invocation.getArgumentAt(0, PrioritizedTask.class);\n+      prioritizedTask.run();\n+\n+      Future\u003cBoolean\u003e result \u003d WaitForAsyncUtils.asyncFx(prioritizedTask::getValue);\n+      return completedFuture(result.get(1, TimeUnit.SECONDS));\n+    }).when(instance.taskService).submitTask(any());\n+\n     botStartedFuture \u003d new CompletableFuture\u003c\u003e();\n     doAnswer(invocation -\u003e {\n       botStartedFuture.complete(true);\n@@ -254,13 +267,14 @@ public void testOnChatUserList() throws Exception {\n   }\n \n   private void connect() throws Exception {\n-    mockTaskService();\n     instance.connect();\n     verify(pircBotXFactory).createPircBotX(configurationCaptor.capture());\n \n-    CompletableFuture\u003cVoid\u003e future \u003d listenForConnected();\n+    CountDownLatch latch \u003d listenForConnected();\n     firePircBotXEvent(new ConnectEvent(pircBotX));\n-    future.get(TIMEOUT, TIMEOUT_UNIT);\n+    latch.await(TIMEOUT, TIMEOUT_UNIT);\n+\n+    verify(outputIrc).joinChannel(DEFAULT_CHANNEL_NAME);\n \n     SocialMessage socialMessage \u003d new SocialMessage();\n     socialMessage.setChannels(Collections.singletonList(DEFAULT_CHANNEL_NAME));\n@@ -282,25 +296,14 @@ private void firePircBotXEvent(Event event) {\n     configurationCaptor.getValue().getListenerManager().onEvent(event);\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n-  private void mockTaskService() {\n-    doAnswer((InvocationOnMock invocation) -\u003e {\n-      PrioritizedTask\u003cBoolean\u003e prioritizedTask \u003d invocation.getArgumentAt(0, PrioritizedTask.class);\n-      prioritizedTask.run();\n-\n-      Future\u003cBoolean\u003e result \u003d WaitForAsyncUtils.asyncFx(prioritizedTask::getValue);\n-      return completedFuture(result.get(1, TimeUnit.SECONDS));\n-    }).when(instance.taskService).submitTask(any());\n-  }\n-\n-  private CompletableFuture\u003cVoid\u003e listenForConnected() {\n-    CompletableFuture\u003cVoid\u003e future \u003d new CompletableFuture\u003c\u003e();\n+  private CountDownLatch listenForConnected() {\n+    CountDownLatch latch \u003d new CountDownLatch(1);\n     instance.connectionStateProperty().addListener((observable, oldValue, newValue) -\u003e {\n       if (newValue \u003d\u003d ConnectionState.CONNECTED) {\n-        future.complete(null);\n+        latch.countDown();\n       }\n     });\n-    return future;\n+    return latch;\n   }\n \n   @Test\n@@ -620,7 +623,6 @@ public void testSendMessageInBackground() throws Exception {\n     CompletableFuture\u003cString\u003e future \u003d instance.sendMessageInBackground(DEFAULT_CHANNEL_NAME, message);\n \n     assertThat(future.get(TIMEOUT, TIMEOUT_UNIT), is(message));\n-    verify(pircBotX).sendIRC();\n     verify(outputIrc).message(DEFAULT_CHANNEL_NAME, message);\n   }\n \n@@ -688,15 +690,13 @@ public void testLeaveChannel() throws Exception {\n   @Test\n   public void testSendActionInBackground() throws Exception {\n     connect();\n-    String action \u003d \"test action\";\n \n-    when(taskService.submitTask(any())).thenReturn(completedFuture(action));\n+    String action \u003d \"test action\";\n \n     CompletableFuture\u003cString\u003e future \u003d instance.sendActionInBackground(DEFAULT_CHANNEL_NAME, action);\n \n-    verify(pircBotX).sendIRC();\n-    verify(outputIrc).action(DEFAULT_CHANNEL_NAME, action);\n     assertThat(future.get(TIMEOUT, TIMEOUT_UNIT), is(action));\n+    verify(outputIrc).action(DEFAULT_CHANNEL_NAME, action);\n   }\n \n   @Test\n@@ -728,6 +728,7 @@ public void testUsersListenerJoinQuit() throws Exception {\n \n   @Test\n   public void testJoinChannel() throws Exception {\n+    reset(taskService);\n     when(taskService.submitTask(any())).thenReturn(completedFuture(null));\n \n     connect();"
        }
      ]
    }
  },
  {
    "name": "Memory leak in CamelCoreSubsystemExtension",
    "url": "https://github.com/wildfly-extras/wildfly-camel/issues/1660",
    "description": "[`CamelCoreSubsystemExtension.removeCamelContext()`](https://github.com/wildfly-extras/wildfly-camel/blob/13d20643668649fa73c19736f7669320be90d5e8/subsystem/core/src/main/java/org/wildfly/extension/camel/CamelCoreSubsystemExtension.java#L74-L82) does not actually do what its name implies. \r\n\r\nThe `CamelContext` is never removed from the `contexts` `HashMap` so it grows exponentially with each deploy / undeploy.\r\n\r\nThe basic test suite ends with 187 `CamelContext` instances left lingering.\r\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/wildfly-extras/wildfly-camel/commit/01520646ea044f59fe7b934a2399a39802d1fec0",
      "files": [
        {
          "file_name": "subsystem/core/src/main/java/org/wildfly/extension/camel/CamelCoreSubsystemExtension.java",
          "patch": "@@ -75,6 +75,7 @@ public void removeCamelContext(CamelContext camelctx) {\n         ServiceController\u003c?\u003e controller;\n         synchronized (contexts) {\n             controller \u003d contexts.get(camelctx);\n+            contexts.remove(camelctx);\n         }\n         if (controller !\u003d null) {\n             controller.setMode(Mode.REMOVE);"
        }
      ]
    }
  },
  {
    "name": "Refreshing a region containing tooltips causes a memory leak",
    "url": "https://github.com/TheCoder4eu/BootsFaces-OSP/issues/220",
    "description": "This problem can be observed in the AJAX+RTL demo of switch.xhtml in the showcase. Moving the mouse over the switch makes the tooltip occur. When you toggle the switch, it is replaced with a newer version of the same switch. However, the tooltip remains, and there\u0027s no way to hide it again. Looking at the end of the HTML view reveals that there are two tooltip divs. Each time you toggle the switch, another tooltip div appears.\n",
    "keywords": [
      "tooltip",
      "switch"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/TheCoder4eu/BootsFaces-OSP/commit/feef57e0487d4227a22ee55e5cb50e95b93546e7",
      "files": [
        {
          "file_name": "src/main/java/net/bootsfaces/render/Tooltip.java",
          "patch": "@@ -151,6 +151,8 @@ public static void activateTooltips(FacesContext context, UIComponent component)\n \t\t\t\toptions \u003d \"{\" + options.substring(0, options.length() - 1) + \"}\";\n \n \t\t\tString js \u003d \"$(function () {\\n\" + \"$(\u0027#\" + id + \"\u0027).tooltip(\" + options + \")\\n\" + \"});\\n\";\n+\t\t\t//destroy existing tooltips to prevent ajax bugs in some browsers and prevent memory leaks (see #323 and #220)\n+\t\t\tjs+\u003d\"$(\u0027.tooltip\u0027).tooltip(\u0027destroy\u0027); \";\n \t\t\tcontext.getResponseWriter().write(\"\u003cscript type\u003d\u0027text/javascript\u0027\u003e\" + js + \"\u003c/script\u003e\");\n \t\t}\n \t}"
        }
      ]
    }
  },
  {
    "name": "Memory leak",
    "url": "https://github.com/nispok/snackbar/issues/64",
    "description": "I use a snackbar with the custom duration 10 sec. If a user presses Back when a snackbar is showing, then the activity is finished but it cannot be garbage collected because there is a strong reference to it from the handler queue (due to postDelayed() method call):\n\nHandler -\u003e mDismissRunnable -\u003e Snackbar (outer class) -\u003e Activity\n\nI think it is needed to call removeCallbacks(mDismissRunnable); from onDetachedFromWindow(), for example.\n",
    "keywords": [
      "-\u003e",
      "snackbar"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/nispok/snackbar/commit/04ed7df8a877d8aada3b970ce77384d5900e7f1b",
      "files": [
        {
          "file_name": "lib/gradle.properties",
          "patch": "@@ -2,7 +2,7 @@ POM_NAME\u003dSnackbar\n POM_ARTIFACT_ID\u003dsnackbar\n POM_PACKAGING\u003daar\n GROUP\u003dcom.nispok\n-VERSION_NAME\u003d2.7.3\n+VERSION_NAME\u003d2.7.4\n \n POM_DESCRIPTION\u003dSnackbar Android library\n POM_URL\u003dhttps://github.com/nispok/snackbar"
        },
        {
          "file_name": "lib/src/main/java/com/nispok/snackbar/Snackbar.java",
          "patch": "@@ -604,6 +604,14 @@ private void finish() {\n         mIsShowing \u003d false;\n     }\n \n+    @Override\n+    protected void onDetachedFromWindow() {\n+        super.onDetachedFromWindow();\n+        if (mDismissRunnable !\u003d null) {\n+            removeCallbacks(mDismissRunnable);\n+        }\n+    }\n+\n     public int getActionColor() {\n         return mActionColor;\n     }"
        }
      ]
    }
  },
  {
    "name": "Prevent memory leak in TicketGrantingTicketImpl",
    "url": "https://github.com/apereo/cas/pull/1182",
    "description": "Closes https://github.com/Jasig/cas/issues/493\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/apereo/cas/commit/58c12bf2a012dfbd2eadcabb691b9b148c0eea83",
      "files": [
        {
          "file_name": "cas-server-core-api/src/main/java/org/jasig/cas/services/RegisteredService.java",
          "patch": "@@ -124,7 +124,7 @@\n      * @return true if they match, false otherwise.\n      */\n     boolean matches(Service service);\n-    \n+\n     /**\n      * Clone this service.\n      *\n@@ -139,7 +139,7 @@\n      * @return the logout type of the service.\n      */\n     LogoutType getLogoutType();\n-    \n+\n     /**\n      * Gets the attribute filtering policy to determine\n      * how attributes are to be filtered and released for\n@@ -168,7 +168,7 @@\n      * @since 4.1\n      */\n     URL getLogoutUrl();\n-    \n+\n     /**\n      * Gets the public key associated with this service\n      * that is used to authorize the request by\n@@ -179,5 +179,4 @@\n      * @since 4.1\n      */\n     RegisteredServicePublicKey getPublicKey();\n-    \n }"
        },
        {
          "file_name": "cas-server-core-api/src/main/java/org/jasig/cas/ticket/TicketGrantingTicket.java",
          "patch": "@@ -66,11 +66,12 @@\n      * @param service The service for which we are granting a ticket\n      * @param expirationPolicy the expiration policy.\n      * @param credentialsProvided if the credentials are provided.\n+     * @param onlyTrackMostRecentSession track the most recent session by keeping the latest service ticket\n      * @return the service ticket granted to a specific service for the\n      * principal of the TicketGrantingTicket\n      */\n     ServiceTicket grantServiceTicket(String id, Service service,\n-        ExpirationPolicy expirationPolicy, boolean credentialsProvided);\n+        ExpirationPolicy expirationPolicy, boolean credentialsProvided, boolean onlyTrackMostRecentSession);\n \n     /**\n      * Gets an immutable map of service ticket and services accessed by this ticket-granting ticket."
        },
        {
          "file_name": "cas-server-core/src/main/java/org/jasig/cas/CentralAuthenticationServiceImpl.java",
          "patch": "@@ -66,6 +66,7 @@\n import org.slf4j.LoggerFactory;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.beans.factory.annotation.Qualifier;\r\n+import org.springframework.beans.factory.annotation.Value;\r\n import org.springframework.stereotype.Component;\r\n import org.springframework.util.Assert;\r\n \r\n@@ -190,6 +191,10 @@\n     private final UniqueTicketIdGenerator defaultServiceTicketIdGenerator\r\n             \u003d new DefaultUniqueTicketIdGenerator();\r\n \r\n+    /** Whether we should track the most recent session by keeping the latest service ticket. */\r\n+    @Value(\"${tgt.onlyTrackMostRecentSession:true}\")\r\n+    private boolean onlyTrackMostRecentSession \u003d true;\r\n+\r\n     /**\r\n      * Instantiates a new Central authentication service impl.\r\n      */\r\n@@ -338,7 +343,8 @@ public ServiceTicket grantServiceTicket(\n                 ticketId,\r\n                 service,\r\n                 this.serviceTicketExpirationPolicy,\r\n-                currentAuthentication !\u003d null);\r\n+                currentAuthentication !\u003d null,\r\n+                this.onlyTrackMostRecentSession);\r\n \r\n         this.serviceTicketRegistry.addTicket(serviceTicket);\r\n \r\n@@ -671,4 +677,12 @@ private void verifyRegisteredServiceProperties(final RegisteredService registere\n             throw new UnauthorizedServiceException(UnauthorizedServiceException.CODE_UNAUTHZ_SERVICE, msg);\r\n         }\r\n     }\r\n+\r\n+    public boolean isOnlyTrackMostRecentSession() {\r\n+        return onlyTrackMostRecentSession;\r\n+    }\r\n+\r\n+    public void setOnlyTrackMostRecentSession(final boolean onlyTrackMostRecentSession) {\r\n+        this.onlyTrackMostRecentSession \u003d onlyTrackMostRecentSession;\r\n+    }\r\n }\r"
        },
        {
          "file_name": "cas-server-core/src/main/java/org/jasig/cas/services/AbstractRegisteredService.java",
          "patch": "@@ -359,7 +359,6 @@ public void copyFrom(final RegisteredService source) {\n         this.setLogoutUrl(source.getLogoutUrl());\n         this.setPublicKey(source.getPublicKey());\n         this.setRequiredHandlers(source.getRequiredHandlers());\n-\n     }\n \n     /**"
        },
        {
          "file_name": "cas-server-core/src/main/java/org/jasig/cas/ticket/TicketGrantingTicketImpl.java",
          "patch": "@@ -19,6 +19,7 @@\n package org.jasig.cas.ticket;\n \n import com.google.common.collect.ImmutableMap;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.jasig.cas.authentication.Authentication;\n import org.jasig.cas.authentication.principal.Service;\n@@ -32,12 +33,12 @@\n import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-\n /**\n  * Concrete implementation of a TicketGrantingTicket. A TicketGrantingTicket is\n  * the global identifier of a principal into the system. It grants the Principal\n@@ -141,7 +142,7 @@ public Authentication getAuthentication() {\n     @Override\n     public synchronized ServiceTicket grantServiceTicket(final String id,\n         final Service service, final ExpirationPolicy expirationPolicy,\n-        final boolean credentialsProvided) {\n+        final boolean credentialsProvided, final boolean onlyTrackMostRecentSession) {\n         final ServiceTicket serviceTicket \u003d new ServiceTicketImpl(id, this,\n             service, this.getCountOfUses() \u003d\u003d 0 || credentialsProvided,\n             expirationPolicy);\n@@ -151,14 +152,43 @@ public synchronized ServiceTicket grantServiceTicket(final String id,\n         final List\u003cAuthentication\u003e authentications \u003d getChainedAuthentications();\n         service.setPrincipal(authentications.get(authentications.size()-1).getPrincipal());\n \n+        if (onlyTrackMostRecentSession) {\n+            final String path \u003d normalizePath(service);\n+            final Collection\u003cService\u003e existingServices \u003d services.values();\n+            // loop on existing services\n+            for (final Service existingService : existingServices) {\n+                final String existingPath \u003d normalizePath(existingService);\n+                // if an existing service has the same normalized path, remove it\n+                // and its service ticket to keep the latest one\n+                if (StringUtils.equals(path, existingPath)) {\n+                    existingServices.remove(existingService);\n+                    LOGGER.trace(\"removed previous ST for service: {}\", existingService);\n+                    break;\n+                }\n+            }\n+        }\n         this.services.put(id, service);\n \n         return serviceTicket;\n     }\n \n     /**\n+     * Normalize the path of a service by removing the query string and everything after a semi-colon.\n+     *\n+     * @param service the service to normalize\n+     * @return the normalized path\n+     */\n+    private String normalizePath(final Service service) {\n+        String path \u003d service.getId();\n+        path \u003d StringUtils.substringBefore(path, \"?\");\n+        path \u003d StringUtils.substringBefore(path, \";\");\n+        path \u003d StringUtils.substringBefore(path, \"#\");\n+        return path;\n+    }\n+\n+    /**\n      * Gets an immutable map of service ticket and services accessed by this ticket-granting ticket.\n-     * Unlike {@link Collections#unmodifiableMap(java.util.Map)},\n+     * Unlike {@link java.util.Collections#unmodifiableMap(java.util.Map)},\n      * which is a view of a separate map which can still change, an instance of {@link ImmutableMap}\n      * contains its own data and will never change.\n      *"
        },
        {
          "file_name": "cas-server-core/src/main/java/org/jasig/cas/ticket/registry/AbstractDistributedTicketRegistry.java",
          "patch": "@@ -231,9 +231,10 @@ public Service getProxiedBy() {\n \n         @Override\n         public ServiceTicket grantServiceTicket(final String id, final Service service,\n-                final ExpirationPolicy expirationPolicy, final boolean credentialsProvided) {\n+                final ExpirationPolicy expirationPolicy, final boolean credentialsProvided,\n+                final boolean onlyTrackMostRecentSession) {\n             final ServiceTicket t \u003d this.getTicket().grantServiceTicket(id, service,\n-                    expirationPolicy, credentialsProvided);\n+                    expirationPolicy, credentialsProvided, onlyTrackMostRecentSession);\n             updateTicket();\n             return t;\n         }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/CentralAuthenticationServiceImplWithMockitoTests.java",
          "patch": "@@ -236,7 +236,7 @@ private TicketGrantingTicket createMockTicketGrantingTicket(final String id,\n \n         final String svcId \u003d svcTicket.getService().getId();\n         when(tgtMock.grantServiceTicket(anyString(), argThat(new VerifyServiceByIdMatcher(svcId)),\n-                any(ExpirationPolicy.class), anyBoolean())).thenReturn(svcTicket);\n+                any(ExpirationPolicy.class), anyBoolean(), anyBoolean())).thenReturn(svcTicket);\n         when(tgtMock.getRoot()).thenReturn(root);\n         when(tgtMock.getChainedAuthentications()).thenReturn(chainedAuthnList);\n         when(svcTicket.getGrantingTicket()).thenReturn(tgtMock);   "
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/TestUtils.java",
          "patch": "@@ -76,6 +76,8 @@\n \n     public static final String CONST_TEST_URL \u003d \"https://test.com\";\n \n+    public static final String CONST_TEST_URL2 \u003d \"https://example.com\";\n+\n     public static final String CONST_EXCEPTION_EXPECTED \u003d \"Exception expected.\";\n \n     public static final String CONST_EXCEPTION_NON_EXPECTED \u003d \"Exception not expected.\";\n@@ -199,6 +201,10 @@ public static Service getService() {\n         return getService(CONST_TEST_URL);\n     }\n \n+    public static Service getService2() {\n+        return getService(CONST_TEST_URL2);\n+    }\n+\n     public static Service getService(final String name) {\n         final MockHttpServletRequest request \u003d new MockHttpServletRequest();\n         request.addParameter(\"service\", name);"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/mock/MockTicketGrantingTicket.java",
          "patch": "@@ -83,15 +83,16 @@ public Authentication getAuthentication() {\n     }\n \n     public ServiceTicket grantServiceTicket(final Service service) {\n-        return grantServiceTicket(ID_GENERATOR.getNewTicketId(\"ST\"), service, null, true);\n+        return grantServiceTicket(ID_GENERATOR.getNewTicketId(\"ST\"), service, null, true, true);\n     }\n \n     @Override\n     public ServiceTicket grantServiceTicket(\n             final String id,\n             final Service service,\n             final ExpirationPolicy expirationPolicy,\n-            final boolean credentialsProvided) {\n+            final boolean credentialsProvided,\n+            final boolean onlyTrackMostRecentSession) {\n         usageCount++;\n         return new MockServiceTicket(id, service, this);\n     }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/monitor/SessionMonitorTests.java",
          "patch": "@@ -96,7 +96,8 @@ private void addTicketsToRegistry(final TicketRegistry registry, final int tgtCo\n                       GENERATOR.getNewTicketId(\"ST\"),\n                       new MockService(\"junit\"),\n                       TEST_EXP_POLICY,\n-                      false));\n+                      false,\n+                      true));\n           }\n         }\n     }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/services/JsonServiceRegistryDaoTests.java",
          "patch": "@@ -325,6 +325,7 @@ public void verifyServiceRemovals() throws Exception{\n         }\n \n         for (final RegisteredService r2 : list) {\n+            Thread.sleep(500);\n             this.dao.delete(r2);\n             Thread.sleep(2000);\n             assertNull(this.dao.findServiceById(r2.getId()));"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/ServiceTicketImplTests.java",
          "patch": "@@ -85,7 +85,7 @@ public void verifyIsExpiredTrueBecauseOfRoot() {\n         final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", TestUtils.getAuthentication(),\n                 new NeverExpiresExpirationPolicy());\n         final ServiceTicket s \u003d t.grantServiceTicket(this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n-                TestUtils.getService(), new NeverExpiresExpirationPolicy(), false);\n+                TestUtils.getService(), new NeverExpiresExpirationPolicy(), false, true);\n         t.markTicketExpired();\n \n         assertTrue(s.isExpired());\n@@ -96,7 +96,7 @@ public void verifyIsExpiredFalse() {\n         final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", TestUtils.getAuthentication(),\n                 new NeverExpiresExpirationPolicy());\n         final ServiceTicket s \u003d t.grantServiceTicket(this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n-                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false);\n+                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false, true);\n         assertFalse(s.isExpired());\n     }\n \n@@ -106,7 +106,7 @@ public void verifyTicketGrantingTicket() {\n         final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", TestUtils.getAuthentication(),\n                 new NeverExpiresExpirationPolicy());\n         final ServiceTicket s \u003d t.grantServiceTicket(this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n-                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false);\n+                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false, true);\n         final TicketGrantingTicket t1 \u003d s.grantTicketGrantingTicket(\n                 this.uniqueTicketIdGenerator.getNewTicketId(TicketGrantingTicket.PREFIX), a,\n                 new NeverExpiresExpirationPolicy());\n@@ -120,7 +120,7 @@ public void verifyTicketGrantingTicketGrantedTwice() {\n         final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", TestUtils.getAuthentication(),\n                 new NeverExpiresExpirationPolicy());\n         final ServiceTicket s \u003d t.grantServiceTicket(this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n-                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false);\n+                TestUtils.getService(), new MultiTimeUseOrTimeoutExpirationPolicy(1, 5000), false, true);\n         s.grantTicketGrantingTicket(this.uniqueTicketIdGenerator.getNewTicketId(TicketGrantingTicket.PREFIX), a,\n                 new NeverExpiresExpirationPolicy());\n "
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/TicketGrantingTicketImplTests.java",
          "patch": "@@ -136,7 +136,7 @@ public void verifyServiceTicketAsFromInitialCredentials() {\n             TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n         final ServiceTicket s \u003d t.grantServiceTicket(this.uniqueTicketIdGenerator\n             .getNewTicketId(ServiceTicket.PREFIX), TestUtils.getService(),\n-            new NeverExpiresExpirationPolicy(), false);\n+            new NeverExpiresExpirationPolicy(), false, true);\n \n         assertTrue(s.isFromNewLogin());\n     }\n@@ -150,12 +150,14 @@ public void verifyServiceTicketAsFromNotInitialCredentials() {\n                 this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n                 TestUtils.getService(),\n                 new NeverExpiresExpirationPolicy(),\n-                false);\n+                false,\n+                true);\n         final ServiceTicket s \u003d t.grantServiceTicket(\n                 this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n                 TestUtils.getService(),\n                 new NeverExpiresExpirationPolicy(),\n-                false);\n+                false,\n+                true);\n \n         assertFalse(s.isFromNewLogin());\n     }\n@@ -167,7 +169,7 @@ public void verifyWebApplicationServices() {\n             TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n         t.grantServiceTicket(this.uniqueTicketIdGenerator\n             .getNewTicketId(ServiceTicket.PREFIX), testService,\n-            new NeverExpiresExpirationPolicy(), false);\n+            new NeverExpiresExpirationPolicy(), false, true);\n         Map\u003cString, Service\u003e services \u003d t.getServices();\n         assertEquals(1, services.size());\n         final String ticketId \u003d services.keySet().iterator().next();\n@@ -183,10 +185,136 @@ public void verifyWebApplicationExpire() {\n         final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n             TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n         t.grantServiceTicket(this.uniqueTicketIdGenerator\n-            .getNewTicketId(ServiceTicket.PREFIX), testService,\n-            new NeverExpiresExpirationPolicy(), false);\n+                        .getNewTicketId(ServiceTicket.PREFIX), testService,\n+                new NeverExpiresExpirationPolicy(), false, true);\n         assertFalse(t.isExpired());\n         t.markTicketExpired();\n         assertTrue(t.isExpired());\n     }\n+\n+    @Test\n+    public void verifyDoubleGrantSameServiceTicketKeepMostRecentSession() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+\n+        assertEquals(1, t.getServices().size());\n+    }\n+\n+    @Test\n+    public void verifyDoubleGrantSimilarServiceTicketKeepMostRecentSession() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com?test\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com;JSESSIONID\u003dxxx\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+\n+        assertEquals(1, t.getServices().size());\n+    }\n+\n+    @Test\n+    public void verifyDoubleGrantSimilarServiceWithPathTicketKeepMostRecentSession() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com/webapp1\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com/webapp1?test\u003dtrue\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+\n+        assertEquals(1, t.getServices().size());\n+    }\n+\n+    @Test\n+    public void verifyDoubleGrantSameServiceTicketKeepAll() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                false);\n+\n+        assertEquals(2, t.getServices().size());\n+    }\n+\n+    @Test\n+    public void verifyDoubleGrantDifferentServiceTicket() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService2(),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+\n+        assertEquals(2, t.getServices().size());\n+    }\n+\n+    @Test\n+    public void verifyDoubleGrantDifferentServiceOnPathTicket() {\n+        final TicketGrantingTicket t \u003d new TicketGrantingTicketImpl(\"test\", null, null,\n+                TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n+\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com/webapp1\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+        t.grantServiceTicket(\n+                this.uniqueTicketIdGenerator.getNewTicketId(ServiceTicket.PREFIX),\n+                TestUtils.getService(\"http://host.com/webapp2\"),\n+                new NeverExpiresExpirationPolicy(),\n+                false,\n+                true);\n+\n+        assertEquals(2, t.getServices().size());\n+    }\n }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/registry/AbstractTicketRegistryTests.java",
          "patch": "@@ -193,7 +193,7 @@ public void verifyGetTicketsFromRegistryEqualToTicketsAdded() {\n             final TicketGrantingTicket ticketGrantingTicket \u003d new TicketGrantingTicketImpl(\"TEST\" + i,\r\n                     TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\r\n             final ServiceTicket st \u003d ticketGrantingTicket.grantServiceTicket(\"tests\" + i, TestUtils.getService(),\r\n-                    new NeverExpiresExpirationPolicy(), false);\r\n+                    new NeverExpiresExpirationPolicy(), false, true);\r\n             tickets.add(ticketGrantingTicket);\r\n             tickets.add(st);\r\n             this.ticketRegistry.addTicket(ticketGrantingTicket);\r"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/registry/DistributedTicketRegistryTests.java",
          "patch": "@@ -75,7 +75,7 @@ public void verifyProxiedInstancesEqual() {\n         assertEquals(t.isRoot(), returned.isRoot());\r\n \r\n         final ServiceTicket s \u003d t.grantServiceTicket(\"stest\", TestUtils.getService(),\r\n-                new NeverExpiresExpirationPolicy(), false);\r\n+                new NeverExpiresExpirationPolicy(), false, true);\r\n         this.ticketRegistry.addTicket(s);\r\n \r\n         final ServiceTicket sreturned \u003d (ServiceTicket) this.ticketRegistry.getTicket(\"stest\");\r\n@@ -99,7 +99,7 @@ public void verifyUpdateOfRegistry() {\n         final TicketGrantingTicket returned \u003d (TicketGrantingTicket) this.ticketRegistry.getTicket(\"test\");\r\n \r\n         final ServiceTicket s \u003d returned.grantServiceTicket(\"test2\", TestUtils.getService(),\r\n-                new NeverExpiresExpirationPolicy(), true);\r\n+                new NeverExpiresExpirationPolicy(), true, true);\r\n \r\n         this.ticketRegistry.addTicket(s);\r\n         final ServiceTicket s2 \u003d (ServiceTicket) this.ticketRegistry.getTicket(\"test2\");\r"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/support/MultiTimeUseOrTimeoutExpirationPolicyTests.java",
          "patch": "@@ -73,7 +73,8 @@ public void verifyTicketIsExpiredByTime() throws InterruptedException {\n     @Test\r\n     public void verifyTicketIsExpiredByCount() {\r\n         for (int i \u003d 0; i \u003c NUMBER_OF_USES; i++) {\r\n-            this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), new NeverExpiresExpirationPolicy(), false);\r\n+            this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), new NeverExpiresExpirationPolicy(), false,\r\n+                    true);\r\n         }\r\n         assertTrue(this.ticket.isExpired());\r\n     }\r"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/support/RememberMeDelegatingExpirationPolicyTests.java",
          "patch": "@@ -63,7 +63,7 @@ public void verifyTicketExpirationWithRememberMe() {\n                         RememberMeCredential.AUTHENTICATION_ATTRIBUTE_REMEMBER_ME, true));\n         final TicketGrantingTicketImpl t \u003d new TicketGrantingTicketImpl(\"111\", authentication, this.p);\n         assertFalse(t.isExpired());\n-        t.grantServiceTicket(\"55\", TestUtils.getService(), this.p, false);\n+        t.grantServiceTicket(\"55\", TestUtils.getService(), this.p, false, true);\n         assertTrue(t.isExpired());\n \n     }\n@@ -73,9 +73,8 @@ public void verifyTicketExpirationWithoutRememberMe() {\n         final Authentication authentication \u003d TestUtils.getAuthentication();\n         final TicketGrantingTicketImpl t \u003d new TicketGrantingTicketImpl(\"111\", authentication, this.p);\n         assertFalse(t.isExpired());\n-        t.grantServiceTicket(\"55\", TestUtils.getService(), this.p, false);\n+        t.grantServiceTicket(\"55\", TestUtils.getService(), this.p, false, true);\n         assertFalse(t.isExpired());\n \n     }\n-\n }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/support/ThrottledUseAndTimeoutExpirationPolicyTests.java",
          "patch": "@@ -64,14 +64,16 @@ public void verifyTicketIsExpired() throws InterruptedException {\n \n     @Test\n     public void verifyTicketUsedButWithTimeout() throws InterruptedException {\n-        this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), this.expirationPolicy, false);\n+        this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), this.expirationPolicy, false,\n+                true);\n         Thread.sleep(TIMEOUT - TIMEOUT_BUFFER);\n         assertFalse(this.ticket.isExpired());\n     }\n \n     @Test\n     public void verifyNotWaitingEnoughTime() {\n-        this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), this.expirationPolicy, false);\n+        this.ticket.grantServiceTicket(\"test\", TestUtils.getService(), this.expirationPolicy, false,\n+                true);\n         assertTrue(this.ticket.isExpired());\n     }\n }"
        },
        {
          "file_name": "cas-server-core/src/test/java/org/jasig/cas/ticket/support/TicketGrantingTicketExpirationPolicyTests.java",
          "patch": "@@ -57,29 +57,34 @@ public void verifyTgtIsExpiredByHardTimeOut() throws InterruptedException {\n          // keep tgt alive via sliding window until within SLIDING_TIME / 2 of the HARD_TIMEOUT\n          while (System.currentTimeMillis() - ticketGrantingTicket.getCreationTime()\n                  \u003c (HARD_TIMEOUT - SLIDING_TIMEOUT / 2)) {\n-             ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false);\n+             ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false,\n+                     true);\n              Thread.sleep(SLIDING_TIMEOUT - TIMEOUT_BUFFER);\n              assertFalse(this.ticketGrantingTicket.isExpired());\n          }\n \n          // final sliding window extension past the HARD_TIMEOUT\n-         ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false);\n+         ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false,\n+                 true);\n          Thread.sleep(SLIDING_TIMEOUT / 2 + TIMEOUT_BUFFER);\n          assertTrue(ticketGrantingTicket.isExpired());\n \n     }\n \n     @Test\n     public void verifyTgtIsExpiredBySlidingWindow() throws InterruptedException {\n-        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false);\n+        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false,\n+                true);\n         Thread.sleep(SLIDING_TIMEOUT - TIMEOUT_BUFFER);\n         assertFalse(ticketGrantingTicket.isExpired());\n \n-        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false);\n+        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false,\n+                true);\n         Thread.sleep(SLIDING_TIMEOUT - TIMEOUT_BUFFER);\n         assertFalse(ticketGrantingTicket.isExpired());\n \n-        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false);\n+        ticketGrantingTicket.grantServiceTicket(\"test\", TestUtils.getService(), expirationPolicy, false,\n+                true);\n         Thread.sleep(SLIDING_TIMEOUT + TIMEOUT_BUFFER);\n         assertTrue(ticketGrantingTicket.isExpired());\n "
        },
        {
          "file_name": "cas-server-integration-ehcache/src/test/java/org/jasig/cas/ticket/registry/EhCacheTicketRegistryTests.java",
          "patch": "@@ -218,7 +218,7 @@ public void verifyGetTicketsFromRegistryEqualToTicketsAdded() {\n             final TicketGrantingTicket ticketGrantingTicket \u003d new TicketGrantingTicketImpl(\"TEST\" + i,\n                     TestUtils.getAuthentication(), new NeverExpiresExpirationPolicy());\n             final ServiceTicket st \u003d ticketGrantingTicket.grantServiceTicket(\"tests\" + i, getService(),\n-                    new NeverExpiresExpirationPolicy(), false);\n+                    new NeverExpiresExpirationPolicy(), false, true);\n             tickets.add(ticketGrantingTicket);\n             tickets.add(st);\n             this.ticketRegistry.addTicket(ticketGrantingTicket);"
        },
        {
          "file_name": "cas-server-integration-hazelcast/src/test/java/org/jasig/cas/ticket/registry/HazelcastTicketRegistryTests.java",
          "patch": "@@ -108,7 +108,8 @@ public Authentication getAuthentication() {\n         public ServiceTicket grantServiceTicket(final String id,\n                                                 final Service service,\n                                                 final ExpirationPolicy expirationPolicy,\n-                                                final boolean credentialsProvided) {\n+                                                final boolean credentialsProvided,\n+                                                final boolean onlyTrackMostRecentSession) {\n             return null;\n         }\n "
        },
        {
          "file_name": "cas-server-integration-memcached/src/test/java/org/jasig/cas/ticket/registry/support/kryo/KryoTranscoderTests.java",
          "patch": "@@ -129,7 +129,7 @@ public void verifyEncodeDecodeTGTImpl() throws Exception {\n \n         final ServiceTicket ticket \u003d expectedTGT.grantServiceTicket(ST_ID,\n                 TestUtils.getService(),\n-                new NeverExpiresExpirationPolicy(), false);\n+                new NeverExpiresExpirationPolicy(), false, true);\n         CachedData result \u003d transcoder.encode(expectedTGT);\n         final TicketGrantingTicket resultTicket \u003d (TicketGrantingTicket) transcoder.decode(result);\n \n@@ -148,7 +148,7 @@ public void verifyEncodeDecode() throws Exception {\n \n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, userPassCredential, this.principalAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n \n         internalProxyTest(\"http://localhost\");\n@@ -160,16 +160,16 @@ private void internalProxyTest(final String proxyUrl) throws MalformedURLExcepti\n         svc.setServiceId(\"https://some.app.edu\");\n         final Credential proxyCredential \u003d new HttpBasedServiceCredential(new URL(proxyUrl), svc);\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, proxyCredential, this.principalAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n-        assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));        \n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n+        assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n     @Test\n     public void verifyEncodeDecodeTGTWithUnmodifiableMap() throws Exception {\n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d\n                 new MockTicketGrantingTicket(TGT_ID, userPassCredential, Collections.unmodifiableMap(this.principalAttributes));\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -181,7 +181,7 @@ public void verifyEncodeDecodeTGTWithUnmodifiableList() throws Exception {\n         final Map\u003cString, Object\u003e newAttributes \u003d new HashMap\u003c\u003e();\n         newAttributes.put(NICKNAME_KEY, Collections.unmodifiableList(values));\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, userPassCredential, newAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -190,7 +190,7 @@ public void verifyEncodeDecodeTGTWithLinkedHashMap() throws Exception {\n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d\n                 new MockTicketGrantingTicket(TGT_ID, userPassCredential, new LinkedHashMap\u003cString, Object\u003e(this.principalAttributes));\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -200,7 +200,7 @@ public void verifyEncodeDecodeTGTWithListOrderedMap() throws Exception {\n         @SuppressWarnings(\"unchecked\")\n         final TicketGrantingTicket expectedTGT \u003d\n                 new MockTicketGrantingTicket(TGT_ID, userPassCredential, ListOrderedMap.listOrderedMap(this.principalAttributes));\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -212,7 +212,7 @@ public void verifyEncodeDecodeTGTWithUnmodifiableSet() throws Exception {\n         newAttributes.put(NICKNAME_KEY, Collections.unmodifiableSet(values));\n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, userPassCredential, newAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -222,7 +222,7 @@ public void verifyEncodeDecodeTGTWithSingleton() throws Exception {\n         newAttributes.put(NICKNAME_KEY, Collections.singleton(NICKNAME_VALUE));\n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, userPassCredential, newAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -231,7 +231,7 @@ public void verifyEncodeDecodeTGTWithSingletonMap() throws Exception {\n         final Map\u003cString, Object\u003e newAttributes \u003d Collections.singletonMap(NICKNAME_KEY, (Object) NICKNAME_VALUE);\n         final Credential userPassCredential \u003d new UsernamePasswordCredential(USERNAME, PASSWORD);\n         final TicketGrantingTicket expectedTGT \u003d new MockTicketGrantingTicket(TGT_ID, userPassCredential, newAttributes);\n-        expectedTGT.grantServiceTicket(ST_ID, null, null, false);\n+        expectedTGT.grantServiceTicket(ST_ID, null, null, false, true);\n         assertEquals(expectedTGT, transcoder.decode(transcoder.encode(expectedTGT)));\n     }\n \n@@ -296,7 +296,7 @@ public int getCountOfUses() {\n         public boolean equals(final Object other) {\n             return other instanceof MockServiceTicket \u0026\u0026 ((MockServiceTicket) other).getId().equals(id);\n         }\n-        \n+\n         @Override\n         public int hashCode() {\n             final HashCodeBuilder bldr \u003d new HashCodeBuilder(17, 33);\n@@ -362,7 +362,8 @@ public ServiceTicket grantServiceTicket(\n                 final String id,\n                 final Service service,\n                 final ExpirationPolicy expirationPolicy,\n-                final boolean credentialsProvided) {\n+                final boolean credentialsProvided,\n+                final boolean onlyTrackMostRecentSession) {\n             this.usageCount++;\n             return new MockServiceTicket(id);\n         }"
        },
        {
          "file_name": "cas-server-support-jdbc/src/test/java/org/jasig/cas/monitor/SessionMonitorJpaTests.java",
          "patch": "@@ -86,7 +86,8 @@ private void addTicketsToRegistry(final TicketRegistry registry, final int tgtCo\n                       GENERATOR.getNewTicketId(\"ST\"),\n                       new MockService(\"junit\"),\n                       TEST_EXP_POLICY,\n-                      false));\n+                      false,\n+                      true));\n           }\n         }\n     }"
        },
        {
          "file_name": "cas-server-support-jdbc/src/test/java/org/jasig/cas/ticket/registry/JpaTicketRegistryTests.java",
          "patch": "@@ -136,7 +136,8 @@ static ServiceTicket newST(final TicketGrantingTicket parent) {\n                ID_GENERATOR.getNewTicketId(\"ST\"),\n                new MockService(\"https://service.example.com\"),\n                EXP_POLICY_ST,\n-               false);\n+               false,\n+               true);\n     }\n \n     void addTicketInTransaction(final Ticket ticket) {"
        },
        {
          "file_name": "cas-server-webapp/src/main/webapp/WEB-INF/cas.properties",
          "patch": "@@ -88,6 +88,9 @@ tgc.signing.key\u003dszxK-5_eJjs-aUj-64MpUZ-GPPzGLhYPLGl0wrYjYNVAGva2P0lLe6UGKGM7k8dW\n # The path to which the SSO Warning cookie will be scoped\r\n # warn.cookie.path\u003d/cas\r\n \r\n+# Whether we should track the most recent session by keeping the latest service ticket\r\n+# tgt.onlyTrackMostRecentSession \u003d true\r\n+\r\n ##\r\n # CAS UI Theme Resolution\r\n #\r"
        }
      ]
    }
  },
  {
    "name": "C++ OTF decoder memory leaks",
    "url": "https://github.com/real-logic/simple-binary-encoding/issues/61",
    "description": "Leaks reported by valgrind:\n\n REDIR: 0x4c675e0 (operator delete[](void*)) redirected to 0x4a05628 (operator delete[](void*))\n--7269-- REDIR: 0x31e6479b80 (memset) redirected to 0x4a07320 (memset)\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d HEAP SUMMARY:\n\u003d\u003d7269\u003d\u003d in use at exit: 4,979 bytes in 5 blocks\n\u003d\u003d7269\u003d\u003d total heap usage: 196 allocs, 191 frees, 17,124 bytes allocated\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d Searching for pointers to 5 not-freed blocks\n\u003d\u003d7269\u003d\u003d Checked 171,160 bytes\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d 131 bytes in 1 blocks are definitely lost in loss record 1 of 5\n\u003d\u003d7269\u003d\u003d at 0x4A065BA: operator new[](unsigned long) (vg_replace_malloc.c:264)\n\u003d\u003d7269\u003d\u003d by 0x40C53C: readFileIntoBuffer(char const_, int_) (SbeOtfDecoder.cpp:285)\n\u003d\u003d7269\u003d\u003d by 0x40C776: main (SbeOtfDecoder.cpp:361)\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d 2,424 (48 direct, 2,376 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 5\n\u003d\u003d7269\u003d\u003d at 0x4A0695E: operator new(unsigned long) (vg_replace_malloc.c:220)\n\u003d\u003d7269\u003d\u003d by 0x40D7ED: sbe::on_the_fly::IrCollection::readHeader(int) (IrCollection.h:232)\n\u003d\u003d7269\u003d\u003d by 0x40D4F6: sbe::on_the_fly::IrCollection::processIr() (IrCollection.h:183)\n\u003d\u003d7269\u003d\u003d by 0x40D195: sbe::on_the_fly::IrCollection::loadFromFile(char const_) (IrCollection.h:87)\n\u003d\u003d7269\u003d\u003d by 0x40C719: main (SbeOtfDecoder.cpp:354)\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d 2,424 (48 direct, 2,376 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 5\n\u003d\u003d7269\u003d\u003d at 0x4A0695E: operator new(unsigned long) (vg_replace_malloc.c:220)\n\u003d\u003d7269\u003d\u003d by 0x40DC21: sbe::on_the_fly::IrCollection::readMessage(int) (IrCollection.h:278)\n\u003d\u003d7269\u003d\u003d by 0x40D523: sbe::on_the_fly::IrCollection::processIr() (IrCollection.h:189)\n\u003d\u003d7269\u003d\u003d by 0x40D195: sbe::on_the_fly::IrCollection::loadFromFile(char const_) (IrCollection.h:87)\n\u003d\u003d7269\u003d\u003d by 0x40C719: main (SbeOtfDecoder.cpp:354)\n\u003d\u003d7269\u003d\u003d\n\u003d\u003d7269\u003d\u003d LEAK SUMMARY:\n\u003d\u003d7269\u003d\u003d definitely lost: 227 bytes in 3 blocks\n\u003d\u003d7269\u003d\u003d indirectly lost: 4,752 bytes in 2 blocks\n\u003d\u003d7269\u003d\u003d possibly lost: 0 bytes in 0 blocks\n\u003d\u003d7269\u003d\u003d still reachable: 0 bytes in 0 blocks\n\u003d\u003d7269\u003d\u003d suppressed: 0 bytes in 0 blocks\n\u003d\u003d7269\u003d\u003d\n",
    "keywords": [
      "sbeotfdecoder",
      "long vg_replace_malloc",
      "const_",
      "\u003d\u003d7269\u003d\u003d",
      "blocks",
      "\u003d\u003d7269\u003d\u003d \u003d\u003d7269\u003d\u003d",
      "main",
      "vg_replace_malloc",
      "ircollection",
      "operator",
      "long",
      "0",
      "1",
      "loss",
      "definitely lost",
      "2",
      "definitely",
      "4",
      "blocks \u003d\u003d7269\u003d\u003d",
      "5",
      "bytes",
      "lost",
      "record",
      "char",
      "unsigned"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/real-logic/simple-binary-encoding/commit/59ac9b2e5c169217a5c638784e653ae8247756fc",
      "files": [
        {
          "file_name": "examples/cpp98/SbeOtfDecoder.cpp",
          "patch": "@@ -385,5 +385,7 @@ int main(int argc, char * const argv[])\n \n     std::cout \u003c\u003c \"Message ends at offset \" \u003c\u003c listener.bufferOffset() \u003c\u003c \"\\n\";\n \n+    delete[] buffer;\n+\n     return 0;\n }"
        },
        {
          "file_name": "main/cpp/otf_api/Ir.cpp",
          "patch": "@@ -63,6 +63,16 @@ Ir::Ir(const char *buffer, const int len, const int64_t templateId, const int64_\n     begin();\n }\n \n+Ir::~Ir()\n+{\n+    if (impl_ !\u003d NULL)\n+    {\n+        delete impl_;\n+        impl_ \u003d NULL;\n+    }\n+//    std::cout \u003c\u003c \"Ir being deleted\" \u003c\u003c \"\\n\";\n+}\n+\n void Ir::readTokenAtCurrentPosition()\n {\n     char tmp[256];"
        },
        {
          "file_name": "main/cpp/otf_api/Ir.h",
          "patch": "@@ -147,17 +147,11 @@ class Ir\n \n     // constructors and destructors\n \n-    /// Construct an Ir from a buffer with serialized tokens of len total size.\n+    /// Construct an Ir from a buffer with serialized tokens of len total size. Responsibility of buffer management is the applications.\n     Ir(const char *buffer \u003d NULL, const int len \u003d 0, const int64_t templateId \u003d -1, const int64_t templateVersion \u003d -1);\n \n-    virtual ~Ir()\n-    {\n-        if (buffer_ !\u003d NULL)\n-        {\n-            delete[] buffer_;\n-            buffer_ \u003d NULL;\n-        }\n-    }\n+    /// Destroy an Ir. The buffer is NOT freed.\n+    virtual ~Ir();\n \n     int64_t templateId(void) const\n     {"
        },
        {
          "file_name": "main/cpp/otf_api/IrCollection.h",
          "patch": "@@ -58,6 +58,17 @@ class IrCollection\n     virtual ~IrCollection()\n     {\n         delete[] buffer_;\n+        for (std::multimap\u003cint, Ir *\u003e::iterator it \u003d map_.begin(); it !\u003d map_.end(); ++it)\n+        {\n+//            std::cout \u003c\u003c (*it).first \u003c\u003c \" \u003d\u003e \" \u003c\u003c (*it).second \u003c\u003c \u0027\\n\u0027;\n+            Ir *ir \u003d (*it).second;\n+            delete ir;\n+            (*it).second \u003d NULL;\n+        }\n+        if (header_ !\u003d NULL)\n+        {\n+            delete header_;\n+        }\n     }\n \n     /**"
        }
      ]
    }
  },
  {
    "name": "Packet handling suffers from memory leaks",
    "url": "https://github.com/BurnedKirby/Minecraft-Turn-Based-Battle-Mod/issues/13",
    "description": "This is a note to myself to use http://www.minecraftforge.net/forum/index.php/topic,20135.0.html as it is the recommended way to do custom packets in a forge mod.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/BurnedKirby/Minecraft-Turn-Based-Battle-Mod/commit/3a2601255e6f75850297809e5cf1d8cfae69cf62",
      "files": [
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/Battle.java",
          "patch": "@@ -69,7 +69,7 @@ public Battle(int id, Stack\u003cCombatantInfo\u003e newCombatants, boolean silly)\n \t\t\tUtility.log(\"Initializing battle with combatant \" + combatant.name);\n \t\t\tif(combatant.isPlayer)\n \t\t\t{\n-\t\t\t\tModMain.pp.sendTo(new InitiateBattlePacket(battleID,combatant, silly), (EntityPlayerMP)combatant.entityReference);\n+\t\t\t\tModMain.network.sendTo(new InitiateBattlePacket(battleID,combatant, silly), (EntityPlayerMP)combatant.entityReference);\n \t\t\t\tcombatant.setTurnTickTimer(turnTickTime);\n \t\t\t}\n \t\t\telse if(isFightingEntity(combatant.entityReference))\n@@ -104,7 +104,7 @@ public void addCombatant(CombatantInfo newCombatant)\n \n \t\t\tif(newCombatant.isPlayer)\n \t\t\t{\n-\t\t\t\tModMain.pp.sendTo(new InitiateBattlePacket(battleID,newCombatant,silly), (EntityPlayerMP)newCombatant.entityReference);\n+\t\t\t\tModMain.network.sendTo(new InitiateBattlePacket(battleID,newCombatant,silly), (EntityPlayerMP)newCombatant.entityReference);\n \t\t\t\tnewCombatant.setTurnTickTimer(turnTickTime);\n \t\t\t}\n \t\t\t\n@@ -355,12 +355,12 @@ private void calculationsPhase()\n \t\t\t\t\t\n \t\t\t\t\tif(missCheck(combatant, combatants.get(combatant.target)))\n \t\t\t\t\t{\n-\t\t\t\t\t\tname \u003d ((EntityPlayer)combatantEntity).getDisplayName();\n+\t\t\t\t\t\tname \u003d combatantEntity.getName();\n \t\t\t\t\t\tname \u003d ScorePlayerTeam.formatPlayerName(combatantEntity.worldObj.getScoreboard().getPlayersTeam(name), name);\n \n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tnotifyPlayersWithMessage(name + \" attacks \" + targetName + \" but missed!\");\n@@ -369,12 +369,12 @@ private void calculationsPhase()\n \t\t\t\t\t{\n \t\t\t\t\t\ttargetEntity.hurtResistantTime \u003d 0;\n \n-\t\t\t\t\t\tname \u003d ((EntityPlayer)combatantEntity).getDisplayName();\n+\t\t\t\t\t\tname \u003d combatantEntity.getName();\n \t\t\t\t\t\tname \u003d ScorePlayerTeam.formatPlayerName(combatantEntity.worldObj.getScoreboard().getPlayersTeam(name), name);\n \n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n@@ -393,61 +393,24 @@ private void calculationsPhase()\n \t\t\t\t}\n \t\t\t\telse if(combatantEntity instanceof EntityMob || combatantEntity instanceof EntityGolem)\n \t\t\t\t{\n-\t\t\t\t\tif(((EntityCreature)combatantEntity).getEntityToAttack() instanceof EntityLivingBase \u0026\u0026 combatants.containsKey(((EntityMob) combatantEntity).getEntityToAttack().getEntityId()))\n-\t\t\t\t\t\ttargetEntity \u003d (EntityLivingBase) ((EntityCreature)combatantEntity).getEntityToAttack();\n-\t\t\t\t\telse\n-\t\t\t\t\t\ttargetEntity \u003d null;\n+\t\t\t\t\tCombatantInfo targetInfo \u003d getRandomPlayerTarget(combatant, combatantArray);\n+\t\t\t\t\tif(targetInfo !\u003d null)\n+\t\t\t\t\t\ttargetEntity \u003d getRandomPlayerTarget(combatant, combatantArray).entityReference;\n \t\t\t\t\t\n \t\t\t\t\tif(targetEntity \u003d\u003d null)\n-\t\t\t\t\t\ttargetName \u003d \"NULL (THIS SHOULD NEVER HAPPEN!?!)\";\n+\t\t\t\t\t\tcontinue;\n \t\t\t\t\telse if((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n-\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\n \t\t\t\t\tUtility.log(EntityList.getEntityString(combatantEntity) + \" targeting \" + (targetEntity !\u003d null ? targetName : \"null\"));\n \t\t\t\t\t\n-\t\t\t\t\tif(targetEntity \u003d\u003d null)\n-\t\t\t\t\t{\n-\t\t\t\t\t\trand \u003d ModMain.bss.random.nextInt(combatants.size()) + combatants.size();\n-\t\t\t\t\t\tint k\u003d0,j\u003d0,picked\u003d0;\n-\t\t\t\t\t\tboolean nonPlayersExist \u003d true;\n-\t\t\t\t\t\tfor(; j\u003crand; k++)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif(combatantEntity instanceof EntityGolem \u0026\u0026 !combatantArray[k % combatantArray.length].isPlayer\n-\t\t\t\t\t\t\t\t\t\u0026\u0026 combatantArray[k % combatantArray.length].id !\u003d combatantEntity.getEntityId() \u0026\u0026 nonPlayersExist)\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tj++;\n-\t\t\t\t\t\t\t\tpicked \u003d k % combatantArray.length;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\telse if(combatantArray[k % combatantArray.length].isPlayer)\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tj++;\n-\t\t\t\t\t\t\t\tpicked \u003d k % combatantArray.length;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif(k \u003e combatants.size() \u0026\u0026 j \u003d\u003d 0)\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tif(combatantEntity instanceof EntityGolem)\n-\t\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t\tnonPlayersExist \u003d false;\n-\t\t\t\t\t\t\t\t\tk\u003d0;\n-\t\t\t\t\t\t\t\t\tj\u003d0;\n-\t\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tpicked \u003d -1;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif(picked \u003d\u003d -1)\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\ttargetEntity \u003d combatantArray[picked].entityReference;\n-\t\t\t\t\t}\n-\t\t\t\t\t\n \t\t\t\t\tif(missCheck(combatant, combatants.get(targetEntity.getEntityId())))\n \t\t\t\t\t{\n \t\t\t\t\t\tname \u003d EntityList.getEntityString(combatantEntity);\n \t\t\t\t\t\t\n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n@@ -461,7 +424,7 @@ else if(combatantArray[k % combatantArray.length].isPlayer)\n \t\t\t\t\t\t\n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n@@ -473,28 +436,15 @@ else if(combatantArray[k % combatantArray.length].isPlayer)\n \t\t\t\t}\n \t\t\t\telse if(combatantEntity instanceof EntitySlime)\n \t\t\t\t{\n-\t\t\t\t\ttargetEntity \u003d ((EntitySlime)combatantEntity).worldObj.getClosestVulnerablePlayerToEntity(combatantEntity, 16.0);\n+\t\t\t\t\ttargetEntity \u003d ((EntitySlime)combatantEntity).worldObj.getClosestPlayerToEntity(combatantEntity, 16.0);\n \t\t\t\t\tif(targetEntity \u003d\u003d null || !combatants.containsKey(targetEntity.getEntityId()))\n \t\t\t\t\t{\n-\n-\t\t\t\t\t\trand \u003d ModMain.bss.random.nextInt(combatants.size()) + combatants.size();\n-\t\t\t\t\t\tint k\u003d0,j\u003d0,picked\u003d0;\n-\t\t\t\t\t\tfor(; j\u003crand; k++)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif(combatantArray[k % combatantArray.length].isPlayer)\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tj++;\n-\t\t\t\t\t\t\t\tpicked \u003d k % combatantArray.length;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif(k \u003e combatants.size() \u0026\u0026 j \u003d\u003d 0)\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tpicked \u003d -1;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif(picked \u003d\u003d -1)\n+\t\t\t\t\t\t// select player at random, if player exists\n+\t\t\t\t\t\tCombatantInfo targetInfo \u003d getRandomPlayerTarget(combatant, combatantArray);\n+\t\t\t\t\t\tif(targetInfo !\u003d null)\n+\t\t\t\t\t\t\ttargetEntity \u003d getRandomPlayerTarget(combatant, combatantArray).entityReference;\n+\t\t\t\t\t\telse\n \t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\ttargetEntity \u003d combatantArray[picked].entityReference;\n \t\t\t\t\t}\n \t\t\t\t\t\n \t\t\t\t\tif(missCheck(combatant, combatants.get(targetEntity.getEntityId())))\n@@ -503,7 +453,7 @@ else if(combatantEntity instanceof EntitySlime)\n \t\t\t\t\t\t\n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n@@ -517,7 +467,7 @@ else if(combatantEntity instanceof EntitySlime)\n \t\t\t\t\t\t\n \t\t\t\t\t\tif((targetName \u003d EntityList.getEntityString(targetEntity)) \u003d\u003d null)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\ttargetName \u003d ((EntityPlayer)targetEntity).getDisplayName();\n+\t\t\t\t\t\t\ttargetName \u003d targetEntity.getName();\n \t\t\t\t\t\t\ttargetName \u003d ScorePlayerTeam.formatPlayerName(targetEntity.worldObj.getScoreboard().getPlayersTeam(targetName), targetName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n@@ -710,13 +660,13 @@ protected void notifyPlayers(boolean forceUpdate)\n \t\tfor(CombatantInfo combatant : combatants.values())\n \t\t{\n \t\t\tif(combatant.isPlayer)\n-\t\t\t\tModMain.pp.sendTo(new BattleStatusPacket(!battleEnded \u0026\u0026 (combatant.entityReference.isEntityAlive()), forceUpdate, combatants.size(), status \u003d\u003d BattleStatus.PLAYER_PHASE, combatant.ready, combatant.turnTickTimer), (EntityPlayerMP)combatant.entityReference);\n+\t\t\t\tModMain.network.sendTo(new BattleStatusPacket(!battleEnded \u0026\u0026 (combatant.entityReference.isEntityAlive()), forceUpdate, combatants.size(), status \u003d\u003d BattleStatus.PLAYER_PHASE, combatant.ready, combatant.turnTickTimer), (EntityPlayerMP)combatant.entityReference);\n \t\t}\n \t}\n \t\n \tprotected void notifyPlayer(boolean forceUpdate, CombatantInfo player, boolean fledBattle)\n \t{\n-\t\tModMain.pp.sendTo(new BattleStatusPacket(!battleEnded \u0026\u0026 (player.entityReference.isEntityAlive()) \u0026\u0026 !fledBattle, forceUpdate, combatants.size(), status \u003d\u003d BattleStatus.PLAYER_PHASE, player.ready, player.turnTickTimer), (EntityPlayerMP)player.entityReference);\n+\t\tModMain.network.sendTo(new BattleStatusPacket(!battleEnded \u0026\u0026 (player.entityReference.isEntityAlive()) \u0026\u0026 !fledBattle, forceUpdate, combatants.size(), status \u003d\u003d BattleStatus.PLAYER_PHASE, player.ready, player.turnTickTimer), (EntityPlayerMP)player.entityReference);\n \t}\n \t\n \tprotected void notifyPlayersWithMessage(String message)\n@@ -725,7 +675,7 @@ protected void notifyPlayersWithMessage(String message)\n \t\t{\n \t\t\tif(combatant.isPlayer)\n \t\t\t{\n-\t\t\t\tModMain.pp.sendTo(new BattleMessagePacket(message), (EntityPlayerMP) combatant.entityReference);\n+\t\t\t\tModMain.network.sendTo(new BattleMessagePacket(message), (EntityPlayerMP) combatant.entityReference);\n \t\t\t}\n \t\t}\n \t}\n@@ -745,7 +695,7 @@ protected void notifyPlayerOfCombatants(EntityLivingBase player)\n \t{\n \t\tfor(CombatantInfo combatant : combatants.values())\n \t\t{\n-\t\t\tModMain.pp.sendTo(new BattleCombatantPacket(combatant), (EntityPlayerMP)player);\n+\t\t\tModMain.network.sendTo(new BattleCombatantPacket(combatant), (EntityPlayerMP)player);\n \t\t}\n \t}\n \t\n@@ -765,9 +715,33 @@ protected void notifyPlayersHealthInformation()\n \t\t\t{\n \t\t\t\tfor(int j\u003d0; j\u003ccombatantListCopy.length; j++)\n \t\t\t\t{\n-\t\t\t\t\tModMain.pp.sendTo(new CombatantHealthPacket(combatantListCopy[j].id, combatantListCopy[j].health), (EntityPlayerMP)combatantListCopy[i].entityReference);\n+\t\t\t\t\tModMain.network.sendTo(new CombatantHealthPacket(combatantListCopy[j].id, combatantListCopy[j].health), (EntityPlayerMP)combatantListCopy[i].entityReference);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n+\t\n+\tprivate CombatantInfo getRandomPlayerTarget(CombatantInfo combatant, CombatantInfo[] combatantArray)\n+\t{\n+\t\tint randomValue \u003d ModMain.bss.random.nextInt(combatantArray.length);\n+\t\tCombatantInfo returnValue \u003d null;\n+\t\tint loopIter \u003d 0;\n+\t\twhile(returnValue \u003d\u003d null)\n+\t\t{\n+\t\t\tif(combatantArray[randomValue].isPlayer)\n+\t\t\t{\n+\t\t\t\treturnValue \u003d combatantArray[randomValue];\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\trandomValue \u003d (randomValue + 1) % combatantArray.length;\n+\t\t\t}\n+\t\t\tif(loopIter++ \u003e combatantArray.length)\n+\t\t\t{\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn returnValue;\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/BattleEventListener.java",
          "patch": "@@ -5,7 +5,7 @@\n import net.minecraft.entity.EntityLivingBase;\n import net.minecraft.entity.player.EntityPlayer;\n import net.minecraftforge.event.entity.living.LivingAttackEvent;\n-import cpw.mods.fml.common.eventhandler.SubscribeEvent;\n+import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;\n \n public class BattleEventListener {\n \t\n@@ -31,10 +31,10 @@ public void entityAttacked(LivingAttackEvent event)\n \t\tString name \u003d null;\n \t\t\n \t\tif((sName \u003d EntityList.getEntityString(event.source.getEntity())) \u003d\u003d null)\n-\t\t\tsName \u003d ((EntityPlayer)event.source.getEntity()).getDisplayName();\n+\t\t\tsName \u003d event.source.getEntity().getName();\n \n \t\tif((name \u003d EntityList.getEntityString(event.entity)) \u003d\u003d null)\n-\t\t\tname \u003d ((EntityPlayer)event.entity).getDisplayName();\n+\t\t\tname \u003d event.entity.getName();\n \t\t\n \t\tUtility.log(sName + \"(\" + event.source.getEntity().getEntityId()\n \t\t\t\t+ \") hit \" + name + \"(\" + event.entity.getEntityId() + \").\");\n@@ -44,7 +44,7 @@ public void entityAttacked(LivingAttackEvent event)\n \t\telse\n \t\t{\n \t\t\tif((name \u003d EntityList.getEntityString(ModMain.bss.attackingEntity)) \u003d\u003d null)\n-\t\t\t\tname \u003d ((EntityPlayer)ModMain.bss.attackingEntity).getDisplayName();\n+\t\t\t\tname \u003d ModMain.bss.attackingEntity.getName();\n \t\t}\n \t\t\n \t\tUtility.log(\"Battle Attacker is currently \" + name);"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/BattleSystemServer.java",
          "patch": "@@ -9,7 +9,6 @@\n import java.util.TreeMap;\n \n import net.minecraft.entity.EntityList;\n-import net.minecraft.entity.EntityLiving;\n import net.minecraft.entity.EntityLivingBase;\n import net.minecraft.entity.boss.EntityDragon;\n import net.minecraft.entity.boss.EntityWither;\n@@ -45,6 +44,7 @@\n import net.minecraft.server.MinecraftServer;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo.Type;\n import burnedkirby.TurnBasedMinecraft.core.CombatantInfoSet;\n+import burnedkirby.TurnBasedMinecraft.core.Utility;\n import burnedkirby.TurnBasedMinecraft.core.network.BattleStatusPacket;\n \n public class BattleSystemServer {\n@@ -168,15 +168,15 @@ else if(exitedBattle.contains(entityAttacker.getEntityId()) || exitedBattle.cont\n \t\t\tString attackerName \u003d null;\n \t\t\tString attackedName \u003d null;\n \t\t\t\n-\t\t\tif(entityAttacker instanceof EntityLiving \u0026\u0026 ((EntityLiving)entityAttacker).hasCustomNameTag())\n-\t\t\t\tattackerName \u003d ((EntityLiving)entityAttacker).getCustomNameTag();\n+\t\t\tif(entityAttacker.hasCustomName())\n+\t\t\t\tattackerName \u003d entityAttacker.getCustomNameTag();\n \t\t\telse if((attackerName \u003d EntityList.getEntityString(entityAttacker)) \u003d\u003d null)\n-\t\t\t\tattackerName \u003d ((EntityPlayer)entityAttacker).getDisplayName();\n+\t\t\t\tattackerName \u003d entityAttacker.getName();\n \n-\t\t\tif(entityAttacked instanceof EntityLiving \u0026\u0026 ((EntityLiving)entityAttacked).hasCustomNameTag())\n-\t\t\t\tattackedName \u003d ((EntityLiving)entityAttacked).getCustomNameTag();\n+\t\t\tif(entityAttacked.hasCustomName())\n+\t\t\t\tattackedName \u003d entityAttacked.getCustomNameTag();\n \t\t\telse if((attackedName \u003d EntityList.getEntityString(entityAttacked)) \u003d\u003d null)\n-\t\t\t\tattackedName \u003d ((EntityPlayer)entityAttacked).getDisplayName();\n+\t\t\t\tattackedName \u003d entityAttacked.getName();\n \t\t\t\n \t\t\tcombatants.push(new CombatantInfo(entityAttacker instanceof EntityPlayer, entityAttacker.getEntityId(), entityAttacker, true, attackerName, false, Type.DO_NOTHING, entityAttacked.getEntityId()));\n \t\t\tcombatants.push(new CombatantInfo(entityAttacked instanceof EntityPlayer, entityAttacked.getEntityId(), entityAttacked, false, attackedName, false, Type.DO_NOTHING, entityAttacked.getAITarget() !\u003d null ? entityAttacked.getAITarget().getEntityId() : 0));\n@@ -212,10 +212,10 @@ else if((attackedName \u003d EntityList.getEntityString(entityAttacked)) \u003d\u003d null)\n \t\t\t\t\n \t\t\t\tString newName \u003d null;\n \t\t\t\t\n-\t\t\t\tif(newCombatant instanceof EntityLiving \u0026\u0026 ((EntityLiving)newCombatant).hasCustomNameTag())\n-\t\t\t\t\tnewName \u003d ((EntityLiving)newCombatant).getCustomNameTag();\n+\t\t\t\tif(newCombatant.hasCustomName())\n+\t\t\t\t\tnewName \u003d newCombatant.getCustomNameTag();\n \t\t\t\telse if((newName \u003d EntityList.getEntityString(newCombatant)) \u003d\u003d null)\n-\t\t\t\t\tnewName \u003d ((EntityPlayer)newCombatant).getDisplayName();\n+\t\t\t\t\tnewName \u003d newCombatant.getName();\n \t\t\t\t\n \t\t\t\tbattleToJoin.addCombatant(new CombatantInfo(newCombatant instanceof EntityPlayer, newCombatant.getEntityId(), newCombatant, isSideOne, newName, false, Type.DO_NOTHING, inBattleCombatant.getEntityId()));\n \t\t\t}\n@@ -298,7 +298,7 @@ public void manageQuery(int battleID, short type, EntityPlayer player)\n \n \t\t\tif(battles.get(battleID) \u003d\u003d null)\n \t\t\t{\n-\t\t\t\tModMain.pp.sendTo(new BattleStatusPacket(false), (EntityPlayerMP)player);\n+\t\t\t\tModMain.network.sendTo(new BattleStatusPacket(false), (EntityPlayerMP)player);\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tswitch(type)\n@@ -321,7 +321,7 @@ public void managePlayerUpdate(int battleID, CombatantInfo player)\n \t\t{\n \t\t\tif(battles.get(battleID) \u003d\u003d null)\n \t\t\t{\n-\t\t\t\tModMain.pp.sendTo(new BattleStatusPacket(false), (EntityPlayerMP)player.entityReference);\n+\t\t\t\tModMain.network.sendTo(new BattleStatusPacket(false), (EntityPlayerMP)player.entityReference);\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tbattles.get(battleID).updatePlayerStatus(player);\n@@ -366,7 +366,7 @@ public synchronized void run() {\n \t\t\t\t\t\n \t\t\t\t\twhile(!removalQueue.isEmpty())\n \t\t\t\t\t{\n-\t\t\t\t\t\tSystem.out.println(\"Battle removed.\");\n+\t\t\t\t\t\tUtility.log(\"Battle removed.\");\n \t\t\t\t\t\tbattles.remove(removalQueue.pop());\n \t\t\t\t\t}\n \t\t\t\t\t"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/ModMain.java",
          "patch": "@@ -4,22 +4,25 @@\n \n package burnedkirby.TurnBasedMinecraft;\n \n-import java.util.Iterator;\n-\n import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.fml.common.Mod;\n+import net.minecraftforge.fml.common.Mod.EventHandler;\n+import net.minecraftforge.fml.common.Mod.Instance;\n+import net.minecraftforge.fml.common.SidedProxy;\n+import net.minecraftforge.fml.common.event.FMLInitializationEvent;\n+import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;\n+import net.minecraftforge.fml.common.event.FMLServerStoppingEvent;\n+import net.minecraftforge.fml.common.network.NetworkRegistry;\n+import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;\n+import net.minecraftforge.fml.relauncher.Side;\n import burnedkirby.TurnBasedMinecraft.core.CommonProxy;\n-import burnedkirby.TurnBasedMinecraft.core.network.PacketPipeline;\n-import cpw.mods.fml.common.FMLCommonHandler;\n-import cpw.mods.fml.common.Loader;\n-import cpw.mods.fml.common.Mod;\n-import cpw.mods.fml.common.Mod.EventHandler;\n-import cpw.mods.fml.common.Mod.Instance;\n-import cpw.mods.fml.common.ModContainer;\n-import cpw.mods.fml.common.SidedProxy;\n-import cpw.mods.fml.common.event.FMLInitializationEvent;\n-import cpw.mods.fml.common.event.FMLPostInitializationEvent;\n-import cpw.mods.fml.common.event.FMLServerStartingEvent;\n-import cpw.mods.fml.common.event.FMLServerStoppingEvent;\n+import burnedkirby.TurnBasedMinecraft.core.network.BattleCombatantPacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.BattleCommandPacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.BattleMessagePacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.BattleQueryPacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.BattleStatusPacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.CombatantHealthPacket;\n+import burnedkirby.TurnBasedMinecraft.core.network.InitiateBattlePacket;\n \n \n @Mod(modid\u003dModMain.modid,name\u003d\"BurnedKirby\u0027s Turn-Based Minecraft\",version\u003dModMain.versionNumber)\n@@ -41,7 +44,7 @@\n \t\n \tpublic static final String battleSettingsFile \u003d modFolder + \"/battleSettings.xml\";\n \t\n-\tpublic static PacketPipeline pp \u003d new PacketPipeline();\n+\tpublic static SimpleNetworkWrapper network;\n \t\n \t@EventHandler\n \tpublic void initialize(FMLInitializationEvent event){\n@@ -50,12 +53,20 @@ public void initialize(FMLInitializationEvent event){\n \t\tproxy.initializeSettings();\n \t\tproxy.initializeMusicManager();\n \t\t\n-\t\tpp.initialize();\n+\t\tnetwork \u003d NetworkRegistry.INSTANCE.newSimpleChannel(\"BK_TBM_Channel\");\n+\n+\t\tnetwork.registerMessage(BattleCombatantPacket.Handler.class, BattleCombatantPacket.class, 0, Side.CLIENT);\n+\t\tnetwork.registerMessage(BattleCommandPacket.Handler.class, BattleCommandPacket.class, 1, Side.SERVER);\n+\t\tnetwork.registerMessage(BattleMessagePacket.Handler.class, BattleMessagePacket.class, 2, Side.CLIENT);\n+\t\tnetwork.registerMessage(BattleQueryPacket.Handler.class, BattleQueryPacket.class, 3, Side.SERVER);\n+\t\tnetwork.registerMessage(BattleStatusPacket.Handler.class, BattleStatusPacket.class, 4, Side.CLIENT);\n+\t\tnetwork.registerMessage(CombatantHealthPacket.Handler.class, CombatantHealthPacket.class, 5, Side.CLIENT);\n+\t\tnetwork.registerMessage(InitiateBattlePacket.Handler.class, InitiateBattlePacket.class, 6, Side.CLIENT);\n \t}\n \t\n \t@EventHandler\n \tpublic void initialize(FMLPostInitializationEvent event){\n-\t\tpp.postInitialize();\n+\n \t}\n \t\n \t@EventHandler"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/Utility.java",
          "patch": "@@ -1,8 +1,11 @@\n package burnedkirby.TurnBasedMinecraft.core;\n \n-import cpw.mods.fml.common.FMLCommonHandler;\n-import cpw.mods.fml.relauncher.Side;\n-import cpw.mods.fml.relauncher.SideOnly;\n+import java.io.UnsupportedEncodingException;\n+\n+import io.netty.buffer.ByteBuf;\n+import net.minecraftforge.fml.common.FMLCommonHandler;\n+import net.minecraftforge.fml.relauncher.Side;\n+import net.minecraftforge.fml.relauncher.SideOnly;\n import net.minecraft.client.Minecraft;\n import net.minecraft.entity.Entity;\n import net.minecraft.server.MinecraftServer;"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/AbstractPacket.java",
          "patch": "@@ -1,39 +0,0 @@\n-package burnedkirby.TurnBasedMinecraft.core.network;\n-\n-import java.io.UnsupportedEncodingException;\n-\n-import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-import net.minecraft.entity.player.EntityPlayer;\n-\n-/**\n- * Special thanks to Sirgingalot for his netty tutorial\n- * from which most of this network code for 1.7.2 and onwards\n- * is from.\n- *\n- */\n-\n-public abstract class AbstractPacket {\n-\n-\tpublic abstract void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer);\n-\t\n-\tpublic abstract void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer);\n-\t\n-\tpublic abstract void handleClientSide(EntityPlayer player);\n-\t\n-\tpublic abstract void handleServerSide(EntityPlayer player);\n-\t\n-\tprotected void encodeUTF(String msg, ByteBuf buffer) throws UnsupportedEncodingException\n-\t{\n-\t\tbuffer.writeInt(msg.length());\n-\t\tbuffer.writeBytes(msg.getBytes(\"UTF-8\"));\n-\t}\n-\t\n-\tprotected String decodeUTF(ByteBuf buffer) throws UnsupportedEncodingException\n-\t{\n-\t\tint length \u003d buffer.readInt();\n-\t\tbyte[] data \u003d new byte[length];\n-\t\tbuffer.readBytes(length).readBytes(data);\n-\t\treturn new String(data, \"UTF-8\");\n-\t}\n-}"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattleCombatantPacket.java",
          "patch": "@@ -1,11 +1,10 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-\n-import java.io.UnsupportedEncodingException;\n-\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.ByteBufUtils;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo.Type;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n@@ -17,7 +16,7 @@\n  * This is sent as a response from the player\u0027s BattleQueryPacket.\n  *\n  */\n-public class BattleCombatantPacket extends AbstractPacket {\n+public class BattleCombatantPacket implements IMessage {\n \n \tCombatantInfo combatant;\n \t\n@@ -29,84 +28,37 @@ public BattleCombatantPacket(CombatantInfo combatant)\n \tpublic BattleCombatantPacket() {\n \t\tcombatant \u003d new CombatantInfo();\n \t}\n-/*\t\n-\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeBoolean(combatant.isPlayer);\n-\t\tout.writeInt(combatant.id);\n-\t\tout.writeBoolean(combatant.isSideOne);\n-\t\tout.writeUTF(combatant.name);\n-\t\tout.writeBoolean(combatant.ready);\n-\t\tout.writeInt(combatant.type.ordinal());\n-\t\tout.writeInt(combatant.target);\n-\t}\n \n \t@Override\n-\tpublic void read(ByteArrayDataInput in) throws ProtocolException {\n-\t\tcombatant.isPlayer \u003d in.readBoolean();\n-\t\tcombatant.id \u003d in.readInt();\n-\t\tcombatant.isSideOne \u003d in.readBoolean();\n-\t\tcombatant.name \u003d in.readUTF();\n-\t\tcombatant.ready \u003d in.readBoolean();\n-\t\tcombatant.type \u003d Type.values()[in.readInt()];\n-\t\tcombatant.target \u003d in.readInt();\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tcombatant.isPlayer \u003d buf.readBoolean();\n+\t\tcombatant.id \u003d buf.readInt();\n+\t\tcombatant.isSideOne \u003d buf.readBoolean();\n+\t\tcombatant.name \u003d ByteBufUtils.readUTF8String(buf);\n+\t\tcombatant.ready \u003d buf.readBoolean();\n+\t\tcombatant.type \u003d Type.values()[buf.readInt()];\n+\t\tcombatant.target \u003d buf.readInt();\n \t}\n \n \t@Override\n-\tpublic void execute(EntityPlayer player, Side side)\n-\t\t\tthrows ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\t\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tif(ModMain.proxy.getGui() !\u003d null)\n-\t\t\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatant(combatant);\n-\t\t}\n-\t}*/\n-\n-\t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeBoolean(combatant.isPlayer);\n-\t\tbuffer.writeInt(combatant.id);\n-\t\tbuffer.writeBoolean(combatant.isSideOne);\n-\t\ttry {\n-\t\t\tencodeUTF(combatant.name, buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n-\t\t}\n-\t\tbuffer.writeBoolean(combatant.ready);\n-\t\tbuffer.writeInt(combatant.type.ordinal());\n-\t\tbuffer.writeInt(combatant.target);\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeBoolean(combatant.isPlayer);\n+\t\tbuf.writeInt(combatant.id);\n+\t\tbuf.writeBoolean(combatant.isSideOne);\n+\t\tByteBufUtils.writeUTF8String(buf, combatant.name);\n+\t\tbuf.writeBoolean(combatant.ready);\n+\t\tbuf.writeInt(combatant.type.ordinal());\n+\t\tbuf.writeInt(combatant.target);\n \t}\n-\n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tcombatant.isPlayer \u003d buffer.readBoolean();\n-\t\tcombatant.id \u003d buffer.readInt();\n-\t\tcombatant.isSideOne \u003d buffer.readBoolean();\n-\t\ttry {\n-\t\t\tcombatant.name \u003d decodeUTF(buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n+\t\n+\tpublic static class Handler implements IMessageHandler\u003cBattleCombatantPacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(BattleCombatantPacket message,\n+\t\t\t\tMessageContext ctx) {\n+\t\t\tif(ModMain.proxy.getGui() !\u003d null)\n+\t\t\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatant(message.combatant);\n+\t\t\treturn null;\n \t\t}\n-\t\tcombatant.ready \u003d buffer.readBoolean();\n-\t\tcombatant.type \u003d Type.values()[buffer.readInt()];\n-\t\tcombatant.target \u003d buffer.readInt();\n \t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\tif(ModMain.proxy.getGui() !\u003d null)\n-\t\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatant(combatant);\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t\t\n-\t}\n-\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattleCommandPacket.java",
          "patch": "@@ -1,11 +1,10 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-\n-import java.io.UnsupportedEncodingException;\n-\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.ByteBufUtils;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo.Type;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n@@ -14,7 +13,7 @@\n  * Packet sent to server from the player that has information\n  * on what the player has decided to do on their turn.\n  */\n-public class BattleCommandPacket extends AbstractPacket {\n+public class BattleCommandPacket implements IMessage {\n \t\n \tprivate int battleID;\n \tprivate CombatantInfo combatant;\n@@ -30,82 +29,36 @@ public BattleCommandPacket() {\n \t}\n \n \t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeInt(battleID);\n-\t\tbuffer.writeBoolean(combatant.isPlayer);\n-\t\tbuffer.writeInt(combatant.id);\n-\t\tbuffer.writeBoolean(combatant.isSideOne);\n-\t\ttry {\n-\t\t\tencodeUTF(combatant.name, buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n-\t\t}\n-\t\tbuffer.writeBoolean(combatant.ready);\n-\t\tbuffer.writeInt(combatant.type.ordinal());\n-\t\tbuffer.writeInt(combatant.target);\n-\t}\n-\n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbattleID \u003d buffer.readInt();\n-\t\tcombatant.isPlayer \u003d buffer.readBoolean();\n-\t\tcombatant.id \u003d buffer.readInt();\n-\t\tcombatant.isSideOne \u003d buffer.readBoolean();\n-\t\ttry {\n-\t\t\tcombatant.name \u003d decodeUTF(buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n-\t\t}\n-\t\tcombatant.ready \u003d buffer.readBoolean();\n-\t\tcombatant.type \u003d Type.values()[buffer.readInt()];\n-\t\tcombatant.target \u003d buffer.readInt();\n-\t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tbattleID \u003d buf.readInt();\n+\t\tcombatant.isPlayer \u003d buf.readBoolean();\n+\t\tcombatant.id \u003d buf.readInt();\n+\t\tcombatant.isSideOne \u003d buf.readBoolean();\n+\t\tcombatant.name \u003d ByteBufUtils.readUTF8String(buf);\n+\t\tcombatant.ready \u003d buf.readBoolean();\n+\t\tcombatant.type \u003d Type.values()[buf.readInt()];\n+\t\tcombatant.target \u003d buf.readInt();\n \t}\n \n \t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t\tModMain.bss.managePlayerUpdate(battleID, combatant);\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeInt(battleID);\n+\t\tbuf.writeBoolean(combatant.isPlayer);\n+\t\tbuf.writeInt(combatant.id);\n+\t\tbuf.writeBoolean(combatant.isSideOne);\n+\t\tByteBufUtils.writeUTF8String(buf, combatant.name);\n+\t\tbuf.writeBoolean(combatant.ready);\n+\t\tbuf.writeInt(combatant.type.ordinal());\n+\t\tbuf.writeInt(combatant.target);\n \t}\n \n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeInt(battleID);\n-\t\tout.writeBoolean(combatant.isPlayer);\n-\t\tout.writeInt(combatant.id);\n-\t\tout.writeBoolean(combatant.isSideOne);\n-\t\tout.writeUTF(combatant.name);\n-\t\tout.writeBoolean(combatant.ready);\n-\t\tout.writeInt(combatant.type.ordinal());\n-\t\tout.writeInt(combatant.target);\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) {\n-\t\tbattleID \u003d in.readInt();\n-\t\tcombatant.isPlayer \u003d in.readBoolean();\n-\t\tcombatant.id \u003d in.readInt();\n-\t\tcombatant.isSideOne \u003d in.readBoolean();\n-\t\tcombatant.name \u003d in.readUTF();\n-\t\tcombatant.ready \u003d in.readBoolean();\n-\t\tcombatant.type \u003d Type.values()[in.readInt()];\n-\t\tcombatant.target \u003d in.readInt();\n-\t}\n-\n-\t@Override\n-\tpublic void execute(EntityPlayer player, Side side) {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\tModMain.bss.managePlayerUpdate(battleID, combatant);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\t\n+\tpublic static class Handler implements IMessageHandler\u003cBattleCommandPacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(BattleCommandPacket message,\n+\t\t\t\tMessageContext ctx) {\n+\t\t\tModMain.bss.managePlayerUpdate(message.battleID, message.combatant);\n+\t\t\treturn null;\n \t\t}\n-\t}*/\n-\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattleMessagePacket.java",
          "patch": "@@ -1,14 +1,13 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-\n-import java.io.UnsupportedEncodingException;\n-\n-import net.minecraft.entity.player.EntityPlayer;\n import net.minecraft.util.ChatComponentText;\n+import net.minecraftforge.fml.common.network.ByteBufUtils;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n \n-public class BattleMessagePacket extends AbstractPacket {\n+public class BattleMessagePacket implements IMessage {\n \t\n \tString message;\n \t\n@@ -19,53 +18,23 @@ public BattleMessagePacket(String message)\n \t\tthis.message \u003d message;\n \t}\n \n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeUTF(message);\n-\t}\n-\n \t@Override\n-\tpublic void read(ByteArrayDataInput in) throws ProtocolException {\n-\t\tmessage \u003d in.readUTF();\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tmessage \u003d ByteBufUtils.readUTF8String(buf);\n \t}\n \n \t@Override\n-\tpublic void execute(EntityPlayer player, Side side)\n-\t\t\tthrows ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{}\n-\t\telse\n-\t\t{\n-\t\t\tMinecraft.getMinecraft().ingameGUI.getChatGUI().printChatMessage(message);\n-\t\t}\n-\t}*/\n-\n-\t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\ttry {\n-\t\t\tencodeUTF(message, buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tByteBufUtils.writeUTF8String(buf, message);\n \t}\n \n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\ttry {\n-\t\t\tmessage \u003d decodeUTF(buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n+\tpublic static class Handler implements IMessageHandler\u003cBattleMessagePacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(BattleMessagePacket message,\n+\t\t\t\tMessageContext ctx) {\n+\t\t\tctx.getServerHandler().playerEntity.addChatComponentMessage(new ChatComponentText(message.message));\n+\t\t\treturn null;\n \t\t}\n \t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\tplayer.addChatComponentMessage(new ChatComponentText(message));\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t\t\n-\t}\n-\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattlePhaseEndedPacket.java",
          "patch": "@@ -1,63 +0,0 @@\n-package burnedkirby.TurnBasedMinecraft.core.network;\n-\n-import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-import net.minecraft.entity.player.EntityPlayer;\n-\n-/**\n- * This packet sent from server to player notifies the player that a turn has\n- * ended and the Battle GUI can now return to the main menu.\n- *\n- */\n-public class BattlePhaseEndedPacket extends AbstractPacket {\n-\n-\t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\t// TODO Auto-generated method stub\n-\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) throws ProtocolException {\n-\t\t// TODO Auto-generated method stub\n-\n-\t}\n-\n-\t@Override\n-\tpublic void execute(EntityPlayer player, Side side)\n-\t\t\tthrows ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\t\n-\t\t}\n-\t\telse\n-\t\t{\n-//\t\t\tModMain.bg.updateTurnEnd(true);\n-\t\t}\n-\t}*/\n-\n-}"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattleQueryPacket.java",
          "patch": "@@ -1,15 +1,16 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n \n /**\n  * Packet sent by player in battle to server that is a query for battle status.\n  *\n  */\n-public class BattleQueryPacket extends AbstractPacket {\n+public class BattleQueryPacket implements IMessage {\n \t\n \tint battleID;\n \tshort type;\n@@ -23,92 +24,23 @@ public BattleQueryPacket(int battleID, short type)\n \tpublic BattleQueryPacket() {}\n \n \t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeInt(battleID);\n-\t\tbuffer.writeShort(type);\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tbattleID \u003d buf.readInt();\n+\t\ttype \u003d buf.readShort();\n \t}\n \n \t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbattleID \u003d buffer.readInt();\n-\t\ttype \u003d buffer.readShort();\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeInt(battleID);\n+\t\tbuf.writeShort(type);\n \t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t\tModMain.bss.manageQuery(battleID, type, player);\n-\t}\n-\n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeInt(battleID);\n-\t\tout.writeShort(type);\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) {\n-\t\tbattleID \u003d in.readInt();\n-\t\ttype \u003d in.readShort();\n-\t}*/\n-\n-\t/**\n-\t * If battle does not exist or has ended, will send a BattleStatusPacket that the battle\n-\t * has ended.\n-\t */\n-/*\t@Override\n-\tpublic void execute(EntityPlayer player, Side side) throws ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\tModMain.bss.manageQuery(battleID, type, player);\n-//\t\t\tif(!ModMain.bss.battleExists(battleID) || !ModMain.bss.getBattle(battleID).isBattleInProgress())\n-//\t\t\t{\n-//\t\t\t\tPacketDispatcher.sendPacketToPlayer(new BattleStatusPacket(false,false,0,0).makePacket(), (Player)player);\n-//\t\t\t\treturn;\n-//\t\t\t}\n-//\t\t\t\n-//\t\t\tVector\u003cInteger\u003e sideOne \u003d ModMain.bss.getBattleSide(battleID, true);\n-////\t\t\tif(sideOne \u003d\u003d null)\n-////\t\t\t{\n-////\t\t\t\tPacketDispatcher.sendPacketToPlayer(new BattleStatusPacket(false,0,0).makePacket(), (Player)player);\n-////\t\t\t}\n-//\t\t\tVector\u003cInteger\u003e sideTwo \u003d ModMain.bss.getBattleSide(battleID, false);\n-//\t\t\tif(type \u003d\u003d 0) //Send sizes to player.\n-//\t\t\t{\n-//\t\t\t\tPacketDispatcher.sendPacketToPlayer(new BattleStatusPacket(true, false, sideOne.size(), sideTwo.size()).makePacket(), (Player)player);\n-//\t\t\t}\n-//\t\t\telse if(type \u003d\u003d 1) //Send side one information to player.\n-//\t\t\t{\n-//\t\t\t\tEnumeration\u003cInteger\u003e list \u003d sideOne.elements();\n-//\t\t\t\tString name \u003d \"\";\n-//\t\t\t\tint id;\n-//\t\t\t\twhile(list.hasMoreElements())\n-//\t\t\t\t{\n-//\t\t\t\t\tid \u003d list.nextElement();\n-//\t\t\t\t\tname \u003d Utility.getEntityByID(id).getEntityName();\n-//\t\t\t\t\tPacketDispatcher.sendPacketToPlayer(new BattleCombatantPacket(id, true, name).makePacket(), (Player)player);\n-//\t\t\t\t}\n-//\t\t\t}\n-//\t\t\telse if(type \u003d\u003d 2) //Send side two information to player.\n-//\t\t\t{\n-//\t\t\t\tEnumeration\u003cInteger\u003e list \u003d sideTwo.elements();\n-//\t\t\t\tString name \u003d \"\";\n-//\t\t\t\tint id;\n-//\t\t\t\twhile(list.hasMoreElements())\n-//\t\t\t\t{\n-//\t\t\t\t\tid \u003d list.nextElement();\n-//\t\t\t\t\tname \u003d Utility.getEntityByID(id).getEntityName();\n-//\t\t\t\t\tPacketDispatcher.sendPacketToPlayer(new BattleCombatantPacket(id, false, name).makePacket(), (Player)player);\n-//\t\t\t\t}\n-//\t\t\t}\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\t//throw new ProtocolException(\"Packet can only be received by the server!\");\n+\t\n+\tpublic static class Handler implements IMessageHandler\u003cBattleQueryPacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(BattleQueryPacket message, MessageContext ctx) {\n+\t\t\tModMain.bss.manageQuery(message.battleID, message.type, ctx.getServerHandler().playerEntity);\n+\t\t\treturn null;\n \t\t}\n-\t}*/\n-\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/BattleStatusPacket.java",
          "patch": "@@ -1,9 +1,10 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n import net.minecraft.client.Minecraft;\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n import burnedkirby.TurnBasedMinecraft.gui.BattleGui;\n \n@@ -12,7 +13,7 @@\n  * the player is in exists, and the sizes of the two sides.\n  * This packet is sent as a response from the player\u0027s BattleQueryPacket.\n  */\n-public class BattleStatusPacket extends AbstractPacket {\n+public class BattleStatusPacket implements IMessage {\n \t\n \tboolean found;\n \tboolean forceUpdate;\n@@ -45,93 +46,46 @@ public BattleStatusPacket()\n \t{}\n \n \t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeBoolean(found);\n-\t\tbuffer.writeBoolean(forceUpdate);\n-\t\tbuffer.writeInt(battleSize);\n-\t\tbuffer.writeBoolean(playerPhase);\n-\t\tbuffer.writeBoolean(turnChoiceReceived);\n-\t\tbuffer.writeShort(timer);\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tfound \u003d buf.readBoolean();\n+\t\tforceUpdate \u003d buf.readBoolean();\n+\t\tbattleSize \u003d buf.readInt();\n+\t\tplayerPhase \u003d buf.readBoolean();\n+\t\tturnChoiceReceived \u003d buf.readBoolean();\n+\t\ttimer \u003d buf.readShort();\n \t}\n \n \t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tfound \u003d buffer.readBoolean();\n-\t\tforceUpdate \u003d buffer.readBoolean();\n-\t\tbattleSize \u003d buffer.readInt();\n-\t\tplayerPhase \u003d buffer.readBoolean();\n-\t\tturnChoiceReceived \u003d buffer.readBoolean();\n-\t\ttimer \u003d buffer.readShort();\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeBoolean(found);\n+\t\tbuf.writeBoolean(forceUpdate);\n+\t\tbuf.writeInt(battleSize);\n+\t\tbuf.writeBoolean(playerPhase);\n+\t\tbuf.writeBoolean(turnChoiceReceived);\n+\t\tbuf.writeShort(timer);\n \t}\n \n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\tif(found)\n-\t\t{\n-\t\t\tif(((BattleGui)ModMain.proxy.getGui()) \u003d\u003d null \u0026\u0026 Minecraft.getMinecraft().currentScreen instanceof BattleGui)\n-\t\t\t{\n-\t\t\t\tMinecraft.getMinecraft().setIngameFocus();\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\telse if(((BattleGui)ModMain.proxy.getGui()) \u003d\u003d null)\n-\t\t\t\treturn;\n-\t\t\t((BattleGui)ModMain.proxy.getGui()).checkBattleInfo(forceUpdate, battleSize, playerPhase, turnChoiceReceived, timer);\n-\t\t}\n-\t\telse if(!found \u0026\u0026 Minecraft.getMinecraft().currentScreen instanceof BattleGui)\n-\t\t{\n-\t\t\tMinecraft.getMinecraft().setIngameFocus();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t}\n-\n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeBoolean(found);\n-\t\tout.writeBoolean(forceUpdate);\n-\t\tout.writeInt(battleSize);\n-\t\tout.writeBoolean(playerPhase);\n-\t\tout.writeBoolean(turnChoiceReceived);\n-\t\tout.writeShort(timer);\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) throws ProtocolException {\n-\t\tfound \u003d in.readBoolean();\n-\t\tforceUpdate \u003d in.readBoolean();\n-\t\tbattleSize \u003d in.readInt();\n-\t\tplayerPhase \u003d in.readBoolean();\n-\t\tturnChoiceReceived \u003d in.readBoolean();\n-\t\ttimer \u003d in.readShort();\n-\t}\n+\tpublic static class Handler implements IMessageHandler\u003cBattleStatusPacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(BattleStatusPacket message, MessageContext ctx) {\n \n-\t@Override\n-\tpublic void execute(EntityPlayer player, Side side)\n-\t\t\tthrows ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\t//throw new ProtocolException(\"Packet can only be received by the player!\");\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tif(found) //TODO check if null pointer exception can happen\n+\t\t\tif(message.found)\n \t\t\t{\n \t\t\t\tif(((BattleGui)ModMain.proxy.getGui()) \u003d\u003d null \u0026\u0026 Minecraft.getMinecraft().currentScreen instanceof BattleGui)\n \t\t\t\t{\n \t\t\t\t\tMinecraft.getMinecraft().setIngameFocus();\n-\t\t\t\t\treturn;\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t\telse if(((BattleGui)ModMain.proxy.getGui()) \u003d\u003d null)\n-\t\t\t\t\treturn;\n-\t\t\t\t((BattleGui)ModMain.proxy.getGui()).checkBattleInfo(forceUpdate, battleSize, playerPhase, turnChoiceReceived, timer);\n+\t\t\t\t\treturn null;\n+\t\t\t\t((BattleGui)ModMain.proxy.getGui()).checkBattleInfo(message.forceUpdate, message.battleSize, message.playerPhase, message.turnChoiceReceived, message.timer);\n \t\t\t}\n-\t\t\telse if(!found \u0026\u0026 Minecraft.getMinecraft().currentScreen instanceof BattleGui)\n+\t\t\telse if(!message.found \u0026\u0026 Minecraft.getMinecraft().currentScreen instanceof BattleGui)\n \t\t\t{\n \t\t\t\tMinecraft.getMinecraft().setIngameFocus();\n \t\t\t}\n+\t\t\treturn null;\n \t\t}\n-\t}*/\n-\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/CombatantHealthPacket.java",
          "patch": "@@ -1,12 +1,13 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n import burnedkirby.TurnBasedMinecraft.gui.BattleGui;\n \n-public class CombatantHealthPacket extends AbstractPacket {\n+public class CombatantHealthPacket implements IMessage {\n \t\n \tint entityID;\n \tfloat health;\n@@ -21,48 +22,24 @@ public CombatantHealthPacket(int entityID, float health)\n \t}\n \n \t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeInt(entityID);\n-\t\tbuffer.writeFloat(health);\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tentityID \u003d buf.readInt();\n+\t\thealth \u003d buf.readFloat();\n \t}\n \n \t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tentityID \u003d buffer.readInt();\n-\t\thealth \u003d buffer.readFloat();\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeInt(entityID);\n+\t\tbuf.writeFloat(health);\n \t}\n \n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatantHealthInfo(entityID, health);\n-\t}\n-\n-\t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n-\t}\n-\n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeInt(entityID);\n-\t\tout.writeFloat(health);\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) throws ProtocolException {\n-\t\tentityID \u003d in.readInt();\n-\t\thealth \u003d in.readFloat();\n-\t}\n-\n-\t@Override\n-\tpublic void execute(EntityPlayer player, Side side)\n-\t\t\tthrows ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatantHealthInfo(entityID, health);\n+\tpublic static class Handler implements IMessageHandler\u003cCombatantHealthPacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(CombatantHealthPacket message,\n+\t\t\t\tMessageContext ctx) {\n+\t\t\t((BattleGui)ModMain.proxy.getGui()).receiveCombatantHealthInfo(message.entityID, message.health);\n+\t\t\treturn null;\n \t\t}\n-\t}*/\n-\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/InitiateBattlePacket.java",
          "patch": "@@ -1,19 +1,18 @@\n package burnedkirby.TurnBasedMinecraft.core.network;\n \n import io.netty.buffer.ByteBuf;\n-import io.netty.channel.ChannelHandlerContext;\n-\n-import java.io.UnsupportedEncodingException;\n-\n-import net.minecraft.entity.player.EntityPlayer;\n+import net.minecraftforge.fml.common.network.ByteBufUtils;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessage;\n+import net.minecraftforge.fml.common.network.simpleimpl.IMessageHandler;\n+import net.minecraftforge.fml.common.network.simpleimpl.MessageContext;\n import burnedkirby.TurnBasedMinecraft.CombatantInfo;\n import burnedkirby.TurnBasedMinecraft.ModMain;\n \n /**\n  * Packet sent to player from the server which notifies the player of\n  * entering battle and brings up the BattleGUI.\n  */\n-public class InitiateBattlePacket extends AbstractPacket {\n+public class InitiateBattlePacket implements IMessage {\n \t\n \tint battleID;\n \tCombatantInfo player;\n@@ -31,70 +30,32 @@ public InitiateBattlePacket() {\n \t}\n \n \t@Override\n-\tpublic void encodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbuffer.writeInt(battleID);\n-\t\tbuffer.writeBoolean(player.isPlayer);\n-\t\tbuffer.writeInt(player.id);\n-\t\tbuffer.writeBoolean(player.isSideOne);\n-\t\tbuffer.writeBoolean(silly);\n-\t\ttry {\n-\t\t\tencodeUTF(player.name, buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void decodeInto(ChannelHandlerContext ctx, ByteBuf buffer) {\n-\t\tbattleID \u003d buffer.readInt();\n-\t\tplayer.isPlayer \u003d buffer.readBoolean();\n-\t\tplayer.id \u003d buffer.readInt();\n-\t\tplayer.isSideOne \u003d buffer.readBoolean();\n-\t\tsilly \u003d buffer.readBoolean();\n-\t\ttry {\n-\t\t\tplayer.name \u003d decodeUTF(buffer);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void handleClientSide(EntityPlayer player) {\n-\t\tModMain.proxy.newGui(battleID, this.player, silly);\n+\tpublic void fromBytes(ByteBuf buf) {\n+\t\tbattleID \u003d buf.readInt();\n+\t\tplayer.isPlayer \u003d buf.readBoolean();\n+\t\tplayer.id \u003d buf.readInt();\n+\t\tplayer.isSideOne \u003d buf.readBoolean();\n+\t\tsilly \u003d buf.readBoolean();\n+\t\tplayer.name \u003d ByteBufUtils.readUTF8String(buf);\n \t}\n \n \t@Override\n-\tpublic void handleServerSide(EntityPlayer player) {\n+\tpublic void toBytes(ByteBuf buf) {\n+\t\tbuf.writeInt(battleID);\n+\t\tbuf.writeBoolean(player.isPlayer);\n+\t\tbuf.writeInt(player.id);\n+\t\tbuf.writeBoolean(player.isSideOne);\n+\t\tbuf.writeBoolean(silly);\n+\t\tByteBufUtils.writeUTF8String(buf, player.name);\n \t}\n \n-/*\t@Override\n-\tpublic void write(ByteArrayDataOutput out) {\n-\t\tout.writeInt(battleID);\n-\t\tout.writeBoolean(player.isPlayer);\n-\t\tout.writeInt(player.id);\n-\t\tout.writeBoolean(player.isSideOne);\n-\t\tout.writeUTF(player.name);\n-\t}\n-\n-\t@Override\n-\tpublic void read(ByteArrayDataInput in) {\n-\t\tbattleID \u003d in.readInt();\n-\t\tplayer.isPlayer \u003d in.readBoolean();\n-\t\tplayer.id \u003d in.readInt();\n-\t\tplayer.isSideOne \u003d in.readBoolean();\n-\t\tplayer.name \u003d in.readUTF();\n-\t}\n-\n-\t@Override\n-\tpublic void execute(EntityPlayer player, Side side) throws ProtocolException {\n-\t\tif(side.isServer())\n-\t\t{\n-\t\t\t\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tModMain.proxy.newGui(battleID, this.player);\n+\tpublic static class Handler implements IMessageHandler\u003cInitiateBattlePacket, IMessage\u003e\n+\t{\n+\t\t@Override\n+\t\tpublic IMessage onMessage(InitiateBattlePacket message,\n+\t\t\t\tMessageContext ctx) {\n+\t\t\tModMain.proxy.newGui(message.battleID, message.player, message.silly);\n+\t\t\treturn null;\n \t\t}\n-\t}*/\n-\n+\t}\n }"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/core/network/PacketPipeline.java",
          "patch": "@@ -1,178 +0,0 @@\n-package burnedkirby.TurnBasedMinecraft.core.network;\n-\n-import io.netty.buffer.ByteBuf;\n-import io.netty.buffer.Unpooled;\n-import io.netty.channel.ChannelHandler;\n-import io.netty.channel.ChannelHandlerContext;\n-import io.netty.handler.codec.MessageToMessageCodec;\n-\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.EnumMap;\n-import java.util.LinkedList;\n-import java.util.List;\n-\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.entity.player.EntityPlayer;\n-import net.minecraft.entity.player.EntityPlayerMP;\n-import net.minecraft.network.INetHandler;\n-import net.minecraft.network.NetHandlerPlayServer;\n-import burnedkirby.TurnBasedMinecraft.core.Utility;\n-import cpw.mods.fml.common.FMLCommonHandler;\n-import cpw.mods.fml.common.network.FMLEmbeddedChannel;\n-import cpw.mods.fml.common.network.FMLOutboundHandler;\n-import cpw.mods.fml.common.network.NetworkRegistry;\n-import cpw.mods.fml.common.network.internal.FMLProxyPacket;\n-import cpw.mods.fml.relauncher.Side;\n-import cpw.mods.fml.relauncher.SideOnly;\n-\n-/**\n- * Special thanks to Sirgingalot for his netty tutorial\n- * from which most of this network code for 1.7.2 and onwards\n- * is from.\n- *\n- */\n-\n-@ChannelHandler.Sharable\n-public class PacketPipeline extends\n-\t\tMessageToMessageCodec\u003cFMLProxyPacket, AbstractPacket\u003e {\n-\t\n-\tprivate EnumMap\u003cSide, FMLEmbeddedChannel\u003e channels;\n-\tprivate LinkedList\u003cClass\u003c? extends AbstractPacket\u003e\u003e packets \u003d new LinkedList\u003cClass\u003c? extends AbstractPacket\u003e\u003e();\n-\tprivate boolean isPostInitialised \u003d false;\n-\t\n-\tpublic boolean registerPacket(Class\u003c? extends AbstractPacket\u003e clazz) {\n-\t\tif (this.packets.size() \u003e 256) {\n-\t\t\tUtility.log(\"Tried to register a packet past max amount!\");\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\tif (this.packets.contains(clazz)) {\n-\t\t\tUtility.log(\"Tried to register a packet already registered!\");\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\tif (this.isPostInitialised) {\n-\t\t\tUtility.log(\"Tried to register a packet after initialization!\");\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n-\t\tthis.packets.add(clazz);\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tprotected void encode(ChannelHandlerContext ctx, AbstractPacket msg,\n-\t\t\tList\u003cObject\u003e out) throws Exception {\n-\t\tByteBuf buffer \u003d Unpooled.buffer();\n-\t\tClass\u003c? extends AbstractPacket\u003e clazz \u003d msg.getClass();\n-\t\tif(!this.packets.contains(msg.getClass())) {\n-\t\t\tthrow new NullPointerException(\"No packet registered for: \" + msg.getClass().getCanonicalName());\n-\t\t}\n-\t\t\n-\t\tbyte discriminator \u003d (byte) this.packets.indexOf(clazz);\n-\t\tbuffer.writeByte(discriminator);\n-\t\tmsg.encodeInto(ctx, buffer);\n-\t\tFMLProxyPacket proxyPacket \u003d new FMLProxyPacket(buffer.copy(), ctx.channel().attr(NetworkRegistry.FML_CHANNEL).get());\n-\t\tout.add(proxyPacket);\n-\t}\n-\n-\t@Override\n-\tprotected void decode(ChannelHandlerContext ctx, FMLProxyPacket msg,\n-\t\t\tList\u003cObject\u003e out) throws Exception {\n-\t\tByteBuf payload \u003d msg.payload();\n-\t\tbyte discriminator \u003d payload.readByte();\n-\t\tClass\u003c? extends AbstractPacket\u003e clazz \u003d this.packets.get(discriminator);\n-\t\tif (clazz \u003d\u003d null) {\n-\t\t\tthrow new NullPointerException(\"No packet registered for discriminator: \" + discriminator);\n-\t\t}\n-\t\t\n-\t\tAbstractPacket pkt \u003d clazz.newInstance();\n-\t\tpkt.decodeInto(ctx, payload.slice());\n-\t\t\n-\t\tEntityPlayer player;\n-\t\tswitch(FMLCommonHandler.instance().getEffectiveSide()) {\n-\t\tcase CLIENT:\n-\t\t\tplayer \u003d this.getClientPlayer();\n-\t\t\tpkt.handleClientSide(player);\n-\t\t\tbreak;\n-\t\t\t\n-\t\tcase SERVER:\n-\t\t\tINetHandler netHandler \u003d ctx.channel().attr(NetworkRegistry.NET_HANDLER).get();\n-\t\t\tplayer \u003d ((NetHandlerPlayServer) netHandler).playerEntity;\n-\t\t\tpkt.handleServerSide(player);\n-\t\t\tbreak;\n-\t\t\t\n-\t\tdefault:\n-\t\t}\n-\t\t\n-\t\tout.add(pkt);\n-\t}\n-\t\n-\tpublic void initialize() {\n-\t\tthis.channels \u003d NetworkRegistry.INSTANCE.newChannel(\"BK_TBM_Channel\", this);\n-\t\t\n-\t\tregisterPacket(BattleCombatantPacket.class);\n-\t\tregisterPacket(BattleCommandPacket.class);\n-\t\tregisterPacket(BattleMessagePacket.class);\n-\t\tregisterPacket(BattlePhaseEndedPacket.class);\n-\t\tregisterPacket(BattleQueryPacket.class);\n-\t\tregisterPacket(BattleStatusPacket.class);\n-\t\tregisterPacket(CombatantHealthPacket.class);\n-\t\tregisterPacket(InitiateBattlePacket.class);\n-\t}\n-\t\n-\tpublic void postInitialize() {\n-\t\tif(this.isPostInitialised) {\n-\t\t\treturn;\n-\t\t}\n-\t\t\n-\t\tthis.isPostInitialised \u003d true;\n-\t\tCollections.sort(this.packets, new Comparator\u003cClass\u003c? extends AbstractPacket\u003e\u003e() {\n-\n-\t\t\t@Override\n-\t\t\tpublic int compare(Class\u003c? extends AbstractPacket\u003e clazz1,\n-\t\t\t\t\tClass\u003c? extends AbstractPacket\u003e clazz2) {\n-\t\t\t\tint com \u003d String.CASE_INSENSITIVE_ORDER.compare(clazz1.getCanonicalName(), clazz2.getCanonicalName());\n-\t\t\t\tif (com \u003d\u003d 0) {\n-\t\t\t\t\tcom \u003d clazz1.getCanonicalName().compareTo(clazz2.getCanonicalName());\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\treturn com;\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\t@SideOnly(Side.CLIENT)\n-\tprivate EntityPlayer getClientPlayer() {\n-\t\treturn Minecraft.getMinecraft().thePlayer;\n-\t}\n-\t\n-\tpublic void sendToAll(AbstractPacket message) {\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGET).set(FMLOutboundHandler.OutboundTarget.ALL);\n-\t\tthis.channels.get(Side.SERVER).writeAndFlush(message);\n-\t}\n-\t\n-\tpublic void sendTo(AbstractPacket message, EntityPlayerMP player) {\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGET).set(FMLOutboundHandler.OutboundTarget.PLAYER);\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGETARGS).set(player);\n-\t\tthis.channels.get(Side.SERVER).writeAndFlush(message);\n-\t}\n-\t\n-\tpublic void sendToAllAround(AbstractPacket message, NetworkRegistry.TargetPoint point) {\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGET).set(FMLOutboundHandler.OutboundTarget.ALLAROUNDPOINT);\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGETARGS).set(point);\n-\t\tthis.channels.get(Side.SERVER).writeAndFlush(message);\n-\t}\n-\t\n-\tpublic void sendToDimension(AbstractPacket message, int dimensionId) {\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGET).set(FMLOutboundHandler.OutboundTarget.DIMENSION);\n-\t\tthis.channels.get(Side.SERVER).attr(FMLOutboundHandler.FML_MESSAGETARGETARGS).set(dimensionId);\n-\t\tthis.channels.get(Side.SERVER).writeAndFlush(message);\n-\t}\n-\t\n-\tpublic void sendToServer(AbstractPacket message) {\n-\t\tthis.channels.get(Side.CLIENT).attr(FMLOutboundHandler.FML_MESSAGETARGET).set(FMLOutboundHandler.OutboundTarget.TOSERVER);\n-\t\tthis.channels.get(Side.CLIENT).writeAndFlush(message);\n-\t}\n-}\n\\ No newline at end of file"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/gui/BattleGui.java",
          "patch": "@@ -66,7 +66,7 @@ public void initGui() {\n \t\tinfo[1] \u003d \"\";\n \t\tgetMenu(-2);\n \t\tupdatingCombatants \u003d false;\n-\t\tModMain.pp.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n+\t\tModMain.network.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n \t\tturnChoiceSent \u003d false;\n \t\tif(silly)\n \t\t{\n@@ -86,7 +86,7 @@ public void checkBattleInfo(boolean forceUpdate, int battleSize, boolean playerP\n \t\t{\n \t\t\tcombatants.clear();\n \t\t\tupdatingCombatants \u003d true;\n-\t\t\tModMain.pp.sendToServer(new BattleQueryPacket(battleID,(short) 1));\n+\t\t\tModMain.network.sendToServer(new BattleQueryPacket(battleID,(short) 1));\n \t\t}\n \t\tupdate(playerPhase, turnChoiceReceived);\n \t}\n@@ -99,7 +99,7 @@ public void receiveCombatant(CombatantInfo combatant)\n \t\t\tif(combatants.size() \u003d\u003d serverBattleSize)\n \t\t\t{\n \t\t\t\tupdatingCombatants \u003d false;\n-\t\t\t\tModMain.pp.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n+\t\t\t\tModMain.network.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n \t\t\t}\n \t\t}\n \t}\n@@ -155,9 +155,9 @@ public void drawScreen(int par1, int par2, float par3) {\n \t\tsuper.drawScreen(par1, par2, par3);\n \t\t\n \t\tif(info[0] !\u003d \"\")\n-\t\t\tMinecraft.getMinecraft().fontRenderer.drawString(info[0], width/2 - Minecraft.getMinecraft().fontRenderer.getStringWidth(info[0])/2, height - 90, 0xffffffff);\n+\t\t\tMinecraft.getMinecraft().fontRendererObj.drawString(info[0], width/2 - Minecraft.getMinecraft().fontRendererObj.getStringWidth(info[0])/2, height - 90, 0xffffffff);\n \t\tif(info[1] !\u003d \"\")\n-\t\t\tMinecraft.getMinecraft().fontRenderer.drawString(info[1], width/2 - Minecraft.getMinecraft().fontRenderer.getStringWidth(info[1])/2, height - 80, 0xffffffff);\n+\t\t\tMinecraft.getMinecraft().fontRendererObj.drawString(info[1], width/2 - Minecraft.getMinecraft().fontRendererObj.getStringWidth(info[1])/2, height - 80, 0xffffffff);\n \t\t\n \t\tif(!turnChoiceSent)\n \t\t{\n@@ -171,13 +171,13 @@ else if(timer \u003e 6)\n \t\t\t\n \t\t\tString timerString \u003d \"Time left: \" + formatString + (timer / 2);\n \t\t\t\n-\t\t\tMinecraft.getMinecraft().fontRenderer.drawString(timerString, width/2 - Minecraft.getMinecraft().fontRenderer.getStringWidth(timerString)/2, 10, 0xffffffff);\n+\t\t\tMinecraft.getMinecraft().fontRendererObj.drawString(timerString, width/2 - Minecraft.getMinecraft().fontRendererObj.getStringWidth(timerString)/2, 10, 0xffffffff);\n \t\t}\n \t\t\n \t\tupdateTick--;\n \t\tif(updateTick\u003d\u003d0)\n \t\t{\n-\t\t\tModMain.pp.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n+\t\t\tModMain.network.sendToServer(new BattleQueryPacket(battleID,(short) 0));\n \t\t\tupdateTick \u003d updateWaitTime;\n \t\t}\n \t}\n@@ -218,7 +218,7 @@ public void drawCombatants()\n \t */\n \tprivate void drawCombatant(CombatantInfo combatant, int x, int y, int color)\n \t{\n-\t\tint nameLength \u003d Minecraft.getMinecraft().fontRenderer.getStringWidth(combatant.name);\n+\t\tint nameLength \u003d Minecraft.getMinecraft().fontRendererObj.getStringWidth(combatant.name);\n \t\tString name \u003d ScorePlayerTeam.formatPlayerName(Minecraft.getMinecraft().theWorld.getScoreboard().getPlayersTeam(combatant.name), combatant.name);\n \t\tif(combatantButton)\n \t\t{\n@@ -229,7 +229,7 @@ private void drawCombatant(CombatantInfo combatant, int x, int y, int color)\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tMinecraft.getMinecraft().fontRenderer.drawString(name, x - nameLength/2, y, color);\n+\t\t\tMinecraft.getMinecraft().fontRendererObj.drawString(name, x - nameLength/2, y, color);\n \t\t}\n \t\t\n \t\t//Draw Health\n@@ -350,7 +350,7 @@ protected void actionPerformed(GuiButton button) {//actionPerformed(GuiButton bu\n \t\tcase 2: //flee\n \t\t\tplayer.type \u003d Type.FLEE;\n \t\t\tplayer.target \u003d player.id;\n-\t\t\tModMain.pp.sendToServer(new BattleCommandPacket(battleID, player));\n+\t\t\tModMain.network.sendToServer(new BattleCommandPacket(battleID, player));\n \t\t\tturnChoiceSent \u003d true;\n \t\t\tbreak;\n \t\tcase 3: //attack menu\n@@ -361,7 +361,7 @@ protected void actionPerformed(GuiButton button) {//actionPerformed(GuiButton bu\n \t\tcase 5: //attack\n \t\t\tplayer.target \u003d ((IDSelectionButton)button).entityID;\n \t\t\tplayer.type \u003d Type.ATTACK;\n-\t\t\tModMain.pp.sendToServer(new BattleCommandPacket(battleID, player));\n+\t\t\tModMain.network.sendToServer(new BattleCommandPacket(battleID, player));\n \t\t\tturnChoiceSent \u003d true;\n \t\t\tbreak;\n \t\tcase 6: //change weapon\n@@ -370,7 +370,7 @@ protected void actionPerformed(GuiButton button) {//actionPerformed(GuiButton bu\n \t\t\t\n \t\t\tplayer.type \u003d Type.CHANGE_WEAPON;\n \t\t\tplayer.target \u003d player.id;\n-\t\t\tModMain.pp.sendToServer(new BattleCommandPacket(battleID, player));\n+\t\t\tModMain.network.sendToServer(new BattleCommandPacket(battleID, player));\n \t\t\tturnChoiceSent \u003d true;\n \t\t\tbreak;\n \t\tcase 7: //dodge/counter menu\n@@ -381,7 +381,7 @@ protected void actionPerformed(GuiButton button) {//actionPerformed(GuiButton bu\n \t\tcase 8: //dodge/counter\n \t\t\tplayer.target \u003d ((IDSelectionButton)button).entityID;\n \t\t\tplayer.type \u003d Type.DODGE_COUNTER;\n-\t\t\tModMain.pp.sendToServer(new BattleCommandPacket(battleID, player));\n+\t\t\tModMain.network.sendToServer(new BattleCommandPacket(battleID, player));\n \t\t\tturnChoiceSent \u003d true;\n \t\t\tbreak;\n \t\tdefault: break;"
        },
        {
          "file_name": "burnedkirby/TurnBasedMinecraft/gui/ItemSelectionButton.java",
          "patch": "@@ -22,8 +22,8 @@ public ItemSelectionButton(int buttonID, int x, int y, int width, int height, St\n \tpublic void drawButton(Minecraft par1Minecraft, int par2, int par3) {\n \t\tif(this.visible)\n \t\t{\n-\t\t\tthis.field_146123_n \u003d par2 \u003e\u003d this.xPosition \u0026\u0026 par3 \u003e\u003d this.yPosition \u0026\u0026 par2 \u003c this.xPosition + this.width \u0026\u0026 par3 \u003c this.yPosition + this.height;\n-\t\t\tif(this.field_146123_n) //If mouse is hovering over button\n+\t\t\tthis.hovered \u003d par2 \u003e\u003d this.xPosition \u0026\u0026 par3 \u003e\u003d this.yPosition \u0026\u0026 par2 \u003c this.xPosition + this.width \u0026\u0026 par3 \u003c this.yPosition + this.height;\n+\t\t\tif(this.hovered) //If mouse is hovering over button\n \t\t\t{\n \t\t\t\tdrawRect(this.xPosition, this.yPosition, this.xPosition + this.width, this.yPosition + this.height, 0x80ffffff);\n \t\t\t}"
        },
        {
          "file_name": "mcmod.info",
          "patch": "@@ -2,8 +2,8 @@\n     \"modid\": \"mod_BurnedKirbyTurnBasedMinecraft\",\n     \"name\": \"BurnedKirby\u0027s Turn-Based Minecraft\",\n     \"description\": \"Puts RPG style turn-based combat into Minecraft!\",\n-    \"version\": \"0.3.2\",\n-    \"mcversion\": \"1.7.10-10.13.0.1180\",\n+    \"version\": \"0.3.3\",\n+    \"mcversion\": \"1.8-11.14.3.1450\",\n     \"url\": \"https://github.com/BurnedKirby/Minecraft-Turn-Based-Battle-Mod\",\n     \"authors\": [ \"BurnedKirby\" ],\n     \"credits\": \"Created by BurnedKirby\","
        }
      ]
    }
  },
  {
    "name": "Fixes memory leak in RunTestSuiteTask",
    "url": "https://github.com/hazelcast/hazelcast-simulator/pull/1089",
    "description": "Currently it isn\u0027t a problem because will kill the coordinator after running\na testsuite; but the TestPhaseListeners are not unregistered. This causes\nproblems with the session based approach.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/hazelcast/hazelcast-simulator/commit/6e3ffd1b00e14d4bdb16cda876408bd74f21588b",
      "files": [
        {
          "file_name": "simulator/src/main/java/com/hazelcast/simulator/coordinator/RunTestSuiteTask.java",
          "patch": "@@ -72,6 +72,7 @@ public void run() {\n         try {\n             run0();\n         } finally {\n+            testPhaseListeners.removeAllListeners(runners);\n             componentRegistry.removeTests();\n             performanceStatsCollector.logDetailedPerformanceInfo(testSuite.getDurationSeconds());\n         }\n@@ -87,7 +88,7 @@ private void run0() {\n                 coordinatorParameters.getLastTestPhaseToSync());\n \n         echoer.echo(\"Starting TestSuite\");\n-        logTestSuiteDuration(parallel);\n+        echoTestSuiteDuration(parallel);\n \n         for (TestData testData : componentRegistry.getTests()) {\n             int testIndex \u003d testData.getTestIndex();\n@@ -118,7 +119,7 @@ private void run0() {\n         echoTestSuiteEnd(testCount, started);\n     }\n \n-    private void logTestSuiteDuration(boolean isParallel) {\n+    private void echoTestSuiteDuration(boolean isParallel) {\n         int testDuration \u003d testSuite.getDurationSeconds();\n         if (testDuration \u003e 0) {\n             echoer.echo(\"Running time per test: %s\", secondsToHuman(testDuration));"
        },
        {
          "file_name": "simulator/src/main/java/com/hazelcast/simulator/coordinator/TestPhaseListeners.java",
          "patch": "@@ -20,6 +20,7 @@\n import org.apache.log4j.Logger;\n \n import java.util.Collection;\n+import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n@@ -42,6 +43,14 @@ public void addListener(int testIndex, TestPhaseListener listener) {\n         listenerMap.put(testIndex, listener);\n     }\n \n+    public void removeAllListeners(Collection\u003c? extends TestPhaseListener\u003e listeners) {\n+        for (Map.Entry\u003cInteger, TestPhaseListener\u003e entry : listenerMap.entrySet()) {\n+            if (listeners.contains(entry.getValue())) {\n+                listenerMap.remove(entry.getKey());\n+            }\n+        }\n+    }\n+\n     public void updatePhaseCompletion(int testIndex, TestPhase testPhase, SimulatorAddress workerAddress) {\n         TestPhaseListener listener \u003d listenerMap.get(testIndex);\n         if (listener \u003d\u003d null) {"
        },
        {
          "file_name": "simulator/src/test/java/com/hazelcast/simulator/TestSupport.java",
          "patch": "@@ -1,5 +1,7 @@\n package com.hazelcast.simulator;\n \n+import java.util.HashSet;\n+import java.util.Set;\n import java.util.concurrent.Callable;\n import java.util.concurrent.Future;\n import java.util.concurrent.FutureTask;"
        },
        {
          "file_name": "simulator/src/test/java/com/hazelcast/simulator/coordinator/TestPhaseListenersTest.java",
          "patch": "@@ -5,8 +5,13 @@\n import org.junit.Before;\n import org.junit.Test;\n \n+import java.util.HashSet;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.singleton;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n public class TestPhaseListenersTest {\n \n@@ -23,6 +28,20 @@ public void testGetListeners() {\n     }\n \n     @Test\n+    public void removeAllListeners() {\n+        TestPhaseListener listener1 \u003d mock(TestPhaseListener.class);\n+        TestPhaseListener listener2 \u003d mock(TestPhaseListener.class);\n+        TestPhaseListener listener3 \u003d mock(TestPhaseListener.class);\n+        testPhaseListeners.addListener(1, listener1);\n+        testPhaseListeners.addListener(1, listener2);\n+        testPhaseListeners.addListener(1, listener3);\n+\n+        testPhaseListeners.removeAllListeners(asList(listener1, listener2));\n+\n+        assertEquals(singleton(listener3), new HashSet\u003cTestPhaseListener\u003e(testPhaseListeners.getListeners()));\n+    }\n+\n+    @Test\n     public void testAddListener() {\n         UnitTestPhaseListener listener \u003d new UnitTestPhaseListener();\n "
        }
      ]
    }
  },
  {
    "name": "Sound memory leak \u003cperformance, bug",
    "url": "https://github.com/arjanvanschendel/KauwgombalMisere/pull/42",
    "description": "Every time a sound was played a new thread was spawned and never closed.\n This would result in a crash after 15 - 30 minutes.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/arjanvanschendel/KauwgombalMisere/commit/703e391b1e3524b8e706ba36013fc58c02654131",
      "files": [
        {
          "file_name": "src/main/java/utillities/Sound.java",
          "patch": "@@ -8,6 +8,8 @@\n import javax.sound.sampled.BooleanControl;\n import javax.sound.sampled.Clip;\n import javax.sound.sampled.FloatControl;\n+import javax.sound.sampled.LineEvent;\n+import javax.sound.sampled.LineListener;\n import javax.sound.sampled.LineUnavailableException;\n import javax.sound.sampled.UnsupportedAudioFileException;\n \n@@ -17,7 +19,7 @@\n  * @author Matthias Tavasszy\n  *\n  */\n-public class Sound {\n+public class Sound implements LineListener {\n \n \t/**\n \t * indicates whether there is an audio device or not.\n@@ -100,26 +102,34 @@ public final void play() {\n \t *            loops\n \t */\n \tpublic final void loop(final int n) {\n+\t\tplaying \u003d false;\n \t\ttry {\n-\t\t\tclip \u003d null;\n-\n \t\t\ttry {\n-\t\t\t\taudiostream \u003d AudioSystem.getAudioInputStream(f);\n-\t\t\t\tclip \u003d AudioSystem.getClip();\n-\t\t\t\tclip.open(audiostream);\n-\t\t\t\tFloatControl gainControl \u003d (FloatControl) clip\n-\t\t\t\t\t\t.getControl(FloatControl.Type.MASTER_GAIN);\n-\t\t\t\tBooleanControl muteControl \u003d (BooleanControl) clip\n-\t\t\t\t\t\t.getControl(BooleanControl.Type.MUTE);\n-\t\t\t\tif (volume \u003d\u003d 0) {\n-\t\t\t\t\tmuteControl.setValue(true);\n+\t\t\t\tif ((clip \u003d\u003d null) || (!clip.isOpen())) {\n+\n+\t\t\t\t\taudiostream \u003d AudioSystem.getAudioInputStream(f);\n+\t\t\t\t\tclip \u003d AudioSystem.getClip();\n+\t\t\t\t\tclip.open(audiostream);\n+\t\t\t\t\tFloatControl gainControl \u003d (FloatControl) clip\n+\t\t\t\t\t\t\t.getControl(FloatControl.Type.MASTER_GAIN);\n+\t\t\t\t\tBooleanControl muteControl \u003d (BooleanControl) clip\n+\t\t\t\t\t\t\t.getControl(BooleanControl.Type.MUTE);\n+\t\t\t\t\tif (volume \u003d\u003d 0) {\n+\t\t\t\t\t\tmuteControl.setValue(true);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tmuteControl.setValue(false);\n+\t\t\t\t\t\tgainControl.setValue((float) (Math.log(volume / 100d)\n+\t\t\t\t\t\t\t\t/ Math.log(10.0) * 20.0));\n+\n+\t\t\t\t\t}\n+\t\t\t\t\tclip.addLineListener(this);\n+\t\t\t\t\tclip.loop(n);\n \t\t\t\t} else {\n-\t\t\t\t\tmuteControl.setValue(false);\n-\t\t\t\t\tgainControl.setValue((float) (Math.log(volume / 100d)\n-\t\t\t\t\t\t\t/ Math.log(10.0) * 20.0));\n-\n+\t\t\t\t\tclip.stop();\n+\t\t\t\t\tclip.flush();\n+\t\t\t\t\tclip.setFramePosition(0);\n+\t\t\t\t\tclip.loop(n);\n \t\t\t\t}\n-\t\t\t\tclip.loop(n);\n \t\t\t} catch (UnsupportedAudioFileException | IOException\n \t\t\t\t\t| LineUnavailableException e) {\n \t\t\t\te.printStackTrace();\n@@ -184,4 +194,15 @@ public final void setVolume(final float vol) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Closes the clip when the clip has finished playing or is stopped.\n+\t */\n+\t@Override\n+\tpublic void update(LineEvent event) {\n+\t\tif (event.getType().equals(LineEvent.Type.STOP) \u0026\u0026 playing) {\n+\t\t\tclip.close();\n+\t\t}\n+\n+\t}\n }"
        },
        {
          "file_name": "src/test/java/utilities/SoundTest.java",
          "patch": "@@ -33,7 +33,7 @@\n \t@Before\n \tpublic final void setup() {\n \t\tsnd \u003d new Sound(\"res/Screaming_ducks.wav\");\n-\t\tsnd2 \u003d new Sound(\"res/Screaming_ducks.wav\", 5);\n+\t\tsnd2 \u003d new Sound(\"res/Screaming_ducks.wav\", 0);\n \t}\n \n \t/**\n@@ -129,6 +129,43 @@ public final void stopLoopTest2() {\n \t}\n \n \t/**\n+\t * Start while sound is already playing.\n+\t */\n+\t@Test\n+\tpublic final void restart() {\n+\t\tassertFalse(snd.isPlaying());\n+\t\tsnd.play();\n+\t\tassertTrue(snd.isPlaying());\n+\t\tsnd.play();\n+\t\tassertTrue(snd.isPlaying());\n+\t}\n+\n+\t/**\n+\t * Set volume while playing.\n+\t */\n+\t@Test\n+\tpublic final void testSetVolume() {\n+\t\tsnd.play();\n+\t\tassertTrue(snd.isPlaying());\n+\t\tassertEquals(snd.getVolume(), 100, 0);\n+\t\tsnd.setVolume(50);\n+\t\tassertTrue(snd.isPlaying());\n+\t\tassertEquals(snd.getVolume(), 50, 0);\n+\t\tsnd.setVolume(0);\n+\t\tassertTrue(snd.isPlaying());\n+\t\tassertEquals(snd.getVolume(), 0, 0);\n+\t}\n+\n+\t/**\n+\t * Tests the two constructors.\n+\t */\n+\t@Test\n+\tpublic final void testConstruct() {\n+\t\tassertEquals(snd.getVolume(), 100, 0);\n+\t\tassertEquals(snd2.getVolume(), 0, 0);\n+\t}\n+\n+\t/**\n \t * volumeCapTest: tests if the volume cap works.\n \t */\n \t@Test"
        }
      ]
    }
  },
  {
    "name": "Memory Leak in MaterialSheetFab",
    "url": "https://github.com/gowong/material-sheet-fab/issues/21",
    "description": "The call:\n\n``` java\n// Set listener for when FAB view is laid out\n        fab.getViewTreeObserver()\n                .addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\n                    @Override\n                    public void onGlobalLayout() {\n                        // Initialize FAB anchor when the FAB view is laid out\n                        if (!isFabLaidOut) {\n                            updateFabAnchor();\n                            isFabLaidOut \u003d true;\n                        }\n                    }\n                });\n```\n\nappears to leak the instance to this sheet (causing my activity to leak), since it\u0027s not removed from the `OnGlobalLayoutListener`. \nThis was caught using LeakCanary. \n",
    "keywords": [
      "leak",
      "fab"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/gowong/material-sheet-fab/commit/79a5d5ac827594526eae9fb1c384e75730613cad",
      "files": [
        {
          "file_name": "material-sheet-fab/src/main/java/com/gordonwong/materialsheetfab/MaterialSheetFab.java",
          "patch": "@@ -60,7 +60,6 @@\n \tprotected int anchorY;\n \tprivate boolean isShowing;\n \tprivate boolean isHiding;\n-\tprivate boolean isFabLaidOut;\n \tprivate boolean hideSheetAfterSheetIsShown;\n \n \t// Listeners\n@@ -123,11 +122,11 @@ public boolean onTouch(View view, MotionEvent motionEvent) {\n \t\t\t\t.addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void onGlobalLayout() {\n+\t\t\t\t\t\t// Removing layout listener to avoid multiple calls\n+\t\t\t\t\t\tMaterialSheetFab.this.fab.getViewTreeObserver()\n+\t\t\t\t\t\t\t\t.removeGlobalOnLayoutListener(this);\n \t\t\t\t\t\t// Initialize FAB anchor when the FAB view is laid out\n-\t\t\t\t\t\tif (!isFabLaidOut) {\n-\t\t\t\t\t\t\tupdateFabAnchor();\n-\t\t\t\t\t\t\tisFabLaidOut \u003d true;\n-\t\t\t\t\t\t}\n+\t\t\t\t\t\tupdateFabAnchor();\n \t\t\t\t\t}\n \t\t\t\t});\n \t}"
        }
      ]
    }
  },
  {
    "name": "NMS-8896: Address memory leak in Enhanced Linkd",
    "url": "https://github.com/OpenNMS/opennms/pull/1202",
    "description": "This is a Fix for Issue NMS-8896\r\n \r\nMemory Leak for enhancedLinkd\r\n\r\nCheck details on https://issues.opennms.org/browse/NMS-8896\r\n\r\nCretaed a new configuration attribute max_bft with default value 1.\r\n\r\nThe BridgeDiscovery is done if the number of bridge forwarding table saved into memory is less then max_bft. \r\n\r\nThis is a simple mechanism to save memory to be exausted by the bridge forwarding table.",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/OpenNMS/opennms/commit/73a0b66639b682cda73b885b6077f19de4b5caaf",
      "files": [
        {
          "file_name": "opennms-config-model/src/main/castor/enlinkd-configuration.xsd",
          "patch": "@@ -50,6 +50,15 @@\n \t\t\t\t\u003c/annotation\u003e\n \t\t\t\u003c/attribute\u003e\n \n+\t\t\t\u003cattribute name\u003d\"max_bft\" type\u003d\"int\"\n+\t\t\t\tuse\u003d\"optional\" default\u003d\"1\"\u003e\n+\t\t\t\t\u003cannotation\u003e\n+\t\t\t\t\t\u003cdocumentation\u003e\n+\t\t\t\t\t\tMax bridge forwarding table to hold in memory.\n+\t\t\t\t\t\u003c/documentation\u003e\n+\t\t\t\t\u003c/annotation\u003e\n+\t\t\t\u003c/attribute\u003e\n+\n \t\t\t\u003cattribute name\u003d\"use-cdp-discovery\" type\u003d\"boolean\"\n \t\t\t\tuse\u003d\"optional\" default\u003d\"true\"\u003e\n \t\t\t\t\u003cannotation\u003e"
        },
        {
          "file_name": "opennms-config/src/main/java/org/opennms/netmgt/config/EnhancedLinkdConfig.java",
          "patch": "@@ -52,6 +52,12 @@\n      */\n     int getThreads();\n \n+    /**\n+     * \u003cp\u003egetMaxBft\u003c/p\u003e\n+     *\n+     * @return a int.\n+     */\n+    int getMaxBft();\n \n     /**\n      * \u003cp\u003egetInitialSleepTime\u003c/p\u003e"
        },
        {
          "file_name": "opennms-config/src/main/java/org/opennms/netmgt/config/EnhancedLinkdConfigManager.java",
          "patch": "@@ -158,6 +158,11 @@ public int getThreads() {\n         if (m_config.hasThreads()) return m_config.getThreads();\n         return 5;\n     }\n+    \n+    public int getMaxBft() {\n+        if (m_config.hasMax_bft()) return m_config.getMax_bft();\n+        return 1;\n+    }\n \n     /**\n      * \u003cp\u003esaveXml\u003c/p\u003e"
        },
        {
          "file_name": "opennms-services/src/main/java/org/opennms/netmgt/enlinkd/EnhancedLinkd.java",
          "patch": "@@ -294,23 +294,28 @@ public boolean scheduleNodeCollection(int nodeid) {\n     }\n \n     public boolean runSingleSnmpCollection(final int nodeId) {\n+        boolean allready \u003d true;\n             final Node node \u003d m_queryMgr.getSnmpNode(nodeId);\n \n             for (final NodeDiscovery snmpColl : getSnmpCollections(node)) {\n                 if (snmpColl instanceof NodeDiscoveryBridgeTopology)\n                     continue;\n+                if (!snmpColl.isReady()) {\n+                    allready \u003d false;\n+                    continue;\n+                }\n                 snmpColl.setScheduler(m_scheduler);\n                 snmpColl.run();\n             }\n \n-            return true;\n+            return allready;\n     }\n \n     public boolean runTopologyDiscovery(final int nodeId) {\n         final Node node \u003d m_queryMgr.getSnmpNode(nodeId);\n \n         for (final NodeDiscovery snmpColl : getSnmpCollections(node)) {\n-            if (snmpColl instanceof NodeDiscoveryBridgeTopology) {\n+            if (snmpColl instanceof NodeDiscoveryBridgeTopology \u0026\u0026 snmpColl.isReady()) {\n                 snmpColl.setScheduler(m_scheduler);\n                 snmpColl.run();\n                 return true;\n@@ -579,4 +584,7 @@ public long getRescanInterval() {\n             return m_linkdConfig.getRescanInterval(); \n     }\n \n+    public int getMaxbft() {\n+        return m_linkdConfig.getMaxBft();\n+    }\n }"
        },
        {
          "file_name": "opennms-services/src/main/java/org/opennms/netmgt/enlinkd/NodeDiscoveryBridge.java",
          "patch": "@@ -488,4 +488,9 @@ public String getName() {\n         return \"BridgeLinkDiscovery\";\n     }\n \n+    @Override\n+    public boolean isReady() {\n+        LOG.info(\"isReady: node: {}, maxBft {}, updateMapsixe {}.\", getNodeId(),m_linkd.getMaxbft(),m_linkd.getQueryManager().getUpdateBftMap().size());\n+        return m_linkd.getQueryManager().getUpdateBftMap().size() \u003c m_linkd.getMaxbft();\n+    }\n }"
        },
        {
          "file_name": "opennms-services/src/main/java/org/opennms/netmgt/enlinkd/NodeDiscoveryBridgeTopology.java",
          "patch": "@@ -488,17 +488,10 @@ public void addUpdatedBFT(Bridge bridge, List\u003cBridgeMacLink\u003e notYetParsedBFTMap)\n \n     public NodeDiscoveryBridgeTopology(EnhancedLinkd linkd, Node node) {\n         super(linkd, node);\n-        setInitialSleepTime(linkd.getInitialSleepTime()+180000);\n     }\n \n     @Override\n-    public void run() {\n-        if (!m_linkd.getQueryManager().hasUpdatedBft(getNodeId())) {\n-            LOG.info(\"run: node: {}, without updated bft. Rescheduling\");\n-            reschedule();\n-            return;\n-        }\n-        \n+    public void run() {        \n         Date now \u003d new Date();\n                 \n         Set\u003cString\u003e incomingSet \u003d new HashSet\u003cString\u003e();\n@@ -1080,5 +1073,15 @@ private Integer goUp(SharedSegment down,Bridge bridge, int level) {\n             }\n         return goUp(up, bridge,++level);\n     }\n+    \n+    @Override\n+    public boolean isReady() {\n+        if (!m_linkd.getQueryManager().hasUpdatedBft(getNodeId())) {\n+            LOG.info(\"isReady: node: {}, without updated bft. Topology Discovery Not Ready\", getNodeId());\n+            return false;\n+        }\n+        return true;\n+\n+    }\n }\n "
        },
        {
          "file_name": "opennms-services/src/main/java/org/opennms/netmgt/enlinkd/scheduler/Scheduler.java",
          "patch": "@@ -260,18 +260,17 @@ public void setPackageName(String pkg) {\n \n \t/**\n \t * This method is used to unschedule a ready runnable in the system.\n-\t * The runnuble is removed from all queue interval where is found.\n+\t * The runnable is removed from all queue interval where is found.\n \t *\n \t * @param runnable\n \t *            The element to remove from queue intervals.\n \t */\n \tpublic synchronized void unschedule(ReadyRunnable runnable) {\n \t    LOG.debug(\"unschedule: Removing all {}\", runnable.getInfo());\n \t\t\n-\t\tboolean done \u003d false;\n \t\tsynchronized(m_queues) {\n \t\t  Iterator\u003cLong\u003e iter \u003d m_queues.keySet().iterator();\n-\t\t  while (iter.hasNext() \u0026\u0026 !done) {\n+\t\t  while (iter.hasNext()) {\n \t\t\n \t\t\tLong key \u003d iter.next();\n \t\t\tunschedule(runnable, key.longValue());\n@@ -530,114 +529,119 @@ public String getName() {\n \t * the runnable queues for ready objects and then enqueuing them into the\n \t * thread pool for execution.\n \t */\n-        @Override\n-\tpublic void run() {\n-\n-\t\tsynchronized (this) {\n-\t\t\tm_status \u003d RUNNING;\n-\t\t}\n-\n-\t\tLOG.debug(\"run: scheduler running\");\n-\n-\t\t// Loop until a fatal exception occurs or until\n-\t\t// the thread is interrupted.\n-\t\t//\n-\t\tfor (;;) {\n-\t\t\t// block if there is nothing in the queue(s)\n-\t\t\t// When something is added to the queue it\n-\t\t\t// signals us to wakeup\n-\t\t\t//\n-\t\t\tsynchronized (this) {\n-\t\t\t\tif (m_status !\u003d RUNNING \u0026\u0026 m_status !\u003d PAUSED\n-\t\t\t\t\t\t\u0026\u0026 m_status !\u003d PAUSE_PENDING\n-\t\t\t\t\t\t\u0026\u0026 m_status !\u003d RESUME_PENDING) {\n-\t\t\t\t    LOG.debug(\"run: status \u003d {}, time to exit\", m_status);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\n-\t\t\t\tif (m_scheduled \u003d\u003d 0) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t    LOG.debug(\"run: no interfaces scheduled, waiting...\");\n-\t\t\t\t\t\twait();\n-\t\t\t\t\t} catch (InterruptedException ex) {\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// cycle through the queues checking for\n-\t\t\t// what\u0027s ready to run. The queues are keyed\n-\t\t\t// by the interval, but the mapped elements\n-\t\t\t// are peekable fifo queues.\n-\t\t\t//\n-\t\t\tint runned \u003d 0;\n-\t\t\tsynchronized (m_queues) {\n-\t\t\t\t// get an iterator so that we can cycle\n-\t\t\t\t// through the queue elements.\n-\t\t\t\t//\n-\t\t\t\tIterator\u003cLong\u003e iter \u003d m_queues.keySet().iterator();\n-\t\t\t\twhile (iter.hasNext()) {\n-\t\t\t\t\t// Peak for Runnable objects until\n-\t\t\t\t\t// there are no more ready runnables\n-\t\t\t\t\t//\n-\t\t\t\t\t// Also, only go through each queue once!\n-\t\t\t\t\t// if we didn\u0027t add a count then it would\n-\t\t\t\t\t// be possible to starve other queues.\n-\t\t\t\t\t//\n-\t\t\t\t\tLong key \u003d iter.next();\n-\t\t\t\t\tPeekableFifoQueue\u003cReadyRunnable\u003e in \u003d m_queues.get(key);\n-\t\t\t\t\tif (in.isEmpty()) {\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n-\t\t\t\t\tReadyRunnable readyRun \u003d null;\n-\t\t\t\t\tint maxLoops \u003d in.size();\n-\t\t\t\t\tdo {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\treadyRun \u003d in.peek();\n-\t\t\t\t\t\t\tif (readyRun !\u003d null \u0026\u0026 readyRun.isReady()) {\n-\t\t\t\t\t\t\t    LOG.debug(\"run: found ready runnable {}\", readyRun.getInfo());\n-\n-\t\t\t\t\t\t\t\t// Pop the interface/readyRunnable from the\n-\t\t\t\t\t\t\t\t// queue for execution.\n-\t\t\t\t\t\t\t\t//\n-\t\t\t\t\t\t\t\tin.remove();\n-\n-\t\t\t\t\t\t\t\t// Add runnable to the execution queue\n-\t\t\t\t\t\t\t\tm_runner.execute(readyRun);\n-\t\t\t\t\t\t\t\t++runned;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (InterruptedException ex) {\n-\t\t\t\t\t\t\treturn; // jump all the way out\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} while (readyRun !\u003d null \u0026\u0026 readyRun.isReady()\n-\t\t\t\t\t\t\t\u0026\u0026 --maxLoops \u003e 0);\n-\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t}\n+    @Override\n+    public void run() {\n \n-\t\t\t// Wait for 1 second if there were no runnables\n-\t\t\t// executed during this loop, otherwise just\n-\t\t\t// start over.\n-\t\t\t//\n-\t\t\tsynchronized (this) {\n-\t\t\t\tm_scheduled -\u003d runned;\n-\t\t\t\tif (runned \u003d\u003d 0) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\twait(1000);\n-\t\t\t\t\t} catch (InterruptedException ex) {\n-\t\t\t\t\t\tbreak; // exit for loop\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+        synchronized (this) {\n+            m_status \u003d RUNNING;\n+        }\n \n-\t\t} // end for(;;)\n+        LOG.debug(\"run: scheduler running\");\n+\n+        // Loop until a fatal exception occurs or until\n+        // the thread is interrupted.\n+        //\n+        for (;;) {\n+            // block if there is nothing in the queue(s)\n+            // When something is added to the queue it\n+            // signals us to wakeup\n+            //\n+            synchronized (this) {\n+                if (m_status !\u003d RUNNING \u0026\u0026 m_status !\u003d PAUSED\n+                        \u0026\u0026 m_status !\u003d PAUSE_PENDING\n+                        \u0026\u0026 m_status !\u003d RESUME_PENDING) {\n+                    LOG.debug(\"run: status \u003d {}, time to exit\", m_status);\n+                    break;\n+                }\n+\n+                if (m_scheduled \u003d\u003d 0) {\n+                    try {\n+                        LOG.debug(\"run: no interfaces scheduled, waiting...\");\n+                        wait();\n+                    } catch (InterruptedException ex) {\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            // cycle through the queues checking for\n+            // what\u0027s ready to run. The queues are keyed\n+            // by the interval, but the mapped elements\n+            // are peekable fifo queues.\n+            //\n+            int runned \u003d 0;\n+            synchronized (m_queues) {\n+                // get an iterator so that we can cycle\n+                // through the queue elements.\n+                //\n+                Iterator\u003cLong\u003e iter \u003d m_queues.keySet().iterator();\n+                while (iter.hasNext()) {\n+                    // Peak for Runnable objects until\n+                    // there are no more ready runnables\n+                    //\n+                    // Also, only go through each queue once!\n+                    // if we didn\u0027t add a count then it would\n+                    // be possible to starve other queues.\n+                    //\n+                    Long key \u003d iter.next();\n+                    PeekableFifoQueue\u003cReadyRunnable\u003e in \u003d m_queues.get(key);\n+                    if (in \u003d\u003d null || in.isEmpty()) {\n+                        continue;\n+                    }\n+                    ReadyRunnable readyRun \u003d null;\n+                    int maxLoops \u003d in.size();\n+                    do {\n+                        try {\n+                            readyRun \u003d in.peek();\n+                            if (readyRun !\u003d null) {\n+                                // Pop the interface/readyRunnable from the\n+                                // queue for execution.\n+                                //\n+                                in.remove();\n+\n+                                if (readyRun.isReady()) {\n+                                    LOG.debug(\"run: found ready runnable {}\",\n+                                              readyRun.getInfo());\n+\n+                                    // Add runnable to the execution queue\n+                                    m_runner.execute(readyRun);\n+                                    ++runned;\n+                                } else {\n+                                    LOG.debug(\"run: not ready ready runnable {}\",\n+                                              readyRun.getInfo());\n+                                    in.add(readyRun);\n+                                }\n+                            }\n+                        } catch (InterruptedException ex) {\n+                            return; // jump all the way out\n+                        }\n+                    } while (--maxLoops \u003e 0);\n+                }\n+\n+            }\n+\n+            // Wait for 1 second if there were no runnables\n+            // executed during this loop, otherwise just\n+            // start over.\n+            //\n+            synchronized (this) {\n+                m_scheduled -\u003d runned;\n+                if (runned \u003d\u003d 0) {\n+                    try {\n+                        wait(1000);\n+                    } catch (InterruptedException ex) {\n+                        break; // exit for loop\n+                    }\n+                }\n+            }\n+\n+        } // end for(;;)\n+\n+        LOG.debug(\"run: scheduler exiting, state \u003d STOPPED\");\n+        synchronized (this) {\n+            m_status \u003d STOPPED;\n+        }\n \n-\t\tLOG.debug(\"run: scheduler exiting, state \u003d STOPPED\");\n-\t\tsynchronized (this) {\n-\t\t\tm_status \u003d STOPPED;\n-\t\t}\n+    } // end run\n \n-\t} // end run\n-\t\n }"
        },
        {
          "file_name": "opennms-services/src/test/java/org/opennms/netmgt/enlinkd/Nms7918EnIT.java",
          "patch": "@@ -158,7 +158,7 @@ public void testNms7918STCASW01BftCollection() throws Exception {\n             printBridgeMacLink(link);\n         }\n \n-        assertTrue(m_linkd.runTopologyDiscovery(stcasw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(stcasw01.getId()));\n \n         assertEquals(0,m_bridgeBridgeLinkDao.countAll());\n         assertEquals(0,m_bridgeMacLinkDao.countAll());\n@@ -264,7 +264,7 @@ public void testNms7918SAMASW01BftCollection() throws Exception {\n             printBridgeMacLink(link);\n         }\n \n-        assertTrue(m_linkd.runTopologyDiscovery(samasw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(samasw01.getId()));\n \n         assertEquals(0,m_bridgeBridgeLinkDao.countAll());\n         assertEquals(0,m_bridgeMacLinkDao.countAll());\n@@ -370,7 +370,7 @@ public void testNms7918ASW01BftCollection() throws Exception {\n             printBridgeMacLink(link);\n         }\n \n-        assertTrue(m_linkd.runTopologyDiscovery(asw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(asw01.getId()));\n \n         assertEquals(0,m_bridgeBridgeLinkDao.countAll());\n         assertEquals(0,m_bridgeMacLinkDao.countAll());\n@@ -458,6 +458,7 @@ public void testNms7918() throws Exception {\n         m_linkdConfig.getConfiguration().setUseOspfDiscovery(false);\n         m_linkdConfig.getConfiguration().setUseLldpDiscovery(false);\n         m_linkdConfig.getConfiguration().setUseIsisDiscovery(false);\n+        m_linkdConfig.getConfiguration().setMax_bft(3);\n         assertTrue(!m_linkdConfig.useLldpDiscovery());\n         assertTrue(!m_linkdConfig.useCdpDiscovery());\n         assertTrue(!m_linkdConfig.useOspfDiscovery());\n@@ -482,17 +483,13 @@ public void testNms7918() throws Exception {\n         assertEquals(0,m_bridgeMacLinkDao.countAll());\n         \n         assertTrue(m_linkd.runTopologyDiscovery(asw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(samasw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(stcasw01.getId()));\n         assertEquals(3,m_bridgeElementDao.countAll());\n         assertEquals(0,m_bridgeStpLinkDao.countAll());\n         assertEquals(2,m_bridgeBridgeLinkDao.countAll());\n         assertEquals(91,m_bridgeMacLinkDao.countAll());\n \n-        assertTrue(m_linkd.runTopologyDiscovery(samasw01.getId()));\n-        assertTrue(m_linkd.runTopologyDiscovery(stcasw01.getId()));\n-        assertEquals(3,m_bridgeElementDao.countAll());\n-        assertEquals(0,m_bridgeStpLinkDao.countAll());\n-        assertEquals(2,m_bridgeBridgeLinkDao.countAll());\n-        assertEquals(91,m_bridgeMacLinkDao.countAll());\n \n         for (BridgeBridgeLink bblink : m_bridgeBridgeLinkDao.findAll()) {\n             printBridgeBridgeLink(bblink);\n@@ -715,6 +712,8 @@ public void testNms7918TwoSteps() throws Exception {\n         m_linkdConfig.getConfiguration().setUseOspfDiscovery(false);\n         m_linkdConfig.getConfiguration().setUseLldpDiscovery(false);\n         m_linkdConfig.getConfiguration().setUseIsisDiscovery(false);\n+        m_linkdConfig.getConfiguration().setMax_bft(2);\n+\n         assertTrue(!m_linkdConfig.useLldpDiscovery());\n         assertTrue(!m_linkdConfig.useCdpDiscovery());\n         assertTrue(!m_linkdConfig.useOspfDiscovery());\n@@ -743,7 +742,7 @@ public void testNms7918TwoSteps() throws Exception {\n         assertEquals(1,m_bridgeBridgeLinkDao.countAll());\n         assertEquals(67,m_bridgeMacLinkDao.countAll());\n \n-        assertTrue(m_linkd.runTopologyDiscovery(samasw01.getId()));\n+        assertTrue(!m_linkd.runTopologyDiscovery(samasw01.getId()));\n         assertTrue(m_linkd.runSingleSnmpCollection(stcasw01.getId()));\n         assertTrue(m_linkd.runTopologyDiscovery(stcasw01.getId()));\n         assertEquals(3,m_bridgeElementDao.countAll());"
        }
      ]
    }
  },
  {
    "name": "Memory Leak",
    "url": "https://github.com/zcmoore/connect_four/issues/5",
    "description": "Each time a piece is dropped into the board, a timer is created to handle the glow animation.\n\nEach piece receives one timer, and the timers are never closed, even after the board is cleared. As such, the timers continue to exist and execute, even after they are logically useful. \n\nThe glow protocol needs to be re-written, which will force re-writes of certain portions of GamePanel and GamePiece. I recommend a single timer thread to handle all glow updates. The timer should update all pieces to the same tick, and keep a single variable to track the current tick.\n",
    "keywords": [
      "timer",
      "glow"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/zcmoore/connect_four/commit/bc8c2d8067a2373ef50380401bb64d47708376ef",
      "files": [
        {
          "file_name": "src/connect/four/gui/GamePanel.java",
          "patch": "@@ -6,37 +6,122 @@\n \n package connect.four.gui;\n \n-import connect.four.*;\n-import connect.four.board.*;\n-import connect.four.player.*;\n import java.awt.Color;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.awt.event.MouseAdapter;\n+\n+import javax.swing.ImageIcon;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n import javax.swing.Timer;\n \n-public class GamePanel extends javax.swing.JPanel implements\n-\t\tScoreChart.Listener\n+import connect.four.Game;\n+import connect.four.ScoreChart;\n+import connect.four.board.Board;\n+import connect.four.board.ReadableBoard;\n+import connect.four.player.ComputerPlayer;\n+import connect.four.player.Player;\n+\n+@SuppressWarnings(\"serial\")\n+public class GamePanel extends JPanel implements ScoreChart.Listener\n {\n \t\n-\tGUI gui;\n-\tstatic final long GLOW_START_TIME \u003d (int) System.currentTimeMillis();\n-\tstatic final int PLAY_TIME \u003d 1500;\n-\tboolean falling;\n-\tint columnNum;\n-\tint turnNum;\n-\tint whoPlayed;\n-\tint newDrawPos;\n-\tint newColumnNum;\n-\tPlayer[] players;\n-\tGame game;\n-\tGUIPiece[] pieces;\n-\tBoard board;\n-\tboolean isComputerEnabled;\n-\tboolean justWon;\n+\tprivate GUI gui;\n+\tprivate static final int PLAY_TIME \u003d 1500;\n+\tprivate boolean falling;\n+\tprivate int columnNum;\n+\tprivate int turnNum;\n+\tprivate int newDrawPos;\n+\tprivate int newColumnNum;\n+\tprivate Player[] players;\n+\tprivate Game game;\n+\tprivate GUIPiece[] pieces;\n+\tprivate Board board;\n+\tprivate boolean isComputerEnabled;\n+\tprivate boolean justWon;\n+\t\n+\tprivate JLabel bgImage;\n+\tprivate JPanel col1;\n+\tprivate JPanel col2;\n+\tprivate JPanel col3;\n+\tprivate JPanel col4;\n+\tprivate JPanel col5;\n+\tprivate JPanel col6;\n+\tprivate JPanel col7;\n+\tprivate JLabel currentWins;\n+\tprivate JLabel pNameDisplay;\n+\tprivate JLabel player1NameBox;\n+\tprivate JLabel player2NameBox;\n+\tprivate JPanel topGlass;\n+\tprivate JLabel turnDisplay;\n+\t\n+\tprivate class GlowTimer extends Timer\n+\t{\n+\t\tpublic GlowTimer(int delay)\n+\t\t{\n+\t\t\tsuper(delay, new GlowListener());\n+\t\t}\n+\t}\n+\t\n+\tprivate class GlowListener implements ActionListener\n+\t{\n+\t\tprivate static final int NUMBER_OF_TICKS \u003d 6;\n+\t\tprivate int tick;\n+\t\t\n+\t\t@Override\n+\t\tpublic void actionPerformed(ActionEvent e)\n+\t\t{\n+\t\t\tfor (GUIPiece piece : pieces)\n+\t\t\t{\n+\t\t\t\tif (piece !\u003d null)\n+\t\t\t\t{\n+\t\t\t\t\tif (piece.getParent() \u003d\u003d topGlass)\n+\t\t\t\t\t\tpiece.setIcon(piece.getGlow(tick));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t\n+\t\t\ttick \u003d (tick + 1) % NUMBER_OF_TICKS;\n+\t\t\ttopGlass.invalidate();\n+\t\t\ttopGlass.revalidate();\n+\t\t\ttopGlass.repaint();\n+\t\t}\n+\t}\n+\t\n+\tprivate class ColumnMouseAdapter extends MouseAdapter\n+\t{\n+\t\tprivate int column;\n+\t\t\n+\t\tpublic ColumnMouseAdapter(int column)\n+\t\t{\n+\t\t\tsuper();\n+\t\t\tthis.column \u003d column;\n+\t\t}\n+\t\t\n+\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n+\t\t{\n+\t\t\tsuper.mouseClicked(evt);\n+\t\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n+\t\t\t{\n+\t\t\t\tturn();\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n+\t\t{\n+\t\t\tsuper.mouseExited(evt);\n+\t\t}\n+\t\t\n+\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n+\t\t{\n+\t\t\tsuper.mouseEntered(evt);\n+\t\t\tcalcNewPos(column - 1);\n+\t\t\tcalcWidth(column - 1);\n+\t\t}\n+\t}\n \t\n \tpublic GamePanel(GUI gui, boolean isComputerEnabled)\n \t{\n-\t\t// whoPlayed \u003d 1;\n \t\tplayers \u003d new Player[2];\n \t\tplayers[0] \u003d new GUIPlayer(gui.getPlayer1Name(), this);\n \t\tthis.isComputerEnabled \u003d isComputerEnabled;\n@@ -57,244 +142,112 @@ public GamePanel(GUI gui, boolean isComputerEnabled)\n \t\tgame.registerListener(this);\n \t\tjustWon \u003d false;\n \t\t\n+\t\tGlowTimer glowTimer \u003d new GlowTimer(100);\n+\t\tglowTimer.start();\n+\t\t\n \t\tinitNewGame();\n \t}\n \t\n-\t/**\n-\t * This method is called from within the constructor to initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is always\n-\t * regenerated by the Form Editor.\n-\t */\n-\t@SuppressWarnings(\"unchecked\")\n-\t// \u003ceditor-fold defaultstate\u003d\"collapsed\"\n-\t// desc\u003d\"Generated Code\"\u003e//GEN-BEGIN:initComponents\n \tprivate void initComponents()\n \t{\n-\t\t\n-\t\tplayer1NameBox \u003d new javax.swing.JLabel();\n-\t\tcurrentWins \u003d new javax.swing.JLabel();\n-\t\tpNameDisplay \u003d new javax.swing.JLabel();\n-\t\tturnDisplay \u003d new javax.swing.JLabel();\n-\t\tcol1 \u003d new javax.swing.JPanel();\n-\t\tcol2 \u003d new javax.swing.JPanel();\n-\t\tcol3 \u003d new javax.swing.JPanel();\n-\t\tcol4 \u003d new javax.swing.JPanel();\n-\t\tcol5 \u003d new javax.swing.JPanel();\n-\t\tcol6 \u003d new javax.swing.JPanel();\n-\t\ttopGlass \u003d new javax.swing.JPanel();\n-\t\tcol7 \u003d new javax.swing.JPanel();\n-\t\tplayer2NameBox \u003d new javax.swing.JLabel();\n-\t\tbgImage \u003d new javax.swing.JLabel();\n+\t\tplayer1NameBox \u003d new JLabel();\n+\t\tcurrentWins \u003d new JLabel();\n+\t\tpNameDisplay \u003d new JLabel();\n+\t\tturnDisplay \u003d new JLabel();\n+\t\tcol1 \u003d new JPanel();\n+\t\tcol2 \u003d new JPanel();\n+\t\tcol3 \u003d new JPanel();\n+\t\tcol4 \u003d new JPanel();\n+\t\tcol5 \u003d new JPanel();\n+\t\tcol6 \u003d new JPanel();\n+\t\ttopGlass \u003d new JPanel();\n+\t\tcol7 \u003d new JPanel();\n+\t\tplayer2NameBox \u003d new JLabel();\n+\t\tbgImage \u003d new JLabel();\n \t\t\n \t\tsetBackground(new java.awt.Color(0, 0, 0));\n \t\tsetPreferredSize(new java.awt.Dimension(1280, 800));\n-\t\taddMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tformMouseClicked(evt);\n-\t\t\t}\n-\t\t});\n \t\tsetLayout(null);\n \t\t\n-\t\tplayer1NameBox.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18)); // NOI18N\n+\t\tplayer1NameBox.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18));\n \t\tplayer1NameBox.setForeground(new java.awt.Color(255, 255, 255));\n \t\tplayer1NameBox.setText(\"player 1\");\n \t\tadd(player1NameBox);\n \t\tplayer1NameBox.setBounds(1070, 40, 210, 40);\n \t\t\n-\t\tcurrentWins.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18)); // NOI18N\n+\t\tcurrentWins.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18));\n \t\tcurrentWins.setForeground(new java.awt.Color(255, 255, 255));\n \t\tcurrentWins.setText(\"CURRENT WINS\");\n \t\tadd(currentWins);\n \t\tcurrentWins.setBounds(1070, 0, 200, 40);\n \t\t\n-\t\tpNameDisplay.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18)); // NOI18N\n+\t\tpNameDisplay.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18));\n \t\tpNameDisplay.setForeground(new java.awt.Color(255, 255, 255));\n \t\tpNameDisplay.setText(\"jLabel2\");\n \t\tadd(pNameDisplay);\n \t\tpNameDisplay.setBounds(1070, 210, 200, 40);\n \t\t\n-\t\tturnDisplay.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18)); // NOI18N\n+\t\tturnDisplay.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18));\n \t\tturnDisplay.setForeground(new java.awt.Color(255, 255, 255));\n \t\tturnDisplay.setText(\"jLabel2\");\n \t\tadd(turnDisplay);\n \t\tturnDisplay.setBounds(1070, 150, 200, 40);\n \t\t\n \t\tcol1.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol1.setOpaque(false);\n-\t\tcol1.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol1MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol1MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol1MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol1.addMouseListener(new ColumnMouseAdapter(1));\n \t\tcol1.setLayout(null);\n \t\tadd(col1);\n \t\tcol1.setBounds(0, 0, 310, 740);\n \t\t\n \t\tcol2.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol2.setOpaque(false);\n-\t\tcol2.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol2MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol2MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol2MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol2.addMouseListener(new ColumnMouseAdapter(2));\n \t\tcol2.setLayout(null);\n \t\tadd(col2);\n \t\tcol2.setBounds(320, 0, 80, 740);\n \t\t\n \t\tcol3.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol3.setOpaque(false);\n-\t\tcol3.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol3MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol3MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol3MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol3.addMouseListener(new ColumnMouseAdapter(3));\n \t\tcol3.setLayout(null);\n \t\tadd(col3);\n \t\tcol3.setBounds(410, 10, 80, 740);\n \t\t\n \t\tcol4.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol4.setOpaque(false);\n-\t\tcol4.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol4MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol4MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol4MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol4.addMouseListener(new ColumnMouseAdapter(4));\n \t\tcol4.setLayout(null);\n \t\tadd(col4);\n \t\tcol4.setBounds(500, -10, 80, 740);\n \t\t\n \t\tcol5.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol5.setOpaque(false);\n-\t\tcol5.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol5MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol5MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol5MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol5.addMouseListener(new ColumnMouseAdapter(5));\n \t\tcol5.setLayout(null);\n \t\tadd(col5);\n \t\tcol5.setBounds(590, 0, 80, 740);\n \t\t\n \t\tcol6.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol6.setOpaque(false);\n-\t\tcol6.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol6MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol6MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol6MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol6.addMouseListener(new ColumnMouseAdapter(6));\n \t\tcol6.setLayout(null);\n \t\tadd(col6);\n \t\tcol6.setBounds(680, -30, 80, 740);\n \t\t\n \t\ttopGlass.setBackground(new java.awt.Color(102, 102, 102));\n \t\ttopGlass.setOpaque(false);\n-\t\ttopGlass.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\ttopGlassMouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\ttopGlassMouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\ttopGlassMouseEntered(evt);\n-\t\t\t}\n-\t\t});\n \t\ttopGlass.setLayout(null);\n \t\t\n \t\tcol7.setBackground(new java.awt.Color(102, 102, 102));\n \t\tcol7.setOpaque(false);\n-\t\tcol7.addMouseListener(new java.awt.event.MouseAdapter() {\n-\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol7MouseClicked(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseExited(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol7MouseExited(evt);\n-\t\t\t}\n-\t\t\t\n-\t\t\tpublic void mouseEntered(java.awt.event.MouseEvent evt)\n-\t\t\t{\n-\t\t\t\tcol7MouseEntered(evt);\n-\t\t\t}\n-\t\t});\n+\t\tcol7.addMouseListener(new ColumnMouseAdapter(7));\n \t\tcol7.setLayout(null);\n-\t\ttopGlass.add(col7);\n+\t\t// topGlass.add(col7);\n+\t\tadd(col7);\n \t\tcol7.setBounds(770, 0, 300, 740);\n \t\t\n-\t\tplayer2NameBox.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18)); // NOI18N\n+\t\tplayer2NameBox.setFont(new java.awt.Font(\"Lucida Grande\", 0, 18));\n \t\tplayer2NameBox.setForeground(new java.awt.Color(255, 255, 255));\n \t\tplayer2NameBox.setText(\"player 1\");\n \t\ttopGlass.add(player2NameBox);\n@@ -303,152 +256,12 @@ public void mouseEntered(java.awt.event.MouseEvent evt)\n \t\tadd(topGlass);\n \t\ttopGlass.setBounds(0, 0, 1280, 800);\n \t\t\n-\t\tbgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource(\n-\t\t\t\t\"/board.png\"))); // NOI18N\n+\t\tbgImage.setIcon(new ImageIcon(getClass().getResource(\"/board.png\")));\n \t\tbgImage.setText(\"jLabel1\");\n \t\tbgImage.setIgnoreRepaint(true);\n \t\tadd(bgImage);\n \t\tbgImage.setBounds(0, 150, 1070, 590);\n-\t}// \u003c/editor-fold\u003e//GEN-END:initComponents\n-\t\n-\tprivate void col1MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col1MouseEntered\n-\t\tcalcNewPos(0);\n-\t\tcalcWidth(0);\n-\t}// GEN-LAST:event_col1MouseEntered\n-\t\n-\tprivate void col1MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col1MouseExited\n-\t\n-\t}// GEN-LAST:event_col1MouseExited\n-\t\n-\tprivate void col2MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col2MouseExited\n-\t\n-\t}// GEN-LAST:event_col2MouseExited\n-\t\n-\tprivate void col2MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col2MouseEntered\n-\t\tcalcNewPos(1);\n-\t\tcalcWidth(1);\n-\t}// GEN-LAST:event_col2MouseEntered\n-\t\n-\tprivate void col4MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col4MouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_col4MouseExited\n-\t\n-\tprivate void col4MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col4MouseEntered\n-\t\tcalcNewPos(3);\n-\t\tcalcWidth(3);\n-\t}// GEN-LAST:event_col4MouseEntered\n-\t\n-\tprivate void col5MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col5MouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_col5MouseExited\n-\t\n-\tprivate void col5MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col5MouseEntered\n-\t\tcalcNewPos(4);\n-\t\tcalcWidth(4);\n-\t}// GEN-LAST:event_col5MouseEntered\n-\t\n-\tprivate void col6MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col6MouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_col6MouseExited\n-\t\n-\tprivate void col6MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col6MouseEntered\n-\t\tcalcNewPos(5);\n-\t\tcalcWidth(5);\n-\t}// GEN-LAST:event_col6MouseEntered\n-\t\n-\tprivate void col7MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col7MouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_col7MouseExited\n-\t\n-\tprivate void col7MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col7MouseEntered\n-\t\tcalcNewPos(6);\n-\t\tcalcWidth(6);\n-\t}// GEN-LAST:event_col7MouseEntered\n-\t\n-\tprivate void col3MouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col3MouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_col3MouseExited\n-\t\n-\tprivate void col3MouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col3MouseEntered\n-\t\tcalcNewPos(2);\n-\t\tcalcWidth(2);\n-\t}// GEN-LAST:event_col3MouseEntered\n-\t\n-\tprivate void formMouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_formMouseClicked\n-\t\n-\t}// GEN-LAST:event_formMouseClicked\n-\t\n-\tprivate void col1MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col1MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col1MouseClicked\n-\t\n-\tprivate void col2MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col2MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col2MouseClicked\n-\t\n-\tprivate void col3MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col3MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col3MouseClicked\n-\t\n-\tprivate void col4MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col4MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col4MouseClicked\n-\t\n-\tprivate void col6MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col6MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col6MouseClicked\n-\t\n-\tprivate void col7MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col7MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col7MouseClicked\n-\t\n-\tprivate void col5MouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_col5MouseClicked\n-\t\tif (game.getCurrentPlayer() !\u003d players[1] || !isComputerEnabled)\n-\t\t\tturn();\n-\t}// GEN-LAST:event_col5MouseClicked\n-\t\n-\tprivate void topGlassMouseClicked(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_topGlassMouseClicked\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_topGlassMouseClicked\n-\t\n-\tprivate void topGlassMouseExited(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_topGlassMouseExited\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_topGlassMouseExited\n-\t\n-\tprivate void topGlassMouseEntered(java.awt.event.MouseEvent evt)\n-\t{// GEN-FIRST:event_topGlassMouseEntered\n-\t\t// TODO add your handling code here:\n-\t}// GEN-LAST:event_topGlassMouseEntered\n+\t}\n \t\n \tvoid dropPiece()\n \t{\n@@ -466,9 +279,12 @@ public void actionPerformed(ActionEvent e)\n \t\t\t\tlong duration \u003d System.currentTimeMillis() - startTime;\n \t\t\t\tfloat progress \u003d (float) duration / (float) PLAY_TIME;\n \t\t\t\t\n-\t\t\t\tif (progress \u003e 1f)\n+\t\t\t\ty \u003d y + (int) Math.round((destination - startY) * progress);\n+\t\t\t\t\n+\t\t\t\tif ((progress \u003e 1f) || (y \u003e\u003d getTargetY()))\n \t\t\t\t{\n \t\t\t\t\tprogress \u003d 1f;\n+\t\t\t\t\ty \u003d getTargetY();\n \t\t\t\t\t((Timer) (e.getSource())).stop();\n \t\t\t\t\tfalling \u003d false;\n \t\t\t\t\tSystem.out.println(\"Piece fell.\");\n@@ -495,36 +311,8 @@ else if (game.getCurrentPlayer() \u003d\u003d players[1])\n \t\t\t\t\t}\n \t\t\t\t\tturnUp();\n \t\t\t\t}\n-\t\t\t\ty \u003d y + (int) Math.round((destination - startY) * progress);\n+\t\t\t\t\n \t\t\t\tpieces[turnNum].setLocation(x, y);\n-\t\t\t\tif (y \u003d\u003d getTargetY())\n-\t\t\t\t{\n-\t\t\t\t\t((Timer) (e.getSource())).stop();\n-\t\t\t\t\tfalling \u003d false;\n-\t\t\t\t\tSystem.out.println(\"Piece fell.\");\n-\t\t\t\t\tif (!isComputerEnabled)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tGUIPlayer player \u003d (GUIPlayer) game.getCurrentPlayer();\n-\t\t\t\t\t\tplayer.getBoard().play(getColumnNum(), player);\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\tif (game.getCurrentPlayer() \u003d\u003d players[0])\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tGUIPlayer player \u003d (GUIPlayer) game\n-\t\t\t\t\t\t\t\t\t.getCurrentPlayer();\n-\t\t\t\t\t\t\tplayer.getBoard().play(getColumnNum(), player);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\telse if (game.getCurrentPlayer() \u003d\u003d players[1])\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tGUIWrapperPlayer player \u003d (GUIWrapperPlayer) game\n-\t\t\t\t\t\t\t\t\t.getCurrentPlayer();\n-\t\t\t\t\t\t\tplayer.getBoard().play(getColumnNum(), player);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\t\n-\t\t\t\t\tturnUp();\n-\t\t\t\t}\n \t\t\t}\n \t\t});\n \t\ttimer.start();\n@@ -636,7 +424,6 @@ void calcNewPos(int columnEntered)\n \t\t\n \t\tnewDrawPos \u003d xPos;\n \t\tnewColumnNum \u003d columnEntered;\n-\t\t\n \t}\n \t\n \tvoid turnUp()\n@@ -646,7 +433,7 @@ void turnUp()\n \t\t\tif (falling \u003d\u003d false)\n \t\t\t{\n \t\t\t\t// move piece to top glass, for glow.\n-\t\t\t\tglow(pieces[turnNum]);\n+\t\t\t\ttopGlass.add(pieces[turnNum]);\n \t\t\t\t\n \t\t\t\tturnNum +\u003d 1;\n \t\t\t\t\n@@ -723,7 +510,6 @@ void initNewGame()\n \t{\n \t\tturnNum \u003d 0;\n \t\tcolumnNum \u003d 0;\n-\t\twhoPlayed \u003d 1;\n \t\tfalling \u003d false;\n \t\tpieces \u003d new GUIPiece[43];\n \t\tpieces[turnNum] \u003d new GUIPiece(turnNum);\n@@ -774,50 +560,11 @@ else if (game.getCurrentPlayer() \u003d\u003d players[1])\n \t\t\t\t\ttopGlass.remove(piece);\n \t\t\t\t}\n \t\t\t}\n+\t\t\t\n \t\t\tinitNewGame();\n \t\t\tgui.addGameOver();\n \t\t\tjustWon \u003d true;\n \t\t}\n \t}\n \t\n-\tvoid glow(GUIPiece currentPiece)\n-\t{\n-\t\tfinal GUIPiece cP \u003d currentPiece;\n-\t\ttopGlass.add(cP);\n-\t\tTimer timer \u003d new Timer(100, new ActionListener() {\n-\t\t\t@Override\n-\t\t\tpublic void actionPerformed(ActionEvent e)\n-\t\t\t{\n-\t\t\t\tlong tick \u003d GLOW_START_TIME - System.currentTimeMillis();\n-\t\t\t\ttick \u003d (-1 * tick / 100);\n-\t\t\t\t// System.out.println(tick%6);\n-\t\t\t\tcP.setIcon(cP.getGlow((int) tick % 6));\n-\t\t\t\ttopGlass.invalidate();\n-\t\t\t\ttopGlass.revalidate();\n-\t\t\t\ttopGlass.repaint();\n-\t\t\t}\n-\t\t\t\n-\t\t});\n-\t\ttimer.setRepeats(true);\n-\t\ttimer.setCoalesce(true);\n-\t\ttimer.start();\n-\t}\n-\t\n-\t// Variables declaration - do not modify//GEN-BEGIN:variables\n-\tprivate javax.swing.JLabel bgImage;\n-\tprivate javax.swing.JPanel col1;\n-\tprivate javax.swing.JPanel col2;\n-\tprivate javax.swing.JPanel col3;\n-\tprivate javax.swing.JPanel col4;\n-\tprivate javax.swing.JPanel col5;\n-\tprivate javax.swing.JPanel col6;\n-\tprivate javax.swing.JPanel col7;\n-\tprivate javax.swing.JLabel currentWins;\n-\tprivate javax.swing.JLabel pNameDisplay;\n-\tprivate javax.swing.JLabel player1NameBox;\n-\tprivate javax.swing.JLabel player2NameBox;\n-\tprivate javax.swing.JPanel topGlass;\n-\tprivate javax.swing.JLabel turnDisplay;\n-\t// End of variables declaration//GEN-END:variables\n-\t\n }"
        }
      ]
    }
  },
  {
    "name": "Fix a potential memory leak in schedulePeriodically",
    "url": "https://github.com/ReactiveX/RxJava/pull/2642",
    "description": "There is a potential memory leak in `schedulePeriodically` that may keep a reference to `action` after `unsubscribe`. \n\nBecause `mas.set` is called after `schedule`,  it may replace a new Subscription (created in `recursiveAction`) with the old one. Therefore, `unsubscribe` won\u0027t be able to unsubscribe the new Subscription and will keep the reference to `action` until the period time elapses.\n\nThis PR fixed it by calling `mas.set` before `schedule`.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/ReactiveX/RxJava/commit/d1034ed5f5a73e8e0bdc31dd25ba39e69078097d",
      "files": [
        {
          "file_name": "src/main/java/rx/Scheduler.java",
          "patch": "@@ -123,7 +123,10 @@ public void call() {\n                     }\n                 }\n             };\n-            mas.set(schedule(recursiveAction, initialDelay, unit));\n+            MultipleAssignmentSubscription s \u003d new MultipleAssignmentSubscription();\n+            // Should call `mas.set` before `schedule`, or the new Subscription may replace the old one.\n+            mas.set(s);\n+            s.set(schedule(recursiveAction, initialDelay, unit));\n             return mas;\n         }\n "
        }
      ]
    }
  },
  {
    "name": "Fix memory leak when percolating with nested documents",
    "url": "https://github.com/elastic/elasticsearch/pull/6578",
    "description": "The percolator uses non segment reader impl (MemoryIndexReader), this causes associated cache entries not automatically be cleared when the reader closes and that is why the percolator removes the cache entries manually (filter cache, field data) \n\nHowever when percolating a document with nested objects a multi reader is used that wraps a MemoryIndexReader for each nested object. Cache entries use the leaves as key in filter / field data cache, but the percolator clear using the top level multi reader. This causes cache entries never to be evicted and resulting in OOM.\n\nThe memory is fixed by the following changes:\n- Not allowing caching for non segment reader implementations.\n- The percolator never cache anything that associated with the in-memory index where document being percolated resides in.\n",
    "keywords": [
      "percolator",
      "cache",
      "entries",
      "reader",
      "nested"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/elastic/elasticsearch/commit/ec74a7e76f96cae3c7ebf335cdfec16d68a2a040",
      "files": [
        {
          "file_name": "src/main/java/org/elasticsearch/index/cache/IndexCache.java",
          "patch": "@@ -19,7 +19,6 @@\n \n package org.elasticsearch.index.cache;\n \n-import org.apache.lucene.index.IndexReader;\n import org.elasticsearch.ElasticsearchException;\n import org.elasticsearch.cluster.ClusterChangedEvent;\n import org.elasticsearch.cluster.ClusterService;\n@@ -84,11 +83,6 @@ public void close() throws ElasticsearchException {\n         }\n     }\n \n-    public void clear(IndexReader reader) {\n-        filterCache.clear(reader);\n-        docSetCache.clear(reader);\n-    }\n-\n     public void clear(String reason) {\n         filterCache.clear(reason);\n         queryParserCache.clear();"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java",
          "patch": "@@ -23,6 +23,7 @@\n import com.google.common.cache.RemovalListener;\n import com.google.common.cache.Weigher;\n import org.apache.lucene.index.AtomicReaderContext;\n+import org.apache.lucene.index.IndexReader;\n import org.apache.lucene.index.SegmentReader;\n import org.apache.lucene.search.DocIdSet;\n import org.apache.lucene.search.Filter;\n@@ -32,6 +33,7 @@\n import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.lucene.SegmentReaderUtils;\n import org.elasticsearch.common.lucene.docset.DocIdSets;\n import org.elasticsearch.common.lucene.search.CachedFilter;\n import org.elasticsearch.common.lucene.search.NoCacheFilter;\n@@ -51,7 +53,7 @@\n import java.io.IOException;\n import java.util.concurrent.ConcurrentMap;\n \n-public class WeightedFilterCache extends AbstractIndexComponent implements FilterCache, SegmentReader.CoreClosedListener {\n+public class WeightedFilterCache extends AbstractIndexComponent implements FilterCache, SegmentReader.CoreClosedListener, IndexReader.ReaderClosedListener {\n \n     final IndicesFilterCache indicesFilterCache;\n     IndexService indexService;\n@@ -80,6 +82,12 @@ public void close() throws ElasticsearchException {\n     }\n \n     @Override\n+    public void onClose(IndexReader reader) {\n+        clear(reader.getCoreCacheKey());\n+    }\n+\n+\n+    @Override\n     public void clear(String reason) {\n         logger.debug(\"full cache clear, reason [{}]\", reason);\n         for (Object readerKey : seenReaders.keySet()) {\n@@ -160,9 +168,7 @@ public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws\n                     Boolean previous \u003d cache.seenReaders.putIfAbsent(context.reader().getCoreCacheKey(), Boolean.TRUE);\n                     if (previous \u003d\u003d null) {\n                         // we add a core closed listener only, for non core IndexReaders we rely on clear being called (percolator for example)\n-                        if (context.reader() instanceof SegmentReader) {\n-                            ((SegmentReader) context.reader()).addCoreClosedListener(cache);\n-                        }\n+                        SegmentReaderUtils.registerCoreListener(context.reader(), cache);\n                     }\n                 }\n                 // we can\u0027t pass down acceptedDocs provided, because we are caching the result, and acceptedDocs\n@@ -247,4 +253,4 @@ public int hashCode() {\n             return readerKey().hashCode() + 31 * filterKey.hashCode();\n         }\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java",
          "patch": "@@ -69,6 +69,33 @@\n         void onUnload(FieldMapper.Names fieldNames, FieldDataType fieldDataType, boolean wasEvicted, long sizeInBytes);\n     }\n \n+    class None implements IndexFieldDataCache {\n+\n+        @Override\n+        public \u003cFD extends AtomicFieldData, IFD extends IndexFieldData\u003cFD\u003e\u003e FD load(AtomicReaderContext context, IFD indexFieldData) throws Exception {\n+            return indexFieldData.loadDirect(context);\n+        }\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public \u003cIFD extends IndexFieldData.WithOrdinals\u003c?\u003e\u003e IFD load(IndexReader indexReader, IFD indexFieldData) throws Exception {\n+            return (IFD) indexFieldData.localGlobalDirect(indexReader);\n+        }\n+\n+        @Override\n+        public void clear() {\n+        }\n+\n+        @Override\n+        public void clear(String fieldName) {\n+        }\n+\n+        @Override\n+        public void clear(Object coreCacheKey) {\n+\n+        }\n+    }\n+\n     /**\n      * The resident field data cache is a *per field* cache that keeps all the values in memory.\n      */"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java",
          "patch": "@@ -21,7 +21,6 @@\n \n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Maps;\n-import org.apache.lucene.index.IndexReader;\n import org.elasticsearch.ElasticsearchIllegalArgumentException;\n import org.elasticsearch.common.collect.MapBuilder;\n import org.elasticsearch.common.collect.Tuple;\n@@ -40,6 +39,7 @@\n import org.elasticsearch.index.service.IndexService;\n import org.elasticsearch.index.settings.IndexSettings;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;\n import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCacheListener;\n \n@@ -187,17 +187,6 @@ public void clearField(String fieldName) {\n         }\n     }\n \n-    public void clear(IndexReader reader) {\n-        synchronized (loadedFieldData) {\n-            for (IndexFieldData\u003c?\u003e indexFieldData : loadedFieldData.values()) {\n-                indexFieldData.clear(reader);\n-            }\n-            for (IndexFieldDataCache cache : fieldDataCaches.values()) {\n-                cache.clear(reader);\n-            }\n-        }\n-    }\n-\n     public void onMappingUpdate() {\n         // synchronize to make sure to not miss field data instances that are being loaded\n         synchronized (loadedFieldData) {\n@@ -206,6 +195,7 @@ public void onMappingUpdate() {\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public \u003cIFD extends IndexFieldData\u003c?\u003e\u003e IFD getForField(FieldMapper\u003c?\u003e mapper) {\n         final FieldMapper.Names fieldNames \u003d mapper.names();\n         final FieldDataType type \u003d mapper.fieldDataType();\n@@ -251,6 +241,8 @@ public void onMappingUpdate() {\n                             cache \u003d new IndexFieldDataCache.Soft(logger, indexService, fieldNames, type, indicesFieldDataCacheListener);\n                         } else if (\"node\".equals(cacheType)) {\n                             cache \u003d indicesFieldDataCache.buildIndexFieldDataCache(indexService, index, fieldNames, type);\n+                        } else if (\"none\".equals(cacheType)){\n+                            cache \u003d new IndexFieldDataCache.None();\n                         } else {\n                             throw new ElasticsearchIllegalArgumentException(\"cache type not supported [\" + cacheType + \"] for field [\" + fieldNames.fullName() + \"]\");\n                         }\n@@ -266,4 +258,41 @@ public void onMappingUpdate() {\n         return (IFD) fieldData;\n     }\n \n+    public \u003cIFD extends IndexFieldData\u003c?\u003e\u003e IFD getForFieldDirect(FieldMapper\u003c?\u003e mapper) {\n+        final FieldMapper.Names fieldNames \u003d mapper.names();\n+        final FieldDataType type \u003d mapper.fieldDataType();\n+        if (type \u003d\u003d null) {\n+            throw new ElasticsearchIllegalArgumentException(\"found no fielddata type for field [\" + fieldNames.fullName() + \"]\");\n+        }\n+        final boolean docValues \u003d mapper.hasDocValues();\n+\n+        IndexFieldData.Builder builder \u003d null;\n+        String format \u003d type.getFormat(indexSettings);\n+        if (format !\u003d null \u0026\u0026 FieldDataType.DOC_VALUES_FORMAT_VALUE.equals(format) \u0026\u0026 !docValues) {\n+            logger.warn(\"field [\" + fieldNames.fullName() + \"] has no doc values, will use default field data format\");\n+            format \u003d null;\n+        }\n+        if (format !\u003d null) {\n+            builder \u003d buildersByTypeAndFormat.get(Tuple.tuple(type.getType(), format));\n+            if (builder \u003d\u003d null) {\n+                logger.warn(\"failed to find format [\" + format + \"] for field [\" + fieldNames.fullName() + \"], will use default\");\n+            }\n+        }\n+        if (builder \u003d\u003d null \u0026\u0026 docValues) {\n+            builder \u003d docValuesBuildersByType.get(type.getType());\n+        }\n+        if (builder \u003d\u003d null) {\n+            builder \u003d buildersByType.get(type.getType());\n+        }\n+        if (builder \u003d\u003d null) {\n+            throw new ElasticsearchIllegalArgumentException(\"failed to find field data builder for field \" + fieldNames.fullName() + \", and type \" + type.getType());\n+        }\n+\n+        CircuitBreakerService circuitBreakerService \u003d new NoneCircuitBreakerService();\n+        GlobalOrdinalsBuilder globalOrdinalBuilder \u003d new InternalGlobalOrdinalsBuilder(index(), indexSettings);\n+        @SuppressWarnings(\"unchecked\")\n+        IFD ifd \u003d (IFD) builder.build(index, indexSettings, mapper, new IndexFieldDataCache.None(), circuitBreakerService, indexService.mapperService(), globalOrdinalBuilder);\n+        return ifd;\n+    }\n+\n }"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/FieldMapper.java",
          "patch": "@@ -32,7 +32,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.mapper.core.AbstractFieldMapper;\n import org.elasticsearch.index.query.QueryParseContext;\n import org.elasticsearch.index.similarity.SimilarityProvider;\n@@ -249,7 +248,7 @@ public static Loading parse(String loading, Loading defaultValue) {\n \n     Filter termsFilter(List values, @Nullable QueryParseContext context);\n \n-    Filter termsFilter(IndexFieldDataService fieldData, List values, @Nullable QueryParseContext context);\n+    Filter termsFilter(QueryParseContext parseContext, List values, @Nullable QueryParseContext context);\n \n     Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);\n "
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java",
          "patch": "@@ -50,7 +50,6 @@\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatService;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.internal.AllFieldMapper;\n import org.elasticsearch.index.mapper.object.ObjectMapper;\n@@ -491,7 +490,7 @@ public Filter termsFilter(List values, @Nullable QueryParseContext context) {\n      * A terms filter based on the field data cache\n      */\n     @Override\n-    public Filter termsFilter(IndexFieldDataService fieldDataService, List values, @Nullable QueryParseContext context) {\n+    public Filter termsFilter(QueryParseContext fieldDataService, List values, @Nullable QueryParseContext context) {\n         // create with initial size large enough to avoid rehashing\n         ObjectOpenHashSet\u003cBytesRef\u003e terms \u003d\n                 new ObjectOpenHashSet\u003c\u003e((int) (values.size() * (1 + ObjectOpenHashSet.DEFAULT_LOAD_FACTOR)));"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java",
          "patch": "@@ -41,7 +41,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -223,8 +222,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newByteRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newByteRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java",
          "patch": "@@ -46,7 +46,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.core.LongFieldMapper.CustomLongNumericField;\n@@ -369,11 +368,11 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return rangeFilter(fieldData, lowerTerm, upperTerm, includeLower, includeUpper, context, false);\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return rangeFilter(parseContext, lowerTerm, upperTerm, includeLower, includeUpper, context, false);\n     }\n \n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context, boolean explicitCaching) {\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context, boolean explicitCaching) {\n         boolean cache \u003d explicitCaching;\n         Long lowerVal \u003d null;\n         Long upperVal \u003d null;\n@@ -397,7 +396,7 @@ public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Obj\n         }\n \n         Filter filter \u003d  NumericRangeFieldDataFilter.newLongRange(\n-            (IndexNumericFieldData\u003c?\u003e) fieldData.getForField(this), lowerVal,upperVal, includeLower, includeUpper\n+            (IndexNumericFieldData\u003c?\u003e) parseContext.getForField(this), lowerVal,upperVal, includeLower, includeUpper\n         );\n         if (!cache) {\n             // We don\u0027t cache range filter if `now` date expression is used and also when a compound filter wraps"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java",
          "patch": "@@ -45,7 +45,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -218,8 +217,8 @@ public Filter rangeFilter(Double lowerTerm, Double upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newDoubleRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newDoubleRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseDoubleValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseDoubleValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java",
          "patch": "@@ -46,7 +46,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -223,8 +222,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newFloatRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newFloatRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java",
          "patch": "@@ -42,7 +42,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -218,8 +217,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newIntRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newIntRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java",
          "patch": "@@ -42,7 +42,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -208,8 +207,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newLongRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newLongRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseLongValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseLongValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java",
          "patch": "@@ -45,7 +45,6 @@\n import org.elasticsearch.index.analysis.NamedAnalyzer;\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.internal.AllFieldMapper;\n@@ -283,13 +282,13 @@ public Filter termFilter(Object value, @Nullable QueryParseContext context) {\n     /**\n      * A range filter based on the field data cache.\n      */\n-    public abstract Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);\n+    public abstract Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);\n \n     /**\n      * A terms filter based on the field data cache for numeric fields.\n      */\n     @Override\n-    public Filter termsFilter(IndexFieldDataService fieldDataService, List values, @Nullable QueryParseContext context) {\n+    public Filter termsFilter(QueryParseContext fieldDataService, List values, @Nullable QueryParseContext context) {\n         IndexNumericFieldData fieldData \u003d fieldDataService.getForField(this);\n         if (fieldData.getNumericType().isFloatingPoint()) {\n             // create with initial size large enough to avoid rehashing"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java",
          "patch": "@@ -43,7 +43,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.query.QueryParseContext;\n@@ -224,8 +223,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newShortRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newShortRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java",
          "patch": "@@ -39,7 +39,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.core.FloatFieldMapper;\n@@ -210,8 +209,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newFloatRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newFloatRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java",
          "patch": "@@ -43,7 +43,6 @@\n import org.elasticsearch.index.codec.docvaluesformat.DocValuesFormatProvider;\n import org.elasticsearch.index.codec.postingsformat.PostingsFormatProvider;\n import org.elasticsearch.index.fielddata.FieldDataType;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n import org.elasticsearch.index.fielddata.IndexNumericFieldData;\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.core.LongFieldMapper.CustomLongNumericField;\n@@ -250,8 +249,8 @@ public Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLow\n     }\n \n     @Override\n-    public Filter rangeFilter(IndexFieldDataService fieldData, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n-        return NumericRangeFieldDataFilter.newLongRange((IndexNumericFieldData) fieldData.getForField(this),\n+    public Filter rangeFilter(QueryParseContext parseContext, Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context) {\n+        return NumericRangeFieldDataFilter.newLongRange((IndexNumericFieldData) parseContext.getForField(this),\n                 lowerTerm \u003d\u003d null ? null : parseValue(lowerTerm),\n                 upperTerm \u003d\u003d null ? null : parseValue(upperTerm),\n                 includeLower, includeUpper);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java",
          "patch": "@@ -23,6 +23,7 @@\n import org.apache.lucene.queries.TermFilter;\n import org.apache.lucene.search.Query;\n import org.apache.lucene.util.BytesRef;\n+import org.apache.lucene.util.CloseableThreadLocal;\n import org.elasticsearch.ElasticsearchException;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.common.inject.Inject;\n@@ -81,6 +82,13 @@\n     private final PercolateTypeListener percolateTypeListener \u003d new PercolateTypeListener();\n     private final AtomicBoolean realTimePercolatorEnabled \u003d new AtomicBoolean(false);\n \n+    private CloseableThreadLocal\u003cQueryParseContext\u003e cache \u003d new CloseableThreadLocal\u003cQueryParseContext\u003e() {\n+        @Override\n+        protected QueryParseContext initialValue() {\n+            return new QueryParseContext(shardId.index(), queryParserService, true);\n+        }\n+    };\n+\n     @Inject\n     public PercolatorQueriesRegistry(ShardId shardId, @IndexSettings Settings indexSettings, IndexQueryParserService queryParserService,\n                                      ShardIndexingService indexingService, IndicesLifecycle indicesLifecycle, MapperService mapperService,\n@@ -187,23 +195,20 @@ Query parsePercolatorDocument(String id, BytesReference source) {\n     }\n \n     private Query parseQuery(String type, BytesReference querySource, XContentParser parser) {\n-        if (type \u003d\u003d null) {\n-            if (parser !\u003d null) {\n-                return queryParserService.parse(parser).query();\n-            } else {\n-                return queryParserService.parse(querySource).query();\n-            }\n+        String[] previousTypes \u003d null;\n+        if (type !\u003d null) {\n+            QueryParseContext.setTypesWithPrevious(new String[]{type});\n         }\n-\n-        String[] previousTypes \u003d QueryParseContext.setTypesWithPrevious(new String[]{type});\n         try {\n             if (parser !\u003d null) {\n-                return queryParserService.parse(parser).query();\n+                return queryParserService.parse(cache.get(), parser).query();\n             } else {\n-                return queryParserService.parse(querySource).query();\n+                return queryParserService.parse(cache.get(), querySource).query();\n             }\n         } finally {\n-            QueryParseContext.setTypes(previousTypes);\n+            if (type !\u003d null) {\n+                QueryParseContext.setTypes(previousTypes);\n+            }\n         }\n     }\n "
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java",
          "patch": "@@ -175,7 +175,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n         if (\"indexed\".equals(type)) {\n             filter \u003d IndexedGeoBoundingBoxFilter.create(topLeft, bottomRight, geoMapper);\n         } else if (\"memory\".equals(type)) {\n-            IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.fieldData().getForField(mapper);\n+            IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.getForField(mapper);\n             filter \u003d new InMemoryGeoBoundingBoxFilter(topLeft, bottomRight, indexFieldData);\n         } else {\n             throw new QueryParsingException(parseContext.index(), \"geo bounding box type [\" + type + \"] not supported, either \u0027indexed\u0027 or \u0027memory\u0027 are allowed\");"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/GeoDistanceFilterParser.java",
          "patch": "@@ -163,7 +163,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n         GeoPointFieldMapper geoMapper \u003d ((GeoPointFieldMapper) mapper);\n \n \n-        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.fieldData().getForField(mapper);\n+        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.getForField(mapper);\n         Filter filter \u003d new GeoDistanceFilter(point.lat(), point.lon(), distance, geoDistance, indexFieldData, geoMapper, optimizeBbox);\n         if (cache) {\n             filter \u003d parseContext.cacheFilter(filter, cacheKey);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/GeoDistanceRangeFilterParser.java",
          "patch": "@@ -205,7 +205,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n         }\n         GeoPointFieldMapper geoMapper \u003d ((GeoPointFieldMapper) mapper);\n \n-        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.fieldData().getForField(mapper);\n+        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.getForField(mapper);\n         Filter filter \u003d new GeoDistanceRangeFilter(point, from, to, includeLower, includeUpper, geoDistance, geoMapper, indexFieldData, optimizeBbox);\n         if (cache) {\n             filter \u003d parseContext.cacheFilter(filter, cacheKey);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java",
          "patch": "@@ -150,7 +150,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n             throw new QueryParsingException(parseContext.index(), \"field [\" + fieldName + \"] is not a geo_point field\");\n         }\n \n-        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.fieldData().getForField(mapper);\n+        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.getForField(mapper);\n         Filter filter \u003d new GeoPolygonFilter(indexFieldData, shell.toArray(new GeoPoint[shell.size()]));\n         if (cache) {\n             filter \u003d parseContext.cacheFilter(filter, cacheKey);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java",
          "patch": "@@ -156,7 +156,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n         }\n \n         Filter parentFilter \u003d parseContext.cacheFilter(parentDocMapper.typeFilter(), null);\n-        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.fieldData().getForField(parentFieldMapper);\n+        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.getForField(parentFieldMapper);\n \n         Query childrenQuery;\n         if (minChildren \u003e 1 || maxChildren \u003e 0) {"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java",
          "patch": "@@ -159,7 +159,7 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars\n \n         Query query;\n         Filter parentFilter \u003d parseContext.cacheFilter(parentDocMapper.typeFilter(), null);\n-        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.fieldData().getForField(parentFieldMapper);\n+        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.getForField(parentFieldMapper);\n         if (minChildren \u003e 1 || maxChildren \u003e 0 || scoreType !\u003d ScoreType.NONE) {\n             query \u003d new ChildrenQuery(parentChildIndexFieldData, parentType, childType, parentFilter, innerQuery, scoreType, minChildren,\n                     maxChildren, shortCircuitParentDocSet, nonNestedDocsFilter);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java",
          "patch": "@@ -136,7 +136,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n             ParentFieldMapper parentFieldMapper \u003d documentMapper.parentFieldMapper();\n             if (parentFieldMapper.active()) {\n                 DocumentMapper parentTypeDocumentMapper \u003d parseContext.mapperService().documentMapper(parentFieldMapper.type());\n-                parentChildIndexFieldData \u003d parseContext.fieldData().getForField(parentFieldMapper);\n+                parentChildIndexFieldData \u003d parseContext.getForField(parentFieldMapper);\n                 if (parentTypeDocumentMapper \u003d\u003d null) {\n                     // Only add this, if this parentFieldMapper (also a parent)  isn\u0027t a child of another parent.\n                     parentTypes.add(parentFieldMapper.type());"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java",
          "patch": "@@ -138,7 +138,7 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars\n         for (DocumentMapper documentMapper : parseContext.mapperService()) {\n             ParentFieldMapper parentFieldMapper \u003d documentMapper.parentFieldMapper();\n             if (parentFieldMapper.active()) {\n-                parentChildIndexFieldData \u003d parseContext.fieldData().getForField(parentFieldMapper);\n+                parentChildIndexFieldData \u003d parseContext.getForField(parentFieldMapper);\n                 DocumentMapper parentTypeDocumentMapper \u003d parseContext.mapperService().documentMapper(parentFieldMapper.type());\n                 if (parentTypeDocumentMapper \u003d\u003d null) {\n                     // Only add this, if this parentFieldMapper (also a parent)  isn\u0027t a child of another parent."
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java",
          "patch": "@@ -224,10 +224,14 @@ public ParsedQuery parse(byte[] source, int offset, int length) throws Elasticse\n     }\n \n     public ParsedQuery parse(BytesReference source) throws ElasticsearchException {\n+        return parse(cache.get(), source);\n+    }\n+\n+    public ParsedQuery parse(QueryParseContext context, BytesReference source) throws ElasticsearchException {\n         XContentParser parser \u003d null;\n         try {\n             parser \u003d XContentFactory.xContent(source).createParser(source);\n-            return parse(cache.get(), parser);\n+            return innerParse(context, parser);\n         } catch (QueryParsingException e) {\n             throw e;\n         } catch (Exception e) {\n@@ -243,7 +247,7 @@ public ParsedQuery parse(String source) throws QueryParsingException {\n         XContentParser parser \u003d null;\n         try {\n             parser \u003d XContentFactory.xContent(source).createParser(source);\n-            return parse(cache.get(), parser);\n+            return innerParse(cache.get(), parser);\n         } catch (QueryParsingException e) {\n             throw e;\n         } catch (Exception e) {\n@@ -256,8 +260,12 @@ public ParsedQuery parse(String source) throws QueryParsingException {\n     }\n \n     public ParsedQuery parse(XContentParser parser) {\n+        return parse(cache.get(), parser);\n+    }\n+\n+    public ParsedQuery parse(QueryParseContext context, XContentParser parser) {\n         try {\n-            return parse(cache.get(), parser);\n+            return innerParse(context, parser);\n         } catch (IOException e) {\n             throw new QueryParsingException(index, \"Failed to parse\", e);\n         }\n@@ -325,7 +333,7 @@ public ParsedQuery parseQuery(BytesReference source) {\n         throw new QueryParsingException(index(), \"Required query is missing\");\n     }\n \n-    private ParsedQuery parse(QueryParseContext parseContext, XContentParser parser) throws IOException, QueryParsingException {\n+    private ParsedQuery innerParse(QueryParseContext parseContext, XContentParser parser) throws IOException, QueryParsingException {\n         parseContext.reset(parser);\n         try {\n             if (strict) {"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/NumericRangeFilterParser.java",
          "patch": "@@ -120,7 +120,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n         if (!(mapper instanceof NumberFieldMapper)) {\n             throw new QueryParsingException(parseContext.index(), \"Field [\" + fieldName + \"] is not a numeric type\");\n         }\n-        Filter filter \u003d ((NumberFieldMapper) mapper).rangeFilter(parseContext.fieldData(), from, to, includeLower, includeUpper, parseContext);\n+        Filter filter \u003d ((NumberFieldMapper) mapper).rangeFilter(parseContext, from, to, includeLower, includeUpper, parseContext);\n \n         if (cache) {\n             filter \u003d parseContext.cacheFilter(filter, cacheKey);"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/QueryParseContext.java",
          "patch": "@@ -34,10 +34,10 @@\n import org.elasticsearch.common.xcontent.XContentParser;\n import org.elasticsearch.index.Index;\n import org.elasticsearch.index.analysis.AnalysisService;\n-import org.elasticsearch.index.cache.IndexCache;\n import org.elasticsearch.index.cache.filter.support.CacheKeyFilter;\n+import org.elasticsearch.index.cache.query.parser.QueryParserCache;\n import org.elasticsearch.index.engine.IndexEngine;\n-import org.elasticsearch.index.fielddata.IndexFieldDataService;\n+import org.elasticsearch.index.fielddata.IndexFieldData;\n import org.elasticsearch.index.mapper.FieldMapper;\n import org.elasticsearch.index.mapper.FieldMappers;\n import org.elasticsearch.index.mapper.MapperService;\n@@ -88,10 +88,17 @@ public static void removeTypes() {\n \n     private EnumSet\u003cParseField.Flag\u003e parseFlags \u003d ParseField.EMPTY_FLAGS;\n \n+    private final boolean disableCaching;\n \n     public QueryParseContext(Index index, IndexQueryParserService indexQueryParser) {\n+        this(index, indexQueryParser, false);\n+    }\n+\n+    public QueryParseContext(Index index, IndexQueryParserService indexQueryParser, boolean disableCaching) {\n         this.index \u003d index;\n         this.indexQueryParser \u003d indexQueryParser;\n+        this.propagateNoCache \u003d disableCaching;\n+        this.disableCaching \u003d disableCaching;\n     }\n \n     public  void parseFlags(EnumSet\u003cParseField.Flag\u003e parseFlags) {\n@@ -150,12 +157,8 @@ public Similarity searchSimilarity() {\n         return indexQueryParser.similarityService !\u003d null ? indexQueryParser.similarityService.similarity() : null;\n     }\n \n-    public IndexCache indexCache() {\n-        return indexQueryParser.indexCache;\n-    }\n-\n-    public IndexFieldDataService fieldData() {\n-        return indexQueryParser.fieldDataService;\n+    public QueryParserCache queryParserCache() {\n+        return indexQueryParser.indexCache.queryParserCache();\n     }\n \n     public String defaultField() {\n@@ -175,7 +178,7 @@ public Filter cacheFilter(Filter filter, @Nullable CacheKeyFilter.Key cacheKey)\n         if (filter \u003d\u003d null) {\n             return null;\n         }\n-        if (this.propagateNoCache || filter instanceof NoCacheFilter) {\n+        if (this.disableCaching || this.propagateNoCache || filter instanceof NoCacheFilter) {\n             return filter;\n         }\n         if (cacheKey !\u003d null) {\n@@ -184,6 +187,14 @@ public Filter cacheFilter(Filter filter, @Nullable CacheKeyFilter.Key cacheKey)\n         return indexQueryParser.indexCache.filter().cache(filter);\n     }\n \n+    public \u003cIFD extends IndexFieldData\u003c?\u003e\u003e IFD getForField(FieldMapper\u003c?\u003e mapper) {\n+        if (disableCaching) {\n+            return indexQueryParser.fieldDataService.getForFieldDirect(mapper);\n+        } else {\n+            return indexQueryParser.fieldDataService.getForField(mapper);\n+        }\n+    }\n+\n     public void addNamedFilter(String name, Filter filter) {\n         namedFilters.put(name, filter);\n     }\n@@ -342,7 +353,7 @@ public SearchLookup lookup() {\n             return current.lookup();\n         }\n         if (lookup \u003d\u003d null) {\n-            lookup \u003d new SearchLookup(mapperService(), fieldData(), null);\n+            lookup \u003d new SearchLookup(mapperService(), indexQueryParser.fieldDataService, null);\n         }\n         return lookup;\n     }"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/QueryStringQueryParser.java",
          "patch": "@@ -210,7 +210,7 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars\n         }\n \n         qpSettings.queryTypes(parseContext.queryTypes());\n-        Query query \u003d parseContext.indexCache().queryParserCache().get(qpSettings);\n+        Query query \u003d parseContext.queryParserCache().get(qpSettings);\n         if (query !\u003d null) {\n             if (queryName !\u003d null) {\n                 parseContext.addNamedQuery(queryName, query);\n@@ -232,7 +232,7 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars\n             if (query instanceof BooleanQuery) {\n                 Queries.applyMinimumShouldMatch((BooleanQuery) query, qpSettings.minimumShouldMatch());\n             }\n-            parseContext.indexCache().queryParserCache().put(qpSettings, query);\n+            parseContext.queryParserCache().put(qpSettings, query);\n             if (queryName !\u003d null) {\n                 parseContext.addNamedQuery(queryName, query);\n             }"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/RangeFilterParser.java",
          "patch": "@@ -143,9 +143,9 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n                         throw new QueryParsingException(parseContext.index(), \"[range] filter field [\" + fieldName + \"] is not a numeric type\");\n                     }\n                     if (mapper instanceof DateFieldMapper) {\n-                        filter \u003d ((DateFieldMapper) mapper).rangeFilter(parseContext.fieldData(), from, to, includeLower, includeUpper, parseContext, explicitlyCached);\n+                        filter \u003d ((DateFieldMapper) mapper).rangeFilter(parseContext, from, to, includeLower, includeUpper, parseContext, explicitlyCached);\n                     } else {\n-                        filter \u003d ((NumberFieldMapper) mapper).rangeFilter(parseContext.fieldData(), from, to, includeLower, includeUpper, parseContext);\n+                        filter \u003d ((NumberFieldMapper) mapper).rangeFilter(parseContext, from, to, includeLower, includeUpper, parseContext);\n                     }\n                 } else {\n                     throw new QueryParsingException(parseContext.index(), \"[range] filter doesn\u0027t support [\" + execution + \"] execution\");"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/TermsFilterParser.java",
          "patch": "@@ -214,7 +214,7 @@ public Filter parse(QueryParseContext parseContext) throws IOException, QueryPar\n                     return Queries.MATCH_NO_FILTER;\n                 }\n \n-                filter \u003d fieldMapper.termsFilter(parseContext.fieldData(), terms, parseContext);\n+                filter \u003d fieldMapper.termsFilter(parseContext, terms, parseContext);\n                 if (cache !\u003d null \u0026\u0026 cache) {\n                     filter \u003d parseContext.cacheFilter(filter, cacheKey);\n                 }"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java",
          "patch": "@@ -136,7 +136,7 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars\n         innerQuery.setBoost(boost);\n         // wrap the query with type query\n         innerQuery \u003d new XFilteredQuery(innerQuery, parseContext.cacheFilter(childDocMapper.typeFilter(), null));\n-        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.fieldData().getForField(parentFieldMapper);\n+        ParentChildIndexFieldData parentChildIndexFieldData \u003d parseContext.getForField(parentFieldMapper);\n         TopChildrenQuery query \u003d new TopChildrenQuery(parentChildIndexFieldData, innerQuery, childType, parentType, scoreType, factor, incrementalFactor, parseContext.cacheRecycler(), nonNestedDocsFilter);\n         if (queryName !\u003d null) {\n             parseContext.addNamedFilter(queryName, new CustomQueryWrappingFilter(query));"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java",
          "patch": "@@ -19,7 +19,6 @@\n \n package org.elasticsearch.index.query.functionscore;\n \n-import com.sun.swing.internal.plaf.metal.resources.metal;\n import org.apache.lucene.index.AtomicReaderContext;\n import org.apache.lucene.search.ComplexExplanation;\n import org.apache.lucene.search.Explanation;\n@@ -50,7 +49,6 @@\n import org.elasticsearch.index.query.functionscore.gauss.GaussDecayFunctionBuilder;\n import org.elasticsearch.index.query.functionscore.gauss.GaussDecayFunctionParser;\n import org.elasticsearch.search.MultiValueMode;\n-import org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation;\n import org.elasticsearch.search.internal.SearchContext;\n \n import java.io.IOException;\n@@ -205,7 +203,7 @@ private AbstractDistanceScoreFunction parseNumberVariable(String fieldName, XCon\n             throw new ElasticsearchParseException(\"Both \" + DecayFunctionBuilder.SCALE + \"and \" + DecayFunctionBuilder.ORIGIN\n                     + \" must be set for numeric fields.\");\n         }\n-        IndexNumericFieldData\u003c?\u003e numericFieldData \u003d parseContext.fieldData().getForField(mapper);\n+        IndexNumericFieldData\u003c?\u003e numericFieldData \u003d parseContext.getForField(mapper);\n         return new NumericFieldDataScoreFunction(origin, scale, decay, offset, getDecayFunction(), numericFieldData, mode);\n     }\n \n@@ -237,7 +235,7 @@ private AbstractDistanceScoreFunction parseGeoVariable(String fieldName, XConten\n         }\n         double scale \u003d DistanceUnit.DEFAULT.parse(scaleString, DistanceUnit.DEFAULT);\n         double offset \u003d DistanceUnit.DEFAULT.parse(offsetString, DistanceUnit.DEFAULT);\n-        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.fieldData().getForField(mapper);\n+        IndexGeoPointFieldData\u003c?\u003e indexFieldData \u003d parseContext.getForField(mapper);\n         return new GeoFieldDataScoreFunction(origin, scale, decay, offset, getDecayFunction(), indexFieldData, mode);\n \n     }\n@@ -277,7 +275,7 @@ private AbstractDistanceScoreFunction parseDateVariable(String fieldName, XConte\n         double scale \u003d val.getMillis();\n         val \u003d TimeValue.parseTimeValue(offsetString, TimeValue.timeValueHours(24));\n         double offset \u003d val.getMillis();\n-        IndexNumericFieldData\u003c?\u003e numericFieldData \u003d parseContext.fieldData().getForField(dateFieldMapper);\n+        IndexNumericFieldData\u003c?\u003e numericFieldData \u003d parseContext.getForField(dateFieldMapper);\n         return new NumericFieldDataScoreFunction(origin, scale, decay, offset, getDecayFunction(), numericFieldData, mode);\n     }\n "
        },
        {
          "file_name": "src/main/java/org/elasticsearch/indices/fielddata/breaker/NoneCircuitBreakerService.java",
          "patch": "@@ -27,13 +27,13 @@\n /**\n  * Class that returns a breaker that never breaks\n  */\n-public class DummyCircuitBreakerService implements CircuitBreakerService {\n+public class NoneCircuitBreakerService implements CircuitBreakerService {\n \n-    private final ESLogger logger \u003d Loggers.getLogger(DummyCircuitBreakerService.class);\n+    private final ESLogger logger \u003d Loggers.getLogger(NoneCircuitBreakerService.class);\n \n     private final MemoryCircuitBreaker breaker \u003d new MemoryCircuitBreaker(new ByteSizeValue(Long.MAX_VALUE), 0.0, logger);\n \n-    public DummyCircuitBreakerService() {}\n+    public NoneCircuitBreakerService() {}\n \n     @Override\n     public MemoryCircuitBreaker getBreaker() {"
        },
        {
          "file_name": "src/main/java/org/elasticsearch/percolator/PercolateContext.java",
          "patch": "@@ -28,7 +28,6 @@\n import org.elasticsearch.action.search.SearchType;\n import org.elasticsearch.cache.recycler.CacheRecycler;\n import org.elasticsearch.cache.recycler.PageCacheRecycler;\n-import org.elasticsearch.common.lease.Releasable;\n import org.elasticsearch.common.lease.Releasables;\n import org.elasticsearch.common.text.StringText;\n import org.elasticsearch.common.util.BigArrays;\n@@ -210,13 +209,7 @@ public SearchLookup lookup() {\n \n     @Override\n     protected void doClose() {\n-        try (Releasable releasable \u003d Releasables.wrap(engineSearcher, docSearcher)) {\n-            if (docSearcher !\u003d null) {\n-                IndexReader indexReader \u003d docSearcher.reader();\n-                fieldDataService.clear(indexReader);\n-                indexService.cache().clear(indexReader);\n-            }\n-        }\n+        Releasables.close(engineSearcher, docSearcher);\n     }\n \n     @Override"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/benchmark/fielddata/LongFieldDataBenchmark.java",
          "patch": "@@ -37,7 +37,7 @@\n import org.elasticsearch.index.mapper.ContentPath;\n import org.elasticsearch.index.mapper.Mapper.BuilderContext;\n import org.elasticsearch.index.mapper.core.LongFieldMapper;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n \n import java.util.Random;\n \n@@ -145,7 +145,7 @@ public static void main(String[] args) throws Exception {\n             indexWriter.close();\n \n             final DirectoryReader dr \u003d DirectoryReader.open(dir);\n-            final IndexFieldDataService fds \u003d new IndexFieldDataService(new Index(\"dummy\"), new DummyCircuitBreakerService());\n+            final IndexFieldDataService fds \u003d new IndexFieldDataService(new Index(\"dummy\"), new NoneCircuitBreakerService());\n             final LongFieldMapper mapper \u003d new LongFieldMapper.Builder(fieldName).build(new BuilderContext(null, new ContentPath(1)));\n             final IndexNumericFieldData\u003cAtomicNumericFieldData\u003e fd \u003d fds.getForField(mapper);\n             final long start \u003d System.nanoTime();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java",
          "patch": "@@ -45,8 +45,10 @@\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n import org.elasticsearch.indices.InvalidAliasNameException;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n+import org.elasticsearch.indices.query.IndicesQueriesModule;\n+import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -87,7 +89,7 @@ public static IndexQueryParserService newIndexQueryParserService(Settings settin\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/cache/filter/FilterCacheTests.java",
          "patch": "@@ -1,95 +0,0 @@\n-/*\n- * Licensed to Elasticsearch under one or more contributor\n- * license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright\n- * ownership. Elasticsearch licenses this file to you under\n- * the Apache License, Version 2.0 (the \"License\"); you may\n- * not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-package org.elasticsearch.index.cache.filter;\n-\n-import org.apache.lucene.document.Document;\n-import org.apache.lucene.document.Field;\n-import org.apache.lucene.document.TextField;\n-import org.apache.lucene.index.*;\n-import org.apache.lucene.queries.TermFilter;\n-import org.apache.lucene.search.ConstantScoreQuery;\n-import org.apache.lucene.search.Filter;\n-import org.apache.lucene.search.IndexSearcher;\n-import org.apache.lucene.search.MatchAllDocsQuery;\n-import org.apache.lucene.store.Directory;\n-import org.apache.lucene.store.RAMDirectory;\n-import org.elasticsearch.common.lucene.Lucene;\n-import org.elasticsearch.common.lucene.search.XConstantScoreQuery;\n-import org.elasticsearch.common.lucene.search.XFilteredQuery;\n-import org.elasticsearch.index.Index;\n-import org.elasticsearch.index.cache.filter.none.NoneFilterCache;\n-import org.elasticsearch.test.ElasticsearchTestCase;\n-import org.junit.Test;\n-\n-import java.io.IOException;\n-\n-import static org.elasticsearch.common.settings.ImmutableSettings.Builder.EMPTY_SETTINGS;\n-import static org.hamcrest.Matchers.equalTo;\n-\n-/**\n- *\n- */\n-public class FilterCacheTests extends ElasticsearchTestCase {\n-\n-\n-    @Test\n-    public void testNoCache() throws Exception {\n-        verifyCache(new NoneFilterCache(new Index(\"test\"), EMPTY_SETTINGS));\n-    }\n-\n-    private void verifyCache(FilterCache filterCache) throws Exception {\n-        Directory dir \u003d new RAMDirectory();\n-        IndexWriter indexWriter \u003d new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));\n-        DirectoryReader reader \u003d DirectoryReader.open(indexWriter, true);\n-\n-        for (int i \u003d 0; i \u003c 100; i++) {\n-            Document document \u003d new Document();\n-            document.add(new TextField(\"id\", Integer.toString(i), Field.Store.YES));\n-            indexWriter.addDocument(document);\n-        }\n-\n-        reader \u003d refreshReader(reader);\n-        IndexSearcher searcher \u003d new IndexSearcher(reader);\n-        assertThat(Lucene.count(searcher, new ConstantScoreQuery(filterCache.cache(new TermFilter(new Term(\"id\", \"1\"))))), equalTo(1l));\n-        assertThat(Lucene.count(searcher, new XFilteredQuery(new MatchAllDocsQuery(), filterCache.cache(new TermFilter(new Term(\"id\", \"1\"))))), equalTo(1l));\n-\n-        indexWriter.deleteDocuments(new Term(\"id\", \"1\"));\n-        reader \u003d refreshReader(reader);\n-        searcher \u003d new IndexSearcher(reader);\n-        TermFilter filter \u003d new TermFilter(new Term(\"id\", \"1\"));\n-        Filter cachedFilter \u003d filterCache.cache(filter);\n-        long constantScoreCount \u003d filter \u003d\u003d cachedFilter ? 0 : 1;\n-        // sadly, when caching based on cacheKey with NRT, this fails, that\u0027s why we have DeletionAware one\n-        assertThat(Lucene.count(searcher, new ConstantScoreQuery(cachedFilter)), equalTo(constantScoreCount));\n-        assertThat(Lucene.count(searcher, new XConstantScoreQuery(cachedFilter)), equalTo(0l));\n-        assertThat(Lucene.count(searcher, new XFilteredQuery(new MatchAllDocsQuery(), cachedFilter)), equalTo(0l));\n-\n-        indexWriter.close();\n-    }\n-\n-    private DirectoryReader refreshReader(DirectoryReader reader) throws IOException {\n-        IndexReader oldReader \u003d reader;\n-        reader \u003d DirectoryReader.openIfChanged(reader);\n-        if (reader !\u003d oldReader) {\n-            oldReader.close();\n-        }\n-        return reader;\n-    }\n-}"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/codec/CodecTests.java",
          "patch": "@@ -54,7 +54,7 @@\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.test.ElasticsearchLuceneTestCase;\n import org.junit.Before;\n import org.junit.Test;\n@@ -421,7 +421,7 @@ private static CodecService createCodecService(Settings settings) {\n                 .add(new AbstractModule() {\n                     @Override\n                     protected void configure() {\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 })\n                 .createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java",
          "patch": "@@ -28,7 +28,7 @@\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.Mapper.BuilderContext;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;\n import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCacheListener;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -86,12 +86,12 @@ protected boolean hasDocValues() {\n \n     @Before\n     public void setup() throws Exception {\n-        CircuitBreakerService circuitBreakerService \u003d new DummyCircuitBreakerService();\n+        CircuitBreakerService circuitBreakerService \u003d new NoneCircuitBreakerService();\n         indicesFieldDataCache \u003d new IndicesFieldDataCache(\n                 ImmutableSettings.Builder.EMPTY_SETTINGS,\n                 new IndicesFieldDataCacheListener(circuitBreakerService)\n         );\n-        ifdService \u003d new IndexFieldDataService(new Index(\"test\"), circuitBreakerService, indicesFieldDataCache);\n+        ifdService \u003d new IndexFieldDataService(new Index(\"test\"), ImmutableSettings.builder().put(\"index.fielddata.cache\", \"none\").build(), indicesFieldDataCache, circuitBreakerService, new IndicesFieldDataCacheListener(circuitBreakerService));\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(ifdService.index(), ImmutableSettings.Builder.EMPTY_SETTINGS);\n         ifdService.setIndexService(new StubIndexService(mapperService));\n         // LogByteSizeMP to preserve doc ID order"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java",
          "patch": "@@ -535,7 +535,7 @@ public void testTermsEnum() throws Exception {\n     public void testGlobalOrdinalsGetRemovedOnceIndexReaderCloses() throws Exception {\n         fillExtendedMvSet();\n         refreshReader();\n-        FieldDataType fieldDataType \u003d new FieldDataType(\"string\", ImmutableSettings.builder().put(\"global_values\", \"fixed\"));\n+        FieldDataType fieldDataType \u003d new FieldDataType(\"string\", ImmutableSettings.builder().put(\"global_values\", \"fixed\").put(\"cache\", \"node\"));\n         IndexFieldData.WithOrdinals ifd \u003d getForField(fieldDataType, \"value\");\n         IndexFieldData.WithOrdinals globalOrdinals \u003d ifd.loadGlobal(topLevelReader);\n         assertThat(ifd.loadGlobal(topLevelReader), sameInstance(globalOrdinals));"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java",
          "patch": "@@ -32,7 +32,7 @@\n import org.elasticsearch.index.mapper.*;\n import org.elasticsearch.index.mapper.Mapper.BuilderContext;\n import org.elasticsearch.index.mapper.core.*;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.test.ElasticsearchTestCase;\n import org.elasticsearch.test.index.service.StubIndexService;\n \n@@ -49,7 +49,7 @@\n \n     @SuppressWarnings(\"unchecked\")\n     public void testGetForFieldDefaults() {\n-        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new DummyCircuitBreakerService());\n+        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new NoneCircuitBreakerService());\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(ifdService.index(), ImmutableSettings.Builder.EMPTY_SETTINGS);\n         ifdService.setIndexService(new StubIndexService(mapperService));\n         for (boolean docValues : Arrays.asList(true, false)) {\n@@ -100,7 +100,7 @@ public void testGetForFieldDefaults() {\n \n     @SuppressWarnings(\"unchecked\")\n     public void testByPassDocValues() {\n-        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new DummyCircuitBreakerService());\n+        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new NoneCircuitBreakerService());\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(ifdService.index(), ImmutableSettings.Builder.EMPTY_SETTINGS);\n         ifdService.setIndexService(new StubIndexService(mapperService));\n         final BuilderContext ctx \u003d new BuilderContext(null, new ContentPath(1));\n@@ -133,7 +133,7 @@ public void testByPassDocValues() {\n     }\n \n     public void testChangeFieldDataFormat() throws Exception {\n-        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new DummyCircuitBreakerService());\n+        final IndexFieldDataService ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new NoneCircuitBreakerService());\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(ifdService.index(), ImmutableSettings.Builder.EMPTY_SETTINGS);\n         ifdService.setIndexService(new StubIndexService(mapperService));\n         final BuilderContext ctx \u003d new BuilderContext(null, new ContentPath(1));"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/mapper/MapperTestUtils.java",
          "patch": "@@ -37,7 +37,7 @@\n import org.elasticsearch.index.similarity.SimilarityLookupService;\n import org.elasticsearch.indices.analysis.IndicesAnalysisModule;\n import org.elasticsearch.indices.analysis.IndicesAnalysisService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n \n /**\n  *\n@@ -59,7 +59,7 @@ public static MapperService newMapperService() {\n     }\n \n     public static MapperService newMapperService(Index index, Settings indexSettings) {\n-        return new MapperService(index, indexSettings, new Environment(), newAnalysisService(), new IndexFieldDataService(index, new DummyCircuitBreakerService()),\n+        return new MapperService(index, indexSettings, new Environment(), newAnalysisService(), new IndexFieldDataService(index, new NoneCircuitBreakerService()),\n                 new PostingsFormatService(index), new DocValuesFormatService(index), newSimilarityLookupService());\n     }\n "
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java",
          "patch": "@@ -54,7 +54,7 @@\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.search.internal.SearchContext;\n@@ -110,7 +110,7 @@ public static void setupQueryParser() throws IOException {\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java",
          "patch": "@@ -69,7 +69,7 @@\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -133,7 +133,7 @@ public static void setupQueryParser() throws IOException {\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java",
          "patch": "@@ -43,7 +43,7 @@\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -89,7 +89,7 @@ public void setup() throws IOException {\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/guice/IndexQueryParserModuleTests.java",
          "patch": "@@ -38,8 +38,10 @@\n import org.elasticsearch.index.query.functionscore.FunctionScoreModule;\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n+import org.elasticsearch.indices.query.IndicesQueriesModule;\n+import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -86,7 +88,7 @@ public void testCustomInjection() {\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java",
          "patch": "@@ -39,8 +39,10 @@\n import org.elasticsearch.index.query.functionscore.FunctionScoreModule;\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n+import org.elasticsearch.indices.query.IndicesQueriesModule;\n+import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -83,7 +85,7 @@ public void testCustomInjection() {\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java",
          "patch": "@@ -39,8 +39,10 @@\n import org.elasticsearch.index.query.functionscore.FunctionScoreModule;\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.index.similarity.SimilarityModule;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n+import org.elasticsearch.indices.query.IndicesQueriesModule;\n+import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n import org.elasticsearch.indices.query.IndicesQueriesModule;\n import org.elasticsearch.script.ScriptModule;\n import org.elasticsearch.test.ElasticsearchTestCase;\n@@ -92,7 +94,7 @@ public void processXContentFilterParsers(XContentFilterParsersBindings bindings)\n                     @Override\n                     protected void configure() {\n                         bind(ClusterService.class).toProvider(Providers.of((ClusterService) null));\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 }\n         ).createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/search/FieldDataTermsFilterTests.java",
          "patch": "@@ -22,6 +22,7 @@\n import com.carrotsearch.hppc.DoubleOpenHashSet;\n import com.carrotsearch.hppc.LongOpenHashSet;\n import com.carrotsearch.hppc.ObjectOpenHashSet;\n+import com.google.common.collect.ImmutableSet;\n import org.apache.lucene.analysis.standard.StandardAnalyzer;\n import org.apache.lucene.document.*;\n import org.apache.lucene.index.*;\n@@ -39,7 +40,15 @@\n import org.elasticsearch.index.mapper.core.LongFieldMapper;\n import org.elasticsearch.index.mapper.core.NumberFieldMapper;\n import org.elasticsearch.index.mapper.core.StringFieldMapper;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n+import org.elasticsearch.index.query.FilterParser;\n+import org.elasticsearch.index.query.IndexQueryParserService;\n+import org.elasticsearch.index.query.QueryParseContext;\n+import org.elasticsearch.index.query.QueryParser;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;\n+import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCacheListener;\n+import org.elasticsearch.indices.query.IndicesQueriesRegistry;\n import org.elasticsearch.search.internal.SearchContext;\n import org.elasticsearch.test.ElasticsearchTestCase;\n import org.elasticsearch.test.index.service.StubIndexService;\n@@ -57,6 +66,7 @@\n  */\n public class FieldDataTermsFilterTests extends ElasticsearchTestCase {\n \n+    protected QueryParseContext parseContext;\n     protected IndexFieldDataService ifdService;\n     protected IndexWriter writer;\n     protected AtomicReader reader;\n@@ -79,9 +89,20 @@ public void setup() throws Exception {\n                 .build(new Mapper.BuilderContext(null, new ContentPath(1)));\n \n         // create index and fielddata service\n-        ifdService \u003d new IndexFieldDataService(new Index(\"test\"), new DummyCircuitBreakerService());\n+        Index index \u003d new Index(\"test\");\n+        CircuitBreakerService circuitBreakerService \u003d new NoneCircuitBreakerService();\n+        IndicesFieldDataCache indicesFieldDataCache \u003d new IndicesFieldDataCache(\n+                ImmutableSettings.Builder.EMPTY_SETTINGS,\n+                new IndicesFieldDataCacheListener(circuitBreakerService)\n+        );\n+        ifdService \u003d new IndexFieldDataService(index, ImmutableSettings.builder().put(\"index.fielddata.cache\", \"none\").build(), indicesFieldDataCache, circuitBreakerService, new IndicesFieldDataCacheListener(circuitBreakerService));\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(ifdService.index(), ImmutableSettings.Builder.EMPTY_SETTINGS);\n         ifdService.setIndexService(new StubIndexService(mapperService));\n+        IndexQueryParserService parserService \u003d new IndexQueryParserService(\n+                index, ImmutableSettings.EMPTY, new IndicesQueriesRegistry(ImmutableSettings.EMPTY, ImmutableSet.\u003cQueryParser\u003eof(), ImmutableSet.\u003cFilterParser\u003eof()),\n+                null, null, null, mapperService, null, ifdService, null, null, null, null\n+        );\n+        parseContext \u003d new QueryParseContext(index, parserService);\n         writer \u003d new IndexWriter(new RAMDirectory(),\n                 new IndexWriterConfig(Lucene.VERSION, new StandardAnalyzer(Lucene.VERSION)));\n \n@@ -142,7 +163,7 @@ public void testBytes() throws Exception {\n         // filter from mapper\n         result.clear(0, size);\n         assertThat(result.cardinality(), equalTo(0));\n-        result.or(strMapper.termsFilter(ifdService, cTerms, null)\n+        result.or(strMapper.termsFilter(parseContext, cTerms, null)\n                 .getDocIdSet(reader.getContext(), reader.getLiveDocs()).iterator());\n         assertThat(result.cardinality(), equalTo(docs.size()));\n         for (int i \u003d 0; i \u003c reader.maxDoc(); i++) {\n@@ -193,7 +214,7 @@ public void testLongs() throws Exception {\n         // filter from mapper\n         result.clear(0, size);\n         assertThat(result.cardinality(), equalTo(0));\n-        result.or(lngMapper.termsFilter(ifdService, cTerms, null)\n+        result.or(lngMapper.termsFilter(parseContext, cTerms, null)\n                 .getDocIdSet(reader.getContext(), reader.getLiveDocs()).iterator());\n         assertThat(result.cardinality(), equalTo(docs.size()));\n         for (int i \u003d 0; i \u003c reader.maxDoc(); i++) {\n@@ -232,7 +253,7 @@ public void testDoubles() throws Exception {\n         // filter from mapper\n         result.clear(0, size);\n         assertThat(result.cardinality(), equalTo(0));\n-        result.or(dblMapper.termsFilter(ifdService, cTerms, null)\n+        result.or(dblMapper.termsFilter(parseContext, cTerms, null)\n                 .getDocIdSet(reader.getContext(), reader.getLiveDocs()).iterator());\n         assertThat(result.cardinality(), equalTo(docs.size()));\n         for (int i \u003d 0; i \u003c reader.maxDoc(); i++) {"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java",
          "patch": "@@ -54,7 +54,7 @@\n import org.elasticsearch.index.search.nested.NonNestedDocsFilter;\n import org.elasticsearch.index.service.IndexService;\n import org.elasticsearch.indices.cache.filter.IndicesFilterCache;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.node.settings.NodeSettingsService;\n import org.elasticsearch.search.internal.ContextIndexSearcher;\n import org.elasticsearch.search.internal.SearchContext;\n@@ -354,7 +354,7 @@ static SearchContext createSearchContext(String indexName, String parentType, St\n         final BigArrays bigArrays \u003d new BigArrays(ImmutableSettings.EMPTY, pageCacheRecycler);\n         Settings settings \u003d ImmutableSettings.EMPTY;\n         MapperService mapperService \u003d MapperTestUtils.newMapperService(index, settings);\n-        IndexFieldDataService indexFieldDataService \u003d new IndexFieldDataService(index, new DummyCircuitBreakerService());\n+        IndexFieldDataService indexFieldDataService \u003d new IndexFieldDataService(index, new NoneCircuitBreakerService());\n         final IndexService indexService \u003d new StubIndexService(mapperService);\n         indexFieldDataService.setIndexService(indexService);\n         // Id_cache is now registered as document type listener, so we can add mappings."
        },
        {
          "file_name": "src/test/java/org/elasticsearch/index/similarity/SimilarityTests.java",
          "patch": "@@ -35,7 +35,7 @@\n import org.elasticsearch.index.mapper.MapperServiceModule;\n import org.elasticsearch.index.settings.IndexSettingsModule;\n import org.elasticsearch.indices.fielddata.breaker.CircuitBreakerService;\n-import org.elasticsearch.indices.fielddata.breaker.DummyCircuitBreakerService;\n+import org.elasticsearch.indices.fielddata.breaker.NoneCircuitBreakerService;\n import org.elasticsearch.test.ElasticsearchTestCase;\n import org.junit.Test;\n \n@@ -209,7 +209,7 @@ private static SimilarityService similarityService(Settings settings) {\n                 .add(new AbstractModule() {\n                     @Override\n                     protected void configure() {\n-                        bind(CircuitBreakerService.class).to(DummyCircuitBreakerService.class);\n+                        bind(CircuitBreakerService.class).to(NoneCircuitBreakerService.class);\n                     }\n                 })\n                 .createInjector();"
        },
        {
          "file_name": "src/test/java/org/elasticsearch/percolator/PercolatorTests.java",
          "patch": "@@ -1646,7 +1646,7 @@ public void percolateNonMatchingConstantScoreQuery() throws Exception {\n                         .startObject(\"doc\").field(\"message\", \"A new bonsai tree \").endObject()\n                         .endObject())\n                 .execute().actionGet();\n-        assertThat(percolate.getFailedShards(), equalTo(0));\n+        assertNoFailures(percolate);\n         assertMatchCount(percolate, 0l);\n     }\n "
        }
      ]
    }
  },
  {
    "name": "TT 1600 / MCPC L27 Potential Memory Leak",
    "url": "https://github.com/MinimallyCorrect/TickThreading/issues/494",
    "description": "There may be a potential memory leak in this combination and I am not getting any erors to go off of . What would be the best route to get this info to someone after I let the server run for a bit should I get a HEAP DUMP ?\n\nFirst time we have actually utilized all our memory that wasn\u0027t self inflicted ..  (700 ages loading all at once and going OOM is self inflicted!) \n\nServer is starting off at 1.7G memory used and we ended up at 8.2G before having to restart it because deadlock detector kept on popping up saying it was deadlocked but nothing inside the logs . \n\nI have moved to 1606 to see if anything is resolved on this side bu let me know just in case it isn\u0027t.\n",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/MinimallyCorrect/TickThreading/commit/5c271d0bb021af730fbef2cd2e996f9f995b5df8",
      "files": [
        {
          "file_name": "resources/patches-deobfuscated.xml",
          "patch": "@@ -250,9 +250,6 @@\n \t\t\t\u003cinsertSuper\u003eonUpdate\u003c/insertSuper\u003e\r\n \t\t\u003c/class\u003e\r\n \t\t\u003cclass id\u003d\"net.minecraft.tileentity.TileEntity\"\u003e\r\n-\t\t\t\u003caddMethod return\u003d\"java.lang.String\"\r\n-\t\t\t\t\t\t\t\t name\u003d\"toString\"\r\n-\t\t\t\t\t\t\t\t code\u003d\"return super.toString() + \u0026quot; x,y,z: \u0026quot; + l + \u0026quot;, \u0026quot; + m + \u0026quot;, \u0026quot; + n;\"/\u003e\r\n \t\t\t\u003caddAll fromClass\u003d\"me.nallar.patched.PatchTileEntity\"/\u003e\r\n \t\t\u003c/class\u003e\r\n \t\t\u003cclass id\u003d\"net.minecraft.entity.EntityTracker\"\u003e\r\n@@ -553,6 +550,10 @@\n \t\t\t\u003creplaceMethodCall newMethod\u003d\"getTEWithLoad\" method\u003d\"^class:World^.^method:World/getBlockTileEntity^\"\u003eticketsLoaded(Ljava.util.List;L^class:World^;)V\u003c/replaceMethodCall\u003e\r\n \t\t\t\u003creplaceMethodCall newMethod\u003d\"getBlockIdWithLoad\" method\u003d\"^class:World^.^method:World/getBlockId^\"\u003eticketsLoaded(Ljava.util.List;L^class:World^;I)Ljava.util.List;\u003c/replaceMethodCall\u003e\r\n \t\t\u003c/class\u003e\r\n+\t\t\u003cclass id\u003d\"buildcraft.factory.TilePump\"\u003e\r\n+\t\t\t\u003creplaceInitializer field\u003d\"blocksToPump\" class\u003d\"me.nallar.tickthreading.collections.TreeMapHashMap\"/\u003e\r\n+\t\t\t\u003cinsertBefore code\u003d\"blocksToPump.clear();\"\u003einitializePumpFromPosition\u003c/insertBefore\u003e\r\n+\t\t\u003c/class\u003e\r\n \t\u003c/buildCraftFactory\u003e\r\n \t\u003cbuildCraftTransport\u003e\r\n \t\t\u003cclass id\u003d\"buildcraft.transport.TileGenericPipe\"\u003e\r"
        },
        {
          "file_name": "src/common/me/nallar/patched/PatchTileEntity.java",
          "patch": "@@ -1,5 +1,6 @@\n package me.nallar.patched;\r\n \r\n+import me.nallar.tickthreading.Log;\r\n import me.nallar.tickthreading.patcher.Declare;\r\n import me.nallar.tickthreading.util.concurrent.NativeMutex;\r\n import net.minecraft.inventory.ICrafting;\r\n@@ -72,4 +73,9 @@ public void sendTile() {\n \t\t\tp.updateTile(this);\r\n \t\t}\r\n \t}\r\n+\r\n+\t@Override\r\n+\tpublic String toString() {\r\n+\t\treturn Log.classString(this) + \u0027@\u0027 + System.identityHashCode(this) + \" in \" + Log.name(worldObj) + \" at x, y, z: \" + xCoord + \", \" + yCoord + \", \" + zCoord;\r\n+\t}\r\n }\r"
        },
        {
          "file_name": "src/common/me/nallar/patched/entity/PatchEntityItem.java",
          "patch": "@@ -1,5 +1,6 @@\n package me.nallar.patched.entity;\r\n \r\n+import me.nallar.tickthreading.patcher.Declare;\r\n import net.minecraft.block.Block;\r\n import net.minecraft.block.material.Material;\r\n import net.minecraft.entity.item.EntityItem;\r\n@@ -90,6 +91,12 @@ public void onUpdate() {\n \t}\r\n \r\n \t@Override\r\n+\t@Declare\r\n+\tpublic void combine() {\r\n+\t\tfunc_85054_d();\r\n+\t}\r\n+\r\n+\t@Override\r\n \tprotected void func_85054_d() {\r\n \t\tfor (Object o : this.worldObj.getEntitiesWithinAABB(EntityItem.class, this.boundingBox.expand(mergeRadius, mergeRadius, mergeRadius))) {\r\n \t\t\tEntityItem var2 \u003d (EntityItem) o;\r\n@@ -101,7 +108,11 @@ protected void func_85054_d() {\n \tpublic boolean combineItems(EntityItem other) {\r\n \t\tif (other \u003d\u003d this) {\r\n \t\t\treturn false;\r\n-\t\t} else if (other.isEntityAlive() \u0026\u0026 this.isEntityAlive()) {\r\n+\t\t}\r\n+\t\tsynchronized (EntityItem.class) {\r\n+\t\t\tif (this.isDead || other.isDead) {\r\n+\t\t\t\treturn false;\r\n+\t\t\t}\r\n \t\t\tItemStack thisStack \u003d this.getEntityItem();\r\n \t\t\tItemStack otherStack \u003d other.getEntityItem();\r\n \r\n@@ -116,15 +127,14 @@ public boolean combineItems(EntityItem other) {\n \t\t\t} else if (thisStack.stackSize + otherStack.stackSize \u003e thisStack.getMaxStackSize()) {\r\n \t\t\t\treturn false;\r\n \t\t\t} else {\r\n-\t\t\t\tthisStack.stackSize +\u003d otherStack.stackSize;\r\n-\t\t\t\tthis.delayBeforeCanPickup \u003d Math.max(other.delayBeforeCanPickup, this.delayBeforeCanPickup);\r\n-\t\t\t\tthis.age \u003d Math.min(other.age, this.age);\r\n-\t\t\t\tthis.func_92058_a(thisStack);\r\n-\t\t\t\tother.setDead();\r\n+\t\t\t\totherStack.stackSize +\u003d thisStack.stackSize;\r\n+\t\t\t\tother.delayBeforeCanPickup \u003d Math.max(other.delayBeforeCanPickup, this.delayBeforeCanPickup);\r\n+\t\t\t\tother.age \u003d Math.min(other.age, this.age);\r\n+\t\t\t\tother.func_92058_a(otherStack);\r\n+\t\t\t\tother.setPosition(posX, posY, posZ);\r\n+\t\t\t\tthis.setDead();\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n-\t\t} else {\r\n-\t\t\treturn false;\r\n \t\t}\r\n \t}\r\n }\r"
        },
        {
          "file_name": "src/common/me/nallar/patched/world/PatchWorld.java",
          "patch": "@@ -143,10 +143,7 @@ public String getName() {\n \r\n \t@Override\r\n \tpublic boolean isBlockNormalCube(int x, int y, int z) {\r\n-\t\tint id \u003d getBlockIdWithoutLoad(x, y, z);\r\n-\t\tif (id \u003d\u003d -1) {\r\n-\t\t\treturn false;\r\n-\t\t}\r\n+\t\tint id \u003d getBlockId(x, y, z);\r\n \t\tBlock block \u003d Block.blocksList[id];\r\n \t\treturn block !\u003d null \u0026\u0026 block.isBlockNormalCube(this, x, y, z);\r\n \t}\r\n@@ -168,8 +165,6 @@ public void removeEntity(Entity entity) {\n \r\n \t\t\tentity.setDead();\r\n \r\n-\t\t\t// The next instanceof, somehow, seems to throw NPEs. I don\u0027t even. :(\r\n-\t\t\t// http://pastebin.com/zqDPsUjz\r\n \t\t\tif (entity instanceof EntityPlayer) {\r\n \t\t\t\tif (playerEntities \u003d\u003d null) {\r\n \t\t\t\t\t// The world has been unloaded and cleaned already, so we can\u0027t remove the player entity.\r\n@@ -179,7 +174,7 @@ public void removeEntity(Entity entity) {\n \t\t\t\tthis.updateAllPlayersSleepingFlag();\r\n \t\t\t}\r\n \t\t} catch (Exception e) {\r\n-\t\t\tLog.severe(\"Exception removing a player entity\", e);\r\n+\t\t\tLog.severe(\"Exception removing an entity\", e);\r\n \t\t}\r\n \t}\r\n \r\n@@ -200,7 +195,7 @@ public int getBlockId(int x, int y, int z) {\n \tpublic int getBlockIdWithoutLoad(int x, int y, int z) {\r\n \t\tif (x \u003e\u003d -30000000 \u0026\u0026 z \u003e\u003d -30000000 \u0026\u0026 x \u003c 30000000 \u0026\u0026 z \u003c 30000000 \u0026\u0026 y \u003e\u003d 0 \u0026\u0026 y \u003c 256) {\r\n \t\t\ttry {\r\n-\t\t\t\tChunk chunk \u003d ((ChunkProviderServer) chunkProvider).getChunkIfExists(x \u003e\u003e 4, z \u003e\u003e 4);\r\n+\t\t\t\tChunk chunk \u003d getChunkIfExists(x \u003e\u003e 4, z \u003e\u003e 4);\r\n \t\t\t\treturn chunk \u003d\u003d null ? -1 : chunk.getBlockID(x \u0026 15, y, z \u0026 15);\r\n \t\t\t} catch (Throwable t) {\r\n \t\t\t\tLog.severe(\"Exception getting block ID in \" + Log.pos(this, x, y, z), t);\r"
        },
        {
          "file_name": "src/common/me/nallar/patched/world/PatchWorldServer.java",
          "patch": "@@ -632,6 +632,11 @@ public synchronized List getNoteBlockEvents() {\n \t\treturn noteBlockEvents;\r\n \t}\r\n \r\n+\t@Override\r\n+\tpublic Chunk getChunkIfExists(int x, int z) {\r\n+\t\treturn theChunkProviderServer.getChunkIfExists(x, z);\r\n+\t}\r\n+\r\n \tpublic boolean safeToGenerate() {\r\n \t\treturn theChunkProviderServer.safeToGenerate();\r\n \t}\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/Log.java",
          "patch": "@@ -19,6 +19,7 @@\n import me.nallar.tickthreading.util.MappingUtil;\r\n import net.minecraft.server.MinecraftServer;\r\n import net.minecraft.server.gui.GuiLogOutputHandler;\r\n+import net.minecraft.tileentity.TileEntity;\r\n import net.minecraft.world.World;\r\n import net.minecraft.world.WorldServer;\r\n \r\n@@ -276,9 +277,23 @@ public static String name(World world) {\n \t\treturn world.getName();\r\n \t}\r\n \r\n+\tpublic static String classString(Object o) {\r\n+\t\treturn \"c \" + MappingUtil.debobfuscate(o.getClass().getName()) + \u0027 \u0027;\r\n+\t}\r\n+\r\n \tpublic static String toString(Object o) {\r\n-\t\tString deobfuscatedName \u003d MappingUtil.debobfuscate(o.getClass().getName());\r\n-\t\treturn \"c \" + deobfuscatedName + \u0027 \u0027 + o.toString();\r\n+\t\tString cS \u003d classString(o);\r\n+\t\tString s \u003d o.toString();\r\n+\t\tif (!s.startsWith(cS)) {\r\n+\t\t\ts \u003d cS + s;\r\n+\t\t}\r\n+\t\tif (o instanceof TileEntity) {\r\n+\t\t\tTileEntity tE \u003d (TileEntity) o;\r\n+\t\t\tif (!s.contains(\" x, y, z: \")) {\r\n+\t\t\t\ts +\u003d \" x, y, z: \" + tE.xCoord + \", \" + tE.yCoord + \", \" + tE.zCoord;\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn s;\r\n \t}\r\n \r\n \tpublic static void log(Level level, Throwable throwable, String s) {\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/collections/TreeMapHashMap.java",
          "patch": "@@ -0,0 +1,104 @@\n+package me.nallar.tickthreading.collections;\r\n+\r\n+import java.util.Collection;\r\n+import java.util.Comparator;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.Set;\r\n+import java.util.SortedMap;\r\n+import java.util.TreeMap;\r\n+\r\n+public class TreeMapHashMap extends TreeMap {\r\n+\tprivate final Map map \u003d new HashMap();\r\n+\r\n+\t@Override\r\n+\tpublic boolean equals(final Object o) {\r\n+\t\treturn map.equals(o);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic int hashCode() {\r\n+\t\treturn map.hashCode();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic String toString() {\r\n+\t\treturn map.toString();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic boolean isEmpty() {\r\n+\t\treturn map.isEmpty();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic int size() {\r\n+\t\treturn map.size();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Object get(final Object key) {\r\n+\t\treturn map.get(key);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic boolean containsKey(final Object key) {\r\n+\t\treturn map.containsKey(key);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic boolean containsValue(final Object value) {\r\n+\t\treturn map.containsValue(value);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Object put(final Object key, final Object value) {\r\n+\t\treturn map.put(key, value);\r\n+\t}\r\n+\r\n+\tpublic TreeMapHashMap() {\r\n+\t\tsuper();\r\n+\t}\r\n+\r\n+\tpublic TreeMapHashMap(final Comparator comparator) {\r\n+\t\tsuper(comparator);\r\n+\t}\r\n+\r\n+\tpublic TreeMapHashMap(final Map m) {\r\n+\t\tsuper(m);\r\n+\t}\r\n+\r\n+\tpublic TreeMapHashMap(final SortedMap m) {\r\n+\t\tsuper(m);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void putAll(final Map m) {\r\n+\t\tmap.putAll(m);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Object remove(final Object key) {\r\n+\t\treturn map.remove(key);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void clear() {\r\n+\t\tmap.clear();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Set keySet() {\r\n+\t\treturn map.keySet();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Collection values() {\r\n+\t\treturn map.values();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic Set\u003cMap.Entry\u003e entrySet() {\r\n+\t\treturn map.entrySet();\r\n+\t}\r\n+}\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/minecraft/DeadLockDetector.java",
          "patch": "@@ -292,9 +292,13 @@ private static String toString(ThreadInfo threadInfo, boolean name) {\n \t\tif (threadInfo.isInNative()) {\r\n \t\t\tsb.append(\" (in native)\");\r\n \t\t}\r\n+\t\tint run \u003d 0;\r\n \t\tsb.append(\u0027\\n\u0027);\r\n \t\tfor (int i \u003d 0; i \u003c stackTrace.length; i++) {\r\n \t\t\tString steString \u003d stackTrace[i].toString();\r\n+\t\t\tif (steString.contains(\".run(\")) {\r\n+\t\t\t\trun++;\r\n+\t\t\t}\r\n \t\t\tsb.append(\"\\tat \").append(steString);\r\n \t\t\tsb.append(\u0027\\n\u0027);\r\n \t\t\tif (i \u003d\u003d 0 \u0026\u0026 threadInfo.getLockInfo() !\u003d null) {\r\n@@ -335,8 +339,8 @@ private static String toString(ThreadInfo threadInfo, boolean name) {\n \t\t}\r\n \t\tsb.append(\u0027\\n\u0027);\r\n \t\tString ret \u003d sb.toString();\r\n-\t\treturn (ret.contains(\"at java.util.concurrent.LinkedBlockingQueue.take(Unknown Source)\\n\" +\r\n-\t\t\t\t\"\\tat me.nallar.tickthreading.minecraft.ThreadManager$1.run(ThreadManager.java:\\n\")) ? null : ret;\r\n+\t\treturn (run \u003c\u003d 2 \u0026\u0026 ret.contains(\"at java.util.concurrent.LinkedBlockingQueue.take(\\n\") \u0026\u0026\r\n+\t\t\t\tret.contains(\"at me.nallar.tickthreading.minecraft.ThreadManager$1.run(ThreadManager.java:\\n\")) ? null : ret;\r\n \t}\r\n \r\n \tpublic static void checkForLeakedThreadManagers() {\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/minecraft/TickThreading.java",
          "patch": "@@ -36,6 +36,8 @@\n import me.nallar.tickthreading.util.TableFormatter;\r\n import me.nallar.tickthreading.util.VersionUtil;\r\n import net.minecraft.command.ServerCommandManager;\r\n+import net.minecraft.entity.Entity;\r\n+import net.minecraft.entity.item.EntityItem;\r\n import net.minecraft.entity.player.EntityPlayer;\r\n import net.minecraft.entity.player.EntityPlayerMP;\r\n import net.minecraft.item.Item;\r\n@@ -51,6 +53,7 @@\n import net.minecraftforge.common.DimensionManager;\r\n import net.minecraftforge.common.MinecraftForge;\r\n import net.minecraftforge.event.ForgeSubscribe;\r\n+import net.minecraftforge.event.entity.EntityJoinWorldEvent;\r\n import net.minecraftforge.event.entity.player.PlayerInteractEvent;\r\n import net.minecraftforge.event.world.WorldEvent;\r\n \r\n@@ -259,6 +262,17 @@ public void onPlayerInteract(PlayerInteractEvent event) {\n \t\t}\r\n \t}\r\n \r\n+\t@ForgeSubscribe\r\n+\tpublic void onEntityJoinWorld(EntityJoinWorldEvent event) {\r\n+\t\tEntity e \u003d event.entity;\r\n+\t\tif (e instanceof EntityItem) {\r\n+\t\t\t((EntityItem) e).combine();\r\n+\t\t\tif (e.isDead) {\r\n+\t\t\t\tevent.setCanceled(true);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t}\r\n+\r\n \tpublic TickManager getManager(World world) {\r\n \t\treturn managers.get(world);\r\n \t}\r"
        },
        {
          "file_name": "src/common/me/nallar/tickthreading/minecraft/tickregion/TileEntityTickRegion.java",
          "patch": "@@ -60,10 +60,8 @@ public void doTick() {\n \t\t\t\t\ttileEntitiesIterator.remove();\r\n \t\t\t\t\tmanager.add(tileEntity, false);\r\n \t\t\t\t\tif (hashCode !\u003d 0) {\r\n-\t\t\t\t\t\tLog.fine(\"A tile entity is in the wrong TickRegion - was it moved by a player, or did something bug out?\"\r\n-\t\t\t\t\t\t\t\t+ \"\\n entity: \" + Log.toString(tileEntity) + \" at x,y,z:\" + xPos + \u0027,\u0027 + tileEntity.yCoord + \u0027,\u0027 + zPos\r\n-\t\t\t\t\t\t\t\t+ \"\\n Region: \" + toString()\r\n-\t\t\t\t\t\t\t\t+ \"\\n World: \" + Log.name(tileEntity.worldObj));\r\n+\t\t\t\t\t\tLog.fine(\"A tile entity is in the wrong TickRegion - was it moved by a player, or did something break?\"\r\n+\t\t\t\t\t\t\t\t+ \"\\n entity: \" + Log.toString(tileEntity));\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tcontinue;\r\n@@ -92,19 +90,15 @@ public void doTick() {\n \t\t\t\tif (tileEntity.isInvalid()) {\r\n \t\t\t\t\ttileEntitiesIterator.remove();\r\n \t\t\t\t\tmanager.removed(tileEntity);\r\n-\t\t\t\t\t//Log.fine(\"Removed tile entity: \" + xPos + \", \" + tileEntity.yCoord + \", \" + zPos + \"\\ttype:\" + tileEntity.getClass().toString());\r\n-\t\t\t\t\tif (chunkProvider.chunkExists(xPos \u003e\u003e 4, zPos \u003e\u003e 4)) {\r\n-\t\t\t\t\t\tChunk chunk \u003d world.getChunkFromChunkCoords(xPos \u003e\u003e 4, zPos \u003e\u003e 4);\r\n-\t\t\t\t\t\tif (chunk !\u003d null) {\r\n-\t\t\t\t\t\t\tchunk.cleanChunkBlockTileEntity(xPos, tileEntity.yCoord, zPos);\r\n-\t\t\t\t\t\t}\r\n+\t\t\t\t\tChunk chunk \u003d world.getChunkIfExists(xPos \u003e\u003e 4, zPos \u003e\u003e 4);\r\n+\t\t\t\t\tif (chunk !\u003d null) {\r\n+\t\t\t\t\t\tchunk.cleanChunkBlockTileEntity(xPos, tileEntity.yCoord, zPos);\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if (tileEntity.worldObj !\u003d null \u0026\u0026 chunkProvider.chunkExists(xPos \u003e\u003e 4, zPos \u003e\u003e 4)) {\r\n \t\t\t\t\ttileEntity.tickTT();\r\n \t\t\t\t}\r\n \t\t\t} catch (Throwable throwable) {\r\n-\t\t\t\tLog.severe(\"Exception ticking TileEntity \" + Log.toString(tileEntity) + \" at x,y,z:\" + xPos + \u0027,\u0027 + tileEntity.yCoord + \u0027,\u0027 + zPos\r\n-\t\t\t\t\t\t+ \"\\n World: \" + Log.name(tileEntity.worldObj), throwable);\r\n+\t\t\t\tLog.severe(\"Exception ticking TileEntity \" + Log.toString(tileEntity), throwable);\r\n \t\t\t} finally {\r\n \t\t\t\tif (xMinusLock !\u003d null) {\r\n \t\t\t\t\txMinusLock.unlock();\r"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak on watcher",
    "url": "https://github.com/javabits/yar/issues/69",
    "description": "In the #68 identify the memory leak. Then we must fix it.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/javabits/yar/commit/67d065d1ef2180dd13fc8eb431ececabd2209455",
      "files": [
        {
          "file_name": "yar-api/src/main/java/org/javabits/yar/IdMatchers.java",
          "patch": "@@ -31,10 +31,10 @@ private IdMatchers() {\n     }\n \n     public static \u003cT\u003e Matcher\u003cId\u003cT\u003e\u003e newMatcher(final Id\u003cT\u003e id) {\n-        return newKeyMatcher(id);\n+        return newIdMatcher(id);\n     }\n \n-    public static \u003cT\u003e IdMatcher\u003cT\u003e newKeyMatcher(final Id\u003cT\u003e id) {\n+    public static \u003cT\u003e IdMatcher\u003cT\u003e newIdMatcher(final Id\u003cT\u003e id) {\n         requireNonNull(id, \"id\");\n         return new IdMatcher\u003cT\u003e() {\n "
        },
        {
          "file_name": "yar-guice/pom.xml",
          "patch": "@@ -59,6 +59,16 @@\n             \u003cartifactId\u003emockito-all\u003c/artifactId\u003e\n             \u003cscope\u003etest\u003c/scope\u003e\n         \u003c/dependency\u003e\n+        \u003cdependency\u003e\n+            \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\n+            \u003cartifactId\u003ejul-to-slf4j\u003c/artifactId\u003e\n+            \u003cscope\u003etest\u003c/scope\u003e\n+        \u003c/dependency\u003e\n+        \u003cdependency\u003e\n+            \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\n+            \u003cartifactId\u003eslf4j-simple\u003c/artifactId\u003e\n+            \u003cscope\u003etest\u003c/scope\u003e\n+        \u003c/dependency\u003e\n     \u003c/dependencies\u003e\n \n     \u003cbuild\u003e"
        },
        {
          "file_name": "yar-guice/src/main/java/org/javabits/yar/guice/DefaultBlockingSupplierFactory.java",
          "patch": "@@ -4,7 +4,7 @@\n import org.javabits.yar.Id;\n import org.javabits.yar.Registration;\n \n-import static org.javabits.yar.IdMatchers.newKeyMatcher;\n+import static org.javabits.yar.IdMatchers.newIdMatcher;\n \n /**\n  * @author Romain Gilles\n@@ -19,7 +19,7 @@\n         // If an instance of the requested service has been registered, this call will trigger the\n         // listener\u0027s supplierChanged event with the current value of the service.\n         // This is how the supplier instance obtains the initial value of the service.\n-        Registration\u003cT\u003e registration \u003d registry.addSupplierListener(newKeyMatcher(id), supplier);\n+        Registration\u003cT\u003e registration \u003d registry.addSupplierListener(newIdMatcher(id), supplier);\n         // preserve a reference to the registration to avoid gc and let the caller decides when listener can be gc.\n         supplier.setSelfRegistration(registration);\n         return supplier;"
        },
        {
          "file_name": "yar-guice/src/main/java/org/javabits/yar/guice/WatcherRegistration.java",
          "patch": "@@ -1,57 +1,59 @@\n /*\n  * Copyright 2013 Romain Gilles\n- *\n- *    Licensed under the Apache License, Version 2.0 (the \"License\");\n- *    you may not use this file except in compliance with the License.\n- *    You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *    Unless required by applicable law or agreed to in writing, software\n- *    distributed under the License is distributed on an \"AS IS\" BASIS,\n- *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *    See the License for the specific language governing permissions and\n- *    limitations under the License.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n  */\n \n package org.javabits.yar.guice;\n \n-import com.google.common.base.FinalizableReferenceQueue;\n-import com.google.common.base.FinalizableWeakReference;\n-import org.javabits.yar.*;\n+import static org.javabits.yar.SupplierEvent.Type.ADD;\n+import static org.javabits.yar.SupplierEvent.Type.REMOVE;\n \n-import javax.annotation.Nullable;\n import java.lang.ref.WeakReference;\n import java.util.IdentityHashMap;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n \n-import static org.javabits.yar.SupplierEvent.Type.ADD;\n-import static org.javabits.yar.SupplierEvent.Type.REMOVE;\n+import javax.annotation.Nullable;\n+\n+import org.javabits.yar.*;\n+\n+import com.google.common.base.FinalizableReferenceQueue;\n+import com.google.common.base.FinalizableWeakReference;\n \n /**\n- * TODO comment\n- * Date: 2/20/13\n- * Time: 7:04 PM\n+ * TODO comment Date: 2/20/13 Time: 7:04 PM\n  *\n  * @author Romain Gilles\n  */\n-class WatcherRegistration\u003cT\u003e extends FinalizableWeakReference\u003cWatcher\u003cT\u003e\u003e implements Pair\u003cIdMatcher\u003cT\u003e, Watcher\u003cT\u003e\u003e, org.javabits.yar.Registration\u003cT\u003e {\n+class WatcherRegistration\u003cT\u003e extends FinalizableWeakReference\u003cObject\u003e implements\n+        Pair\u003cIdMatcher\u003cT\u003e, Watcher\u003cT\u003e\u003e, org.javabits.yar.Registration\u003cT\u003e {\n \n+    private static final Logger LOG \u003d Logger.getLogger(WatcherRegistration.class.getName());\n     private final IdMatcher\u003cT\u003e left;\n     private final Watcher\u003cT\u003e right;\n     private final Registry registry;\n \n \n     static \u003cT\u003e WatcherRegistration\u003cT\u003e newWatcherRegistration(IdMatcher\u003cT\u003e leftValue, SupplierListener supplierListener, FinalizableReferenceQueue referenceQueue, Registry registry) {\n-        return new WatcherRegistration\u003c\u003e(leftValue, new SupplierWatcherToSupplierListenerAdapter\u003cT\u003e(supplierListener), referenceQueue, registry);\n+        return new WatcherRegistration\u003c\u003e(leftValue, supplierListener, new SupplierWatcherToSupplierListenerAdapter\u003cT\u003e(supplierListener), referenceQueue, registry);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     static \u003cT\u003e WatcherRegistration\u003cT\u003e newWatcherRegistration(IdMatcher\u003cT\u003e leftValue, Watcher\u003cT\u003e rightValue, FinalizableReferenceQueue referenceQueue, Registry registry) {\n-        return new WatcherRegistration(leftValue, new WatcherDecorator\u003c\u003e(rightValue), referenceQueue, registry);\n+        return new WatcherRegistration(leftValue, rightValue, new WatcherDecorator\u003c\u003e(rightValue), referenceQueue, registry);\n     }\n \n-    WatcherRegistration(IdMatcher\u003cT\u003e leftValue, Watcher\u003cT\u003e rightValue, FinalizableReferenceQueue referenceQueue, Registry registry) {\n-        super(rightValue, referenceQueue);\n+    WatcherRegistration(IdMatcher\u003cT\u003e leftValue, Object weakReference, Watcher\u003cT\u003e rightValue, FinalizableReferenceQueue referenceQueue, Registry registry) {\n+        super(weakReference, referenceQueue);\n         left \u003d leftValue;\n         right \u003d rightValue;\n         this.registry \u003d registry;\n@@ -74,6 +76,9 @@\n \n     @Override\n     public void finalizeReferent() {\n+        if (LOG.isLoggable(Level.FINEST)) {\n+            LOG.finest(\"Remove watcher registration on GC: \" + left);\n+        }\n         registry.removeWatcher(this);\n     }\n \n@@ -135,28 +140,31 @@ public String toString() {\n     }\n \n     private static class SupplierWatcherToSupplierListenerAdapter\u003cT\u003e implements Watcher\u003cT\u003e {\n-        private final SupplierListener supplierListener;\n+        private final WeakReference\u003cSupplierListener\u003e delegate;\n \n-        public SupplierWatcherToSupplierListenerAdapter(SupplierListener supplierListener) {\n-            this.supplierListener \u003d supplierListener;\n+        public SupplierWatcherToSupplierListenerAdapter(SupplierListener delegate) {\n+            this.delegate \u003d new WeakReference\u003c\u003e(delegate);\n         }\n \n         @Nullable\n         @Override\n         public Supplier\u003cT\u003e add(Supplier\u003cT\u003e supplier) {\n-            supplierListener.supplierChanged(new SupplierEvent(ADD, supplier));\n+            SupplierListener supplierListener \u003d delegate.get();\n+            if (supplierListener !\u003d null) {\n+                supplierListener.supplierChanged(new SupplierEvent(ADD, supplier));\n+            }\n             return supplier;\n         }\n \n         @Override\n         public void remove(Supplier\u003cT\u003e supplier) {\n-            supplierListener.supplierChanged(new SupplierEvent(REMOVE, supplier));\n+            delegate.get().supplierChanged(new SupplierEvent(REMOVE, supplier));\n         }\n \n         @Override\n         public String toString() {\n             return \"SupplierWatcherToSupplierListenerAdapter{\" +\n-                    \"supplierListener\u003d\" + supplierListener +\n+                    \"delegate\u003d\" + delegate.get() +\n                     \u0027}\u0027;\n         }\n     }"
        },
        {
          "file_name": "yar-guice/src/test/java/org/javabits/yar/guice/RegistryHookTest.java",
          "patch": "@@ -197,7 +197,7 @@ public String get() {\n                 return \"test\";\n             }\n         });\n-        registry.addWatcher(IdMatchers.newKeyMatcher(stringId), new Watcher\u003cString\u003e() {\n+        registry.addWatcher(IdMatchers.newIdMatcher(stringId), new Watcher\u003cString\u003e() {\n             @Nullable\n             @Override\n             public org.javabits.yar.Supplier\u003cString\u003e add(org.javabits.yar.Supplier\u003cString\u003e element) {"
        },
        {
          "file_name": "yar-guice/src/test/java/org/javabits/yar/guice/WatcherWeakReferenceTest.java",
          "patch": "@@ -0,0 +1,165 @@\n+/*\n+ * Copyright (c) 3/7/14 12:16 PM Romain Gilles\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.javabits.yar.guice;\n+\n+import static com.google.common.base.Suppliers.ofInstance;\n+import static java.lang.Boolean.TRUE;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.javabits.yar.IdMatchers.newIdMatcher;\n+import static org.javabits.yar.Ids.newId;\n+import static org.javabits.yar.guice.BlockingSupplierRegistryImpl.newBlockingSupplierRegistry;\n+\n+import java.lang.InterruptedException;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.annotation.Nullable;\n+\n+import org.javabits.yar.*;\n+import org.junit.Test;\n+\n+/**\n+ * This Test case aims to validate the weak reference management on the watcher. To run this test\n+ * you must fix the Xmx and Xms to the same value.\n+ */\n+public class WatcherWeakReferenceTest {\n+\n+    public static final int SLEEP_TIME_MILLIS \u003d 1;\n+    public static final int MAIN_STEP_WAIT_TIME \u003d 1;\n+    public static final Id\u003cBoolean\u003e ID \u003d newId(Boolean.class);\n+\n+    @Test\n+    public void testWeakWatcher() {\n+        sleep();\n+        BlockingSupplierRegistry registry \u003d newBlockingSupplierRegistry();\n+        final AtomicInteger counter \u003d new AtomicInteger();\n+        registerWatcherAndSupplier(registry, counter);\n+        forceGC();\n+\n+        sleep(MAIN_STEP_WAIT_TIME);\n+        registry.put(ID, ofInstance(TRUE));\n+        assertThat(counter.get(), is(1));\n+    }\n+\n+    private void\n+            registerWatcherAndSupplier(BlockingSupplierRegistry registry, AtomicInteger counter) {\n+        Watcher\u003cBoolean\u003e watcher \u003d new BooleanWatcher(counter);\n+        registry.addWatcher(newIdMatcher(ID), watcher);\n+        assertThat(counter.get(), is(0));\n+        registry.put(ID, ofInstance(TRUE));\n+        sleep();\n+        assertThat(counter.get(), is(1));\n+        System.out.println(\"End of watcher\");\n+        sleep(MAIN_STEP_WAIT_TIME);\n+    }\n+\n+    @Test\n+    public void testWeakWatcherNoCleanup() {\n+        sleep();\n+        BlockingSupplierRegistry registry \u003d newBlockingSupplierRegistry();\n+        Id\u003cBoolean\u003e id \u003d newId(Boolean.class);\n+        final AtomicInteger counter \u003d new AtomicInteger();\n+        Watcher\u003cBoolean\u003e watcher \u003d new BooleanWatcher(counter);\n+\n+        Registration\u003cBoolean\u003e registration \u003d registry.addWatcher(newIdMatcher(id), watcher);\n+        assertThat(counter.get(), is(0));\n+        registry.put(id, ofInstance(TRUE));\n+        sleep();\n+        assertThat(counter.get(), is(1));\n+        System.out.println(\"End of watcher\");\n+        sleep(MAIN_STEP_WAIT_TIME);\n+\n+        forceGC();\n+        System.out.println(\"End of Memory cleanup\");\n+        sleep(MAIN_STEP_WAIT_TIME);\n+        registry.put(id, ofInstance(TRUE));\n+        List\u003cSupplier\u003cBoolean\u003e\u003e idSuppliers \u003d registry.getAll(id);\n+        assertThat(idSuppliers.size(), is(2));\n+        assertThat(counter.get(), is(2));\n+    }\n+\n+    private void forceGC() {\n+        System.out.println(\"Start Memory cleanup\");\n+        Runtime runtime \u003d Runtime.getRuntime();\n+        int tableSize \u003d Double.valueOf(runtime.freeMemory() / 8 * 0.4).intValue();\n+        for (int i \u003d 0; i \u003c 3; i++) {\n+            fillMemoryConsumer(tableSize);\n+            System.gc();\n+        }\n+        System.out.println(\"End of Memory cleanup\");\n+    }\n+\n+    private void fillMemoryConsumer(int tableSize) {\n+        long[] memoryConsumer \u003d new long[tableSize];\n+        for (int i \u003d 0; i \u003c tableSize; i++) {\n+            memoryConsumer[i] \u003d i;\n+        }\n+    }\n+\n+    private void sleep() {\n+        sleep(SLEEP_TIME_MILLIS);\n+    }\n+\n+    private void sleep(int sleepTimeMillis) {\n+        try {\n+            Thread.sleep(sleepTimeMillis);\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Test\n+    public void testWeakWatcherWithBlockingSupplier() throws InterruptedException {\n+        BlockingSupplierRegistry registry \u003d newBlockingSupplierRegistry();\n+        getBlockingSupplierAndProvideSupplier(registry);\n+        forceGC();\n+        System.out.println(\"End of Memory cleanup\");\n+        sleep(MAIN_STEP_WAIT_TIME);\n+    }\n+\n+    private void getBlockingSupplierAndProvideSupplier(BlockingSupplierRegistry registry)\n+            throws InterruptedException {\n+        BlockingSupplier\u003cBoolean\u003e blockingSupplier \u003d registry.get(ID);\n+        assertThat(blockingSupplier.get(), is(nullValue()));\n+        registry.put(ID, ofInstance(TRUE));\n+        sleep();\n+        assertThat(blockingSupplier.getSync(), is(TRUE));\n+        System.out.println(\"End of watcher\");\n+        sleep(MAIN_STEP_WAIT_TIME);\n+    }\n+\n+    private static class BooleanWatcher implements Watcher\u003cBoolean\u003e {\n+        private final AtomicInteger counter;\n+\n+        public BooleanWatcher(AtomicInteger counter) {\n+            this.counter \u003d counter;\n+        }\n+\n+        @Nullable\n+        @Override\n+        public Supplier\u003cBoolean\u003e add(Supplier\u003cBoolean\u003e element) {\n+            counter.incrementAndGet();\n+            return element;\n+        }\n+\n+        @Override\n+        public void remove(Supplier\u003cBoolean\u003e element) {\n+            counter.decrementAndGet();\n+        }\n+    }\n+}"
        },
        {
          "file_name": "yar-parent/pom.xml",
          "patch": "@@ -46,6 +46,7 @@\n         \u003clogback-classic.version\u003e0.9.20\u003c/logback-classic.version\u003e\n         \u003cpax-url-aether.version\u003e1.5.2\u003c/pax-url-aether.version\u003e\n         \u003cmockito-all.version\u003e1.9.5\u003c/mockito-all.version\u003e\n+        \u003cslf4j.version\u003e1.7.6\u003c/slf4j.version\u003e\n     \u003c/properties\u003e\n \n \n@@ -124,6 +125,17 @@\n                 \u003cscope\u003etest\u003c/scope\u003e\n             \u003c/dependency\u003e\n             \u003cdependency\u003e\n+                \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\n+                \u003cartifactId\u003ejul-to-slf4j\u003c/artifactId\u003e\n+                \u003cversion\u003e${slf4j.version}\u003c/version\u003e\n+                \u003cscope\u003etest\u003c/scope\u003e\n+            \u003c/dependency\u003e\n+            \u003cdependency\u003e\n+                \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e\n+                \u003cartifactId\u003eslf4j-simple\u003c/artifactId\u003e\n+                \u003cversion\u003e${slf4j.version}\u003c/version\u003e\n+            \u003c/dependency\u003e\n+            \u003cdependency\u003e\n                 \u003cgroupId\u003ech.qos.logback\u003c/groupId\u003e\n                 \u003cartifactId\u003elogback-classic\u003c/artifactId\u003e\n                 \u003cversion\u003e${logback-classic.version}\u003c/version\u003e"
        }
      ]
    }
  },
  {
    "name": "Memory leak in jDiameter",
    "url": "https://github.com/RestComm/jdiameter/issues/23",
    "description": "Hi\n\nWe\u0027ve found a possible memory leak for Diameter session based RAs (e.g. Rx, Ro, Gx).  I want to see if the dev team agrees before raising it as a bug fix.\n\nLooking just at Ro:\norg.jdiameter.server.impl.app.ro.ServerRoSessionImpl.java\n\nFor CCA-U has Result-Code !\u003d SUCCESS the state machine does the following:\n\ncase SENT_UPDATE_RESPONSE:\n\nRoCreditControlAnswer answer \u003d (RoCreditControlAnswer) localEvent.getAnswer();\ntry {\nif(isSuccess(answer.getResultCodeAvp().getUnsigned32())) {\n// Current State: OPEN\n// Event: CC update request received and successfully processed\n// Action: Send CC update answer, debit used units, reserve new units, restart Tcc\n// New State: OPEN\nstartTcc(answer.getValidityTimeAvp());\nelse {\n// Current State: OPEN\n// Event: CC update request received but not successfully processed\n// Action: Send CC update answer with Result-Code !\u003d SUCCESS, debit used units\n// New State: IDLE\n// It\u0027s a failure, we wait for Tcc to fire -- FIXME: Alexandre: Should we?\n}\n\nSeen as how startTcc() is an empty method there doesn\u0027t seem to be any timer functionality.  So if an CCA-U has Result-Code !\u003d SUCCESS the activity stays in OPEN, never returns to IDLE and is never released.\n\nI tested and this prevents the memory leak.\n\n```\n            // It\u0027s a failure, we wait for Tcc to fire -- FIXME: Alexandre: Should we?\n```\n-                                    newState \u003d ServerRoSessionState.IDLE;\n                               }\n                           } catch (AvpDataException e) {\n                               throw new InternalException(e);\n                           }\n                           dispatchEvent(localEvent.getAnswer());\n-               if(newState !\u003d null) {\n-                            setState(newState);\n-           }\n                          break;\n\nThis is for ServerRoSessionImpl.java.\n\nThe same should be done for all session based RAs (ServerGxSessionImpl.java, ServerRxSessionImpl.java)\n",
    "keywords": [
      "cc",
      "new",
      "newstate",
      "memory",
      "e",
      "result-code",
      "update",
      "units",
      "leak",
      "java",
      "answer",
      "tcc",
      "success",
      "cc update",
      ";",
      "state",
      "ro",
      "open"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/RestComm/jdiameter/commit/d8bae844170117175920500a6800eef4652c2a9a",
      "files": [
        {
          "file_name": "core/jdiameter/impl/src/main/java/org/jdiameter/server/impl/app/cca/ServerCCASessionImpl.java",
          "patch": "@@ -200,7 +200,12 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                 // Action: Send CC initial answer, reserve units, start Tcc\r\n                 // New State: OPEN\r\n                 if (isSuccess(resultCode)) {\r\n-                  startTcc(answer.getValidityTimeAvp());\r\n+                  Avp vtAvp \u003d answer.getValidityTimeAvp();\r\n+                  if (vtAvp \u003d\u003d null) {\r\n+                    Avp mscc \u003d answer.getMessage().getAvps().getAvp(Avp.MULTIPLE_SERVICES_CREDIT_CONTROL);\r\n+                    vtAvp \u003d mscc !\u003d null ? mscc.getGrouped().getAvp(Avp.VALIDITY_TIME) : null;\r\n+                  }\r\n+                  startTcc(vtAvp);\r\n                   newState \u003d ServerCCASessionState.OPEN;\r\n                 }\r\n                 // Current State: IDLE\r\n@@ -253,7 +258,12 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                   // Event: CC update request received and successfully processed\r\n                   // Action: Send CC update answer, debit used units, reserve new units, restart Tcc\r\n                   // New State: OPEN\r\n-                  startTcc(answer.getValidityTimeAvp());\r\n+                  Avp vtAvp \u003d answer.getValidityTimeAvp();\r\n+                  if (vtAvp \u003d\u003d null) {\r\n+                    Avp mscc \u003d answer.getMessage().getAvps().getAvp(Avp.MULTIPLE_SERVICES_CREDIT_CONTROL);\r\n+                    vtAvp \u003d mscc !\u003d null ? mscc.getGrouped().getAvp(Avp.VALIDITY_TIME) : null;\r\n+                  }\r\n+                  startTcc(vtAvp);\r\n                 }\r\n                 else {\r\n                   // Current State: OPEN\r\n@@ -397,6 +407,8 @@ private void startTcc(Avp validityAvp) {\n       tccTimeout \u003d 2 * context.getDefaultValidityTime();\r\n     }\r\n \r\n+    logger.debug(\"Starting TCC timer with Validity-Avp[{}] and tccTimeout[{}] seconds\", validityAvp, tccTimeout);\r\n+\r\n     if (sessionData.getTccTimerId() !\u003d null) {\r\n       stopTcc(true);\r\n       //tccFuture \u003d super.scheduler.schedule(new TccScheduledTask(this), defaultValue, TimeUnit.SECONDS);\r"
        },
        {
          "file_name": "core/jdiameter/impl/src/main/java/org/jdiameter/server/impl/app/gx/ServerGxSessionImpl.java",
          "patch": "@@ -252,12 +252,16 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                   // New State: IDLE\n \n                   // It\u0027s a failure, we wait for Tcc to fire -- FIXME: Alexandre: Should we?\n+                  newState \u003d ServerGxSessionState.IDLE;\n                 }\n               }\n               catch (AvpDataException e) {\n                 throw new InternalException(e);\n               }\n               dispatchEvent(localEvent.getAnswer());\n+              if (newState !\u003d null) {\n+                setState(newState);\n+              }\n               break;\n             case RECEIVED_TERMINATE:\n               listener.doCreditControlRequest(this, (GxCreditControlRequest) localEvent.getRequest());"
        },
        {
          "file_name": "core/jdiameter/impl/src/main/java/org/jdiameter/server/impl/app/ro/ServerRoSessionImpl.java",
          "patch": "@@ -200,7 +200,9 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                 // Action: Send CC initial answer, reserve units, start Tcc\r\n                 // New State: OPEN\r\n                 if (isSuccess(resultCode)) {\r\n-                  startTcc(answer.getValidityTimeAvp());\r\n+                  Avp mscc \u003d answer.getMessage().getAvps().getAvp(Avp.MULTIPLE_SERVICES_CREDIT_CONTROL);\r\n+                  Avp vtAvp \u003d mscc !\u003d null ? mscc.getGrouped().getAvp(Avp.VALIDITY_TIME) : null;\r\n+                  startTcc(vtAvp);\r\n                   newState \u003d ServerRoSessionState.OPEN;\r\n                 }\r\n                 // Current State: IDLE\r\n@@ -254,7 +256,9 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                   // Event: CC update request received and successfully processed\r\n                   // Action: Send CC update answer, debit used units, reserve new units, restart Tcc\r\n                   // New State: OPEN\r\n-                  startTcc(answer.getValidityTimeAvp());\r\n+                  Avp mscc \u003d answer.getMessage().getAvps().getAvp(Avp.MULTIPLE_SERVICES_CREDIT_CONTROL);\r\n+                  Avp vtAvp \u003d mscc !\u003d null ? mscc.getGrouped().getAvp(Avp.VALIDITY_TIME) : null;\r\n+                  startTcc(vtAvp);\r\n                 }\r\n                 else {\r\n                   // Current State: OPEN\r\n@@ -390,36 +394,36 @@ public void timeoutExpired(Request request) {\n   }\r\n \r\n   private void startTcc(Avp validityAvp) {\r\n-    // There is no Validity-Time\r\n-    //long tccTimeout;\r\n-    //\r\n-    //if(validityAvp !\u003d null) {\r\n-    //  try {\r\n-    //    tccTimeout \u003d 2 * validityAvp.getUnsigned32();\r\n-    //  }\r\n-    //  catch (AvpDataException e) {\r\n-    //    logger.debug(\"Unable to retrieve Validity-Time AVP value, using default.\", e);\r\n-    //    tccTimeout \u003d 2 * context.getDefaultValidityTime();\r\n-    //  }\r\n-    //}\r\n-    //else {\r\n-    //  tccTimeout \u003d 2 * context.getDefaultValidityTime();\r\n-    //}\r\n-    //\r\n-    //if(tccTimerId !\u003d null) {\r\n-    //  stopTcc(true);\r\n-    //  //tccFuture \u003d super.scheduler.schedule(new TccScheduledTask(this), defaultValue, TimeUnit.SECONDS);\r\n-    //  tccTimerId \u003d super.timerFacility.schedule(this.sessionId, TCC_TIMER_NAME, tccTimeout * 1000);\r\n-    //  // FIXME: this accepts Future!\r\n-    //  context.sessionSupervisionTimerReStarted(this, null);\r\n-    //}\r\n-    //else {\r\n-    //  //tccFuture \u003d super.scheduler.schedule(new TccScheduledTask(this), defaultValue, TimeUnit.SECONDS);\r\n-    //  tccTimerId \u003d super.timerFacility.schedule(this.sessionId, TCC_TIMER_NAME, tccTimeout * 1000);\r\n-    //  //FIXME: this accepts Future!\r\n-    //  context.sessionSupervisionTimerStarted(this, null);\r\n-    //}\r\n-    //super.sessionDataSource.updateSession(this);\r\n+    long tccTimeout;\r\n+\r\n+    if (validityAvp !\u003d null) {\r\n+      try {\r\n+        tccTimeout \u003d 2 * validityAvp.getUnsigned32();\r\n+      }\r\n+      catch (AvpDataException e) {\r\n+        logger.debug(\"Unable to retrieve Validity-Time AVP value, using default.\", e);\r\n+        tccTimeout \u003d 2 * context.getDefaultValidityTime();\r\n+      }\r\n+    }\r\n+    else {\r\n+      tccTimeout \u003d 2 * context.getDefaultValidityTime();\r\n+    }\r\n+\r\n+    logger.debug(\"Starting TCC timer with Validity-Avp[{}] and tccTimeout[{}] seconds\", validityAvp, tccTimeout);\r\n+\r\n+    if (sessionData.getTccTimerId() !\u003d null) {\r\n+      stopTcc(true);\r\n+      //tccFuture \u003d super.scheduler.schedule(new TccScheduledTask(this), defaultValue, TimeUnit.SECONDS);\r\n+      this.sessionData.setTccTimerId(super.timerFacility.schedule(this.getSessionId(), TCC_TIMER_NAME, tccTimeout * 1000));\r\n+      // FIXME: this accepts Future!\r\n+      context.sessionSupervisionTimerReStarted(this, null);\r\n+    }\r\n+    else {\r\n+      //tccFuture \u003d super.scheduler.schedule(new TccScheduledTask(this), defaultValue, TimeUnit.SECONDS);\r\n+      this.sessionData.setTccTimerId(super.timerFacility.schedule(this.getSessionId(),  TCC_TIMER_NAME, tccTimeout * 1000));\r\n+      //FIXME: this accepts Future!\r\n+      context.sessionSupervisionTimerStarted(this, null);\r\n+    }\r\n   }\r\n \r\n   /*\r\n@@ -441,12 +445,12 @@ else if (timerName.equals(TCC_TIMER_NAME)) {\n   }\r\n \r\n   private void stopTcc(boolean willRestart) {\r\n-    Serializable tccTimerId \u003d sessionData.getTccTimerId();\r\n+    Serializable tccTimerId \u003d this.sessionData.getTccTimerId();\r\n     if (tccTimerId !\u003d null) {\r\n       // tccFuture.cancel(false);\r\n       super.timerFacility.cancel(tccTimerId);\r\n       // ScheduledFuture f \u003d tccFuture;\r\n-      sessionData.setTccTimerId(null);\r\n+      this.sessionData.setTccTimerId(null);\r\n       if (!willRestart) {\r\n         context.sessionSupervisionTimerStopped(this, null);\r\n       }\r"
        },
        {
          "file_name": "core/jdiameter/impl/src/main/java/org/jdiameter/server/impl/app/rx/ServerRxSessionImpl.java",
          "patch": "@@ -246,6 +246,7 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                   // Action: Send AA update answer with Result-Code !\u003d SUCCESS\n                   // New State: IDLE\n                   // It\u0027s a failure, we wait for Tcc to fire -- FIXME: Alexandre: Should we?\n+                  newState \u003d ServerRxSessionState.IDLE;\n                 }\n               }\n               catch (AvpDataException e) {\n@@ -271,6 +272,7 @@ public boolean handleEvent(StateEvent event) throws InternalException, OverloadE\n                   // Action: Send AA update answer with Result-Code !\u003d SUCCESS\n                   // New State: IDLE\n                   // It\u0027s a failure, we wait for Tcc to fire -- FIXME: Alexandre: Should we?\n+                  newState \u003d ServerRxSessionState.IDLE;\n                 }\n               }\n               catch (AvpDataException e) {"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak in SingleScheduler.schedule",
    "url": "https://github.com/reactor/reactor-core/pull/581",
    "description": "This PR fixes the memory leak in `SingleScheduler` due to submitting the wrong thing on line 193.\r\n\r\nRelated: #578",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/reactor/reactor-core/commit/ae54548c922c87574b711d86cec3a754b9e7e859",
      "files": [
        {
          "file_name": "src/main/java/reactor/core/scheduler/SingleScheduler.java",
          "patch": "@@ -190,7 +190,7 @@ public Disposable schedule(Runnable task, long delay, TimeUnit unit) {\n \t\t\ttry {\n \t\t\t\tFuture\u003c?\u003e f;\n \t\t\t\tif (delay \u003c\u003d 0L) {\n-\t\t\t\t\tf \u003d exec.submit(task);\n+\t\t\t\t\tf \u003d exec.submit(sr);\n \t\t\t\t}\n \t\t\t\telse {\n \t\t\t\t\tf \u003d exec.schedule(sr, delay, unit);"
        },
        {
          "file_name": "src/test/java/reactor/core/scheduler/SingleSchedulerTest.java",
          "patch": "@@ -15,16 +15,18 @@\n  */\n package reactor.core.scheduler;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.lang.management.ManagementFactory;\n import java.time.Duration;\n-import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.*;\n import java.util.concurrent.atomic.AtomicLong;\n \n-import org.junit.Test;\n-import reactor.core.publisher.Flux;\n-import reactor.core.publisher.Mono;\n-import reactor.test.StepVerifier;\n+import org.junit.*;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import reactor.core.publisher.*;\n+import reactor.core.scheduler.Scheduler.Worker;\n+import reactor.test.StepVerifier;\n \n /**\n  * @author Stephane Maldini\n@@ -93,4 +95,35 @@ public void smokeTestInterval() {\n \t\t\ts.dispose();\n \t\t}\n \t}\n+\n+\t@Test\n+\tpublic void lotsOfTasks() throws Exception {\n+\t    System.gc();\n+\t    Thread.sleep(200);\n+\t    long before \u003d ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();\n+\t    Scheduler s \u003d Schedulers.newSingle(\"scheduler\");\n+\t    try {\n+\t        Worker w \u003d s.createWorker();\n+\t        try {\n+\t            CountDownLatch cdl \u003d new CountDownLatch(1_000_000);\n+\t            Runnable r \u003d cdl::countDown;\n+    \t        for (int i \u003d 0; i \u003c 1_000_000; i++) {\n+    \t            w.schedule(r);\n+    \t        }\n+    \t        \n+    \t        Assert.assertTrue(cdl.await(5, TimeUnit.SECONDS));\n+\n+    \t        System.gc();\n+    \t        Thread.sleep(200);\n+\n+                long after \u003d ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();\n+\n+    \t        Assert.assertTrue(String.format(\"%,d -\u003e %,d\", before, after), before + 20_000_000 \u003e after);\n+\t        } finally {\n+\t            w.dispose();\n+\t        }\n+\t    } finally {\n+\t        s.dispose();\n+\t    }\n+\t}\n }"
        }
      ]
    }
  },
  {
    "name": "Memory leaks when using concatMap and subscribeOn Schedulers.newSingle",
    "url": "https://github.com/reactor/reactor-core/issues/578",
    "description": "When running the following test:\r\n```\r\n@Test\r\n    public void test() throws Exception {\r\n        AtomicLong counter \u003d new AtomicLong(0L);\r\n        Scheduler scheduler \u003d Schedulers.newParallel(\"scheduler\", 10);\r\n        Flux\r\n            .\u003cLong\u003egenerate(sink -\u003e sink.next(counter.getAndIncrement()))\r\n            .concatMap(i -\u003e {\r\n                return Mono.just(i)\r\n                    .publishOn(scheduler)\r\n                    .map(number -\u003e number * 2L);\r\n            })\r\n            .subscribeOn(Schedulers.newSingle(\"subscriber\"))\r\n            .subscribe(new BaseSubscriber\u003cLong\u003e() {\r\n                @Override\r\n                protected void hookOnSubscribe(Subscription subscription) {\r\n                    subscription.request(10);\r\n                }\r\n\r\n                @Override\r\n                protected void hookOnNext(Long value) {\r\n                    upstream().request(1);\r\n                }\r\n            });\r\n\r\n        Thread.sleep(100000000);\r\n    }\r\n```\r\nMemory starts to leak.\r\nThanks to @dfeist the leak seems to be here `reactor.core.scheduler.SingleScheduler.SingleWorker#tasks` and as a workaround scheduler can be replaced with\r\n`.subscribeOn(Schedulers.fromExecutorService(Executors.newSingleThreadExecutor()))`.",
    "keywords": [
      "scheduler",
      "-\u003e",
      "void",
      "subscribeon",
      "schedulers",
      "subscription",
      ";",
      "subscribeon schedulers"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/reactor/reactor-core/commit/ae54548c922c87574b711d86cec3a754b9e7e859",
      "files": [
        {
          "file_name": "src/main/java/reactor/core/scheduler/SingleScheduler.java",
          "patch": "@@ -190,7 +190,7 @@ public Disposable schedule(Runnable task, long delay, TimeUnit unit) {\n \t\t\ttry {\n \t\t\t\tFuture\u003c?\u003e f;\n \t\t\t\tif (delay \u003c\u003d 0L) {\n-\t\t\t\t\tf \u003d exec.submit(task);\n+\t\t\t\t\tf \u003d exec.submit(sr);\n \t\t\t\t}\n \t\t\t\telse {\n \t\t\t\t\tf \u003d exec.schedule(sr, delay, unit);"
        },
        {
          "file_name": "src/test/java/reactor/core/scheduler/SingleSchedulerTest.java",
          "patch": "@@ -15,16 +15,18 @@\n  */\n package reactor.core.scheduler;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.lang.management.ManagementFactory;\n import java.time.Duration;\n-import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.*;\n import java.util.concurrent.atomic.AtomicLong;\n \n-import org.junit.Test;\n-import reactor.core.publisher.Flux;\n-import reactor.core.publisher.Mono;\n-import reactor.test.StepVerifier;\n+import org.junit.*;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import reactor.core.publisher.*;\n+import reactor.core.scheduler.Scheduler.Worker;\n+import reactor.test.StepVerifier;\n \n /**\n  * @author Stephane Maldini\n@@ -93,4 +95,35 @@ public void smokeTestInterval() {\n \t\t\ts.dispose();\n \t\t}\n \t}\n+\n+\t@Test\n+\tpublic void lotsOfTasks() throws Exception {\n+\t    System.gc();\n+\t    Thread.sleep(200);\n+\t    long before \u003d ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();\n+\t    Scheduler s \u003d Schedulers.newSingle(\"scheduler\");\n+\t    try {\n+\t        Worker w \u003d s.createWorker();\n+\t        try {\n+\t            CountDownLatch cdl \u003d new CountDownLatch(1_000_000);\n+\t            Runnable r \u003d cdl::countDown;\n+    \t        for (int i \u003d 0; i \u003c 1_000_000; i++) {\n+    \t            w.schedule(r);\n+    \t        }\n+    \t        \n+    \t        Assert.assertTrue(cdl.await(5, TimeUnit.SECONDS));\n+\n+    \t        System.gc();\n+    \t        Thread.sleep(200);\n+\n+                long after \u003d ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();\n+\n+    \t        Assert.assertTrue(String.format(\"%,d -\u003e %,d\", before, after), before + 20_000_000 \u003e after);\n+\t        } finally {\n+\t            w.dispose();\n+\t        }\n+\t    } finally {\n+\t        s.dispose();\n+\t    }\n+\t}\n }"
        }
      ]
    }
  },
  {
    "name": "GoogleApiClient hopeful memory leak fix. ",
    "url": "https://github.com/gdg-x/frisbee/pull/468",
    "description": "Listeners are registered in onStart and unregistered in onStop\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/gdg-x/frisbee/commit/78ef21993b776f805fecea989325dff06b8ef6a9",
      "files": [
        {
          "file_name": "app/src/main/java/org/gdg/frisbee/android/common/GdgActivity.java",
          "patch": "@@ -108,8 +108,6 @@ public void onCreate(Bundle savedInstanceState) {\n         if (!Utils.isEmulator()) {\n \n             mGoogleApiClient \u003d new GoogleApiClient.Builder(this)\n-                    .addConnectionCallbacks(this)\n-                    .addOnConnectionFailedListener(this)\n                     .addApi(Plus.API)\n                     .addApi(Games.API)\n                     .addApi(AppStateManager.API)\n@@ -127,6 +125,9 @@ public void onCreate(Bundle savedInstanceState) {\n     protected void onStart() {\n         super.onStart();\n \n+        mGoogleApiClient.registerConnectionCallbacks(this);\n+        mGoogleApiClient.registerConnectionFailedListener(this);\n+\n         if (PrefUtils.isSignedIn(this)) {\n             mGoogleApiClient.connect();\n         }\n@@ -136,6 +137,9 @@ protected void onStart() {\n     protected void onStop() {\n         super.onStop();\n \n+        mGoogleApiClient.unregisterConnectionCallbacks(this);\n+        mGoogleApiClient.unregisterConnectionFailedListener(this);\n+\n         if (PrefUtils.isSignedIn(this) \u0026\u0026 mGoogleApiClient.isConnected()) {\n             mGoogleApiClient.disconnect();\n         }"
        }
      ]
    }
  },
  {
    "name": "NMS-8589: Fix Memory Leak and Thread Leak for TopologyUI and NodeMapsApplication",
    "url": "https://github.com/OpenNMS/opennms/pull/896",
    "description": "- JIRA: http://issues.opennms.org/browse/NMS-8589\n- BAMBOO: http://bamboo.internal.opennms.com:8085/browse/OPENNMS-ONMS845\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/OpenNMS/opennms/commit/279b12c69b8f853dcce87d29dfb5326cc9ca5bf6",
      "files": [
        {
          "file_name": "features/topology-map/org.opennms.features.topology.api/src/main/java/org/opennms/features/topology/api/WidgetManager.java",
          "patch": "@@ -43,8 +43,8 @@\n public class WidgetManager {\n     private static final Logger LOG \u003d LoggerFactory.getLogger(WidgetManager.class);\n \n-    private List\u003cIViewContribution\u003e m_viewContributors \u003d new CopyOnWriteArrayList\u003cIViewContribution\u003e();\n-    private List\u003cWidgetUpdateListener\u003e m_listeners \u003d new CopyOnWriteArrayList\u003cWidgetUpdateListener\u003e();\n+    private List\u003cIViewContribution\u003e m_viewContributors \u003d new CopyOnWriteArrayList\u003c\u003e();\n+    private List\u003cWidgetUpdateListener\u003e m_listeners \u003d new CopyOnWriteArrayList\u003c\u003e();\n     \n     private Comparator\u003cIViewContribution\u003e TITLE_COMPARATOR \u003d new Comparator\u003cIViewContribution\u003e() {\n         @Override\n@@ -56,15 +56,14 @@ public int compare(final IViewContribution o1, final IViewContribution o2) {\n     public WidgetManager() {}\n     \n     public void addUpdateListener(final WidgetUpdateListener listener) {\n-        LOG.info(\"Adding WidgetUpdateListener {} to WidgetManager {}\", listener, this);\n+        LOG.debug(\"Adding WidgetUpdateListener {} to WidgetManager {}\", listener, this);\n         synchronized (m_listeners) {\n             m_listeners.add(listener);\n-            updateWidgetListeners();\n         }\n     }\n \n     public void removeUpdateListener(final WidgetUpdateListener listener) {\n-        LOG.info(\"Removing WidgetUpdateListener {} from WidgetManager {}\", listener, this);\n+        LOG.debug(\"Removing WidgetUpdateListener {} from WidgetManager {}\", listener, this);\n         synchronized (m_listeners) {\n             m_listeners.remove(listener);\n         }\n@@ -80,7 +79,7 @@ public int widgetCount() {\n      * @return List\u003cIViewContribution\u003e\n      */\n     public List\u003cIViewContribution\u003e getWidgets(){\n-        final List\u003cIViewContribution\u003e widgets \u003d new ArrayList\u003cIViewContribution\u003e();\n+        final List\u003cIViewContribution\u003e widgets \u003d new ArrayList\u003c\u003e();\n         widgets.addAll(m_viewContributors);\n         // Sort the widgets by their title\n         Collections.sort(widgets, TITLE_COMPARATOR);"
        },
        {
          "file_name": "features/topology-map/org.opennms.features.topology.app/src/main/java/org/opennms/features/topology/app/internal/TopologyUI.java",
          "patch": "@@ -111,6 +111,7 @@\n import com.vaadin.server.Page.UriFragmentChangedEvent;\n import com.vaadin.server.Page.UriFragmentChangedListener;\n import com.vaadin.server.RequestHandler;\n+import com.vaadin.server.SessionDestroyListener;\n import com.vaadin.server.ThemeResource;\n import com.vaadin.server.VaadinRequest;\n import com.vaadin.server.VaadinResponse;\n@@ -573,6 +574,9 @@ public TopologyUI(CommandManager commandManager, HistoryManager historyManager,\n \n \t@Override\n     protected void init(final VaadinRequest request) {\n+        // Register a cleanup\n+        request.getService().addSessionDestroyListener((SessionDestroyListener) event -\u003e m_widgetManager.removeUpdateListener(TopologyUI.this));\n+\n         try {\n             m_headerHtml \u003d getHeader(((VaadinServletRequest) request).getHttpServletRequest());\n         } catch (final Exception e) {\n@@ -1025,24 +1029,23 @@ private void applyHistory(String username, String fragment) {\n      * @param widgetManager The WidgetManager.\n      */\n     private void updateWidgetView(WidgetManager widgetManager) {\n-        if (m_layout !\u003d null) {\n-            synchronized (m_layout) {\n-                m_layout.removeAllComponents();\n-                if(widgetManager.widgetCount() \u003d\u003d 0) {\n-                    m_layout.addComponent(m_treeMapSplitPanel);\n-                } else {\n-                    VerticalSplitPanel bottomLayoutBar \u003d new VerticalSplitPanel();\n-                    bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n-                    // Split the screen 70% top, 30% bottom\n-                    bottomLayoutBar.setSplitPosition(70, Unit.PERCENTAGE);\n-                    bottomLayoutBar.setSizeFull();\n-                    bottomLayoutBar.setSecondComponent(getTabSheet(widgetManager, this));\n-                    m_layout.addComponent(bottomLayoutBar);\n-                    updateTabVisibility();\n-                }\n-                m_layout.markAsDirty();\n+        synchronized (m_layout) {\n+            m_layout.removeAllComponents();\n+            if(widgetManager.widgetCount() \u003d\u003d 0) {\n+                m_layout.addComponent(m_treeMapSplitPanel);\n+            } else {\n+                VerticalSplitPanel bottomLayoutBar \u003d new VerticalSplitPanel();\n+                bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n+                // Split the screen 70% top, 30% bottom\n+                bottomLayoutBar.setSplitPosition(70, Unit.PERCENTAGE);\n+                bottomLayoutBar.setSizeFull();\n+                bottomLayoutBar.setSecondComponent(getTabSheet(widgetManager, this));\n+                m_layout.addComponent(bottomLayoutBar);\n+                updateTabVisibility();\n             }\n+            m_layout.markAsDirty();\n         }\n+        m_layout.markAsDirty();\n     }\n \n     /**\n@@ -1241,19 +1244,14 @@ public WidgetManager getWidgetManager() {\n     }\n \n     public void setWidgetManager(WidgetManager widgetManager) {\n-        if(m_widgetManager !\u003d null) {\n-            m_widgetManager.removeUpdateListener(this);\n-        }\n         m_widgetManager \u003d widgetManager;\n         m_widgetManager.addUpdateListener(this);\n     }\n \n     @Override\n     public void widgetListUpdated(WidgetManager widgetManager) {\n-        if(!isClosing()) {\n-            if(widgetManager \u003d\u003d m_widgetManager) {\n-                updateWidgetView(widgetManager);\n-            }\n+        if(isAttached()) {\n+            updateWidgetView(widgetManager);\n         }\n     }\n "
        },
        {
          "file_name": "features/topology-map/org.opennms.features.topology.app/src/main/resources/OSGI-INF/blueprint/blueprint.xml",
          "patch": "@@ -137,16 +137,11 @@ http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 http://aries.apache.org/schemas/b\n     \u003c/reference-list\u003e\n     \n     \u003cbean id\u003d\"widgetManager\" class\u003d\"org.opennms.features.topology.api.WidgetManager\" /\u003e\n-    \u003cbean id\u003d\"treeWidgetManager\" class\u003d\"org.opennms.features.topology.api.WidgetManager\" /\u003e\n-    \n+\n     \u003creference-list interface\u003d\"org.opennms.features.topology.api.IViewContribution\" availability\u003d\"optional\" filter\u003d\"(location\u003dbottom)\"\u003e\n         \u003creference-listener bind-method\u003d\"onBind\" unbind-method\u003d\"onUnbind\" ref\u003d\"widgetManager\"/\u003e\n     \u003c/reference-list\u003e\n-    \n-    \u003c!--\u003creference-list interface\u003d\"org.opennms.features.topology.api.IViewContribution\" availability\u003d\"optional\" filter\u003d\"(location\u003dleft)\"\u003e\n-        \u003creference-listener bind-method\u003d\"onBind\" unbind-method\u003d\"onUnbind\" ref\u003d\"treeWidgetManager\"/\u003e\n-    \u003c/reference-list\u003e--\u003e\n-    \n+\n     \u003cservice interface\u003d\"org.osgi.service.cm.ManagedService\" \u003e\n         \u003cservice-properties\u003e\n             \u003centry key\u003d\"service.pid\" value\u003d\"org.opennms.features.topology.app.menu\"/\u003e"
        },
        {
          "file_name": "features/vaadin-node-maps/src/main/java/org/opennms/features/vaadin/nodemaps/internal/MapWidgetComponent.java",
          "patch": "@@ -33,10 +33,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.ScheduledExecutorService;\n-import java.util.concurrent.ThreadFactory;\n-import java.util.concurrent.TimeUnit;\n \n import org.opennms.core.criteria.CriteriaBuilder;\n import org.opennms.core.criteria.restrictions.Restrictions;\n@@ -61,39 +57,22 @@\n import org.springframework.transaction.support.TransactionCallbackWithoutResult;\n import org.springframework.transaction.support.TransactionOperations;\n \n-import com.github.wolfie.refresher.Refresher;\n-\n /**\n  * @author Marcus Hellberg (marcus@vaadin.com)\n  */\n public class MapWidgetComponent extends NodeMapComponent implements GeoAssetProvider {\n \n-    private class DynamicUpdateRefresher implements Refresher.RefreshListener{\n-        private static final long serialVersionUID \u003d 801233170298353060L;\n-\n-        @Override\n-        public void refresh(Refresher refresher) {\n-            refreshView();\n-        }\n-    }\n-\n     private static final long serialVersionUID \u003d -6364929103619363239L;\n     private static final Logger LOG \u003d LoggerFactory.getLogger(MapWidgetComponent.class);\n \n-    private final ScheduledExecutorService m_executor \u003d Executors.newScheduledThreadPool(1, new ThreadFactory() {\n-        @Override public Thread newThread(final Runnable runnable) {\n-            return new Thread(runnable, \"NodeMapUpdater-Thread\");\n-        }\n-    });\n-\n     private NodeDao m_nodeDao;\n     private AssetRecordDao m_assetDao;\n     private AlarmDao m_alarmDao;\n     private GeocoderService m_geocoderService;\n     private TransactionOperations m_transaction;\n     private Boolean m_aclsEnabled \u003d false;\n \n-    private Map\u003cInteger,NodeEntry\u003e m_activeNodes \u003d new HashMap\u003cInteger,NodeEntry\u003e();\n+    private Map\u003cInteger,NodeEntry\u003e m_activeNodes \u003d new HashMap\u003c\u003e();\n \n     public NodeDao getNodeDao() {\n         return m_nodeDao;\n@@ -131,30 +110,8 @@ public void setTransactionOperations(final TransactionOperations tx) {\n         m_transaction \u003d tx;\n     }\n \n-    public void init() {\n-        m_executor.scheduleWithFixedDelay(new Runnable() {\n-            @Override public void run() {\n-                refreshNodeData();\n-            }\n-        }, 0, 5, TimeUnit.MINUTES);\n-        checkAclsEnabled();\n-        setupAutoRefresher();\n-    }\n-\n-    private void checkAclsEnabled() {\n-        String aclsPropValue \u003d System.getProperty(\"org.opennms.web.aclsEnabled\");\n-        m_aclsEnabled \u003d aclsPropValue !\u003d null \u0026\u0026 aclsPropValue.equals(\"true\");\n-    }\n-\n-    public void setupAutoRefresher(){\n-        Refresher refresher \u003d new Refresher();\n-        refresher.setRefreshInterval(5000); //Pull every two seconds for view updates\n-        refresher.addListener(new DynamicUpdateRefresher());\n-        addExtension(refresher);\n-    }\n-\n-    public void refresh() {\n-        refreshView();\n+    public MapWidgetComponent() {\n+        m_aclsEnabled \u003d Boolean.valueOf(System.getProperty(\"org.opennms.web.aclsEnabled\", \"false\"));\n     }\n \n     @Override\n@@ -166,7 +123,7 @@ public void refresh() {\n         return nodes;\n     }\n \n-    private void refreshView() {\n+    public void refresh() {\n         if(m_aclsEnabled) {\n             Map\u003cInteger, String\u003e nodes \u003d getNodeDao().getAllLabelsById();\n \n@@ -180,7 +137,7 @@ private void refreshView() {\n         }\n     }\n \n-    private void refreshNodeData() {\n+    public void refreshNodeData() {\n         if (getNodeDao() \u003d\u003d null) {\n             LOG.warn(\"No node DAO!  Can\u0027t refresh node data.\");\n             return;"
        },
        {
          "file_name": "features/vaadin-node-maps/src/main/java/org/opennms/features/vaadin/nodemaps/internal/NodeMapsApplication.java",
          "patch": "@@ -34,6 +34,10 @@\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.TimeUnit;\n \n import org.opennms.features.topology.api.HasExtraComponents;\n import org.opennms.features.topology.api.VerticesUpdateManager.VerticesUpdateEvent;\n@@ -55,6 +59,8 @@\n import com.vaadin.annotations.Theme;\n import com.vaadin.annotations.Title;\n import com.vaadin.server.Page;\n+import com.vaadin.server.SessionDestroyEvent;\n+import com.vaadin.server.SessionDestroyListener;\n import com.vaadin.server.VaadinRequest;\n import com.vaadin.ui.AbsoluteLayout;\n import com.vaadin.ui.Alignment;\n@@ -120,8 +126,7 @@\n })\n public class NodeMapsApplication extends UI {\n     private static final Logger LOG \u003d LoggerFactory.getLogger(NodeMapsApplication.class);\n-    // private static final int REFRESH_INTERVAL \u003d 5 * 60 * 1000;\n-    private static final int REFRESH_INTERVAL \u003d 10 * 1000;\n+    private static final int REFRESH_INTERVAL \u003d 5 * 1000;\n     private VerticalLayout m_rootLayout;\n     private VerticalLayout m_layout;\n \n@@ -132,6 +137,12 @@\n     private AlarmTable m_alarmTable;\n     private NodeTable m_nodeTable;\n \n+    private final ScheduledExecutorService m_executor \u003d Executors.newScheduledThreadPool(1, new ThreadFactory() {\n+        @Override public Thread newThread(final Runnable runnable) {\n+            return new Thread(runnable, \"NodeMapUpdater-Thread\");\n+        }\n+    });\n+\n     public void setHeaderProvider(final OnmsHeaderProvider headerProvider) {\n         m_headerProvider \u003d headerProvider;\n     }\n@@ -153,23 +164,15 @@ public void setNodeTable(final NodeTable table) {\n     }\n \n     private void updateWidgetView() {\n-        if (m_layout !\u003d null) {\n-            synchronized (m_layout) {\n-                m_layout.removeAllComponents();\n-\n-                final VerticalSplitPanel bottomLayoutBar \u003d new VerticalSplitPanel();\n-                bottomLayoutBar.setFirstComponent(m_mapWidgetComponent);\n-\n-                // Split the screen 70% top, 30% bottom\n-                bottomLayoutBar.setSplitPosition(70, Unit.PERCENTAGE);\n-                bottomLayoutBar.setSizeFull();\n-                bottomLayoutBar.setSecondComponent(getTabSheet());\n-                m_layout.addComponent(bottomLayoutBar);\n-                m_layout.markAsDirty();\n-            }\n-        } else {\n-            LOG.warn(\"updateWidgetView() called, but there\u0027s no layout yet!\");\n-        }\n+        final VerticalSplitPanel bottomLayoutBar \u003d new VerticalSplitPanel();\n+        bottomLayoutBar.setFirstComponent(m_mapWidgetComponent);\n+\n+        // Split the screen 70% top, 30% bottom\n+        bottomLayoutBar.setSplitPosition(70, Unit.PERCENTAGE);\n+        bottomLayoutBar.setSizeFull();\n+        bottomLayoutBar.setSecondComponent(getTabSheet());\n+        m_layout.addComponent(bottomLayoutBar);\n+        m_layout.markAsDirty();\n     }\n \n     /**\n@@ -285,6 +288,18 @@ protected void init(final VaadinRequest vaadinRequest) {\n         createMapPanel(searchString, maxClusterRadius);\n         createRootLayout();\n         addRefresher();\n+\n+        // Schedule refresh of node data\n+        m_executor.scheduleWithFixedDelay(() -\u003e m_mapWidgetComponent.refreshNodeData(), 0, 5, TimeUnit.MINUTES);\n+\n+        // If we do not shutdown the executor, the scheduler keeps refreshing the node data, even if the\n+        // UI may already been detached, resulting at one point in a OutOfMemory. See NMS-8589.\n+        vaadinRequest.getService().addSessionDestroyListener(new SessionDestroyListener() {\n+            @Override\n+            public void sessionDestroy(SessionDestroyEvent event) {\n+                m_executor.shutdown();\n+            }\n+        });\n     }\n \n     private void createMapPanel(final String searchString, final int maxClusterRadius) {\n@@ -349,6 +364,7 @@ private void closeQuietly(InputStream is) {\n     private void addRefresher() {\n         final Refresher refresher \u003d new Refresher();\n         refresher.setRefreshInterval(REFRESH_INTERVAL);\n+        refresher.addListener((theRefresher) -\u003e m_mapWidgetComponent.refresh());\n         addExtension(refresher);\n     }\n "
        },
        {
          "file_name": "features/vaadin-node-maps/src/main/resources/OSGI-INF/blueprint/blueprint.xml",
          "patch": "@@ -166,7 +166,7 @@\n \t\t\u003c/cm:default-properties\u003e\n \t\u003c/cm:property-placeholder\u003e\n \n-\t\u003cbean id\u003d\"mapWidget\" class\u003d\"org.opennms.features.vaadin.nodemaps.internal.MapWidgetComponent\" scope\u003d\"prototype\" init-method\u003d\"init\"\u003e\n+\t\u003cbean id\u003d\"mapWidget\" class\u003d\"org.opennms.features.vaadin.nodemaps.internal.MapWidgetComponent\" scope\u003d\"prototype\"\u003e\n \t\t\u003cproperty name\u003d\"nodeDao\" ref\u003d\"nodeDao\" /\u003e\n \t\t\u003cproperty name\u003d\"assetRecordDao\" ref\u003d\"assetDao\" /\u003e\n \t\t\u003cproperty name\u003d\"alarmDao\" ref\u003d\"alarmDao\" /\u003e"
        }
      ]
    }
  },
  {
    "name": "Every WFS update leaks memory",
    "url": "https://github.com/GeoWebCache/geowebcache/issues/154",
    "description": "Using the packaged GWC integration with GeoServer 2.2\n\n**Steps to reproduce**\n1. We have the web cache integration turned on\n2. Configure the WFS layer to be cached\n3. Update WFS layers regularly via rest (our updates can happen as often as every second)\n4. GWC integration uses a TransactionPlugin to listen for WFS Transaction commits and automatically truncates the appropriate tiles from the associated tile layers\n5. This truncate starts several tasks (1 per projection/format pair)\n\n**Results**\nEach task gets a reference in the TileBreeder.currentPool\nOur testing shows that eventually GeoServer runs out of memory\n\n**Expected Results**\nTileBreeder.drain is called periodically to remove completed tasks\n\n**Workaround**\nVisit http://\u003cserver\u003e:8080/geoserver/gwc/rest/seed.json which will trigger the TileBreeder.drain method and free up the memory.\n",
    "keywords": [
      "2",
      "memory",
      "wfs",
      "integration",
      "tilebreeder"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/GeoWebCache/geowebcache/commit/fabcb52e11339f102218aabb4ec64d3d35d8b57f",
      "files": [
        {
          "file_name": "geowebcache/core/src/main/java/org/geowebcache/seed/TileBreeder.java",
          "patch": "@@ -136,6 +136,10 @@\n \n     private final ReadWriteLock lock \u003d new ReentrantReadWriteLock();\n \n+    // Number of dispatches without drain() being called.\n+    private int dispatchesWithoutDrain \u003d 0;\n+    private static final int MAX_DISPATCHES_WITHOUT_DRAIN \u003d 50;\n+\n     private static class SubmittedTask {\n         public final GWCTask task;\n \n@@ -284,6 +288,11 @@ public void dispatchTasks(GWCTask[] tasks) {\n                 Future\u003cGWCTask\u003e future \u003d threadPool.submit(new MTSeeder(task));\n                 this.currentPool.put(taskId, new SubmittedTask(task, future));\n             }\n+            dispatchesWithoutDrain++;\n+            if(dispatchesWithoutDrain\u003eMAX_DISPATCHES_WITHOUT_DRAIN) {\n+                // There are probably a lot of completed tasks that need to be drained\n+                drain();\n+            }\n         } finally {\n             lock.writeLock().unlock();\n         }\n@@ -458,6 +467,7 @@ private long stateCode(STATE state) {\n     private void drain() {\n         lock.writeLock().lock();\n         try {\n+            dispatchesWithoutDrain\u003d0;\n             threadPool.purge();\n             for (Iterator\u003cEntry\u003cLong, SubmittedTask\u003e\u003e it \u003d this.currentPool.entrySet().iterator(); it\n                     .hasNext();) {"
        }
      ]
    }
  },
  {
    "name": "[bugfix] Close memory leak: cleanupTasks in XQueryContext need to be …",
    "url": "https://github.com/eXist-db/exist/pull/883",
    "description": "…cleared before query is pushed to pool, otherwise the list will keep growing with every call to the query and resources are not freed. Mainly used from http client.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/eXist-db/exist/commit/9d53fc1cd5dbd49b727c6d032de280346d21bf70",
      "files": [
        {
          "file_name": "src/org/exist/xquery/XQueryContext.java",
          "patch": "@@ -1443,6 +1443,8 @@ public void reset(final boolean keepGlobals) {\n \n         clearUpdateListeners();\n \n+        cleanupTasks.clear();\n+\n         profiler.reset();\n         \n         analyzed \u003d false;"
        }
      ]
    }
  },
  {
    "name": "Ensure wro4j manager is destroyed at the end of maven mojos to prevent memory leak in m2e-wro4j",
    "url": "https://github.com/wro4j/wro4j/pull/1028",
    "description": "Finally had time to investigate the issue I had reported in #950 spending time debugging the solution I found was to ensure the wro manager was destroyed at the end of mojo execution.\n\nI did wonder if `Context.destroy()` ought to be called also but it did not appear to affect me here.\n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/wro4j/wro4j/commit/0c62e6335f1c2668f12050f3b2add62dc981794a",
      "files": [
        {
          "file_name": "wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/AbstractWro4jMojo.java",
          "patch": "@@ -183,6 +183,9 @@ public final void execute()\n         } catch (final Exception e) {\n           throw new MojoExecutionException(\"Exception in onAfterExecute\", e);\n         }\n+        finally {\n+            getWroManager().destroy();\n+        }\n       }\n     }\n   }"
        }
      ]
    }
  },
  {
    "name": "Memory leak in PostListActivity (detected by Leak Canary)",
    "url": "https://github.com/vickychijwani/quill/issues/53",
    "description": "Leak Canary log:\n\n```\nD/LeakCanary﹕ In me.vickychijwani.spectre:1.0:1.\n    * me.vickychijwani.spectre.view.PostListActivity has leaked:\n    * GC ROOT android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue\n    * references android.os.MessageQueue.mMessages\n    * references android.os.Message.callback\n    * references me.vickychijwani.spectre.view.PostListActivity$$Lambda$3.arg$1 (anonymous class implements java.lang.Runnable)\n    * leaks me.vickychijwani.spectre.view.PostListActivity instance\n    * Reference Key: 0e8b3f1f-eb16-47f7-8b08-84852ad19878\n    * Device: LGE google Nexus 4 occam\n    * Android Version: 5.1 API: 22\n    * Durations: watch\u003d5275ms, gc\u003d150ms, heap dump\u003d4888ms, analysis\u003d35359ms\n```\n\nReproducible by simply rotating the screen, or navigating away from `PostListActivity`. I don\u0027t understand why this leak is happening though.\n",
    "keywords": [
      "leak",
      "view",
      "postlistactivity",
      "references",
      "spectre",
      "android",
      "*",
      "vickychijwani spectre",
      "vickychijwani"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/vickychijwani/quill/commit/bcd033448a154293f23c2e6b389e3fd1dbd0aebc",
      "files": [
        {
          "file_name": "app/src/main/java/me/vickychijwani/spectre/view/PostListActivity.java",
          "patch": "@@ -55,10 +55,11 @@\n \n     private static final String TAG \u003d \"PostListActivity\";\n \n-    private List\u003cPost\u003e mPosts;\n+    private List\u003cPost\u003e mPosts \u003d new ArrayList\u003c\u003e();\n     private PostAdapter mPostAdapter;\n \n-    private Handler mHandler;\n+    private Handler mHandler \u003d new Handler(Looper.getMainLooper());\n+    private Runnable mRefreshDataRunnable \u003d this::refreshData;\n     private static final int REFRESH_FREQUENCY \u003d 10 * 60 * 1000;  // milliseconds\n \n     @InjectView(R.id.toolbar)\n@@ -98,7 +99,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         // initialize post list UI\n         UserPrefs prefs \u003d UserPrefs.getInstance(this);\n         String blogUrl \u003d prefs.getString(UserPrefs.Key.BLOG_URL);\n-        mPosts \u003d new ArrayList\u003c\u003e();\n         mPostAdapter \u003d new PostAdapter(this, mPosts, blogUrl, getPicasso(), v -\u003e {\n             int pos \u003d mPostList.getChildLayoutPosition(v);\n             if (pos \u003d\u003d RecyclerView.NO_POSITION) return;\n@@ -114,8 +114,6 @@ protected void onCreate(Bundle savedInstanceState) {\n         int vSpace \u003d getResources().getDimensionPixelOffset(R.dimen.padding_default_card_v);\n         mPostList.addItemDecoration(new SpaceItemDecoration(hSpace, vSpace));\n \n-        mHandler \u003d new Handler(Looper.getMainLooper());\n-\n         getBus().post(new LoadUserEvent(false));\n         getBus().post(new LoadBlogSettingsEvent(false));\n         getBus().post(new LoadPostsEvent(false));\n@@ -218,11 +216,14 @@ public void onPostCreatedEvent(PostCreatedEvent event) {\n     private void scheduleDataRefresh() {\n         // cancel already-scheduled refresh event\n         cancelDataRefresh();\n-        mHandler.postDelayed(this::refreshData, REFRESH_FREQUENCY);\n+        // NOTE do not pass this::refreshData directly, because that creates a new Runnable and\n+        // hence cannot be removed using Handler.removeCallbacks later, indirectly causing the\n+        // entire Activity to leak!\n+        mHandler.postDelayed(mRefreshDataRunnable, REFRESH_FREQUENCY);\n     }\n \n     private void cancelDataRefresh() {\n-        mHandler.removeCallbacks(this::refreshData);\n+        mHandler.removeCallbacks(mRefreshDataRunnable);\n     }\n \n     private void refreshData() {"
        }
      ]
    }
  },
  {
    "name": "Fix memory leak in HashBiMap. ",
    "url": "https://github.com/eclipse/eclipse-collections/pull/41",
    "description": "I added a third test to check for key preservation when we use forcePut(). \n",
    "keywords": [],
    "code": {
      "language": "Java",
      "url": "https://github.com/eclipse/eclipse-collections/commit/5ac851f7f17d6c42d26ea03a0a060f1c868e6663",
      "files": [
        {
          "file_name": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bimap/mutable/AbstractMutableBiMap.java",
          "patch": "@@ -204,11 +204,16 @@ public V put(K key, V value)\n         }\n \n         boolean containsKey \u003d this.delegate.containsKey(key);\n-        V put \u003d this.delegate.put(key, value);\n+\n         if (containsKey)\n         {\n-            this.inverse.delegate.removeKey(put);\n+            V oldValue \u003d this.delegate.put(key, value);\n+            K oldKeyToPreserve \u003d this.inverse.delegate.removeKey(oldValue);\n+            this.inverse.delegate.put(value, oldKeyToPreserve);\n+            return oldValue;\n         }\n+\n+        V put \u003d this.delegate.put(key, value);\n         this.inverse.delegate.put(value, key);\n         return put;\n     }\n@@ -225,16 +230,31 @@ public V forcePut(K key, V value)\n         }\n \n         boolean containsKey \u003d this.delegate.containsKey(key);\n+        if (containsValue)\n+        {\n+            V oldValueToPreserve \u003d  this.delegate.get(this.inverse.delegate.get(value));\n+            V put \u003d this.delegate.put(key, oldValueToPreserve);\n+\n+            if (containsKey)\n+            {\n+                K oldKeyToPreserve \u003d this.inverse.delegate.removeKey(put);\n+                K oldKey \u003d this.inverse.delegate.put(value, oldKeyToPreserve);\n+                this.delegate.removeKey(oldKey);\n+                return put;\n+            }\n+            K oldKey \u003d this.inverse.delegate.put(value, key);\n+            this.delegate.removeKey(oldKey);\n+            return put;\n+        }\n+\n         V put \u003d this.delegate.put(key, value);\n+\n         if (containsKey)\n         {\n             this.inverse.delegate.removeKey(put);\n         }\n-        K oldKey \u003d this.inverse.delegate.put(value, key);\n-        if (containsValue)\n-        {\n-            this.delegate.removeKey(oldKey);\n-        }\n+\n+        this.inverse.delegate.put(value, key);\n         return put;\n     }\n "
        },
        {
          "file_name": "unit-tests/src/test/java/org/eclipse/collections/impl/bimap/mutable/HashBiMapTest.java",
          "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2015 Goldman Sachs.\n+ * Copyright (c) 2016 Goldman Sachs.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n@@ -12,6 +12,8 @@\n \n import org.eclipse.collections.impl.map.mutable.UnifiedMap;\n import org.eclipse.collections.impl.test.Verify;\n+import org.eclipse.collections.impl.test.domain.Key;\n+import org.eclipse.collections.impl.utility.Iterate;\n import org.junit.Assert;\n import org.junit.Test;\n \n@@ -102,4 +104,24 @@ public void withKeysValues()\n         Assert.assertSame(map, map44);\n         Assert.assertSame(map3, map4);\n     }\n+\n+    @Test\n+    public void forcePut_inverseKeyAndValuePreservation()\n+    {\n+        Key key1 \u003d new Key(\"1\");\n+        Key value2 \u003d new Key(\"xyz\");\n+\n+        HashBiMap\u003cKey, Key\u003e biMap \u003d this.newMapWithKeysValues(key1, new Key(\"abc\"), new Key(\"2\"), value2);\n+\n+        Key duplicateOfKey1 \u003d new Key(\"1\");\n+        Key duplicateOfValue2 \u003d new Key(\"xyz\");\n+\n+        biMap.forcePut(duplicateOfKey1, duplicateOfValue2);\n+\n+        Assert.assertSame(key1, Iterate.getFirst(biMap.entrySet()).getKey());\n+        Assert.assertSame(key1, Iterate.getFirst(biMap.inverse().entrySet()).getValue());\n+\n+        Assert.assertSame(value2, Iterate.getFirst(biMap.entrySet()).getValue());\n+        Assert.assertSame(value2, Iterate.getFirst(biMap.inverse().entrySet()).getKey());\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "UI components memory leak.",
    "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/issues/833",
    "description": "```\nERROR: Memory leak detected: com.intellij.execution.impl.ConsoleViewImpl[,0,0,0x0,invalid,layout\u003djava.awt.BorderLayout,alignmentX\u003d0.0,alignmentY\u003d0.0,border\u003d,flags\u003d9,maximumSize\u003d,minimumSize\u003d,preferredSize\u003d] of class class com.intellij.execution.impl.ConsoleViewImpl\nSee the cause for the corresponding Disposer.register() stacktrace:\n\njava.lang.AssertionError: Memory leak detected: com.intellij.execution.impl.ConsoleViewImpl[,0,0,0x0,invalid,layout\u003djava.awt.BorderLayout,alignmentX\u003d0.0,alignmentY\u003d0.0,border\u003d,flags\u003d9,maximumSize\u003d,minimumSize\u003d,preferredSize\u003d] of class class com.intellij.execution.impl.ConsoleViewImpl\nSee the cause for the corresponding Disposer.register() stacktrace:\n\n    at com.intellij.testFramework.LoggedErrorProcessor.processError(LoggedErrorProcessor.java:56)\n    at com.intellij.testFramework.TestLogger.error(TestLogger.java:67)\n    at com.intellij.openapi.diagnostic.Logger.error(Logger.java:134)\n    at com.intellij.openapi.util.objectTree.ObjectTree.assertIsEmpty(ObjectTree.java:210)\n    at com.intellij.openapi.util.Disposer.assertIsEmpty(Disposer.java:125)\n    at com.intellij.openapi.util.Disposer.assertIsEmpty(Disposer.java:121)\n    at com.intellij.openapi.application.impl.ApplicationImpl.disposeSelf(ApplicationImpl.java:331)\n    at com.intellij.openapi.application.impl.ApplicationImpl.access$400(ApplicationImpl.java:88)\n    at com.intellij.openapi.application.impl.ApplicationImpl$5$1.run(ApplicationImpl.java:291)\n    at com.intellij.openapi.util.ShutDownTracker$2.run(ShutDownTracker.java:171)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)\n    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:715)\n    at java.awt.EventQueue.access$400(EventQueue.java:82)\n    at java.awt.EventQueue$2.run(EventQueue.java:676)\n    at java.awt.EventQueue$2.run(EventQueue.java:674)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:86)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:685)\n    at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:746)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:576)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:383)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:296)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:211)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)\nERROR: Memory leak detected: com.intellij.execution.impl.ConsoleViewImpl[,0,0,0x0,invalid,layout\u003djava.awt.BorderLayout,alignmentX\u003d0.0,alignmentY\u003d0.0,border\u003d,flags\u003d9,maximumSize\u003d,minimumSize\u003d,preferredSize\u003d] of class class com.intellij.execution.impl.ConsoleViewImpl\nSee the cause for the corresponding Disposer.register() stacktrace:\n\njava.lang.AssertionError: Memory leak detected: com.intellij.execution.impl.ConsoleViewImpl[,0,0,0x0,invalid,layout\u003djava.awt.BorderLayout,alignmentX\u003d0.0,alignmentY\u003d0.0,border\u003d,flags\u003d9,maximumSize\u003d,minimumSize\u003d,preferredSize\u003d] of class class com.intellij.execution.impl.ConsoleViewImpl\nSee the cause for the corresponding Disposer.register() stacktrace:\n\n    at com.intellij.testFramework.LoggedErrorProcessor.processError(LoggedErrorProcessor.java:56)\n    at com.intellij.testFramework.TestLogger.error(TestLogger.java:67)\n    at com.intellij.openapi.diagnostic.Logger.error(Logger.java:134)\n    at com.intellij.ide.plugins.PluginManager.processException(PluginManager.java:134)\n    at com.intellij.ide.IdeEventQueue.processException(IdeEventQueue.java:404)\n    at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:749)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:576)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:383)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:296)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:211)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)\n\nProcess finished with exit code 0\n```\n",
    "keywords": [
      "com",
      "borderlayout",
      "logger",
      "consoleviewimpl",
      "loggederrorprocessor",
      "run",
      "intellij",
      "pumpevents",
      "alignmentx\u003d0",
      "impl",
      "border\u003d",
      "java",
      "com intellij",
      "intellij ide",
      "eventqueue",
      "openapi",
      "intellij execution",
      "testframework",
      "ide",
      "0",
      "stacktrace",
      "util",
      "memory leak",
      "invalid",
      "eventdispatchthread",
      "java awt",
      "java:134",
      "minimumsize\u003d",
      "applicationimpl",
      "memory",
      "assertisempty",
      "dispatchevent",
      "consoleviewimpl[",
      "cause",
      "error",
      "disposer",
      "alignmenty\u003d0",
      "leak",
      "see",
      "maximumsize\u003d",
      "class",
      "awt eventdispatchthread",
      "execution",
      "preferredsize\u003d]",
      "ideeventqueue",
      "0x0",
      "flags\u003d9",
      "intellij openapi",
      "application",
      "corresponding",
      "execution impl",
      "layout\u003djava",
      "objecttree",
      "detected",
      "testlogger",
      "awt",
      "register",
      "application impl"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/ef57e5016795254684e2004ca55f92bc05dc92c2",
      "files": [
        {
          "file_name": "src/ro/redeul/google/go/ide/ui/GoToolWindow.java",
          "patch": "@@ -7,6 +7,7 @@\n import com.intellij.execution.ui.ConsoleViewContentType;\n import com.intellij.openapi.components.AbstractProjectComponent;\n import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.util.Disposer;\n import com.intellij.openapi.util.EmptyRunnable;\n import com.intellij.openapi.wm.ToolWindow;\n import com.intellij.openapi.wm.ToolWindowManager;\n@@ -109,4 +110,11 @@ public void printMessage(String message, ConsoleViewContentType contentType) {\n     public void attachConsoleViewToProcess(ProcessHandler processHandler) {\n         consoleViewImpl.attachToProcess(processHandler);\n     }\n+\n+    @Override\n+    public void disposeComponent() {\n+        consoleViewImpl.dispose();\n+        Disposer.dispose(consoleViewImpl);\n+        consoleViewImpl \u003d null;\n+    }\n }"
        }
      ]
    }
  },
  {
    "name": "Potential memory leak",
    "url": "https://github.com/josephroque/bowling-companion/issues/25",
    "description": "See [this](http://garena.github.io/blog/2014/09/10/android-memory-leaks/) blog post for an overview of potential memory leaks with AsyncTask and how to fix them. In addition, checks for other memory leaks should be performed.\n",
    "keywords": [
      "memory"
    ],
    "code": {
      "language": "Java",
      "url": "https://github.com/josephroque/bowling-companion/commit/c6e27476e4815084567fc40f2d576ccd61d3a9ad",
      "files": [
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/MainActivity.java",
          "patch": "@@ -571,13 +571,13 @@ public void onSeriesSelected(Series series, boolean isEvent)\n         mSeriesId \u003d series.getSeriesId();\n         mSeriesDate \u003d series.getSeriesDate();\n \n-        new OpenSeriesTask().execute(isEvent);\n+        new OpenSeriesTask(MainActivity.this).execute(isEvent);\n     }\n \n     @Override\n     public void onCreateNewSeries(boolean isEvent)\n     {\n-        new AddSeriesTask().execute();\n+        new AddSeriesTask(MainActivity.this).execute();\n     }\n \n     /**\n@@ -1174,22 +1174,39 @@ public boolean isQuickSeries()\n     /**\n      * Loads game data related to seriesId and displays it in a new GameFragment instance.\n      */\n-    private class OpenSeriesTask\n+    private static class OpenSeriesTask\n             extends AsyncTask\u003cBoolean, Void, Object[]\u003e\n     {\n \n+        /** Weak reference to the parent activity. */\n+        private WeakReference\u003cMainActivity\u003e mMainActivity;\n+\n+        /**\n+         * Assigns a weak reference to the parent activity.\n+         *\n+         * @param activity parent activity\n+         */\n+        private OpenSeriesTask(MainActivity activity)\n+        {\n+            mMainActivity \u003d new WeakReference\u003c\u003e(activity);\n+        }\n+\n         @Override\n         protected Object[] doInBackground(Boolean... isEvent)\n         {\n-            long[] gameId \u003d new long[mNumberOfGames];\n+            MainActivity mainActivity \u003d mMainActivity.get();\n+            if (mainActivity \u003d\u003d null)\n+                return null;\n+\n+            long[] gameId \u003d new long[mainActivity.mNumberOfGames];\n             //noinspection CheckStyle\n-            long[] frameId \u003d new long[mNumberOfGames * 10];\n-            boolean[] gameLocked \u003d new boolean[mNumberOfGames];\n-            boolean[] manualScore \u003d new boolean[mNumberOfGames];\n-            byte[] matchPlay \u003d new byte[mNumberOfGames];\n+            long[] frameId \u003d new long[mainActivity.mNumberOfGames * 10];\n+            boolean[] gameLocked \u003d new boolean[mainActivity.mNumberOfGames];\n+            boolean[] manualScore \u003d new boolean[mainActivity.mNumberOfGames];\n+            byte[] matchPlay \u003d new byte[mainActivity.mNumberOfGames];\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(MainActivity.this).getReadableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getReadableDatabase();\n             String rawSeriesQuery \u003d \"SELECT \"\n                     + \"game.\" + GameEntry._ID + \" AS gid, \"\n                     + GameEntry.COLUMN_IS_LOCKED + \", \"\n@@ -1201,7 +1218,7 @@ public boolean isQuickSeries()\n                     + \" ON gid\u003d\" + FrameEntry.COLUMN_GAME_ID\n                     + \" WHERE \" + GameEntry.COLUMN_SERIES_ID + \"\u003d?\"\n                     + \" ORDER BY gid, fid\";\n-            String[] rawSeriesArgs \u003d {String.valueOf(mSeriesId)};\n+            String[] rawSeriesArgs \u003d {String.valueOf(mainActivity.mSeriesId)};\n \n             int currentGame \u003d -1;\n             long currentGameId \u003d -1;\n@@ -1238,16 +1255,20 @@ public boolean isQuickSeries()\n         @Override\n         protected void onPostExecute(Object[] params)\n         {\n+            MainActivity mainActivity \u003d mMainActivity.get();\n+            if (mainActivity \u003d\u003d null || params \u003d\u003d null)\n+                return;\n+\n             long[] gameIds \u003d (long[]) params[0];\n             long[] frameIds \u003d (long[]) params[1];\n             boolean[] gameLocked \u003d (boolean[]) params[2];\n             boolean[] manualScore \u003d (boolean[]) params[3];\n             byte[] matchPlay \u003d (byte[]) params[4];\n-            mIsEventMode \u003d (boolean) params[5];\n+            mainActivity.mIsEventMode \u003d (boolean) params[5];\n \n             GameFragment gameFragment \u003d GameFragment.newInstance(gameIds, frameIds, gameLocked,\n                     manualScore, matchPlay);\n-            startFragmentTransaction(gameFragment, (isEventMode()\n+            mainActivity.startFragmentTransaction(gameFragment, (mainActivity.isEventMode()\n                     ? Constants.FRAGMENT_LEAGUES\n                     : Constants.FRAGMENT_SERIES), Constants.FRAGMENT_GAME);\n         }\n@@ -1256,20 +1277,38 @@ protected void onPostExecute(Object[] params)\n     /**\n      * Creates a new series in the database and displays it in a new instance of GameFragment.\n      */\n-    private class AddSeriesTask\n+    private static class AddSeriesTask\n             extends AsyncTask\u003cVoid, Void, Object[]\u003e\n     {\n \n+        /** Weak reference to the parent activity. */\n+        private WeakReference\u003cMainActivity\u003e mMainActivity;\n+\n+        /**\n+         * Assigns a weak reference to the parent activity.\n+         *\n+         * @param activity parent activity\n+         */\n+        private AddSeriesTask(MainActivity activity)\n+        {\n+            mMainActivity \u003d new WeakReference\u003c\u003e(activity);\n+        }\n+\n         @Override\n         protected Object[] doInBackground(Void... params)\n         {\n+            MainActivity mainActivity \u003d mMainActivity.get();\n+\n+            if (mainActivity \u003d\u003d null)\n+                return null;\n+\n             long seriesId \u003d -1;\n-            long[] gameId \u003d new long[mNumberOfGames];\n+            long[] gameId \u003d new long[mainActivity.mNumberOfGames];\n             //noinspection CheckStyle\n-            long[] frameId \u003d new long[mNumberOfGames * 10];\n+            long[] frameId \u003d new long[mainActivity.mNumberOfGames * 10];\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(MainActivity.this).getReadableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getReadableDatabase();\n             SimpleDateFormat dateFormat \u003d\n                     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.CANADA);\n             String seriesDate \u003d dateFormat.format(new Date());\n@@ -1279,10 +1318,10 @@ protected void onPostExecute(Object[] params)\n             {\n                 ContentValues values \u003d new ContentValues();\n                 values.put(SeriesEntry.COLUMN_SERIES_DATE, seriesDate);\n-                values.put(SeriesEntry.COLUMN_LEAGUE_ID, mLeagueId);\n+                values.put(SeriesEntry.COLUMN_LEAGUE_ID, mainActivity.mLeagueId);\n                 seriesId \u003d database.insert(SeriesEntry.TABLE_NAME, null, values);\n \n-                for (byte i \u003d 0; i \u003c mNumberOfGames; i++)\n+                for (byte i \u003d 0; i \u003c mainActivity.mNumberOfGames; i++)\n                 {\n                     values \u003d new ContentValues();\n                     values.put(GameEntry.COLUMN_GAME_NUMBER, i + 1);\n@@ -1312,27 +1351,31 @@ protected void onPostExecute(Object[] params)\n                 database.endTransaction();\n             }\n \n-            mSeriesId \u003d seriesId;\n-            mSeriesDate \u003d DataFormatter.formattedDateToPrettyCompact(seriesDate);\n+            mainActivity.mSeriesId \u003d seriesId;\n+            mainActivity.mSeriesDate \u003d DataFormatter.formattedDateToPrettyCompact(seriesDate);\n             return new Object[]{gameId, frameId};\n         }\n \n         @Override\n         protected void onPostExecute(Object[] params)\n         {\n+            MainActivity mainActivity \u003d mMainActivity.get();\n+            if (mainActivity \u003d\u003d null || params \u003d\u003d null)\n+                return;\n+\n             long[] gameIds \u003d (long[]) params[0];\n             long[] frameIds \u003d (long[]) params[1];\n-            mIsEventMode \u003d false;\n+            mainActivity.mIsEventMode \u003d false;\n \n             GameFragment gameFragment \u003d GameFragment.newInstance(\n                     gameIds,\n                     frameIds,\n-                    new boolean[mNumberOfGames],\n-                    new boolean[mNumberOfGames],\n-                    new byte[mNumberOfGames]);\n-            startFragmentTransaction(\n+                    new boolean[mainActivity.mNumberOfGames],\n+                    new boolean[mainActivity.mNumberOfGames],\n+                    new byte[mainActivity.mNumberOfGames]);\n+            mainActivity.startFragmentTransaction(\n                     gameFragment,\n-                    (isQuickSeries()\n+                    (mainActivity.isQuickSeries()\n                             ? Constants.FRAGMENT_BOWLERS\n                             : Constants.FRAGMENT_SERIES),\n                     Constants.FRAGMENT_GAME);"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/SplashActivity.java",
          "patch": "@@ -70,6 +70,7 @@ protected void onCreate(Bundle savedInstanceState)\n             return;\n         }\n \n+        preferences.edit().putBoolean(PREF_TUTORIAL_WATCHED, true).apply();\n         setupViewPager();\n     }\n "
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/adapter/SplashPagerAdapter.java",
          "patch": "@@ -51,16 +51,18 @@ public void destroyItem(ViewGroup container, int position, Object object)\n     @Override\n     public Fragment getItem(int position)\n     {\n-        if (position \u003c TutorialFragment.TUTORIAL_TOTAL_PAGES)\n-            return TutorialFragment.newInstance(position);\n-        else\n-            return RegisterFragment.newInstance(true);\n+        //if (position \u003c TutorialFragment.TUTORIAL_TOTAL_PAGES)\n+        //    return TutorialFragment.newInstance(position);\n+        //else\n+        //    return RegisterFragment.newInstance(true);\n+        return null;\n     }\n \n     @Override\n     public int getCount()\n     {\n-        return TutorialFragment.TUTORIAL_TOTAL_PAGES;\n+        //return TutorialFragment.TUTORIAL_TOTAL_PAGES;\n+        return 0;\n     }\n \n     /**"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/BowlerFragment.java",
          "patch": "@@ -524,20 +524,21 @@ private LoadBowlerAndRecentTask(BowlerFragment fragment)\n         protected List\u003cBowler\u003e doInBackground(Void... params)\n         {\n             //Method exits if fragment gets detached before reaching this call\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            BowlerFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n-            WeakReference\u003cMainActivity\u003e mainActivity\n-                    \u003d new WeakReference\u003c\u003e((MainActivity) mFragment.get().getActivity());\n-\n-            MainActivity.waitForSaveThreads(mainActivity);\n+            MainActivity.waitForSaveThreads(new WeakReference\u003c\u003e(mainActivity));\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mainActivity.get()).getReadableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getReadableDatabase();\n             List\u003cBowler\u003e listBowlers \u003d new ArrayList\u003c\u003e();\n \n             SharedPreferences preferences \u003d\n-                    PreferenceManager.getDefaultSharedPreferences(mainActivity.get());\n+                    PreferenceManager.getDefaultSharedPreferences(mainActivity);\n             boolean includeEvents \u003d preferences.getBoolean(Constants.KEY_INCLUDE_EVENTS, true);\n             boolean includeOpen \u003d preferences.getBoolean(Constants.KEY_INCLUDE_OPEN, true);\n \n@@ -599,7 +600,7 @@ private LoadBowlerAndRecentTask(BowlerFragment fragment)\n             cursor.close();\n \n             //If a recent bowler exists, their name and league is loaded to be used for quick series\n-            if (mFragment.get().mRecentBowlerId \u003e -1 \u0026\u0026 mFragment.get().mRecentLeagueId \u003e -1)\n+            if (fragment.mRecentBowlerId \u003e -1 \u0026\u0026 fragment.mRecentLeagueId \u003e -1)\n             {\n                 String rawRecentQuery \u003d \"SELECT \"\n                         + BowlerEntry.COLUMN_BOWLER_NAME + \", \"\n@@ -612,30 +613,30 @@ private LoadBowlerAndRecentTask(BowlerFragment fragment)\n                         + \" WHERE bowler.\" + BowlerEntry._ID + \"\u003d? \"\n                         + \"AND league.\" + LeagueEntry._ID + \"\u003d?\";\n                 String[] rawRecentArgs \u003d new String[]{\n-                        String.valueOf(mFragment.get().mRecentBowlerId),\n-                        String.valueOf(mFragment.get().mRecentLeagueId)\n+                        String.valueOf(fragment.mRecentBowlerId),\n+                        String.valueOf(fragment.mRecentLeagueId)\n                 };\n \n                 cursor \u003d database.rawQuery(rawRecentQuery, rawRecentArgs);\n                 if (cursor.moveToFirst())\n                 {\n-                    mFragment.get().mRecentBowlerName \u003d cursor.getString(\n+                    fragment.mRecentBowlerName \u003d cursor.getString(\n                             cursor.getColumnIndex(BowlerEntry.COLUMN_BOWLER_NAME));\n-                    mFragment.get().mRecentLeagueName \u003d cursor.getString(\n+                    fragment.mRecentLeagueName \u003d cursor.getString(\n                             cursor.getColumnIndex(LeagueEntry.COLUMN_LEAGUE_NAME));\n-                    mFragment.get().mRecentNumberOfGames \u003d (byte) cursor.getInt(\n+                    fragment.mRecentNumberOfGames \u003d (byte) cursor.getInt(\n                             cursor.getColumnIndex(LeagueEntry.COLUMN_NUMBER_OF_GAMES));\n                 }\n                 else\n                 {\n-                    mFragment.get().mRecentBowlerId \u003d -1;\n-                    mFragment.get().mRecentLeagueId \u003d -1;\n+                    fragment.mRecentBowlerId \u003d -1;\n+                    fragment.mRecentLeagueId \u003d -1;\n                 }\n                 cursor.close();\n             }\n \n             //If a custom bowler is set, their name and league is loaded to be used for quick series\n-            if (mFragment.get().mQuickBowlerId \u003e -1 \u0026\u0026 mFragment.get().mQuickLeagueId \u003e -1)\n+            if (fragment.mQuickBowlerId \u003e -1 \u0026\u0026 fragment.mQuickLeagueId \u003e -1)\n             {\n                 String rawRecentQuery \u003d \"SELECT \"\n                         + BowlerEntry.COLUMN_BOWLER_NAME + \", \"\n@@ -648,24 +649,24 @@ private LoadBowlerAndRecentTask(BowlerFragment fragment)\n                         + \" WHERE bowler.\" + BowlerEntry._ID + \"\u003d?\"\n                         + \"AND league.\" + LeagueEntry._ID + \"\u003d?\";\n                 String[] rawRecentArgs \u003d new String[]{\n-                        String.valueOf(mFragment.get().mQuickBowlerId),\n-                        String.valueOf(mFragment.get().mQuickLeagueId)\n+                        String.valueOf(fragment.mQuickBowlerId),\n+                        String.valueOf(fragment.mQuickLeagueId)\n                 };\n \n                 cursor \u003d database.rawQuery(rawRecentQuery, rawRecentArgs);\n                 if (cursor.moveToFirst())\n                 {\n-                    mFragment.get().mQuickBowlerName \u003d cursor.getString(\n+                    fragment.mQuickBowlerName \u003d cursor.getString(\n                             cursor.getColumnIndex(BowlerEntry.COLUMN_BOWLER_NAME));\n-                    mFragment.get().mQuickLeagueName \u003d cursor.getString(\n+                    fragment.mQuickLeagueName \u003d cursor.getString(\n                             cursor.getColumnIndex(LeagueEntry.COLUMN_LEAGUE_NAME));\n-                    mFragment.get().mQuickNumberOfGames \u003d (byte) cursor.getInt(\n+                    fragment.mQuickNumberOfGames \u003d (byte) cursor.getInt(\n                             cursor.getColumnIndex(LeagueEntry.COLUMN_NUMBER_OF_GAMES));\n                 }\n                 else\n                 {\n-                    mFragment.get().mQuickBowlerId \u003d -1;\n-                    mFragment.get().mQuickLeagueId \u003d -1;\n+                    fragment.mQuickBowlerId \u003d -1;\n+                    fragment.mQuickLeagueId \u003d -1;\n                 }\n                 cursor.close();\n             }\n@@ -676,14 +677,12 @@ private LoadBowlerAndRecentTask(BowlerFragment fragment)\n         @Override\n         protected void onPostExecute(List\u003cBowler\u003e listBowlers)\n         {\n-            if (listBowlers \u003d\u003d null)\n+            BowlerFragment fragment \u003d mFragment.get();\n+            if (listBowlers \u003d\u003d null || fragment \u003d\u003d null)\n                 return;\n \n-            if (mFragment.get() !\u003d null)\n-            {\n-                mFragment.get().mListBowlers.addAll(listBowlers);\n-                mFragment.get().mAdapterBowlers.notifyDataSetChanged();\n-            }\n+            fragment.mListBowlers.addAll(listBowlers);\n+            fragment.mAdapterBowlers.notifyDataSetChanged();\n         }\n     }\n \n@@ -710,14 +709,18 @@ private OpenBowlerLeaguesTask(BowlerFragment fragment)\n         @Override\n         protected Bowler doInBackground(Integer... position)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            BowlerFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n-            Bowler bowler \u003d mFragment.get().mListBowlers.get(position[0]);\n+            Bowler bowler \u003d fragment.mListBowlers.get(position[0]);\n \n             //Updates date which bowler was last accessed in database\n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getWritableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getWritableDatabase();\n             SimpleDateFormat dateFormat \u003d\n                     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.CANADA);\n             ContentValues values \u003d new ContentValues();\n@@ -747,11 +750,12 @@ protected Bowler doInBackground(Integer... position)\n         @Override\n         protected void onPostExecute(Bowler result)\n         {\n-            if (result \u003d\u003d null || mFragment.get() \u003d\u003d null)\n+            BowlerFragment fragment \u003d mFragment.get();\n+            if (result \u003d\u003d null || fragment \u003d\u003d null)\n                 return;\n \n             //Creates new instance of LeagueEventFragment for bowler\n-            mFragment.get().mBowlerSelectedListener.onBowlerSelected(result, true, false);\n+            fragment.mBowlerSelectedListener.onBowlerSelected(result, true, false);\n         }\n     }\n \n@@ -778,12 +782,16 @@ private NewBowlerTask(BowlerFragment fragment)\n         @Override\n         protected Bowler doInBackground(Bowler... bowler)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            BowlerFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n             bowler[0].setBowlerId(-1);\n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getWritableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getWritableDatabase();\n             SimpleDateFormat dateFormat \u003d\n                     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.CANADA);\n             String currentDate \u003d dateFormat.format(new Date());\n@@ -828,15 +836,17 @@ protected Bowler doInBackground(Bowler... bowler)\n         @Override\n         protected void onPostExecute(Bowler newBowler)\n         {\n+            BowlerFragment fragment \u003d mFragment.get();\n+\n             /*\n              * Adds the new bowler information to the corresponding lists\n              * and displays them in the recycler view\n              */\n-            if (mFragment.get() !\u003d null \u0026\u0026 newBowler.getBowlerId() !\u003d -1)\n+            if (newBowler !\u003d null \u0026\u0026 fragment !\u003d null \u0026\u0026 newBowler.getBowlerId() !\u003d -1)\n             {\n-                mFragment.get().mListBowlers.add(0, newBowler);\n-                mFragment.get().mAdapterBowlers.notifyItemInserted(0);\n-                mFragment.get().mRecyclerViewBowlers.scrollToPosition(0);\n+                fragment.mListBowlers.add(0, newBowler);\n+                fragment.mAdapterBowlers.notifyItemInserted(0);\n+                fragment.mRecyclerViewBowlers.scrollToPosition(0);\n             }\n         }\n     }"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/LeagueEventFragment.java",
          "patch": "@@ -459,13 +459,18 @@ private OpenLeagueEventSeriesTask(LeagueEventFragment fragment)\n         @Override\n         protected Pair\u003cLeagueEvent, Series\u003e doInBackground(Integer... position)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n                 return null;\n-            LeagueEvent selectedLeagueEvent \u003d mFragment.get().mListLeaguesEvents.get(position[0]);\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n+                return null;\n+\n+            LeagueEvent selectedLeagueEvent \u003d fragment.mListLeaguesEvents.get(position[0]);\n             boolean isEvent \u003d selectedLeagueEvent.getLeagueEventName().substring(0, 1).equals(\"E\");\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getWritableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getWritableDatabase();\n             SimpleDateFormat dateFormat \u003d\n                     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.CANADA);\n             String currentDate \u003d dateFormat.format(new Date());\n@@ -532,7 +537,11 @@ private OpenLeagueEventSeriesTask(LeagueEventFragment fragment)\n         @Override\n         protected void onPostExecute(Pair\u003cLeagueEvent, Series\u003e result)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null || result \u003d\u003d null)\n+                return;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return;\n \n             boolean isEvent \u003d result.second.getSeriesId() \u003e\u003d 0;\n@@ -544,21 +553,20 @@ protected void onPostExecute(Pair\u003cLeagueEvent, Series\u003e result)\n                  * displaying the event\u0027s corresponding series\n                  */\n \n-                mFragment.get().mLeagueSelectedListener.onLeagueSelected(result.first, false);\n-                mFragment.get().mSeriesListener.onSeriesSelected(result.second, true);\n+                fragment.mLeagueSelectedListener.onLeagueSelected(result.first, false);\n+                fragment.mSeriesListener.onSeriesSelected(result.second, true);\n             }\n             else\n             {\n                 /*\n                  * If a league was selected, creates an instance of SeriesActivity\n                  * to display all available series in the league\n                  */\n-                long bowlerId \u003d ((MainActivity) mFragment.get().getActivity()).getBowlerId();\n+                long bowlerId \u003d mainActivity.getBowlerId();\n \n                 if (!result.first.getLeagueEventName().equals(Constants.NAME_OPEN_LEAGUE))\n                 {\n-                    mFragment.get()\n-                            .getActivity()\n+                    mainActivity\n                             .getSharedPreferences(Constants.PREFS, Context.MODE_PRIVATE)\n                             .edit()\n                             .putLong(Constants.PREF_RECENT_LEAGUE_ID,\n@@ -567,7 +575,7 @@ protected void onPostExecute(Pair\u003cLeagueEvent, Series\u003e result)\n                             .apply();\n                 }\n \n-                mFragment.get().mLeagueSelectedListener.onLeagueSelected(result.first, true);\n+                fragment.mLeagueSelectedListener.onLeagueSelected(result.first, true);\n             }\n         }\n     }\n@@ -596,14 +604,17 @@ private LoadLeaguesEventsTask(LeagueEventFragment fragment)\n         @Override\n         protected List\u003cLeagueEvent\u003e doInBackground(Void... params)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n-            MainActivity.waitForSaveThreads(new WeakReference\u003c\u003e((MainActivity) mFragment.get()\n-                    .getActivity()));\n+            MainActivity.waitForSaveThreads(new WeakReference\u003c\u003e(mainActivity));\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getReadableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getReadableDatabase();\n             List\u003cLeagueEvent\u003e listLeagueEvents \u003d new ArrayList\u003c\u003e();\n \n             String rawLeagueEventQuery \u003d \"SELECT \"\n@@ -621,7 +632,7 @@ private LoadLeaguesEventsTask(LeagueEventFragment fragment)\n                     + \" GROUP BY lid\"\n                     + \" ORDER BY \" + LeagueEntry.COLUMN_DATE_MODIFIED + \" DESC\";\n \n-            long bowlerId \u003d ((MainActivity) mFragment.get().getActivity()).getBowlerId();\n+            long bowlerId \u003d mainActivity.getBowlerId();\n             Cursor cursor \u003d database.rawQuery(rawLeagueEventQuery,\n                     new String[]{String.valueOf(bowlerId)});\n             if (cursor.moveToFirst())\n@@ -651,11 +662,12 @@ private LoadLeaguesEventsTask(LeagueEventFragment fragment)\n         @SuppressWarnings(\"unchecked\")\n         protected void onPostExecute(List\u003cLeagueEvent\u003e listLeagueEvents)\n         {\n-            if (mFragment.get() \u003d\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null || listLeagueEvents \u003d\u003d null)\n                 return;\n \n-            mFragment.get().mListLeaguesEvents.addAll(listLeagueEvents);\n-            mFragment.get().mAdapterLeagueEvents.notifyDataSetChanged();\n+            fragment.mListLeaguesEvents.addAll(listLeagueEvents);\n+            fragment.mAdapterLeagueEvents.notifyDataSetChanged();\n         }\n     }\n \n@@ -683,14 +695,18 @@ private AddNewLeagueEventTask(LeagueEventFragment fragment)\n         @Override\n         protected LeagueEvent doInBackground(LeagueEvent... leagueEvent)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n             leagueEvent[0].setLeagueEventId(-1);\n-            long bowlerId \u003d ((MainActivity) mFragment.get().getActivity()).getBowlerId();\n+            long bowlerId \u003d mainActivity.getBowlerId();\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getWritableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getWritableDatabase();\n             SimpleDateFormat dateFormat \u003d\n                     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.CANADA);\n             String currentDate \u003d dateFormat.format(new Date());\n@@ -758,11 +774,12 @@ protected LeagueEvent doInBackground(LeagueEvent... leagueEvent)\n         @Override\n         protected void onPostExecute(LeagueEvent result)\n         {\n-            if (result !\u003d null \u0026\u0026 result.getLeagueEventId() !\u003d -1 \u0026\u0026 mFragment.get() !\u003d null)\n+            LeagueEventFragment fragment \u003d mFragment.get();\n+            if (result !\u003d null \u0026\u0026 fragment !\u003d null \u0026\u0026 result.getLeagueEventId() !\u003d -1)\n             {\n-                mFragment.get().mListLeaguesEvents.add(0, result);\n-                mFragment.get().mAdapterLeagueEvents.notifyItemInserted(0);\n-                mFragment.get().mRecyclerViewLeagueEvents.scrollToPosition(0);\n+                fragment.mListLeaguesEvents.add(0, result);\n+                fragment.mAdapterLeagueEvents.notifyItemInserted(0);\n+                fragment.mRecyclerViewLeagueEvents.scrollToPosition(0);\n             }\n         }\n     }"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/SeriesFragment.java",
          "patch": "@@ -401,14 +401,17 @@ private LoadSeriesTask(SeriesFragment fragment)\n         @Override\n         protected List\u003cSeries\u003e doInBackground(Void... params)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            SeriesFragment fragment \u003d mFragment.get();\n+            if (fragment \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+                return null;\n+            MainActivity mainActivity \u003d (MainActivity) fragment.getActivity();\n+            if (mainActivity \u003d\u003d null)\n                 return null;\n \n-            MainActivity.waitForSaveThreads(new WeakReference\u003c\u003e((MainActivity) mFragment.get()\n-                    .getActivity()));\n+            MainActivity.waitForSaveThreads(new WeakReference\u003c\u003e(mainActivity));\n \n             SQLiteDatabase database \u003d\n-                    DatabaseHelper.getInstance(mFragment.get().getActivity()).getReadableDatabase();\n+                    DatabaseHelper.getInstance(mainActivity).getReadableDatabase();\n             List\u003cSeries\u003e listSeries \u003d new ArrayList\u003c\u003e();\n \n             String rawSeriesQuery \u003d \"SELECT \"\n@@ -423,8 +426,7 @@ private LoadSeriesTask(SeriesFragment fragment)\n                     + \" ORDER BY \" + SeriesEntry.COLUMN_SERIES_DATE + \" DESC, \"\n                     + GameEntry.COLUMN_GAME_NUMBER;\n             String[] rawSeriesArgs \u003d {\n-                    String.valueOf(((MainActivity) mFragment.get()\n-                            .getActivity()).getLeagueId())\n+                    String.valueOf(mainActivity.getLeagueId())\n             };\n \n             Cursor cursor \u003d database.rawQuery(rawSeriesQuery, rawSeriesArgs);\n@@ -457,11 +459,12 @@ private LoadSeriesTask(SeriesFragment fragment)\n         @SuppressWarnings(\"unchecked\")\n         protected void onPostExecute(List\u003cSeries\u003e listSeries)\n         {\n-            if (mFragment.get() \u003d\u003d null || mFragment.get().getActivity() \u003d\u003d null)\n+            SeriesFragment fragment \u003d mFragment.get();\n+            if (listSeries \u003d\u003d null || fragment \u003d\u003d null)\n                 return;\n \n-            mFragment.get().mListSeries.addAll(listSeries);\n-            mFragment.get().mAdapterSeries.notifyDataSetChanged();\n+            fragment.mListSeries.addAll(listSeries);\n+            fragment.mAdapterSeries.notifyDataSetChanged();\n         }\n     }\n "
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/fragment/StatsGraphFragment.java",
          "patch": "@@ -4,7 +4,6 @@\n import android.content.SharedPreferences;\n import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n-import android.os.AsyncTask;\n import android.os.Bundle;\n import android.preference.PreferenceManager;\n import android.support.v4.app.Fragment;\n@@ -14,11 +13,6 @@\n \n import com.github.mikephil.charting.charts.LineChart;\n \n-import java.util.AbstractMap;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n import ca.josephroque.bowlingcompanion.Constants;\n import ca.josephroque.bowlingcompanion.MainActivity;\n import ca.josephroque.bowlingcompanion.R;\n@@ -138,302 +132,6 @@ public void updateTheme()\n     }\n \n     /**\n-     * Loads data from the database and calculates relevant stats depending on which type of stats\n-     * are being loaded.\n-     */\n-    /*private class LoadStatsGraphTask\n-            extends AsyncTask\u003cByte, Void, List\u003c?\u003e[]\u003e\n-    {\n-\n-        @Override\n-        protected void onPreExecute()\n-        {\n-            mLineChartStats.clear();\n-        }\n-\n-        @Override\n-        protected List\u003c?\u003e[] doInBackground(Byte... statsToLoad)\n-        {\n-            MainActivity mainActivity \u003d (MainActivity) getActivity();\n-            MainActivity.waitForSaveThreads(mainActivity);\n-\n-            final byte toLoad \u003d statsToLoad[0];\n-            Cursor cursor;\n-            int[][] statValues;\n-            List\u003cString\u003e listStatHeaders \u003d new ArrayList\u003c\u003e();\n-            List\u003cList\u003cAbstractMap.SimpleEntry\u003cString, String\u003e\u003e\u003e listStatNamesAndValues \u003d\n-                    new ArrayList\u003c\u003e();\n-\n-            prepareListData(mainActivity, toLoad, listStatHeaders, listStatNamesAndValues);\n-            statValues \u003d new int[listStatHeaders.size()][];\n-            for (int i \u003d 0; i \u003c statValues.length; i++)\n-                statValues[i] \u003d new int[listStatNamesAndValues.get(i).size()];\n-\n-            switch (toLoad)\n-            {\n-                case StatsFragment.LOADING_BOWLER_STATS:\n-                    numberOfGeneralDetails \u003d 1;\n-                    cursor \u003d getBowlerOrLeagueCursor(false);\n-                    break;\n-                case StatsFragment.LOADING_LEAGUE_STATS:\n-                    numberOfGeneralDetails \u003d 2;\n-                    listStatNamesAndValues.get(mStatsGeneral).add(1,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"League/Event\",\n-                                    mainActivity.getLeagueName()));\n-                    cursor \u003d getBowlerOrLeagueCursor(true);\n-                    break;\n-                case StatsFragment.LOADING_SERIES_STATS:\n-                    numberOfGeneralDetails \u003d 3;\n-                    listStatNamesAndValues.get(mStatsGeneral).add(1,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"League/Event\",\n-                                    mainActivity.getLeagueName()));\n-                    listStatNamesAndValues.get(mStatsGeneral).add(2,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"Date\", mainActivity.getSeriesDate()));\n-                    cursor \u003d getSeriesCursor();\n-                    break;\n-                case StatsFragment.LOADING_GAME_STATS:\n-                    numberOfGeneralDetails \u003d 4;\n-                    listStatNamesAndValues.get(mStatsGeneral).add(1,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"League/Event\",\n-                                    mainActivity.getLeagueName()));\n-                    listStatNamesAndValues.get(mStatsGeneral).add(2,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"Date\", mainActivity.getSeriesDate()));\n-                    listStatNamesAndValues.get(mStatsGeneral).add(3,\n-                            new AbstractMap.SimpleEntry\u003c\u003e(\"Game #\",\n-                                    String.valueOf(mainActivity.getGameNumber())));\n-                    cursor \u003d getGameCursor();\n-                    break;\n-                default:\n-                    throw new IllegalArgumentException(\"invalid value for toLoad: \" + toLoad\n-                            + \". must be between 0 and 3 (inclusive)\");\n-            }\n-\n-            *//**\n-             * Passes through rows in cursor and updates stats which\n-             * are affected as each frame is analyzed\n-             *//*\n-\n-            final byte numberOfGames \u003d (toLoad \u003e\u003d StatsFragment.LOADING_LEAGUE_STATS\n-                    ? mainActivity.getNumberOfGames()\n-                    : 20);\n-            int totalShotsAtMiddle \u003d 0;\n-            int spareChances \u003d 0;\n-            int seriesTotal \u003d 0;\n-            int[] totalByGame \u003d new int[numberOfGames];\n-            int[] countByGame \u003d new int[numberOfGames];\n-            if (cursor.moveToFirst())\n-            {\n-                while (!cursor.isAfterLast())\n-                {\n-                    byte frameNumber \u003d (byte) cursor.getInt(\n-                            cursor.getColumnIndex(Contract.FrameEntry.COLUMN_FRAME_NUMBER));\n-                    if (toLoad !\u003d StatsFragment.LOADING_GAME_STATS \u0026\u0026 frameNumber \u003d\u003d 1)\n-                    {\n-                        short gameScore \u003d\n-                                cursor.getShort(cursor.getColumnIndex(Contract.GameEntry.COLUMN_SCORE));\n-                        byte gameNumber \u003d (byte) cursor.getInt(\n-                                cursor.getColumnIndex(Contract.GameEntry.COLUMN_GAME_NUMBER));\n-\n-                        totalByGame[gameNumber - 1] +\u003d gameScore;\n-                        countByGame[gameNumber - 1]++;\n-\n-                        byte matchResults \u003d (byte) (cursor.getInt(\n-                                cursor.getColumnIndex(Contract.GameEntry.COLUMN_MATCH_PLAY)));\n-                        if (matchResults \u003e 0)\n-                            statValues[mStatsMatch][matchResults - 1]++;\n-\n-                        if (statValues[mStatsOverall][Constants.STAT_HIGH_SINGLE] \u003c gameScore)\n-                        {\n-                            statValues[mStatsOverall][Constants.STAT_HIGH_SINGLE] \u003d gameScore;\n-                        }\n-                        statValues[mStatsOverall][Constants.STAT_TOTAL_PINS] +\u003d gameScore;\n-                        statValues[mStatsOverall][Constants.STAT_NUMBER_OF_GAMES]++;\n-\n-                        if (gameNumber \u003d\u003d 1)\n-                        {\n-                            if (statValues[mStatsOverall][Constants.STAT_HIGH_SERIES] \u003c seriesTotal)\n-                                statValues[mStatsOverall][Constants.STAT_HIGH_SERIES] \u003d seriesTotal;\n-                            seriesTotal \u003d gameScore;\n-                        }\n-                        else\n-                            seriesTotal +\u003d gameScore;\n-                    }\n-\n-                    boolean gameIsManual \u003d\n-                            (cursor.getInt(cursor.getColumnIndex(Contract.GameEntry.COLUMN_IS_MANUAL))\n-                                    \u003d\u003d 1);\n-                    if (gameIsManual)\n-                    {\n-                        cursor.moveToNext();\n-                        continue;\n-                    }\n-                    boolean frameAccessed \u003d\n-                            (cursor.getInt(cursor.getColumnIndex(Contract.FrameEntry.COLUMN_IS_ACCESSED))\n-                                    \u003d\u003d 1);\n-                    if (toLoad \u003d\u003d StatsFragment.LOADING_GAME_STATS \u0026\u0026 !frameAccessed)\n-                        break;\n-\n-                    String frameFouls \u003d\n-                            cursor.getString(cursor.getColumnIndex(Contract.FrameEntry.COLUMN_FOULS));\n-                    String[] ballStrings \u003d {\n-                            cursor.getString(cursor.getColumnIndex(Contract.FrameEntry.COLUMN_PIN_STATE[0])),\n-                            cursor.getString(cursor.getColumnIndex(Contract.FrameEntry.COLUMN_PIN_STATE[1])),\n-                            cursor.getString(\n-                                    cursor.getColumnIndex(Contract.FrameEntry.COLUMN_PIN_STATE[2]))\n-                    };\n-                    boolean[][] pinState \u003d new boolean[3][5];\n-\n-                    for (byte i \u003d 0; i \u003c 5; i++)\n-                    {\n-                        pinState[0][i] \u003d ballStrings[0].charAt(i) \u003d\u003d \u00271\u0027;\n-                        pinState[1][i] \u003d ballStrings[1].charAt(i) \u003d\u003d \u00271\u0027;\n-                        pinState[2][i] \u003d ballStrings[2].charAt(i) \u003d\u003d \u00271\u0027;\n-                    }\n-                    for (byte i \u003d 1; i \u003c\u003d 3; i++)\n-                    {\n-                        if (frameFouls.contains(String.valueOf(i)))\n-                            statValues[mStatsFouls][0]++;\n-                    }\n-\n-                    if (frameNumber \u003d\u003d Constants.NUMBER_OF_FRAMES)\n-                    {\n-                        totalShotsAtMiddle++;\n-                        int ballValue \u003d getFirstBallValue(pinState[0]);\n-                        if (ballValue !\u003d -1)\n-                            statValues[mStatsGeneral][Constants.STAT_MIDDLE_HIT]++;\n-                        increaseFirstBallStat(ballValue, statValues, 0);\n-                        if (ballValue \u003c 5 \u0026\u0026 ballValue !\u003d Constants.BALL_VALUE_STRIKE)\n-                            spareChances++;\n-\n-                        if (ballValue !\u003d 0)\n-                        {\n-                            if (Arrays.equals(pinState[1], Constants.FRAME_PINS_DOWN))\n-                            {\n-                                statValues[mStatsGeneral][Constants.STAT_SPARE_CONVERSIONS]++;\n-                                increaseFirstBallStat(ballValue, statValues, 1);\n-\n-                                if (ballValue \u003e\u003d 5)\n-                                    spareChances++;\n-                            }\n-                            else\n-                            {\n-                                statValues[mStatsPins][Constants.STAT_PINS_LEFT] +\u003d\n-                                        countPinsLeftStanding(pinState[2]);\n-                            }\n-                        }\n-                        else\n-                        {\n-                            totalShotsAtMiddle++;\n-                            ballValue \u003d getFirstBallValue(pinState[1]);\n-                            if (ballValue !\u003d -1)\n-                                statValues[mStatsGeneral][Constants.STAT_MIDDLE_HIT]++;\n-                            increaseFirstBallStat(ballValue, statValues, 0);\n-\n-                            if (ballValue !\u003d 0)\n-                            {\n-                                if (Arrays.equals(pinState[2], Constants.FRAME_PINS_DOWN))\n-                                {\n-                                    statValues[mStatsGeneral][Constants.STAT_SPARE_CONVERSIONS]++;\n-                                    increaseFirstBallStat(ballValue, statValues, 1);\n-\n-                                    if (ballValue \u003e\u003d 5)\n-                                        spareChances++;\n-                                }\n-                                else\n-                                {\n-                                    statValues[mStatsPins][Constants.STAT_PINS_LEFT] +\u003d\n-                                            countPinsLeftStanding(pinState[2]);\n-                                }\n-                            }\n-                            else\n-                            {\n-                                totalShotsAtMiddle++;\n-                                ballValue \u003d getFirstBallValue(pinState[2]);\n-                                if (ballValue !\u003d -1)\n-                                    statValues[mStatsGeneral][Constants.STAT_MIDDLE_HIT]++;\n-                                increaseFirstBallStat(ballValue, statValues, 0);\n-\n-                                if (ballValue !\u003d 0)\n-                                {\n-                                    statValues[mStatsPins][Constants.STAT_PINS_LEFT] +\u003d\n-                                            countPinsLeftStanding(pinState[2]);\n-                                }\n-                            }\n-                        }\n-                    }\n-                    else\n-                    {\n-                        totalShotsAtMiddle++;\n-                        int ballValue \u003d getFirstBallValue(pinState[0]);\n-                        if (ballValue !\u003d -1)\n-                            statValues[mStatsGeneral][Constants.STAT_MIDDLE_HIT]++;\n-                        increaseFirstBallStat(ballValue, statValues, 0);\n-\n-                        if (ballValue \u003c 5 \u0026\u0026 ballValue !\u003d Constants.BALL_VALUE_STRIKE)\n-                            spareChances++;\n-\n-                        if (ballValue !\u003d 0)\n-                        {\n-                            if (Arrays.equals(pinState[1], Constants.FRAME_PINS_DOWN))\n-                            {\n-                                statValues[mStatsGeneral][Constants.STAT_SPARE_CONVERSIONS]++;\n-                                increaseFirstBallStat(ballValue, statValues, 1);\n-\n-                                if (ballValue \u003e\u003d 5)\n-                                    spareChances++;\n-                            }\n-                            else\n-                            {\n-                                statValues[mStatsPins][Constants.STAT_PINS_LEFT] +\u003d\n-                                        countPinsLeftStanding(pinState[2]);\n-                            }\n-                        }\n-                    }\n-\n-                    cursor.moveToNext();\n-                }\n-            }\n-\n-            if (toLoad !\u003d StatsFragment.LOADING_GAME_STATS)\n-            {\n-                if (statValues[mStatsOverall][Constants.STAT_HIGH_SERIES] \u003c seriesTotal)\n-                    statValues[mStatsOverall][Constants.STAT_HIGH_SERIES] \u003d seriesTotal;\n-\n-                if (toLoad !\u003d StatsFragment.LOADING_SERIES_STATS)\n-                {\n-                    for (byte i \u003d 0; i \u003c numberOfGames; i++)\n-                        statValues[mStatsGameAverage][i] \u003d (countByGame[i] \u003e 0)\n-                                ? totalByGame[i] / countByGame[i]\n-                                : 0;\n-                }\n-\n-                if (statValues[mStatsOverall][Constants.STAT_NUMBER_OF_GAMES] \u003e 0)\n-                {\n-                    statValues[mStatsOverall][Constants.STAT_AVERAGE] \u003d\n-                            statValues[mStatsOverall][Constants.STAT_TOTAL_PINS]\n-                                    / statValues[mStatsOverall][Constants.STAT_NUMBER_OF_GAMES];\n-                    statValues[mStatsPins][Constants.STAT_PINS_AVERAGE] \u003d\n-                            statValues[mStatsPins][Constants.STAT_PINS_LEFT]\n-                                    / statValues[mStatsOverall][Constants.STAT_NUMBER_OF_GAMES];\n-                }\n-            }\n-            cursor.close();\n-            setGeneralAndDetailedStatValues(listStatNamesAndValues, statValues, totalShotsAtMiddle,\n-                    spareChances, numberOfGeneralDetails, toLoad);\n-\n-            return new List\u003c?\u003e[]{listStatHeaders, listStatNamesAndValues};\n-\n-            return null;\n-        }\n-\n-        @Override\n-        protected void onPostExecute(List\u003c?\u003e[] result)\n-        {\n-\n-        }\n-    }*/\n-\n-    /**\n      * Returns a cursor from database to load either bowler or league stats.\n      *\n      * @param shouldGetLeagueStats if true, league stats will be loaded. Bowler stats will be loaded"
        },
        {
          "file_name": "BC-Free/app/src/main/java/ca/josephroque/bowlingcompanion/utilities/ShareUtils.java",
          "patch": "@@ -2,17 +2,20 @@\n \n import android.app.Activity;\n import android.app.AlertDialog;\n+import android.content.Context;\n import android.content.DialogInterface;\n import android.content.Intent;\n import android.graphics.Bitmap;\n import android.media.MediaScannerConnection;\n import android.net.Uri;\n import android.os.AsyncTask;\n import android.util.Log;\n+import android.util.Pair;\n import android.widget.Toast;\n \n import java.io.IOException;\n import java.io.OutputStream;\n+import java.lang.ref.WeakReference;\n \n import ca.josephroque.bowlingcompanion.R;\n \n@@ -59,7 +62,7 @@ public void onClick(DialogInterface dialog, int which)\n                         if (selectedItem \u003d\u003d 0)\n                             saveSeriesToDevice(activity, seriesId);\n                         else\n-                            shareSeries(activity, seriesId);\n+                            shareSeries(new WeakReference\u003cContext\u003e(activity), seriesId);\n                         dialog.dismiss();\n                     }\n                 })\n@@ -79,12 +82,13 @@ public void onClick(DialogInterface dialog, int which)\n      * Creates a task to save an image of the series to the device and prompt the user\n      * to share it with another service.\n      *\n-     * @param activity parent activity for the dialog\n+     * @param context the current context\n      * @param seriesId id of the series to share\n      */\n-    private static void shareSeries(Activity activity, long seriesId)\n+    @SuppressWarnings(\"unchecked\")\n+    private static void shareSeries(WeakReference\u003cContext\u003e context, long seriesId)\n     {\n-        new ShareSeriesTask().execute(activity, seriesId);\n+        new ShareSeriesTask().execute(Pair.create(context, seriesId));\n     }\n \n     /**\n@@ -144,16 +148,21 @@ public void onScanCompleted(String path, Uri uri)\n     /**\n      * Creates an image for the series and prompts user to share it.\n      */\n-    private static class ShareSeriesTask extends AsyncTask\u003cObject, Void, Object[]\u003e\n+    private static class ShareSeriesTask\n+            extends AsyncTask\u003cPair\u003cWeakReference\u003cContext\u003e, Long\u003e, Void, Pair\u003cWeakReference\u003cContext\u003e, WeakReference\u003cIntent\u003e\u003e\u003e\n     {\n+        @SafeVarargs\n         @SuppressWarnings(\"UnusedAssignment\") //image set to null to free memory\n         @Override\n-        public Object[] doInBackground(Object... params)\n+        public final Pair\u003cWeakReference\u003cContext\u003e, WeakReference\u003cIntent\u003e\u003e doInBackground(\n+                Pair\u003cWeakReference\u003cContext\u003e, Long\u003e... params)\n         {\n-            Activity activity \u003d (Activity) params[0];\n-            long seriesId \u003d (Long) params[1];\n-            Bitmap image \u003d ImageUtils.createImageFromSeries(activity, seriesId);\n-            Uri imageUri \u003d ImageUtils.insertImage(activity.getContentResolver(),\n+            Context context \u003d params[0].first.get();\n+            if (context \u003d\u003d null)\n+                return null;\n+            long seriesId \u003d params[0].second;\n+            Bitmap image \u003d ImageUtils.createImageFromSeries(context, seriesId);\n+            Uri imageUri \u003d ImageUtils.insertImage(context.getContentResolver(),\n                     image,\n                     String.valueOf(System.currentTimeMillis()),\n                     \"Series: \" + seriesId);\n@@ -163,7 +172,7 @@ public void onScanCompleted(String path, Uri uri)\n             OutputStream outStream \u003d null;\n             try\n             {\n-                outStream \u003d activity.getContentResolver()\n+                outStream \u003d context.getContentResolver()\n                         .openOutputStream(imageUri);\n                 image.compress(Bitmap.CompressFormat.JPEG, 100, outStream);\n                 image.recycle();\n@@ -190,16 +199,21 @@ public void onScanCompleted(String path, Uri uri)\n             }\n \n             shareIntent.putExtra(Intent.EXTRA_STREAM, imageUri);\n-            return new Object[]{activity, shareIntent};\n+            return Pair.create(params[0].first, new WeakReference\u003c\u003e(shareIntent));\n         }\n \n         @Override\n-        public void onPostExecute(Object[] params)\n+        public void onPostExecute(Pair\u003cWeakReference\u003cContext\u003e, WeakReference\u003cIntent\u003e\u003e params)\n         {\n-            Activity activity \u003d (Activity) params[0];\n-            Intent shareIntent \u003d (Intent) params[1];\n+            if (params !\u003d null)\n+            {\n+                Context context \u003d params.first.get();\n+                Intent intent \u003d params.second.get();\n+                if (context \u003d\u003d null || intent \u003d\u003d null)\n+                    return;\n \n-            activity.startActivity(Intent.createChooser(shareIntent, \"Share Image\"));\n+                context.startActivity(Intent.createChooser(intent, \"Share Image\"));\n+            }\n         }\n     }\n }"
        }
      ]
    }
  }
]